import{a6 as e,N as n,g as t,bs as a,bp as s,bq as i,bt as r,bu as l,bv as o,bw as d,bl as p,b6 as c,b1 as m,b4 as f,R as h,a3 as u,bk as S,bj as g,D as b,a_ as I,d as T,a as w}from"./raid_sim_action-ba7bc10a.chunk.js";import{m as P,a as v,b as y,c as O,B as M,I as x,M as E,d as N,A,e as B,f as j,g as C,P as R,T as W}from"./individual_sim_ui-f17c4a89.chunk.js";const k=P({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=n,setValue:(e,a,s)=>{const i=a.getSpecOptions();i.innervateTarget=t.create({targetIndex:s?0:n}),a.setSpecOptions(e,i)}}),F={inputs:[v({fieldName:"type",label:"Type",labelTooltip:"If set to 'Adaptive', will dynamically adjust rotation.",values:[{name:"Adaptive",value:a.Adaptive}]}),y({fieldName:"useBattleRes",label:"Use Battle Res",labelTooltip:"Cast Battle Res on an ally sometime during the encounter."}),y({fieldName:"useMf",label:"Use Moonfire",labelTooltip:"Should the rotation use Moonfire."}),y({fieldName:"useIs",label:"Use Insect Swarm",labelTooltip:"Should the rotation use Insect Swarm."}),O({fieldName:"mfInsideEclipseThreshold",label:"Moonfire inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Moonfire can be applied/refreshed. 15 = never refresh,  0= always refresh.",enableWhen:e=>e.getRotation().useMf}),O({fieldName:"isInsideEclipseThreshold",label:"Insect Swarm inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Insect Swarm can be applied/refreshed. 15 = never refresh,  0= always refresh.",enableWhen:e=>e.getRotation().useIs}),O({fieldName:"mcdInsideLunarThreshold",label:"CDs inside lunar eclipse max timing",labelTooltip:"Maximum lunar eclipse uptime at which major cooldowns can be used. 15 = right on proc,  0 = deactivated."}),O({fieldName:"mcdInsideSolarThreshold",label:"CDs inside solar eclipse max timing",labelTooltip:"Maximum solar eclipse uptime at which major cooldowns can be used. 15 = right on proc,  0 = deactivated."})]},D={name:"Phase 1",data:s.create({talentsString:"5032003115331303213305311231--205003012",glyphs:i.create({major1:r.GlyphOfFocus,major2:r.GlyphOfInsectSwarm,major3:r.GlyphOfStarfall,minor1:l.GlyphOfTyphoon,minor2:l.GlyphOfUnburdenedRebirth,minor3:l.GlyphOfTheWild})})},G=o.create({type:a.Adaptive,useBattleRes:!0,isInsideEclipseThreshold:15,mfInsideEclipseThreshold:14,useIs:!1,useMf:!0}),H=d.create({innervateTarget:t.create({targetIndex:n})}),_=p.create({defaultPotion:c.PotionOfSpeed,flask:m.FlaskOfTheFrostWyrm,food:f.FoodFishFeast,prepopPotion:c.PotionOfSpeed,thermalSapper:!0}),U=h.create({arcaneBrilliance:!0,bloodlust:!0,divineSpirit:!0,giftOfTheWild:u.TristateEffectImproved,icyTalons:!0,moonkinAura:u.TristateEffectImproved,leaderOfThePack:u.TristateEffectImproved,powerWordFortitude:u.TristateEffectImproved,sanctifiedRetribution:!0,strengthOfEarthTotem:u.TristateEffectImproved,trueshotAura:!0,wrathOfAirTotem:!0}),J=S.create({blessingOfKings:!0,blessingOfMight:u.TristateEffectImproved,blessingOfWisdom:u.TristateEffectImproved,vampiricTouch:!0}),V=g.create({heroicPresence:!1}),q=b.create({bloodFrenzy:!0,ebonPlaguebringer:!0,faerieFire:u.TristateEffectImproved,heartOfTheCrusader:!0,judgementOfWisdom:!0,shadowMastery:!0,sunderArmor:!0,totemOfWrath:!0}),z={name:"P1 Preset",tooltip:M,gear:I.fromJsonString('{"items": [\n         {\n          "id": 40467,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            39998\n          ]\n        },\n        {\n          "id": 44661,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 40470,\n          "enchant": 44874,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40405,\n          "enchant": 44472\n        },\n        {\n          "id": 40469,\n          "enchant": 44489,\n          "gems": [\n            39998,\n            40026\n          ]\n        },\n        {\n          "id": 44008,\n          "enchant": 44498,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40466,\n          "enchant": 54999,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40561,\n          "enchant": 54793,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40560,\n          "enchant": 41602\n        },\n        {\n          "id": 40558,\n          "enchant": 55016\n        },\n        {\n          "id": 40399\n        },\n        {\n          "id": 40080\n        },\n        {\n          "id": 40255\n        },\n        {\n          "id": 40432\n        },\n        {\n          "id": 40395,\n          "enchant": 44487\n        },\n        {\n          "id": 40192\n        },\n        {\n          "id": 40321\n        }\n    ]}')},K={name:"Pre-raid Preset",tooltip:M,gear:I.fromJsonString('{"items": [\n          {\n          "id": 42554,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            40048\n          ]\n        },\n        {\n          "id": 40680\n        },\n        {\n          "id": 37673,\n          "enchant": 44874,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 41610,\n          "enchant": 44472\n        },\n        {\n          "id": 39547,\n          "enchant": 44489,\n          "gems": [\n            39998,\n            40026\n          ]\n        },\n        {\n          "id": 37696,\n          "enchant": 44498,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39544,\n          "enchant": 54999,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40696,\n          "enchant": 54793,\n          "gems": [\n            40048,\n            39998\n          ]\n        },\n        {\n          "id": 37791,\n          "enchant": 41602\n        },\n        {\n          "id": 44202,\n          "enchant": 55016,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40585\n        },\n        {\n          "id": 43253,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 37873\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 45085,\n          "enchant": 44487\n        },\n        {\n          "id": 40698\n        },\n        {\n          "id": 32387\n        }\n    ]}')};class L extends x{constructor(e,n){super(e,n,{cssClass:"balance-druid-sim-ui",knownIssues:[],epStats:[T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatArcaneSpellPower,T.StatNatureSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],epReferenceStat:T.StatSpellPower,displayStats:[T.StatHealth,T.StatStamina,T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatArcaneSpellPower,T.StatNatureSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],defaults:{gear:K.gear,epWeights:w.fromMap({[T.StatIntellect]:.52,[T.StatSpirit]:.3,[T.StatSpellPower]:1,[T.StatArcaneSpellPower]:.45,[T.StatNatureSpellPower]:.5,[T.StatSpellCrit]:.61,[T.StatSpellHaste]:.67,[T.StatMP5]:0}),consumes:_,rotation:G,talents:D.data,specOptions:H,raidBuffs:U,partyBuffs:V,individualBuffs:J,debuffs:q},playerIconInputs:[k],rotationInputs:F,includeBuffDebuffInputs:[E,N,A,B,j,C,R],excludeBuffDebuffInputs:[],otherInputs:{inputs:[W]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[D],gear:[z,K]}})}}export{L as B,G as D,z as P,D as S,H as a,_ as b};
//# sourceMappingURL=sim-19b30b41.chunk.js.map
