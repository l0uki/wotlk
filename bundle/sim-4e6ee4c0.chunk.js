import{bx as n,T as e,by as t,bz as a,bA as o,bB as i,bC as r,N as s,g as l,bp as h,bq as m,bD as d,bE as g,bF as c,bG as u,bl as p,b1 as f,b4 as y,b6 as b,b0 as S,b5 as T,a_ as R,d as D,a as E,R as O,a3 as A,bj as w,bk as G,D as P}from"./raid_sim_action-ba7bc10a.chunk.js";import{h as W,i as C,b as F,c as B,a as v,B as H,I as k,j as M,k as U,l as z,n as I,D as x,o as N,T as j,p as J}from"./individual_sim_ui-f17c4a89.chunk.js";const _=W({fieldName:"unholyFrenzyTarget",label:"Self Unholy Frenzy",labelTooltip:"Cast Unholy Frenzy on yourself.",extraCssClasses:["within-raid-sim-hide"],getValue:n=>n.getSpecOptions().unholyFrenzyTarget?.targetIndex!=s,setValue:(n,e,t)=>{const a=e.getSpecOptions();a.unholyFrenzyTarget=l.create({targetIndex:t?0:s}),e.setSpecOptions(n,a)},showWhen:n=>n.getTalents().hysteria,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),V=C({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),q=C({fieldName:"petUptime",label:"Ghoul Uptime (%)",labelTooltip:"Percent of the fight duration for which your ghoul will be on target.",percent:!0,showWhen:n=>n.getTalents().masterOfGhouls}),K=W({fieldName:"precastGhoulFrenzy",label:"Pre-Cast Ghoul Frenzy",labelTooltip:"Cast Ghoul Frenzy 10 seconds before combat starts.",showWhen:n=>n.getTalents().summonGargoyle&&n.getTalents().ghoulFrenzy,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),L=W({fieldName:"precastHornOfWinter",label:"Pre-Cast Horn of Winter",labelTooltip:"Precast Horn of Winter for 10 extra runic power before fight."});F({fieldName:"refreshHornOfWinter",label:"Refresh Horn of Winter",labelTooltip:"Refresh Horn of Winter on free GCDs."}),B({fieldName:"diseaseRefreshDuration",label:"Disease Refresh Duration",labelTooltip:"Minimum duration for refreshing a disease."});const Q=F({fieldName:"useDeathAndDecay",label:"Death and Decay",labelTooltip:"Use Death and Decay based rotation.",showWhen:n=>n.getTalents().summonGargoyle&&n.getTalents().scourgeStrike&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])});v({fieldName:"deathAndDecayPrio",label:"Death and Decay Prio",labelTooltip:"<p>Chose how to prioritize death and decay usage:</p>\t\t<p><b>Max Rune Downtime</b>: Prioritizes spending runes over holding them for death and decay</p>\t\t<p><b>Max Dnd Uptime</b>: Prioritizes dnd uptime and can hold runes for longer then rune grace</p>",values:[{name:"Max Rune Downtime",value:n.MaxRuneDowntime},{name:"Max Dnd Uptime",value:n.MaxDndUptime}],showWhen:n=>n.getTalents().summonGargoyle&&(n.getRotation().useDeathAndDecay||!n.getTalents().scourgeStrike)&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])});const X=F({fieldName:"useEmpowerRuneWeapon",label:"Empower Rune Weapon",labelTooltip:"Use Empower Rune Weapon in rotation.",showWhen:n=>!n.getRotation().autoRotation}),Y=F({fieldName:"btGhoulFrenzy",label:"BT Ghoul Frenzy",labelTooltip:"Use Ghoul Frenzy only with Blood Tap.",showWhen:n=>n.getTalents().ghoulFrenzy&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),Z=v({fieldName:"firstDisease",label:"First Disease",labelTooltip:"Chose which disease to apply first.",values:[{name:"Frost Fever",value:t.FrostFever},{name:"Blood Plague",value:t.BloodPlague}],showWhen:n=>n.getTalents().summonGargoyle&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),$=v({fieldName:"armyOfTheDead",label:"Army of the Dead",labelTooltip:"Chose how to use Army of the Dead.",values:[{name:"Do not use",value:a.DoNotUse},{name:"Pre pull",value:a.PreCast},{name:"As Major CD",value:a.AsMajorCd}]}),nn=v({fieldName:"startingPresence",label:"Starting Presence",labelTooltip:"Chose the presence you start combat in.",values:[{name:"Blood",value:o.Blood},{name:"Unholy",value:o.Unholy}],showWhen:n=>n.getTalents().summonGargoyle&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),en=v({fieldName:"bloodRuneFiller",label:"Blood Rune Filler",labelTooltip:"Chose what to spend your free blood runes on.",values:[{name:"Blood Strike",value:i.BloodStrike},{name:"Blood Boil",value:i.BloodBoil}],showWhen:n=>n.getTalents().summonGargoyle&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),tn=v({fieldName:"bloodTap",label:"Blood Tap",labelTooltip:"Chose what to spend your Blood Tap on.",values:[{name:"Ghoul Frenzy",value:r.GhoulFrenzy},{name:"Icy Touch",value:r.IcyTouch},{name:"Blood Strike",value:r.BloodStrikeBT},{name:"Blood Boil",value:r.BloodBoilBT}],showWhen:n=>n.getTalents().summonGargoyle&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),an=F({fieldName:"useAms",label:"Use AMS",labelTooltip:"Use AMS around predicted damage for a RP gain.",changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),on=B({fieldName:"avgAmsSuccessRate",label:"Avg AMS Success %",labelTooltip:"Chance for damage to be taken during the 5 second window of AMS.",showWhen:n=>1==n.getRotation().useAms&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),rn=B({fieldName:"avgAmsHit",label:"Avg AMS Hit",labelTooltip:"How much on average (+-10%) the character is hit for when AMS is successful.",showWhen:n=>1==n.getRotation().useAms&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),sn=B({fieldName:"oblitDelayDuration",label:"Oblit Delay (ms)",labelTooltip:"How long a FS/HB/HW can delay a Oblit by.",showWhen:n=>n.getTalents().howlingBlast&&!n.getRotation().autoRotation,changeEmitter:n=>e.onAny([n.rotationChangeEmitter,n.talentsChangeEmitter])}),ln={inputs:[F({fieldName:"autoRotation",label:"Automatic Rotation",labelTooltip:"Have sim automatically adjust rotation based on the scenario. This is still in development and currently only works for Unholy."}),Y,X,tn,$,Z,nn,en,Q,sn,an,on,rn]},hn={name:"Frost BL",data:h.create({talentsString:"23050005-32005350352203012300033101351",glyphs:m.create({major1:d.GlyphOfObliterate,major2:d.GlyphOfFrostStrike,major3:d.GlyphOfDisease,minor1:g.GlyphOfHornOfWinter,minor2:g.GlyphOfPestilence,minor3:g.GlyphOfRaiseDead})})},mn={name:"Frost UH",data:h.create({talentsString:"-32002350352203012300033101351-230200305003",glyphs:m.create({major1:d.GlyphOfObliterate,major2:d.GlyphOfFrostStrike,major3:d.GlyphOfDisease,minor1:g.GlyphOfHornOfWinter,minor2:g.GlyphOfPestilence,minor3:g.GlyphOfRaiseDead})})},dn={name:"Unholy DW",data:h.create({talentsString:"-320043500002-2300303050032152000150013133051",glyphs:m.create({major1:d.GlyphOfTheGhoul,major2:d.GlyphOfDarkDeath,major3:d.GlyphOfDeathAndDecay,minor1:g.GlyphOfHornOfWinter,minor2:g.GlyphOfPestilence,minor3:g.GlyphOfRaiseDead})})},gn={name:"Unholy 2H",data:h.create({talentsString:"-320050500002-2300303150032152000150013133151",glyphs:m.create({major1:d.GlyphOfTheGhoul,major2:d.GlyphOfDarkDeath,major3:d.GlyphOfIcyTouch,minor1:g.GlyphOfHornOfWinter,minor2:g.GlyphOfPestilence,minor3:g.GlyphOfRaiseDead})})},cn={name:"Blood DPS",data:h.create({talentsString:"2305020530003303231023101351--230220305003",glyphs:m.create({major1:d.GlyphOfDancingRuneWeapon,major2:d.GlyphOfDeathStrike,major3:d.GlyphOfDarkDeath,minor1:g.GlyphOfHornOfWinter,minor2:g.GlyphOfPestilence,minor3:g.GlyphOfRaiseDead})})},un=c.create({useDeathAndDecay:!0,btGhoulFrenzy:!0,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:o.Unholy,bloodRuneFiller:i.BloodBoil,useAms:!1}),pn=u.create({startingRunicPower:0,petUptime:1,precastGhoulFrenzy:!0,precastHornOfWinter:!0,unholyFrenzyTarget:l.create({targetIndex:s})}),fn=c.create({useDeathAndDecay:!1,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:o.Blood,bloodRuneFiller:i.BloodBoil,useAms:!1,avgAmsSuccessRate:1,avgAmsHit:1e4,oblitDelayDuration:0}),yn=u.create({startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:l.create({targetIndex:s})}),bn=c.create({refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:o.Blood,bloodRuneFiller:i.BloodStrike,useAms:!1}),Sn=u.create({startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:l.create({targetIndex:s})}),Tn={},Rn=p.create({flask:f.FlaskOfEndlessRage,food:y.FoodDragonfinFilet,defaultPotion:b.PotionOfSpeed,petFood:S.PetFoodSpicedMammothTreats,prepopPotion:b.PotionOfSpeed,thermalSapper:!0,fillerExplosive:T.ExplosiveSaroniteBomb}),Dn={name:"Pre-Raid 2H Unholy",toolbar:H,enableWhen:n=>n.getTalents().summonGargoyle,gear:R.fromJsonString('{ "items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37627,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40688,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 44935\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 41257,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40867\n    }\n  ]}')},En={name:"P1 2H Unholy",toolbar:H,enableWhen:n=>n.getTalents().summonGargoyle,gear:R.fromJsonString('{ "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        40038,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40384,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40207\n    }\n  ]}')},On={name:"Pre-Raid DW Unholy",toolbar:H,enableWhen:n=>n.getTalents().summonGargoyle,gear:R.fromJsonString('{"items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41400,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37627,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40688,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 44935\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 41383,\n      "enchant": 53344\n    },\n    {\n      "id": 40703,\n      "enchant": 44495\n    },\n    {\n      "id": 40867\n    }\n  ]}')},An={name:"P1 DW Unholy",toolbar:H,enableWhen:n=>n.getTalents().summonGargoyle,gear:R.fromJsonString('{"items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        42702\n      ]\n    },\n    {\n      "id": 39421\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40347,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40294,\n      "enchant": 38374\n    },\n    {\n      "id": 39706,\n      "enchant": 55016,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 37390\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40402,\n      "enchant": 53344\n    },\n    {\n      "id": 40491,\n      "enchant": 53344\n    },\n    {\n      "id": 42620\n    }\n  ]}')},wn={name:"Pre-Raid Frost",tooltip:H,enableWhen:n=>n.getTalents().howlingBlast,gear:R.fromJsonString('{  "items": [\n    {\n      "id": 41386,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        49110\n      ]\n    },\n    {\n      "id": 37397\n    },\n    {\n      "id": 37593,\n      "enchant": 44871\n    },\n    {\n      "id": 37647,\n      "enchant": 44472\n    },\n    {\n      "id": 39617,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 41355,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39618,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 37194,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 37193,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 44306,\n      "enchant": 55016,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 37151\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 44250,\n      "enchant": 53343\n    },\n    {\n      "id": 44250,\n      "enchant": 53344\n    },\n    {\n      "id": 40715\n    }\n  ]}')},Gn={name:"P1 Frost",tooltip:H,enableWhen:n=>n.getTalents().howlingBlast,gear:R.fromJsonString('{   "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        42702\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        39996,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 39401\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40189,\n      "enchant": 53343\n    },\n    {\n      "id": 40189,\n      "enchant": 53344\n    },\n    {\n      "id": 40207\n    }\n  ]}')},Pn={name:"End Game Frost",tooltip:H,enableWhen:n=>n.getTalents().howlingBlast,gear:R.fromJsonString('{ "items": [\n  {\n    "id": 51312,\n    "enchant": 44879,\n    "gems": [\n      41398,\n      49110\n    ]\n  },\n  {\n    "id": 54581,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 51314,\n    "enchant": 44871,\n    "gems": [\n      42153\n    ]\n  },\n  {\n    "id": 47548,\n    "enchant": 44472,\n    "gems": [\n      42153\n    ]\n  },\n  {\n    "id": 51310,\n    "enchant": 44489,\n    "gems": [\n      42153,\n      40117\n    ]\n  },\n  {\n    "id": 50670,\n    "enchant": 44484,\n    "gems": [\n      40117,\n      0\n    ]\n  },\n  {\n    "id": 50675,\n    "enchant": 54999,\n    "gems": [\n      40117,\n      40117,\n      0\n    ]\n  },\n  {\n    "id": 50620,\n    "gems": [\n      40117,\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 51313,\n    "enchant": 38374,\n    "gems": [\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 54578,\n    "enchant": 55016,\n    "gems": [\n      40117,\n      40117\n    ]\n  },\n  {\n    "id": 50693,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 52572,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 50363\n  },\n  {\n    "id": 54590\n  },\n  {\n    "id": 50737,\n    "enchant": 53343,\n    "gems": [\n      40117\n    ]\n  },\n  {\n    "id": 50737,\n    "enchant": 53344,\n    "gems": [\n      40111\n    ]\n  },\n  {\n    "id": 50459\n  }\n]}')},Wn={name:"P1 Blood",toolbar:H,enableWhen:n=>n.getTalents().dancingRuneWeapon,gear:R.fromJsonString('{ "items": [\n    {\n      "id": 44006,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        49110\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40557,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40250,\n      "enchant": 44472\n    },\n    {\n      "id": 40550,\n      "enchant": 44489,\n      "gems": [\n        42142,\n        39996\n      ]\n    },\n    {\n      "id": 40330,\n      "enchant": 44484,\n      "gems": [\n        39996,\n        0\n      ]\n    },\n    {\n      "id": 40552,\n      "enchant": 54999,\n      "gems": [\n        40038,\n        0\n      ]\n    },\n    {\n      "id": 40278,\n      "gems": [\n        42142,\n        42142\n      ]\n    },\n    {\n      "id": 40556,\n      "enchant": 38374,\n      "gems": [\n        39996,\n        39996\n      ]\n    },\n    {\n      "id": 40591,\n      "enchant": 55016\n    },\n    {\n      "id": 43993,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 40075\n    },\n    {\n      "id": 40256\n    },\n    {\n      "id": 42987\n    },\n    {\n      "id": 40384,\n      "enchant": 53344\n    },\n    {},\n    {\n      "id": 40207\n    }\n  ]}')};class Cn extends k{constructor(n,e){super(n,e,{cssClass:"deathknight-sim-ui",knownIssues:["<p>Blood dps is not implemented.</p>\t\t\t\t<p>Rotation logic is not fully tuned yet.</p>\t\t\t\t<p>Pet scaling is likely to not be properly working until further beta testing.</p>"],epStats:[D.StatStrength,D.StatArmor,D.StatAgility,D.StatAttackPower,D.StatExpertise,D.StatMeleeHit,D.StatMeleeCrit,D.StatMeleeHaste,D.StatArmorPenetration,D.StatSpellHit,D.StatSpellCrit,D.StatSpellHaste],epReferenceStat:D.StatAttackPower,displayStats:[D.StatHealth,D.StatArmor,D.StatStrength,D.StatAgility,D.StatSpellHit,D.StatSpellCrit,D.StatAttackPower,D.StatMeleeHit,D.StatMeleeCrit,D.StatMeleeHaste,D.StatArmorPenetration,D.StatExpertise],defaults:{gear:Gn.gear,epWeights:E.fromMap({[D.StatStrength]:2.88,[D.StatAgility]:1.22,[D.StatArmor]:.01,[D.StatAttackPower]:1,[D.StatExpertise]:2.26,[D.StatMeleeHaste]:1.23,[D.StatMeleeHit]:1.15,[D.StatMeleeCrit]:1.43,[D.StatArmorPenetration]:1.56,[D.StatSpellHit]:.71,[D.StatSpellCrit]:.07}),consumes:Rn,rotation:fn,talents:hn.data,specOptions:yn,raidBuffs:O.create({giftOfTheWild:A.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:A.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:A.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:A.TristateEffectImproved,stoneskinTotem:A.TristateEffectImproved,moonkinAura:A.TristateEffectRegular,wrathOfAirTotem:!0,powerWordFortitude:A.TristateEffectImproved}),partyBuffs:w.create({heroicPresence:!1}),individualBuffs:G.create({blessingOfKings:!0,blessingOfMight:A.TristateEffectImproved}),debuffs:P.create({bloodFrenzy:!0,faerieFire:A.TristateEffectImproved,sunderArmor:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,shadowMastery:!0})},playerIconInputs:[],rotationInputs:ln,petConsumeInputs:[M],includeBuffDebuffInputs:[U,z],excludeBuffDebuffInputs:[I,x,N],otherInputs:{inputs:[_,V,q,K,L,j,J]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[hn,mn,dn,gn,cn],gear:[wn,Gn,Pn,On,An,Dn,En,Wn]}})}}export{cn as B,Cn as D,hn as F,Tn as O,Gn as P,dn as U,fn as a,yn as b,Rn as c,un as d,pn as e,An as f,bn as g,Sn as h,Wn as i};
//# sourceMappingURL=sim-4e6ee4c0.chunk.js.map
