{"version":3,"file":"index-dab1bd9e.entry.js","sources":["../../../ui/healing_priest/inputs.ts","../../../ui/healing_priest/presets.ts","../../../ui/healing_priest/index.ts","../../../ui/healing_priest/sim.ts"],"sourcesContent":["import { Race, RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { Target } from '../core/target.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'powerInfusionTarget',\n\tid: ActionId.fromSpellId(10060),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecHealingPriest>) => player.getSpecOptions().powerInfusionTarget?.targetIndex != NO_TARGET,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecHealingPriest>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = RaidTarget.create({\n\t\t\ttargetIndex: newValue ? 0 : NO_TARGET,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const InnerFire = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'useInnerFire',\n\tid: ActionId.fromSpellId(48168),\n});\n\nexport const Shadowfiend = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'useShadowfiend',\n\tid: ActionId.fromSpellId(34433),\n});\n\nexport const HealingPriestRotationConfig = {\n\tinputs: [\n\t],\n};\n","import { Consumes } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { ItemSpec } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { RaidBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { Player } from '../core/player.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\n\nimport {\n\tHealingPriest_Rotation as Rotation,\n\tHealingPriest_Options as Options,\n\tPriestMajorGlyph as MajorGlyph,\n\tPriestMinorGlyph as MinorGlyph,\n} from '../core/proto/priest.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const DiscTalents = {\n\tname: 'Disc',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '0503203130300512301313231251-2351010303',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfPowerWordShield,\n\t\t\tmajor2: MajorGlyph.GlyphOfFlashHeal,\n\t\t\tmajor3: MajorGlyph.GlyphOfPenance,\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\n\t\t}),\n\t}),\n};\nexport const HolyTalents = {\n\tname: 'Holy',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05032031103-234051032002152530004311051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfPrayerOfHealing,\n\t\t\tmajor2: MajorGlyph.GlyphOfRenew,\n\t\t\tmajor3: MajorGlyph.GlyphOfCircleOfHealing,\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\n\t\t}),\n\t}),\n};\n\nexport const DefaultRotation = Rotation.create({\n});\n\nexport const DefaultOptions = Options.create({\n\tuseInnerFire: true,\n\tuseShadowfiend: true,\n\n\tpowerInfusionTarget: RaidTarget.create({\n\t\ttargetIndex: NO_TARGET, // In an individual sim the 0-indexed player is ourself.\n\t}),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tdefaultPotion: Potions.RunicManaPotion,\n\tprepopPotion:  Potions.PotionOfWildMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttrueshotAura: true,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\ttotemOfWrath: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\twrathOfAirTotem: true,\n\tsanctifiedRetribution: true,\n\tbloodlust: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n});\n\nexport const DISC_PRERAID_PRESET = {\n\tname: 'Disc Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 37294,\n\t\t\t\"enchant\": 44876,\n\t\t\t\"gems\": [\n\t\t\t\t41401,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40681\n\t\t},\n\t\t{\n\t\t\t\"id\": 37691,\n\t\t\t\"enchant\": 44872\n\t\t},\n\t\t{\n\t\t\t\"id\": 37630,\n\t\t\t\"enchant\": 63765\n\t\t},\n\t\t{\n\t\t\t\"id\": 39515,\n\t\t\t\"enchant\": 44489,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37361,\n\t\t\t\"enchant\": 44498,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39519,\n\t\t\t\"enchant\": 44592,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40697,\n\t\t\t\"enchant\": 54793,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37622,\n\t\t\t\"enchant\": 41602\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 55016,\n\t\t\t\"gems\": [\n\t\t\t\t40027\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44283\n\t\t},\n\t\t{\n\t\t\t\"id\": 37195\n\t\t},\n\t\t{\n\t\t\t\"id\": 37660\n\t\t},\n\t\t{\n\t\t\t\"id\": 42413,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37360,\n\t\t\t\"enchant\": 45059\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 37238\n\t\t}\n\t]}`),\n};\n\nexport const DISC_P1_PRESET = {\n\tname: 'Disc P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40456,\n\t\t\t\"enchant\": 44876,\n\t\t\t\"gems\": [\n\t\t\t\t41401,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44657,\n\t\t\t\"gems\": [\n\t\t\t\t40047\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40450,\n\t\t\t\"enchant\": 44872,\n\t\t\t\"gems\": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40724,\n\t\t\t\"enchant\": 63765\n\t\t},\n\t\t{\n\t\t\t\"id\": 40194,\n\t\t\t\"enchant\": 44489,\n\t\t\t\"gems\": [\n\t\t\t\t42144\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40741,\n\t\t\t\"enchant\": 44498,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40445,\n\t\t\t\"enchant\": 44592,\n\t\t\t\"gems\": [\n\t\t\t\t42144,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40271,\n\t\t\t\"enchant\": 54793,\n\t\t\t\"gems\": [\n\t\t\t\t40027,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40398,\n\t\t\t\"enchant\": 41602,\n\t\t\t\"gems\": [\n\t\t\t\t39998,\n\t\t\t\t39998\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40236,\n\t\t\t\"enchant\": 55016\n\t\t},\n\t\t{\n\t\t\t\"id\": 40108\n\t\t},\n\t\t{\n\t\t\t\"id\": 40433\n\t\t},\n\t\t{\n\t\t\t\"id\": 37835\n\t\t},\n\t\t{\n\t\t\t\"id\": 40258\n\t\t},\n\t\t{\n\t\t\t\"id\": 40395,\n\t\t\t\"enchant\": 44487\n\t\t},\n\t\t{\n\t\t\t\"id\": 40350\n\t\t},\n\t\t{\n\t\t\t\"id\": 40245\n\t\t}\n\t]}`),\n};\n\nexport const HOLY_PRERAID_PRESET = {\n\tname: 'Holy Preraid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42553,\n\t\t\t\"enchant\": 44876,\n\t\t\t\"gems\": [\n\t\t\t\t41401,\n\t\t\t\t42148\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40681\n\t\t},\n\t\t{\n\t\t\t\"id\": 37655,\n\t\t\t\"enchant\": 44872\n\t\t},\n\t\t{\n\t\t\t\"id\": 37291,\n\t\t\t\"enchant\": 44472\n\t\t},\n\t\t{\n\t\t\t\"id\": 39515,\n\t\t\t\"enchant\": 44489,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37361,\n\t\t\t\"enchant\": 44555,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39519,\n\t\t\t\"enchant\": 54999,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40697,\n\t\t\t\"enchant\": 54793,\n\t\t\t\"gems\": [\n\t\t\t\t42148,\n\t\t\t\t42148\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37189,\n\t\t\t\"enchant\": 41602,\n\t\t\t\"gems\": [\n\t\t\t\t40047,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44202,\n\t\t\t\"enchant\": 55016,\n\t\t\t\"gems\": [\n\t\t\t\t40092\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44283\n\t\t},\n\t\t{\n\t\t\t\"id\": 37694\n\t\t},\n\t\t{\n\t\t\t\"id\": 37111\n\t\t},\n\t\t{\n\t\t\t\"id\": 42413,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37360,\n\t\t\t\"enchant\": 45059\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t\"id\": 37619\n\t\t}\n\t]}`),\n};\n\nexport const HOLY_P1_PRESET = {\n\tname: 'Holy P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40447,\n\t\t\t\"enchant\": 44876,\n\t\t\t\"gems\": [\n\t\t\t\t41401,\n\t\t\t\t40051\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44657,\n\t\t\t\"gems\": [\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40450,\n\t\t\t\"enchant\": 44872,\n\t\t\t\"gems\": [\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40723,\n\t\t\t\"enchant\": 44472\n\t\t},\n\t\t{\n\t\t\t\"id\": 40381,\n\t\t\t\"enchant\": 44489,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40741,\n\t\t\t\"enchant\": 44555,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40454,\n\t\t\t\"enchant\": 54999,\n\t\t\t\"gems\": [\n\t\t\t\t40051,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40271,\n\t\t\t\"enchant\": 54793,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40398,\n\t\t\t\"enchant\": 41602,\n\t\t\t\"gems\": [\n\t\t\t\t42148,\n\t\t\t\t42148\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40326,\n\t\t\t\"enchant\": 55016,\n\t\t\t\"gems\": [\n\t\t\t\t42148\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40719\n\t\t},\n\t\t{\n\t\t\t\"id\": 40375\n\t\t},\n\t\t{\n\t\t\t\"id\": 37111\n\t\t},\n\t\t{\n\t\t\t\"id\": 42413,\n\t\t\t\"gems\": [\n\t\t\t\t40012,\n\t\t\t\t40012\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40395,\n\t\t\t\"enchant\": 44487\n\t\t},\n\t\t{\n\t\t\t\"id\": 40350\n\t\t},\n\t\t{\n\t\t\t\"id\": 40245\n\t\t}\n\t]}`),\n};\n","import { Spec } from '../core/proto/common.js';\nimport { Sim } from '../core/sim.js';\nimport { Player } from '../core/player.js';\nimport { TypedEvent } from '../core/typed_event.js';\n\nimport { HealingPriestSimUI } from './sim.js';\n\nconst sim = new Sim();\nconst player = new Player<Spec.SpecHealingPriest>(Spec.SpecHealingPriest, sim);\nsim.raid.setPlayer(TypedEvent.nextEventID(), 0, player);\n\nconst simUI = new HealingPriestSimUI(document.body, player);\n","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\nimport {\n\tHealingPriest,\n\tHealingPriest_Rotation as Rotation,\n\tHealingPriest_Options as Options,\n} from '../core/proto/priest.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as HealingPriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class HealingPriestSimUI extends IndividualSimUI<Spec.SpecHealingPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHealingPriest>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'healing-priest-sim-ui',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatHealingPower,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatHealingPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatHealingPower,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.DISC_P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 1.38,\n\t\t\t\t\t[Stat.StatSpirit]: 1.18,\n\t\t\t\t\t[Stat.StatHealingPower]: 1,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.44,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.28,\n\t\t\t\t\t[Stat.StatMP5]: 2.05,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.DiscTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tHealingPriestInputs.SelfPowerInfusion,\n\t\t\t\tHealingPriestInputs.InnerFire,\n\t\t\t\tHealingPriestInputs.Shadowfiend,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: HealingPriestInputs.HealingPriestRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.DiscTalents,\n\t\t\t\t\tPresets.HolyTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.DISC_PRERAID_PRESET,\n\t\t\t\t\tPresets.DISC_P1_PRESET,\n\t\t\t\t\tPresets.HOLY_PRERAID_PRESET,\n\t\t\t\t\tPresets.HOLY_P1_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","powerInfusionTarget","targetIndex","NO_TARGET","setValue","eventID","newValue","newOptions","RaidTarget","create","setSpecOptions","InnerFire","Shadowfiend","HealingPriestRotationConfig","inputs","DiscTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfPowerWordShield","major2","GlyphOfFlashHeal","major3","GlyphOfPenance","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowfiend","minor3","GlyphOfFading","HolyTalents","GlyphOfPrayerOfHealing","GlyphOfRenew","GlyphOfCircleOfHealing","DefaultRotation","Rotation","DefaultOptions","Options","useInnerFire","useShadowfiend","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","RunicManaPotion","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","DefaultDebuffs","Debuffs","DISC_PRERAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","getTalentTree","gear","EquipmentSpec","fromJsonString","DISC_P1_PRESET","HOLY_PRERAID_PRESET","HOLY_P1_PRESET","sim","Sim","Player","Spec","SpecHealingPriest","raid","setPlayer","TypedEvent","nextEventID","IndividualSimUI","constructor","parentElem","super","cssClass","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatHealingPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","Presets.DISC_P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.DiscTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","HealingPriestInputs.SelfPowerInfusion","HealingPriestInputs.InnerFire","HealingPriestInputs.Shadowfiend","rotationInputs","HealingPriestInputs.HealingPriestRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","encounterPicker","showExecuteProportion","presets","Presets.HolyTalents","Presets.DISC_PRERAID_PRESET","Presets.HOLY_PRERAID_PRESET","Presets.HOLY_P1_PRESET","document","body"],"mappings":"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"}