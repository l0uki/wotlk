{"version":3,"file":"index-c9d55b27.entry.js","sources":["../../../ui/detailed_results/result_component.ts","../../../ui/detailed_results/results_filter.ts","../../../ui/detailed_results/metrics_table.ts","../../../ui/detailed_results/resource_metrics.ts","../../../ui/detailed_results/color_settings.ts","../../../ui/detailed_results/source_chart.ts","../../../ui/detailed_results/aura_metrics.ts","../../../ui/detailed_results/timeline.ts","../../../ui/detailed_results/topline_results.ts","../../../ui/detailed_results/index.ts","../../../ui/detailed_results/cast_metrics.ts","../../../ui/detailed_results/melee_metrics.ts","../../../ui/detailed_results/spell_metrics.ts","../../../ui/detailed_results/healing_metrics.ts","../../../ui/detailed_results/player_damage.ts","../../../ui/detailed_results/dps_histogram.ts","../../../ui/detailed_results/dtps_melee_metrics.ts"],"sourcesContent":["import { RaidSimRequest, RaidSimResult } from '../core/proto/api.js';\nimport { SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { Component } from '../core/components/component.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport { ColorSettings } from './color_settings.js';\n\nexport interface SimResultData {\n\teventID: EventID,\n\tresult: SimResult,\n\tfilter: SimResultFilter,\n};\n\nexport interface ResultComponentConfig {\n\tparent: HTMLElement,\n\trootCssClass?: string,\n\tresultsEmitter: TypedEvent<SimResultData | null>,\n\tcolorSettings: ColorSettings,\n};\n\nexport abstract class ResultComponent extends Component {\n\tprivate readonly colorSettings: ColorSettings;\n\n\tprivate lastSimResult: SimResultData | null;\n\n\tconstructor(config: ResultComponentConfig) {\n\t\tsuper(config.parent, config.rootCssClass || '');\n\t\tthis.colorSettings = config.colorSettings;\n\t\tthis.lastSimResult = null;\n\n\t\tconfig.resultsEmitter.on((eventID, resultData) => {\n\t\t\tif (!resultData)\n\t\t\t\treturn;\n\n\t\t\tthis.lastSimResult = resultData;\n\t\t\tthis.onSimResult(resultData);\n\t\t});\n\t}\n\n\tgetLastSimResult(): SimResultData {\n\t\tif (this.lastSimResult) {\n\t\t\treturn this.lastSimResult;\n\t\t} else {\n\t\t\tthrow new Error('No last sim result!');\n\t\t}\n\t}\n\n\tabstract onSimResult(resultData: SimResultData): void;\n}\n","import { SimResult, SimResultFilter, UnitMetrics } from '../core/proto_utils/sim_result.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { EnumPicker } from '../core/components/enum_picker.js';\nimport { Input } from '../core/components/input.js';\n\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\nconst ALL_UNITS = -1;\n\ninterface FilterData {\n\tplayer: number,\n\ttarget: number,\n};\n\nexport class ResultsFilter extends ResultComponent {\n\tprivate readonly currentFilter: FilterData;\n\n\treadonly changeEmitter: TypedEvent<void>;\n\n\tprivate readonly playerFilter: PlayerFilter;\n\tprivate readonly targetFilter: TargetFilter;\n\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'results-filter-root';\n\t\tsuper(config);\n\t\tthis.currentFilter = {\n\t\t\tplayer: ALL_UNITS,\n\t\t\ttarget: ALL_UNITS,\n\t\t};\n\t\tthis.changeEmitter = new TypedEvent<void>();\n\n\t\tthis.playerFilter = new PlayerFilter(this.rootElem, this.currentFilter);\n\t\tthis.playerFilter.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\n\t\tthis.targetFilter = new TargetFilter(this.rootElem, this.currentFilter);\n\t\tthis.targetFilter.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\t}\n\n\tgetFilter(): SimResultFilter {\n\t\treturn {\n\t\t\tplayer: this.currentFilter.player == ALL_UNITS ? null : this.currentFilter.player,\n\t\t\ttarget: this.currentFilter.target == ALL_UNITS ? null : this.currentFilter.target,\n\t\t};\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t\tthis.playerFilter.setOptions(resultData.eventID, resultData.result);\n\t\tthis.targetFilter.setOptions(resultData.eventID, resultData.result);\n\t}\n\n\tsetPlayer(eventID: EventID, newPlayer: number | null) {\n\t\tthis.currentFilter.player = (newPlayer === null) ? ALL_UNITS : newPlayer;\n\t\tthis.playerFilter.changeEmitter.emit(eventID);\n\t}\n\n\tsetTarget(eventID: EventID, newTarget: number | null) {\n\t\tthis.currentFilter.target = (newTarget === null) ? ALL_UNITS : newTarget;\n\t\tthis.targetFilter.changeEmitter.emit(eventID);\n\t}\n}\n\ninterface UnitFilterOption {\n\ticonUrl: string,\n\ttext: string,\n\tcolor: string,\n\tvalue: number,\n};\n\n// Dropdown menu for filtering by player.\nabstract class UnitGroupFilter extends Input<FilterData, number> {\n\tprivate readonly filterData: FilterData;\n\treadonly changeEmitter: TypedEvent<void>;\n\n\tprivate allUnitsOption: UnitFilterOption;\n\tprivate currentOptions: Array<UnitFilterOption>;\n\n\tprivate readonly buttonElem: HTMLElement;\n\tprivate readonly dropdownElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, filterData: FilterData, allUnitsLabel: string) {\n\t\tconst changeEmitter = new TypedEvent<void>();\n\t\tsuper(parent, 'unit-filter-root', filterData, {\n\t\t\textraCssClasses: [\n\t\t\t\t'dropdown-root',\n\t\t\t],\n\t\t\tchangedEvent: (filterData: FilterData) => changeEmitter,\n\t\t\tgetValue: (filterData: FilterData) => this.getFilterDataValue(filterData),\n\t\t\tsetValue: (eventID: EventID, filterData: FilterData, newValue: number) => this.setFilterDataValue(filterData, newValue),\n\t\t});\n\t\tthis.filterData = filterData;\n\t\tthis.changeEmitter = changeEmitter;\n\n\t\tthis.allUnitsOption = {\n\t\t\ticonUrl: '',\n\t\t\ttext: allUnitsLabel,\n\t\t\tcolor: 'black',\n\t\t\tvalue: ALL_UNITS,\n\t\t};\n\t\tthis.currentOptions = [this.allUnitsOption];\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"dropdown-button unit-filter-button\"></div>\n\t\t\t<div class=\"dropdown-panel unit-filter-dropdown\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('unit-filter-button')[0] as HTMLElement;\n\t\tthis.dropdownElem = this.rootElem.getElementsByClassName('unit-filter-dropdown')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tabstract getFilterDataValue(filterData: FilterData): number;\n\tabstract setFilterDataValue(filterData: FilterData, newValue: number): void;\n\tabstract getAllUnits(simResult: SimResult): Array<UnitMetrics>;\n\n\tsetOptions(eventID: EventID, simResult: SimResult) {\n\t\tthis.currentOptions = [this.allUnitsOption].concat(this.getAllUnits(simResult).map(unit => {\n\t\t\treturn {\n\t\t\t\ticonUrl: unit.iconUrl || '',\n\t\t\t\ttext: unit.label,\n\t\t\t\tcolor: unit.classColor || 'black',\n\t\t\t\tvalue: unit.unitIndex,\n\t\t\t};\n\t\t}));\n\n\t\tconst hasSameOption = this.currentOptions.find(option => option.value == this.getInputValue()) != null;\n\t\tif (!hasSameOption) {\n\t\t\tthis.setFilterDataValue(this.filterData, this.allUnitsOption.value);\n\t\t\tthis.changeEmitter.emit(eventID);\n\t\t}\n\n\t\tthis.dropdownElem.innerHTML = '';\n\t\tthis.currentOptions.forEach(option => this.dropdownElem.appendChild(this.makeOption(option)));\n\t}\n\n\tprivate makeOption(data: UnitFilterOption): HTMLElement {\n\t\tconst option = this.makeOptionElem(data);\n\n\t\toption.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tthis.setFilterDataValue(this.filterData, data.value);\n\t\t\tthis.changeEmitter.emit(TypedEvent.nextEventID());\n\t\t});\n\n\t\treturn option;\n\t}\n\n\tprivate makeOptionElem(data: UnitFilterOption): HTMLElement {\n\t\tconst optionContainer = document.createElement('div');\n\t\toptionContainer.classList.add('dropdown-option-container');\n\n\t\tconst option = document.createElement('div');\n\t\toption.classList.add('dropdown-option', 'unit-filter-option');\n\t\toptionContainer.appendChild(option);\n\n\t\tif (data.color) {\n\t\t\toption.style.backgroundColor = data.color;\n\t\t}\n\n\t\tif (data.iconUrl) {\n\t\t\tconst icon = document.createElement('img');\n\t\t\ticon.src = data.iconUrl;\n\t\t\ticon.classList.add('unit-filter-icon');\n\t\t\toption.appendChild(icon);\n\t\t}\n\n\t\tif (data.text) {\n\t\t\tconst label = document.createElement('span');\n\t\t\tlabel.textContent = data.text;\n\t\t\tlabel.classList.add('unit-filter-label');\n\t\t\toption.appendChild(label);\n\t\t}\n\n\t\treturn optionContainer;\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn this.getFilterDataValue(this.filterData);\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.setFilterDataValue(this.filterData, newValue);\n\n\t\tconst optionData = this.currentOptions.find(optionData => optionData.value == newValue);\n\t\tif (!optionData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.buttonElem.innerHTML = '';\n\t\tthis.buttonElem.appendChild(this.makeOptionElem(optionData));\n\t}\n}\n\nclass PlayerFilter extends UnitGroupFilter {\n\tconstructor(parent: HTMLElement, filterData: FilterData) {\n\t\tsuper(parent, filterData, 'All Players');\n\t\tthis.rootElem.classList.add('player-filter-root');\n\t}\n\n\tgetFilterDataValue(filterData: FilterData): number {\n\t\treturn filterData.player;\n\t}\n\tsetFilterDataValue(filterData: FilterData, newValue: number): void {\n\t\tfilterData.player = newValue;\n\t}\n\tgetAllUnits(simResult: SimResult): Array<UnitMetrics> {\n\t\treturn simResult.getPlayers();\n\t}\n}\n\nclass TargetFilter extends UnitGroupFilter {\n\tconstructor(parent: HTMLElement, filterData: FilterData) {\n\t\tsuper(parent, filterData, 'All Targets');\n\t\tthis.rootElem.classList.add('target-filter-root');\n\t}\n\n\tgetFilterDataValue(filterData: FilterData): number {\n\t\treturn filterData.target;\n\t}\n\tsetFilterDataValue(filterData: FilterData, newValue: number): void {\n\t\tfilterData.target = newValue;\n\t}\n\tgetAllUnits(simResult: SimResult): Array<UnitMetrics> {\n\t\treturn simResult.getTargets();\n\t}\n}\n","import { ActionMetrics, UnitMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport enum ColumnSortType {\n\tNone,\n\tAscending,\n\tDescending,\n}\n\nexport interface MetricsColumnConfig<T> {\n\tname: string,\n\ttooltip?: string,\n\theaderCellClass?: string,\n\tcolumnClass?: string,\n\tsort?: ColumnSortType,\n\n\tgetValue?: (metric: T) => number,\n\n\t// Either getDisplayString or fillCell must be specified.\n\tgetDisplayString?: (metric: T) => string,\n\tfillCell?: (metric: T, cellElem: HTMLElement, rowElem: HTMLElement) => void,\n};\n\nexport abstract class MetricsTable<T> extends ResultComponent {\n\tprivate readonly columnConfigs: Array<MetricsColumnConfig<T>>;\n\n\tprotected readonly tableElem: HTMLElement;\n\tprotected readonly bodyElem: HTMLElement;\n\n\treadonly onUpdate = new TypedEvent<void>('MetricsTableUpdate');\n\n\tconstructor(config: ResultComponentConfig, columnConfigs: Array<MetricsColumnConfig<T>>) {\n\t\tsuper(config);\n\t\tthis.columnConfigs = columnConfigs;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t<table class=\"metrics-table tablesorter\">\n\t\t\t<thead class=\"metrics-table-header\">\n\t\t\t\t<tr class=\"metrics-table-header-row\"></tr>\n\t\t\t</thead>\n\t\t\t<tbody class=\"metrics-table-body\">\n\t\t\t</tbody>\n\t\t</table>\n\t\t`;\n\n\t\tthis.tableElem = this.rootElem.getElementsByClassName('metrics-table')[0] as HTMLTableSectionElement;\n\t\tthis.bodyElem = this.rootElem.getElementsByClassName('metrics-table-body')[0] as HTMLElement;\n\n\t\tconst headerRowElem = this.rootElem.getElementsByClassName('metrics-table-header-row')[0] as HTMLElement;\n\t\tthis.columnConfigs.forEach(columnConfig => {\n\t\t\tconst headerCell = document.createElement('th');\n\t\t\theaderCell.classList.add('metrics-table-header-cell');\n\t\t\tif (columnConfig.headerCellClass) {\n\t\t\t\theaderCell.classList.add(columnConfig.headerCellClass);\n\t\t\t}\n\t\t\tif (columnConfig.columnClass) {\n\t\t\t\theaderCell.classList.add(columnConfig.columnClass);\n\t\t\t}\n\t\t\theaderCell.innerHTML = `<span>${columnConfig.name}</span>`;\n\t\t\tif (columnConfig.tooltip) {\n\t\t\t\ttippy(headerCell, {\n\t\t\t\t\t'content': columnConfig.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\t\t\theaderRowElem.appendChild(headerCell);\n\t\t});\n\n\t\tconst sortList = this.columnConfigs\n\t\t\t.map((config, i) => [i, config.sort == ColumnSortType.Ascending ? 0 : 1])\n\t\t\t.filter(sortData => this.columnConfigs[sortData[0]].sort);\n\t\t$(this.tableElem).tablesorter({\n\t\t\tsortList: sortList,\n\t\t\tcssChildRow: 'child-metric',\n\t\t});\n\t}\n\n\tprotected sortMetrics(metrics: Array<T>) {\n\t\tthis.columnConfigs.filter(config => config.sort).forEach(config => {\n\t\t\tif (!config.getValue) {\n\t\t\t\tthrow new Error('Can\\' apply group sorting without getValue');\n\t\t\t}\n\t\t\tif (config.sort == ColumnSortType.Ascending) {\n\t\t\t\tmetrics.sort((a, b) => config.getValue!(a) - config.getValue!(b));\n\t\t\t} else {\n\t\t\t\tmetrics.sort((a, b) => config.getValue!(b) - config.getValue!(a));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addRow(metric: T): HTMLElement {\n\t\tconst rowElem = document.createElement('tr');\n\t\tthis.bodyElem.appendChild(rowElem);\n\n\t\tthis.columnConfigs.forEach(columnConfig => {\n\t\t\tconst cellElem = document.createElement('td');\n\t\t\tif (columnConfig.columnClass) {\n\t\t\t\tcellElem.classList.add(columnConfig.columnClass);\n\t\t\t}\n\t\t\tif (columnConfig.fillCell) {\n\t\t\t\tcolumnConfig.fillCell(metric, cellElem, rowElem);\n\t\t\t} else if (columnConfig.getDisplayString) {\n\t\t\t\tcellElem.textContent = columnConfig.getDisplayString(metric);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Metrics column config does not provide content function: ' + columnConfig.name);\n\t\t\t}\n\t\t\trowElem.appendChild(cellElem);\n\t\t});\n\n\t\tthis.customizeRowElem(metric, rowElem);\n\t\treturn rowElem;\n\t}\n\n\tprivate addGroup(metrics: Array<T>) {\n\t\tif (metrics.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (metrics.length == 1 && this.shouldCollapse(metrics[0])) {\n\t\t\tthis.addRow(metrics[0]);\n\t\t\treturn;\n\t\t}\n\n\t\t// Manually sort because tablesorter doesn't let us apply sorting to child rows.\n\t\tthis.sortMetrics(metrics);\n\n\t\tconst mergedMetrics = this.mergeMetrics(metrics);\n\t\tconst parentRow = this.addRow(mergedMetrics);\n\t\tconst childRows = metrics.map(metric => this.addRow(metric));\n\t\tchildRows.forEach(childRow => childRow.classList.add('child-metric'));\n\n\t\tlet expand = true;\n\t\tparentRow.classList.add('parent-metric', 'expand');\n\t\tparentRow.addEventListener('click', event => {\n\t\t\texpand = !expand;\n\t\t\tif (expand) {\n\t\t\t\tchildRows.forEach(row => row.classList.remove('hide'));\n\t\t\t\tparentRow.classList.add('expand');\n\t\t\t} else {\n\t\t\t\tchildRows.forEach(row => row.classList.add('hide'));\n\t\t\t\tparentRow.classList.remove('expand');\n\t\t\t}\n\t\t});\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t\tthis.bodyElem.textContent = '';\n\t\tconst groupedMetrics = this.getGroupedMetrics(resultData).filter(group => group.length > 0);\n\t\tif (groupedMetrics.length == 0) {\n\t\t\tthis.rootElem.classList.add('hide');\n\t\t\tthis.onUpdate.emit(resultData.eventID);\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('hide');\n\t\t}\n\n\t\tgroupedMetrics.forEach(group => this.addGroup(group));\n\t\t$(this.tableElem).trigger('update');\n\t\tthis.onUpdate.emit(resultData.eventID);\n\t}\n\n\t// Whether a single-element group should have its parent row removed.\n\t// Override this to add custom behavior.\n\tprotected shouldCollapse(metric: T): boolean {\n\t\treturn true;\n\t}\n\n\t// Override this to customize rowElem after it has been populated.\n\tprotected customizeRowElem(metric: T, rowElem: HTMLElement) { }\n\n\t// Override this to provide custom merge behavior.\n\tprotected mergeMetrics(metrics: Array<T>): T {\n\t\treturn metrics[0];\n\t}\n\n\t// Returns grouped metrics to display.\n\tabstract getGroupedMetrics(resultData: SimResultData): Array<Array<T>>;\n\n\tstatic nameCellConfig<T>(getData: (metric: T) => { name: string, actionId: ActionId }): MetricsColumnConfig<T> {\n\t\treturn {\n\t\t\tname: 'Name',\n\t\t\tfillCell: (metric: T, cellElem: HTMLElement, rowElem: HTMLElement) => {\n\t\t\t\tconst data = getData(metric);\n\t\t\t\tcellElem.innerHTML = `\n\t\t\t\t<a class=\"metrics-action-icon\"></a>\n\t\t\t\t<span class=\"metrics-action-name\">${data.name}</span>\n\t\t\t\t<span class=\"expand-toggle fa fa-caret-down\"></span>\n\t\t\t\t<span class=\"expand-toggle fa fa-caret-right\"></span>\n\t\t\t\t`;\n\n\t\t\t\tconst iconElem = cellElem.getElementsByClassName('metrics-action-icon')[0] as HTMLAnchorElement;\n\t\t\t\tdata.actionId.setBackgroundAndHref(iconElem);\n\t\t\t},\n\t\t};\n\t}\n\n\tstatic playerNameCellConfig(): MetricsColumnConfig<UnitMetrics> {\n\t\treturn {\n\t\t\tname: 'Name',\n\t\t\tfillCell: (player: UnitMetrics, cellElem: HTMLElement, rowElem: HTMLElement) => {\n\t\t\t\tcellElem.innerHTML = `\n\t\t\t\t<img class=\"metrics-action-icon\" src=\"${player.iconUrl}\"></img>\n\t\t\t\t<span class=\"metrics-action-name\" style=\"color:${player.classColor}\">${player.label}</span>\n\t\t\t\t`;\n\t\t\t},\n\t\t};\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ResourceMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { ResourceType } from '../core/proto/api.js';\nimport { resourceNames } from '../core/proto_utils/names.js';\nimport { orderedResourceTypes } from '../core/proto_utils/utils.js';\nimport { getEnumValues } from '../core/utils.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class ResourceMetricsTable extends ResultComponent {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'resource-metrics-root';\n\t\tsuper(config);\n\n\t\torderedResourceTypes.forEach(resourceType => {\n\t\t\tconst containerElem = document.createElement('div');\n\t\t\tcontainerElem.classList.add('resource-metrics-table-container', 'hide');\n\t\t\tcontainerElem.innerHTML = `<span class=\"resource-metrics-table-title\">${resourceNames[resourceType]}</span>`;\n\t\t\tthis.rootElem.appendChild(containerElem);\n\n\t\t\tconst childConfig = config;\n\t\t\tchildConfig.parent = containerElem;\n\t\t\tconst table = new TypedResourceMetricsTable(childConfig, resourceType);\n\t\t\ttable.onUpdate.on(() => {\n\t\t\t\tif (table.rootElem.classList.contains('hide')) {\n\t\t\t\t\tcontainerElem.classList.add('hide');\n\t\t\t\t} else {\n\t\t\t\t\tcontainerElem.classList.remove('hide');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t}\n}\n\nexport class TypedResourceMetricsTable extends MetricsTable<ResourceMetrics> {\n\treadonly resourceType: ResourceType;\n\n\tconstructor(config: ResultComponentConfig, resourceType: ResourceType) {\n\t\tconfig.rootCssClass = 'resource-metrics-table-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ResourceMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tgetValue: (metric: ResourceMetrics) => metric.events,\n\t\t\t\tgetDisplayString: (metric: ResourceMetrics) => metric.events.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gain',\n\t\t\t\ttooltip: 'Gain',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ResourceMetrics) => metric.gain,\n\t\t\t\tgetDisplayString: (metric: ResourceMetrics) => metric.gain.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gain / s',\n\t\t\t\ttooltip: 'Gain / Second',\n\t\t\t\tgetValue: (metric: ResourceMetrics) => metric.gainPerSecond,\n\t\t\t\tgetDisplayString: (metric: ResourceMetrics) => metric.gainPerSecond.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Gain',\n\t\t\t\ttooltip: 'Gain / Event',\n\t\t\t\tgetValue: (metric: ResourceMetrics) => metric.avgGain,\n\t\t\t\tgetDisplayString: (metric: ResourceMetrics) => metric.avgGain.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Wasted Gain',\n\t\t\t\ttooltip: 'Gain that was wasted because of resource cap.',\n\t\t\t\tgetValue: (metric: ResourceMetrics) => metric.wastedGain,\n\t\t\t\tgetDisplayString: (metric: ResourceMetrics) => metric.wastedGain.toFixed(1),\n\t\t\t},\n\t\t]);\n\t\tthis.resourceType = resourceType;\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ResourceMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\tconst resources = player.getResourceMetrics(this.resourceType);\n\t\tconst resourceGroups = ResourceMetrics.groupById(resources);\n\t\treturn resourceGroups;\n\t}\n\n\tmergeMetrics(metrics: Array<ResourceMetrics>): ResourceMetrics {\n\t\treturn ResourceMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n}\n","export type ColorSettings = {\n\tmainTextColor: string,\n};\n\nexport const actionColors: Array<string> = [\n\t'#dd9933',\n\t'#67074e',\n\t'#5a175d',\n\t'#074e67',\n\t'#05878a',\n\t'#c9c1e7',\n\t'#bdd5ef',\n\t'#c7e3d0',\n\t'#e7e6ce',\n\t'#f2d8cc',\n\t'#e9ccce',\n];\n","import { Component } from '../core/components/component.js';\nimport { SimResult, SimResultFilter, ActionMetrics } from '../core/proto_utils/sim_result.js';\nimport { sum } from '../core/utils.js';\n\nimport { actionColors } from './color_settings.js';\n\ndeclare var Chart: any;\n\nexport class SourceChart extends Component {\n\tconstructor(parentElem: HTMLElement, allActionMetrics: Array<ActionMetrics>) {\n\t\tconst chartCanvas = document.createElement(\"canvas\");\n\t\tsuper(parentElem, 'source-chart-root', chartCanvas);\n\n\t\tchartCanvas.style.height = '400px';\n\t\tchartCanvas.style.width = '600px';\n\t\tchartCanvas.height = 400;\n\t\tchartCanvas.width = 600;\n\n\t\tconst actionMetrics = allActionMetrics\n\t\t\t.filter(actionMetric => actionMetric.damage > 0)\n\t\t\t.sort((a, b) => b.damage - a.damage);\n\t\tconst names = actionMetrics.map(am => am.name);\n\t\tconst totalDmg = sum(actionMetrics.map(actionMetric => actionMetric.damage));\n\t\tconst vals = actionMetrics.map(actionMetric => actionMetric.damage / totalDmg);\n\t\tconst bgColors = actionColors.slice(0, actionMetrics.length);\n\n\t\tconst ctx = chartCanvas.getContext('2d');\n\t\tconst chart = new Chart(ctx, {\n\t\t\ttype: 'pie',\n\t\t\tdata: {\n\t\t\t\tlabels: names,\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: vals,\n\t\t\t\t\tbackgroundColor: bgColors,\n\t\t\t\t}],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id';\nimport { AuraMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class AuraMetricsTable extends MetricsTable<AuraMetrics> {\n    private readonly useDebuffs: boolean;\n\n    constructor(config: ResultComponentConfig, useDebuffs: boolean) {\n        if (useDebuffs) {\n            config.rootCssClass = 'debuff-metrics-root';\n        } else {\n            config.rootCssClass = 'buff-metrics-root';\n        }\n        super(config, [\n            MetricsTable.nameCellConfig((metric: AuraMetrics) => {\n                return {\n                    name: metric.name,\n                    actionId: metric.actionId,\n                };\n            }),\n            {\n                name: 'Procs',\n                tooltip: 'Procs',\n                getValue: (metric: AuraMetrics) => metric.averageProcs,\n                getDisplayString: (metric: AuraMetrics) => metric.averageProcs.toFixed(2),\n            },\n            {\n                name: 'PPM',\n                tooltip: 'Procs Per Minute',\n                getValue: (metric: AuraMetrics) => metric.ppm,\n                getDisplayString: (metric: AuraMetrics) => metric.ppm.toFixed(2),\n            },\n            {\n                name: 'Uptime',\n                tooltip: 'Uptime / Encounter Duration',\n                sort: ColumnSortType.Descending,\n                getValue: (metric: AuraMetrics) => metric.uptimePercent,\n                getDisplayString: (metric: AuraMetrics) => metric.uptimePercent.toFixed(2) + '%',\n            },\n        ]);\n        this.useDebuffs = useDebuffs;\n    }\n\n    getGroupedMetrics(resultData: SimResultData): Array<Array<AuraMetrics>> {\n        if (this.useDebuffs) {\n            return AuraMetrics.groupById(resultData.result.getDebuffMetrics(resultData.filter));\n        } else {\n            const players = resultData.result.getPlayers(resultData.filter);\n            if (players.length != 1) {\n                return [];\n            }\n            const player = players[0];\n\n            const auras = player.auras;\n            const actionGroups = AuraMetrics.groupById(auras);\n            const petGroups = player.pets.map(pet => pet.auras);\n\n            return actionGroups.concat(petGroups);\n        }\n    }\n\n    mergeMetrics(metrics: Array<AuraMetrics>): AuraMetrics {\n        return AuraMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n    }\n\n    shouldCollapse(metric: AuraMetrics): boolean {\n        return !metric.unit?.isPet;\n    }\n}\n","import { ResourceType } from '../core/proto/api.js';\nimport { OtherAction } from '../core/proto/common.js';\nimport { UnitMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { ActionId, resourceTypeToIcon } from '../core/proto_utils/action_id.js';\nimport { resourceColors, resourceNames } from '../core/proto_utils/names.js';\nimport { orderedResourceTypes } from '../core/proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { bucket, distinct, getEnumValues, maxIndex, stringComparator, sum } from '../core/utils.js';\n\nimport {\n\tAuraUptimeLog,\n\tCastLog,\n\tDamageDealtLog,\n\tResourceChangedLogGroup,\n\tDpsLog,\n\tSimLog,\n\tThreatLogGroup,\n} from '../core/proto_utils/logs_parser.js';\n\nimport { actionColors } from './color_settings.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\ndeclare var ApexCharts: any;\n\ntype TooltipHandler = (dataPointIndex: number) => string;\n\nconst dpsColor = '#ed5653';\nconst manaColor = '#2E93fA';\nconst threatColor = '#b56d07';\n\nexport class Timeline extends ResultComponent {\n\tprivate readonly dpsResourcesPlotElem: HTMLElement;\n\tprivate dpsResourcesPlot: any;\n\n\tprivate readonly rotationPlotElem: HTMLElement;\n\tprivate readonly rotationLabels: HTMLElement;\n\tprivate readonly rotationTimeline: HTMLElement;\n\tprivate readonly rotationHiddenIdsContainer: HTMLElement;\n\tprivate readonly chartPicker: HTMLSelectElement;\n\n\tprivate resultData: SimResultData | null;\n\tprivate rendered: boolean;\n\n\tprivate hiddenIds: Array<ActionId>;\n\tprivate hiddenIdsChangeEmitter;\n\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'timeline-root';\n\t\tsuper(config);\n\t\tthis.resultData = null;\n\t\tthis.rendered = false;\n\t\tthis.hiddenIds = [];\n\t\tthis.hiddenIdsChangeEmitter = new TypedEvent<void>();\n\n\t\tthis.rootElem.innerHTML = `\n\t\t<div class=\"timeline-disclaimer\">\n\t\t\t<span class=\"timeline-warning fa fa-exclamation-triangle\"></span>\n\t\t\t<span class=\"timeline-warning-description\">Timeline data visualizes only 1 sim iteration.</span>\n\t\t\t<div class=\"timeline-run-again-button sim-button\">SIM 1 ITERATION</div>\n\t\t\t<select class=\"timeline-chart-picker\">\n\t\t\t\t<option class=\"rotation-option\" value=\"rotation\">Rotation</option>\n\t\t\t\t<option class=\"dps-option\" value=\"dps\">DPS</option>\n\t\t\t\t<option class=\"threat-option\" value=\"threat\">Threat</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"timeline-plots-container\">\n\t\t\t<div class=\"timeline-plot dps-resources-plot hide\"></div>\n\t\t\t<div class=\"timeline-plot rotation-plot\">\n\t\t\t\t<div class=\"rotation-container\">\n\t\t\t\t\t<div class=\"rotation-labels\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"rotation-timeline\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"rotation-hidden-ids\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t`;\n\n\t\tconst runAgainButton = this.rootElem.getElementsByClassName('timeline-run-again-button')[0] as HTMLElement;\n\t\trunAgainButton.addEventListener('click', event => {\n\t\t\t(window.opener || window.parent)!.postMessage('runOnce', '*');\n\t\t});\n\n\t\tthis.chartPicker = this.rootElem.getElementsByClassName('timeline-chart-picker')[0] as HTMLSelectElement;\n\t\tthis.chartPicker.addEventListener('change', event => {\n\t\t\tif (this.chartPicker.value == 'rotation') {\n\t\t\t\tthis.dpsResourcesPlotElem.classList.add('hide');\n\t\t\t\tthis.rotationPlotElem.classList.remove('hide');\n\t\t\t} else {\n\t\t\t\tthis.dpsResourcesPlotElem.classList.remove('hide');\n\t\t\t\tthis.rotationPlotElem.classList.add('hide');\n\t\t\t}\n\t\t\tthis.updatePlot();\n\t\t});\n\n\t\tthis.dpsResourcesPlotElem = this.rootElem.getElementsByClassName('dps-resources-plot')[0] as HTMLElement;\n\t\tthis.dpsResourcesPlot = new ApexCharts(this.dpsResourcesPlotElem, {\n\t\t\tchart: {\n\t\t\t\ttype: 'line',\n\t\t\t\tforeColor: 'white',\n\t\t\t\tid: 'dpsResources',\n\t\t\t\tanimations: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\theight: '100%',\n\t\t\t},\n\t\t\tseries: [], // Set dynamically\n\t\t\txaxis: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Time (s)',\n\t\t\t\t},\n\t\t\t\ttype: 'datetime',\n\t\t\t},\n\t\t\tnoData: {\n\t\t\t\ttext: 'Waiting for data...',\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\twidth: 2,\n\t\t\t\tcurve: 'straight',\n\t\t\t},\n\t\t});\n\n\t\tthis.rotationPlotElem = this.rootElem.getElementsByClassName('rotation-plot')[0] as HTMLElement;\n\t\tthis.rotationLabels = this.rootElem.getElementsByClassName('rotation-labels')[0] as HTMLElement;\n\t\tthis.rotationTimeline = this.rootElem.getElementsByClassName('rotation-timeline')[0] as HTMLElement;\n\t\tthis.rotationHiddenIdsContainer = this.rootElem.getElementsByClassName('rotation-hidden-ids')[0] as HTMLElement;\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t\tthis.resultData = resultData;\n\n\t\tif (this.rendered) {\n\t\t\tthis.updatePlot();\n\t\t}\n\t}\n\n\tprivate updatePlot() {\n\t\tif (this.resultData == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst duration = this.resultData!.result.result.firstIterationDuration || 1;\n\t\tlet options: any = {\n\t\t\tseries: [],\n\t\t\tcolors: [],\n\t\t\txaxis: {\n\t\t\t\tmin: this.toDatetime(0).getTime(),\n\t\t\t\tmax: this.toDatetime(duration).getTime(),\n\t\t\t\ttype: 'datetime',\n\t\t\t\ttickAmount: 10,\n\t\t\t\tdecimalsInFloat: 1,\n\t\t\t\tlabels: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tformatter: (defaultValue: string, timestamp: number) => {\n\t\t\t\t\t\treturn (timestamp / 1000).toFixed(1);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Time (s)',\n\t\t\t\t},\n\t\t\t},\n\t\t\tyaxis: [],\n\t\t\tchart: {\n\t\t\t\tevents: {\n\t\t\t\t\tbeforeResetZoom: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\t\tmin: this.toDatetime(0),\n\t\t\t\t\t\t\t\tmax: this.toDatetime(duration),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tlet tooltipHandlers: Array<TooltipHandler | null> = [];\n\t\toptions.tooltip = {\n\t\t\tenabled: true,\n\t\t\tcustom: (data: { series: any, seriesIndex: number, dataPointIndex: number, w: any }) => {\n\t\t\t\tif (tooltipHandlers[data.seriesIndex]) {\n\t\t\t\t\treturn tooltipHandlers[data.seriesIndex]!(data.dataPointIndex);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('No tooltip handler for series ' + data.seriesIndex);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tconst players = this.resultData!.result.getPlayers(this.resultData!.filter);\n\t\tif (players.length == 1) {\n\t\t\tconst player = players[0];\n\n\t\t\tconst rotationOption = this.rootElem.getElementsByClassName('rotation-option')[0] as HTMLElement;\n\t\t\trotationOption.classList.remove('hide');\n\t\t\tconst threatOption = this.rootElem.getElementsByClassName('threat-option')[0] as HTMLElement;\n\t\t\tthreatOption.classList.add('hide');\n\n\t\t\ttry {\n\t\t\t\tthis.updateRotationChart(player, duration);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Failed to update rotation chart: \", e);\n\t\t\t}\n\t\t\t\n\n\t\t\tconst dpsData = this.addDpsSeries(player, options, '');\n\t\t\tthis.addDpsYAxis(dpsData.maxDps, options);\n\t\t\ttooltipHandlers.push(dpsData.tooltipHandler);\n\t\t\ttooltipHandlers.push(this.addManaSeries(player, options));\n\t\t\ttooltipHandlers.push(this.addThreatSeries(player, options, ''));\n\t\t\ttooltipHandlers = tooltipHandlers.filter(handler => handler != null);\n\n\t\t\tthis.addMajorCooldownAnnotations(player, options);\n\t\t} else {\n\t\t\tif (this.chartPicker.value == 'rotation') {\n\t\t\t\tthis.chartPicker.value = 'dps';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rotationOption = this.rootElem.getElementsByClassName('rotation-option')[0] as HTMLElement;\n\t\t\trotationOption.classList.add('hide');\n\t\t\tconst threatOption = this.rootElem.getElementsByClassName('threat-option')[0] as HTMLElement;\n\t\t\tthreatOption.classList.remove('hide');\n\n\t\t\tthis.clearRotationChart();\n\n\t\t\tif (this.chartPicker.value == 'dps') {\n\t\t\t\tlet maxDps = 0;\n\t\t\t\tplayers.forEach(player => {\n\t\t\t\t\tconst dpsData = this.addDpsSeries(player, options, player.classColor);\n\t\t\t\t\tmaxDps = Math.max(maxDps, dpsData.maxDps);\n\t\t\t\t\ttooltipHandlers.push(dpsData.tooltipHandler);\n\t\t\t\t});\n\t\t\t\tthis.addDpsYAxis(maxDps, options);\n\t\t\t} else { // threat\n\t\t\t\tlet maxThreat = 0;\n\t\t\t\tplayers.forEach(player => {\n\t\t\t\t\ttooltipHandlers.push(this.addThreatSeries(player, options, player.classColor));\n\t\t\t\t\tmaxThreat = Math.max(maxThreat, player.maxThreat);\n\t\t\t\t});\n\t\t\t\tthis.addThreatYAxis(maxThreat, options);\n\t\t\t}\n\t\t}\n\n\t\tthis.dpsResourcesPlot.updateOptions(options);\n\t}\n\n\tprivate addDpsYAxis(maxDps: number, options: any) {\n\t\tconst dpsAxisMax = Math.ceil(maxDps / 100) * 100;\n\t\toptions.yaxis.push({\n\t\t\tcolor: dpsColor,\n\t\t\tseriesName: 'DPS',\n\t\t\tmin: 0,\n\t\t\tmax: dpsAxisMax,\n\t\t\ttickAmount: 10,\n\t\t\tdecimalsInFloat: 0,\n\t\t\ttitle: {\n\t\t\t\ttext: 'DPS',\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: dpsColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\taxisBorder: {\n\t\t\t\tshow: true,\n\t\t\t\tcolor: dpsColor,\n\t\t\t},\n\t\t\taxisTicks: {\n\t\t\t\tcolor: dpsColor,\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tminWidth: 30,\n\t\t\t\tstyle: {\n\t\t\t\t\tcolors: [dpsColor],\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate addThreatYAxis(maxThreat: number, options: any) {\n\t\tconst axisMax = Math.ceil(maxThreat / 10000) * 10000;\n\t\toptions.yaxis.push({\n\t\t\tcolor: threatColor,\n\t\t\tseriesName: 'Threat',\n\t\t\tmin: 0,\n\t\t\tmax: axisMax,\n\t\t\ttickAmount: 10,\n\t\t\tdecimalsInFloat: 0,\n\t\t\ttitle: {\n\t\t\t\ttext: 'Threat',\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: threatColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\taxisBorder: {\n\t\t\t\tshow: true,\n\t\t\t\tcolor: threatColor,\n\t\t\t},\n\t\t\taxisTicks: {\n\t\t\t\tcolor: threatColor,\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tminWidth: 30,\n\t\t\t\tstyle: {\n\t\t\t\t\tcolors: [threatColor],\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t// Returns a function for drawing the tooltip, or null if no series was added.\n\tprivate addDpsSeries(unit: UnitMetrics, options: any, colorOverride: string): { maxDps: number, tooltipHandler: TooltipHandler } {\n\t\tconst dpsLogs = unit.dpsLogs;\n\n\t\toptions.colors.push(colorOverride || dpsColor);\n\t\toptions.series.push({\n\t\t\tname: 'DPS',\n\t\t\ttype: 'line',\n\t\t\tdata: dpsLogs.map(log => {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.toDatetime(log.timestamp),\n\t\t\t\t\ty: log.dps,\n\t\t\t\t};\n\t\t\t}),\n\t\t});\n\n\t\treturn {\n\t\t\tmaxDps: dpsLogs[maxIndex(dpsLogs.map(l => l.dps))!].dps,\n\t\t\ttooltipHandler: (dataPointIndex: number) => {\n\t\t\t\tconst log = dpsLogs[dataPointIndex];\n\t\t\t\treturn this.dpsTooltip(log, true, unit, colorOverride);\n\t\t\t},\n\t\t};\n\t}\n\n\t// Returns a function for drawing the tooltip, or null if no series was added.\n\tprivate addManaSeries(unit: UnitMetrics, options: any): TooltipHandler | null {\n\t\tconst manaLogs = unit.groupedResourceLogs[ResourceType.ResourceTypeMana];\n\t\tif (manaLogs.length == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst maxMana = manaLogs[0].valueBefore;\n\n\t\toptions.colors.push(manaColor);\n\t\toptions.series.push({\n\t\t\tname: 'Mana',\n\t\t\ttype: 'line',\n\t\t\tdata: manaLogs.map(log => {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.toDatetime(log.timestamp),\n\t\t\t\t\ty: log.valueAfter,\n\t\t\t\t};\n\t\t\t}),\n\t\t});\n\t\toptions.yaxis.push({\n\t\t\tseriesName: 'Mana',\n\t\t\topposite: true, // Appear on right side\n\t\t\tmin: 0,\n\t\t\tmax: maxMana,\n\t\t\ttickAmount: 10,\n\t\t\ttitle: {\n\t\t\t\ttext: 'Mana',\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: manaColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\taxisBorder: {\n\t\t\t\tshow: true,\n\t\t\t\tcolor: manaColor,\n\t\t\t},\n\t\t\taxisTicks: {\n\t\t\t\tcolor: manaColor,\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tminWidth: 30,\n\t\t\t\tstyle: {\n\t\t\t\t\tcolors: [manaColor],\n\t\t\t\t},\n\t\t\t\tformatter: (val: string) => {\n\t\t\t\t\tconst v = parseFloat(val);\n\t\t\t\t\treturn `${v.toFixed(0)} (${(v / maxMana * 100).toFixed(0)}%)`;\n\t\t\t\t},\n\t\t\t},\n\t\t} as any);\n\n\t\treturn (dataPointIndex: number) => {\n\t\t\tconst log = manaLogs[dataPointIndex];\n\t\t\treturn this.resourceTooltip(log, maxMana, true);\n\t\t};\n\t}\n\n\t// Returns a function for drawing the tooltip, or null if no series was added.\n\tprivate addThreatSeries(unit: UnitMetrics, options: any, colorOverride: string): TooltipHandler | null {\n\t\toptions.colors.push(colorOverride || threatColor);\n\t\toptions.series.push({\n\t\t\tname: 'Threat',\n\t\t\ttype: 'line',\n\t\t\tdata: unit.threatLogs.map(log => {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.toDatetime(log.timestamp),\n\t\t\t\t\ty: log.threatAfter,\n\t\t\t\t};\n\t\t\t}),\n\t\t});\n\n\t\treturn (dataPointIndex: number) => {\n\t\t\tconst log = unit.threatLogs[dataPointIndex];\n\t\t\treturn this.threatTooltip(log, true, unit, colorOverride);\n\t\t};\n\t}\n\n\tprivate addMajorCooldownAnnotations(unit: UnitMetrics, options: any) {\n\t\tconst mcdLogs = unit.majorCooldownLogs;\n\t\tconst mcdAuraLogs = unit.majorCooldownAuraUptimeLogs;\n\n\t\t// Figure out how much to vertically offset cooldown icons, for cooldowns\n\t\t// used very close to each other. This is so the icons don't overlap.\n\t\tconst MAX_ALLOWED_DIST = 10;\n\t\tconst cooldownIconOffsets = mcdLogs.map((mcdLog, mcdIdx) => mcdLogs.filter((cdLog, cdIdx) => (cdIdx < mcdIdx) && (cdLog.timestamp > mcdLog.timestamp - MAX_ALLOWED_DIST)).length);\n\n\t\tconst distinctMcdAuras = distinct(mcdAuraLogs, (a, b) => a.actionId!.equalsIgnoringTag(b.actionId!));\n\t\t// Sort by name so auras keep their same colors even if timings change.\n\t\tdistinctMcdAuras.sort((a, b) => stringComparator(a.actionId!.name, b.actionId!.name));\n\t\tconst mcdAuraColors = mcdAuraLogs.map(mcdAuraLog => actionColors[distinctMcdAuras.findIndex(dAura => dAura.actionId!.equalsIgnoringTag(mcdAuraLog.actionId!))]);\n\n\t\toptions.annotations = {\n\t\t\tposition: 'back',\n\t\t\txaxis: mcdAuraLogs.map((log, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.toDatetime(log.gainedAt).getTime(),\n\t\t\t\t\tx2: this.toDatetime(log.fadedAt).getTime(),\n\t\t\t\t\tfillColor: mcdAuraColors[i],\n\t\t\t\t};\n\t\t\t}),\n\t\t\tpoints: mcdLogs.map((log, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.toDatetime(log.timestamp).getTime(),\n\t\t\t\t\ty: 0,\n\t\t\t\t\timage: {\n\t\t\t\t\t\tpath: log.actionId!.iconUrl,\n\t\t\t\t\t\twidth: 20,\n\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\toffsetY: cooldownIconOffsets[i] * -25,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate clearRotationChart() {\n\t\tthis.rotationLabels.innerHTML = `\n\t\t\t<div class=\"rotation-label-header\"></div>\n\t\t`;\n\t\tthis.rotationTimeline.innerHTML = `\n\t\t\t<div class=\"rotation-timeline-header\">\n\t\t\t\t<canvas class=\"rotation-timeline-canvas\"></canvas>\n\t\t\t</div>\n\t\t`;\n\t\tthis.rotationHiddenIdsContainer.innerHTML = '';\n\t\tthis.hiddenIdsChangeEmitter = new TypedEvent<void>();\n\t}\n\n\tprivate updateRotationChart(player: UnitMetrics, duration: number) {\n\t\tconst targets = this.resultData!.result.getTargets(this.resultData!.filter);\n\t\tif (targets.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst target = targets[0];\n\n\t\tthis.clearRotationChart();\n\t\t\n\t\ttry {\n\t\t\tthis.drawRotationTimeRuler(this.rotationTimeline.getElementsByClassName('rotation-timeline-canvas')[0] as HTMLCanvasElement, duration);\n\t\t} catch (e){\n\t\t\tconsole.log(\"Failed to draw rotation: \", e);\n\t\t}\n\n\t\torderedResourceTypes.forEach(resourceType => this.addResourceRow(resourceType, player.groupedResourceLogs[resourceType], duration));\n\n\t\tconst buffsById = Object.values(bucket(player.auraUptimeLogs, log => log.actionId!.toString()));\n\t\tbuffsById.sort((a, b) => stringComparator(a[0].actionId!.name, b[0].actionId!.name));\n\t\tconst debuffsById = Object.values(bucket(target.auraUptimeLogs, log => log.actionId!.toString()));\n\t\tdebuffsById.sort((a, b) => stringComparator(a[0].actionId!.name, b[0].actionId!.name));\n\t\tconst buffsAndDebuffsById = buffsById.concat(debuffsById);\n\n\t\tconst playerCastsByAbility = this.getSortedCastsByAbility(player);\n\t\tplayerCastsByAbility.forEach(castLogs => this.addCastRow(castLogs, buffsAndDebuffsById, duration));\n\n\t\t// Don't add a row for buffs that were already visualized in a cast row.\n\t\tconst buffsToShow = buffsById.filter(auraUptimeLogs => playerCastsByAbility.findIndex(casts => casts[0].actionId!.equalsIgnoringTag(auraUptimeLogs[0].actionId!)));\n\t\tif (buffsToShow.length > 0) {\n\t\t\tthis.addSeparatorRow(duration);\n\t\t\tbuffsToShow.forEach(auraUptimeLogs => this.addAuraRow(auraUptimeLogs, duration));\n\t\t}\n\n\t\tconst targetCastsByAbility = this.getSortedCastsByAbility(target);\n\t\tif (targetCastsByAbility.length > 0) {\n\t\t\tthis.addSeparatorRow(duration);\n\t\t\ttargetCastsByAbility.forEach(castLogs => this.addCastRow(castLogs, buffsAndDebuffsById, duration));\n\t\t}\n\n\t\t// Add a row for all debuffs, even those which have already been visualized in a cast row.\n\t\tconst debuffsToShow = debuffsById;\n\t\tif (debuffsToShow.length > 0) {\n\t\t\tthis.addSeparatorRow(duration);\n\t\t\tdebuffsToShow.forEach(auraUptimeLogs => this.addAuraRow(auraUptimeLogs, duration));\n\t\t}\n\t}\n\n\tprivate getSortedCastsByAbility(player: UnitMetrics): Array<Array<CastLog>> {\n\t\tconst meleeActionIds = player.getMeleeActions().map(action => action.actionId);\n\t\tconst spellActionIds = player.getSpellActions().map(action => action.actionId);\n\t\tconst getActionCategory = (actionId: ActionId): number => {\n\t\t\tconst fixedCategory = idToCategoryMap[actionId.anyId()];\n\t\t\tif (fixedCategory != null) {\n\t\t\t\treturn fixedCategory;\n\t\t\t} else if (meleeActionIds.find(meleeActionId => meleeActionId.equals(actionId))) {\n\t\t\t\treturn MELEE_ACTION_CATEGORY;\n\t\t\t} else if (spellActionIds.find(spellActionId => spellActionId.equals(actionId))) {\n\t\t\t\treturn SPELL_ACTION_CATEGORY;\n\t\t\t} else {\n\t\t\t\treturn DEFAULT_ACTION_CATEGORY;\n\t\t\t}\n\t\t};\n\n\t\tconst castsByAbility = Object.values(bucket(player.castLogs, log => {\n\t\t\tif (idsToGroupForRotation.includes(log.actionId!.spellId)) {\n\t\t\t\treturn log.actionId!.toStringIgnoringTag();\n\t\t\t} else {\n\t\t\t\treturn log.actionId!.toString();\n\t\t\t}\n\t\t}));\n\n\t\tcastsByAbility.sort((a, b) => {\n\t\t\tconst categoryA = getActionCategory(a[0].actionId!);\n\t\t\tconst categoryB = getActionCategory(b[0].actionId!);\n\t\t\tif (categoryA != categoryB) {\n\t\t\t\treturn categoryA - categoryB;\n\t\t\t} else if (a[0].actionId!.anyId() == b[0].actionId!.anyId()) {\n\t\t\t\treturn a[0].actionId!.tag - b[0].actionId!.tag;\n\t\t\t} else {\n\t\t\t\treturn stringComparator(a[0].actionId!.name, b[0].actionId!.name);\n\t\t\t}\n\t\t});\n\n\t\treturn castsByAbility;\n\t}\n\n\tprivate makeLabelElem(actionId: ActionId, isHiddenLabel: boolean): HTMLElement {\n\t\tconst labelElem = document.createElement('div');\n\t\tlabelElem.classList.add('rotation-label', 'rotation-row');\n\t\tif (isHiddenLabel) {\n\t\t\tlabelElem.classList.add('rotation-label-hidden');\n\t\t}\n\t\tconst labelText = idsToGroupForRotation.includes(actionId.spellId) ? actionId.baseName : actionId.name;\n\t\tlabelElem.innerHTML = `\n\t\t\t<span class=\"fas fa-eye${isHiddenLabel ? '' : '-slash'}\"></span>\n\t\t\t<a class=\"rotation-label-icon\"></a>\n\t\t\t<span class=\"rotation-label-text\">${labelText}</span>\n\t\t`;\n\t\tconst hideElem = labelElem.getElementsByClassName('fas')[0] as HTMLElement;\n\t\thideElem.addEventListener('click', event => {\n\t\t\tif (isHiddenLabel) {\n\t\t\t\tconst index = this.hiddenIds.findIndex(hiddenId => hiddenId.equals(actionId));\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tthis.hiddenIds.splice(index, 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.hiddenIds.push(actionId);\n\t\t\t}\n\t\t\tthis.hiddenIdsChangeEmitter.emit(TypedEvent.nextEventID());\n\t\t});\n\t\ttippy(hideElem, {\n\t\t\tcontent: isHiddenLabel ? 'Show Row' : 'Hide Row',\n\t\t\tallowHTML: true,\n\t\t});\n\t\tconst updateHidden = () => {\n\t\t\tif (isHiddenLabel == Boolean(this.hiddenIds.find(hiddenId => hiddenId.equals(actionId)))) {\n\t\t\t\tlabelElem.classList.remove('hide');\n\t\t\t} else {\n\t\t\t\tlabelElem.classList.add('hide');\n\t\t\t}\n\t\t};\n\t\tthis.hiddenIdsChangeEmitter.on(updateHidden);\n\t\tupdateHidden();\n\t\tconst labelIcon = labelElem.getElementsByClassName('rotation-label-icon')[0] as HTMLAnchorElement;\n\t\tactionId.setBackgroundAndHref(labelIcon);\n\t\treturn labelElem;\n\t}\n\n\tprivate makeRowElem(actionId: ActionId, duration: number): HTMLElement {\n\t\tconst rowElem = document.createElement('div');\n\t\trowElem.classList.add('rotation-timeline-row', 'rotation-row');\n\t\trowElem.style.width = this.timeToPx(duration);\n\n\t\tconst updateHidden = () => {\n\t\t\tif (this.hiddenIds.find(hiddenId => hiddenId.equals(actionId))) {\n\t\t\t\trowElem.classList.add('hide');\n\t\t\t} else {\n\t\t\t\trowElem.classList.remove('hide');\n\t\t\t}\n\t\t};\n\t\tthis.hiddenIdsChangeEmitter.on(updateHidden);\n\t\tupdateHidden();\n\t\treturn rowElem;\n\t}\n\n\tprivate addSeparatorRow(duration: number) {\n\t\tlet separatorElem = document.createElement('div');\n\t\tseparatorElem.classList.add('rotation-timeline-separator');\n\t\tthis.rotationLabels.appendChild(separatorElem);\n\t\tseparatorElem = document.createElement('div');\n\t\tseparatorElem.classList.add('rotation-timeline-separator');\n\t\tseparatorElem.style.width = this.timeToPx(duration);\n\t\tthis.rotationTimeline.appendChild(separatorElem);\n\t}\n\n\tprivate addResourceRow(resourceType: ResourceType, resourceLogs: Array<ResourceChangedLogGroup>, duration: number) {\n\t\tif (resourceLogs.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst startValue = resourceLogs[0].valueBefore;\n\n\t\tconst labelElem = document.createElement('div');\n\t\tlabelElem.classList.add('rotation-label', 'rotation-row');\n\t\tlabelElem.innerHTML = `\n\t\t\t<a class=\"rotation-label-icon\" style=\"background-image:url('${resourceTypeToIcon[resourceType]}')\"></a>\n\t\t\t<span class=\"rotation-label-text\">${resourceNames[resourceType]}</span>\n\t\t`;\n\t\tthis.rotationLabels.appendChild(labelElem);\n\n\t\tconst rowElem = document.createElement('div');\n\t\trowElem.classList.add('rotation-timeline-row', 'rotation-row');\n\t\trowElem.style.width = this.timeToPx(duration);\n\n\t\tresourceLogs.forEach((resourceLogGroup, i) => {\n\t\t\tconst resourceElem = document.createElement('div');\n\t\t\tresourceElem.classList.add('rotation-timeline-resource', 'series-color', resourceNames[resourceType].toLowerCase().replaceAll(' ', '-'));\n\t\t\tresourceElem.style.left = this.timeToPx(resourceLogGroup.timestamp);\n\t\t\tresourceElem.style.width = this.timeToPx((resourceLogs[i + 1]?.timestamp || duration) - resourceLogGroup.timestamp);\n\t\t\tif (percentageResources.includes(resourceType)) {\n\t\t\t\tresourceElem.textContent = (resourceLogGroup.valueAfter / startValue * 100).toFixed(0) + '%';\n\t\t\t} else {\n\t\t\t\tresourceElem.textContent = Math.floor(resourceLogGroup.valueAfter).toFixed(0);\n\t\t\t}\n\t\t\trowElem.appendChild(resourceElem);\n\n\t\t\ttippy(resourceElem, {\n\t\t\t\tcontent: this.resourceTooltip(resourceLogGroup, startValue, false),\n\t\t\t\tallowHTML: true,\n\t\t\t\tplacement: 'bottom',\n\t\t\t});\n\t\t});\n\t\tthis.rotationTimeline.appendChild(rowElem);\n\t}\n\n\tprivate addCastRow(castLogs: Array<CastLog>, aurasById: Array<Array<AuraUptimeLog>>, duration: number) {\n\t\tconst actionId = castLogs[0].actionId!;\n\n\t\tthis.rotationLabels.appendChild(this.makeLabelElem(actionId, false));\n\t\tthis.rotationHiddenIdsContainer.appendChild(this.makeLabelElem(actionId, true));\n\n\t\tconst rowElem = this.makeRowElem(actionId, duration);\n\t\tcastLogs.forEach(castLog => {\n\t\t\tconst castElem = document.createElement('div');\n\t\t\tcastElem.classList.add('rotation-timeline-cast');\n\t\t\tcastElem.style.left = this.timeToPx(castLog.timestamp);\n\t\t\tcastElem.style.minWidth = this.timeToPx(castLog.castTime + castLog.travelTime);\n\t\t\trowElem.appendChild(castElem);\n\n\t\t\tif (castLog.travelTime != 0) {\n\t\t\t\tconst travelTimeElem = document.createElement('div');\n\t\t\t\ttravelTimeElem.classList.add('rotation-timeline-travel-time');\n\t\t\t\ttravelTimeElem.style.left = this.timeToPx(castLog.castTime);\n\t\t\t\ttravelTimeElem.style.minWidth = this.timeToPx(castLog.travelTime);\n\t\t\t\tcastElem.appendChild(travelTimeElem);\n\t\t\t}\n\n\t\t\tif (castLog.damageDealtLogs.length > 0) {\n\t\t\t\tconst ddl = castLog.damageDealtLogs[0];\n\t\t\t\tif (ddl.miss || ddl.dodge || ddl.parry) {\n\t\t\t\t\tcastElem.classList.add('outcome-miss');\n\t\t\t\t} else if (ddl.glance || ddl.block || ddl.partialResist1_4 || ddl.partialResist2_4 || ddl.partialResist3_4) {\n\t\t\t\t\tcastElem.classList.add('outcome-partial');\n\t\t\t\t} else if (ddl.crit) {\n\t\t\t\t\tcastElem.classList.add('outcome-crit');\n\t\t\t\t} else {\n\t\t\t\t\tcastElem.classList.add('outcome-hit');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst iconElem = document.createElement('a');\n\t\t\ticonElem.classList.add('rotation-timeline-cast-icon');\n\t\t\tactionId.setBackground(iconElem);\n\t\t\tcastElem.appendChild(iconElem);\n\t\t\tconst travelTimeStr = castLog.travelTime == 0 ? '' : ` + ${castLog.travelTime.toFixed(2)}s travel time`;\n\t\t\ttippy(castElem, {\n\t\t\t\tcontent: `\n\t\t\t\t\t<span>${castLog.actionId!.name} from ${castLog.timestamp.toFixed(2)}s to ${(castLog.timestamp + castLog.castTime).toFixed(2)}s (${castLog.castTime.toFixed(2)}s)${travelTimeStr}</span>\n\t\t\t\t\t<ul class=\"rotation-timeline-cast-damage-list\">\n\t\t\t\t\t\t${castLog.damageDealtLogs.map(ddl => `\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<span>${ddl.timestamp.toFixed(2)}s - ${ddl.resultString()}</span>\n\t\t\t\t\t\t\t\t\t${ddl.source?.isTarget ? '' : `<span class=\"threat-metrics\"> (${ddl.threat.toFixed(1)} Threat)</span>`}\n\t\t\t\t\t\t\t\t</li>`)\n\t\t\t\t\t\t.join('')}\n\t\t\t\t\t</ul>\n\t\t\t\t`,\n\t\t\t\tallowHTML: true,\n\t\t\t\tplacement: 'bottom',\n\t\t\t});\n\n\t\t\tcastLog.damageDealtLogs.filter(ddl => ddl.tick).forEach(ddl => {\n\t\t\t\tconst tickElem = document.createElement('div');\n\t\t\t\ttickElem.classList.add('rotation-timeline-tick');\n\t\t\t\ttickElem.style.left = this.timeToPx(ddl.timestamp);\n\t\t\t\trowElem.appendChild(tickElem);\n\n\t\t\t\ttippy(tickElem, {\n\t\t\t\t\tcontent: `\n\t\t\t\t\t\t<span>${ddl.timestamp.toFixed(2)}s - ${ddl.actionId!.name} ${ddl.resultString()}</span>\n\t\t\t\t\t\t${ddl.source?.isTarget ? '' : `<span class=\"threat-metrics\"> (${ddl.threat.toFixed(1)} Threat)</span>`}\n\t\t\t\t\t`,\n\t\t\t\t\tallowHTML: true,\n\t\t\t\t\tplacement: 'bottom',\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// If there are any auras that correspond to this cast, visualize them in the same row.\n\t\taurasById\n\t\t\t.filter(auraUptimeLogs => auraUptimeLogs[0].actionId!.equalsIgnoringTag(actionId))\n\t\t\t.forEach(auraUptimeLogs => this.applyAuraUptimeLogsToRow(auraUptimeLogs, rowElem, duration));\n\n\t\tthis.rotationTimeline.appendChild(rowElem);\n\t}\n\n\tprivate addAuraRow(auraUptimeLogs: Array<AuraUptimeLog>, duration: number) {\n\t\tconst actionId = auraUptimeLogs[0].actionId!;\n\n\t\tlet rowElem = this.makeRowElem(actionId, duration);\n\t\tthis.rotationLabels.appendChild(this.makeLabelElem(actionId, false));\n\t\tthis.rotationHiddenIdsContainer.appendChild(this.makeLabelElem(actionId, true));\n\t\tthis.rotationTimeline.appendChild(rowElem);\n\n\t\tthis.applyAuraUptimeLogsToRow(auraUptimeLogs, rowElem, duration);\n\t}\n\n\tprivate applyAuraUptimeLogsToRow(auraUptimeLogs: Array<AuraUptimeLog>, rowElem: HTMLElement, duration: number) {\n\t\tauraUptimeLogs.forEach(aul => {\n\t\t\tconst auraElem = document.createElement('div');\n\t\t\tauraElem.classList.add('rotation-timeline-aura');\n\t\t\tauraElem.style.left = this.timeToPx(aul.gainedAt);\n\t\t\tauraElem.style.minWidth = this.timeToPx((aul.fadedAt || duration) - aul.gainedAt);\n\t\t\trowElem.appendChild(auraElem);\n\n\t\t\ttippy(auraElem, {\n\t\t\t\tcontent: `\n\t\t\t\t\t<span>${aul.actionId!.name}: ${aul.gainedAt.toFixed(2)}s - ${(aul.fadedAt || duration).toFixed(2)}s</span>\n\t\t\t\t`,\n\t\t\t\tallowHTML: true,\n\t\t\t});\n\n\t\t\taul.stacksChange.forEach((scl, i) => {\n\t\t\t\tif (scl.timestamp == aul.fadedAt) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst stacksChangeElem = document.createElement('div');\n\t\t\t\tstacksChangeElem.classList.add('rotation-timeline-stacks-change');\n\t\t\t\tstacksChangeElem.style.left = this.timeToPx(scl.timestamp - aul.timestamp);\n\t\t\t\tstacksChangeElem.style.width = this.timeToPx(aul.stacksChange[i+1] ? aul.stacksChange[i+1].timestamp-scl.timestamp : aul.fadedAt - scl.timestamp);\n\t\t\t\tstacksChangeElem.textContent = String(scl.newStacks);\n\t\t\t\tauraElem.appendChild(stacksChangeElem);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate timeToPxValue(time: number): number {\n\t\treturn time * 100;\n\t}\n\tprivate timeToPx(time: number): string {\n\t\treturn this.timeToPxValue(time) + 'px';\n\t}\n\n\tprivate drawRotationTimeRuler(canvas: HTMLCanvasElement, duration: number) {\n\t\tconst height = 30;\n\t\tcanvas.width = this.timeToPxValue(duration);\n\t\tcanvas.height = height;\n\n\t\tconst ctx = canvas.getContext('2d')!;\n\t\tctx.strokeStyle = 'white'\n\n\t\tctx.font = 'bold 14px SimDefaultFont';\n\t\tctx.fillStyle = 'white';\n\t\tctx.lineWidth = 2;\n\t\tctx.beginPath();\n\n\t\t// Bottom border line\n\t\tctx.moveTo(0, height);\n\t\tctx.lineTo(canvas.width, height);\n\n\t\t// Tick lines\n\t\tconst numTicks = 1 + Math.floor(duration * 10);\n\t\tfor (let i = 0; i <= numTicks; i++) {\n\t\t\tconst time = i * 0.1;\n\t\t\tlet x = this.timeToPxValue(time);\n\t\t\tif (i == 0) {\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tx++;\n\t\t\t} else if (i % 10 == 0 && time + 1 > duration) {\n\t\t\t\tctx.textAlign = 'right';\n\t\t\t\tx--;\n\t\t\t} else {\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t}\n\n\t\t\tlet lineHeight = 0;\n\t\t\tif (i % 10 == 0) {\n\t\t\t\tlineHeight = height * 0.5;\n\t\t\t\tctx.fillText(time + 's', x, height - height * 0.6);\n\t\t\t} else if (i % 5 == 0) {\n\t\t\t\tlineHeight = height * 0.25;\n\t\t\t} else {\n\t\t\t\tlineHeight = height * 0.125;\n\t\t\t}\n\t\t\tctx.moveTo(x, height);\n\t\t\tctx.lineTo(x, height - lineHeight);\n\t\t}\n\t\tctx.stroke();\n\t}\n\n\tprivate dpsTooltip(log: DpsLog, includeAuras: boolean, player: UnitMetrics, colorOverride: string): string {\n\t\tconst showPlayerLabel = colorOverride != '';\n\t\treturn `<div class=\"timeline-tooltip dps\">\n\t\t\t<div class=\"timeline-tooltip-header\">\n\t\t\t\t${showPlayerLabel ? `\n\t\t\t\t<img class=\"timeline-tooltip-icon\" src=\"${player.iconUrl}\">\n\t\t\t\t<span class=\"\" style=\"color: ${colorOverride}\">${player.label}</span><span> - </span>\n\t\t\t\t` : ''}\n\t\t\t\t<span class=\"bold\">${log.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class=\"timeline-tooltip-body\">\n\t\t\t\t<ul class=\"timeline-dps-events\">\n\t\t\t\t\t${log.damageLogs.map(damageLog => this.tooltipLogItem(damageLog, damageLog.resultString())).join('')}\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t\t<span class=\"series-color\">DPS: ${log.dps.toFixed(2)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${this.tooltipAurasSection(log)}\n\t\t</div>`;\n\t}\n\n\tprivate threatTooltip(log: ThreatLogGroup, includeAuras: boolean, player: UnitMetrics, colorOverride: string): string {\n\t\tconst showPlayerLabel = colorOverride != '';\n\t\treturn `<div class=\"timeline-tooltip threat\">\n\t\t\t<div class=\"timeline-tooltip-header\">\n\t\t\t\t${showPlayerLabel ? `\n\t\t\t\t<img class=\"timeline-tooltip-icon\" src=\"${player.iconUrl}\">\n\t\t\t\t<span class=\"\" style=\"color: ${colorOverride}\">${player.label}</span></span> - </span>\n\t\t\t\t` : ''}\n\t\t\t\t<span class=\"bold\">${log.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class=\"timeline-tooltip-body\">\n\t\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t\t<span class=\"series-color\">Before: ${log.threatBefore.toFixed(1)}</span>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"timeline-threat-events\">\n\t\t\t\t\t${log.logs.map(log => this.tooltipLogItem(log, `${log.threat.toFixed(1)} Threat`)).join('')}\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t\t<span class=\"series-color\">After: ${log.threatAfter.toFixed(1)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${includeAuras ? this.tooltipAurasSection(log) : ''}\n\t\t</div>`;\n\t}\n\n\tprivate resourceTooltip(log: ResourceChangedLogGroup, maxValue: number, includeAuras: boolean): string {\n\t\tconst valToDisplayString = percentageResources.includes(log.resourceType)\n\t\t\t? (val: number) => `${val.toFixed(1)} (${(val / maxValue * 100).toFixed(0)}%)`\n\t\t\t: (val: number) => `${val.toFixed(1)}`;\n\n\t\treturn `<div class=\"timeline-tooltip ${resourceNames[log.resourceType].toLowerCase().replaceAll(' ', '-')}\">\n\t\t\t<div class=\"timeline-tooltip-header\">\n\t\t\t\t<span class=\"bold\">${log.timestamp.toFixed(2)}s</span>\n\t\t\t</div>\n\t\t\t<div class=\"timeline-tooltip-body\">\n\t\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t\t<span class=\"series-color\">Before: ${valToDisplayString(log.valueBefore)}</span>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"timeline-mana-events\">\n\t\t\t\t\t${log.logs.map(manaChangedLog => this.tooltipLogItem(manaChangedLog, manaChangedLog.resultString())).join('')}\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t\t<span class=\"series-color\">After: ${valToDisplayString(log.valueAfter)}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${includeAuras ? this.tooltipAurasSection(log) : ''}\n\t\t</div>`;\n\t}\n\n\tprivate tooltipLogItem(log: SimLog, value: string): string {\n\t\tconst valueElem = `<span class=\"series-color\">${value}</span>`;\n\t\tlet actionElem = '';\n\t\tif (log.actionId) {\n\t\t\tlet iconElem = '';\n\t\t\tif (log.actionId.iconUrl) {\n\t\t\t\ticonElem = `<img class=\"timeline-tooltip-icon\" src=\"${log.actionId.iconUrl}\">`;\n\t\t\t}\n\t\t\tactionElem = `\n\t\t\t${iconElem}\n\t\t\t<span>${log.actionId.name}:</span>\n\t\t\t`;\n\t\t}\n\t\treturn `\n\t\t<li>\n\t\t\t${actionElem}\n\t\t\t${valueElem}\n\t\t</li>`;\n\t}\n\n\tprivate tooltipAurasSection(log: SimLog): string {\n\t\tif (log.activeAuras.length == 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `\n\t\t<div class=\"timeline-tooltip-auras\">\n\t\t\t<div class=\"timeline-tooltip-body-row\">\n\t\t\t\t<span class=\"bold\">Active Auras</span>\n\t\t\t</div>\n\t\t\t<ul class=\"timeline-active-auras\">\n\t\t\t\t${log.activeAuras.map(auraLog => {\n\t\t\tlet iconElem = '';\n\t\t\tif (auraLog.actionId!.iconUrl) {\n\t\t\t\ticonElem = `<img class=\"timeline-tooltip-icon\" src=\"${auraLog.actionId!.iconUrl}\">`;\n\t\t\t}\n\t\t\treturn `\n\t\t\t\t\t<li>\n\t\t\t\t\t\t${iconElem}\n\t\t\t\t\t\t<span>${auraLog.actionId!.name}</span>\n\t\t\t\t\t</li>`;\n\t\t}).join('')}\n\t\t\t</ul>\n\t\t</div>\n\t\t`;\n\t}\n\n\trender() {\n\t\tsetTimeout(() => {\n\t\t\tthis.dpsResourcesPlot.render();\n\t\t\tthis.rendered = true;\n\t\t\tthis.updatePlot();\n\t\t}, 300);\n\t}\n\n\tprivate toDatetime(timestamp: number): Date {\n\t\treturn new Date(timestamp * 1000);\n\t}\n}\n\nconst MELEE_ACTION_CATEGORY = 1;\nconst SPELL_ACTION_CATEGORY = 2;\nconst DEFAULT_ACTION_CATEGORY = 3;\n\n// Hard-coded spell categories for controlling rotation ordering.\nconst idToCategoryMap: Record<number, number> = {\n\t[OtherAction.OtherActionAttack]: 0,\n\t[OtherAction.OtherActionShoot]: 0.5,\n\n\t// Druid\n\t[26996]: 0.1, // Maul\n\t[33987]: MELEE_ACTION_CATEGORY + 0.1, // Mangle (Bear)\n\t[33745]: MELEE_ACTION_CATEGORY + 0.2, // Lacerate\n\t[26997]: MELEE_ACTION_CATEGORY + 0.3, // Swipe\n\n\t[33983]: MELEE_ACTION_CATEGORY + 0.1, // Mangle (Cat)\n\t[27002]: MELEE_ACTION_CATEGORY + 0.2, // Shred\n\t[27008]: MELEE_ACTION_CATEGORY + 0.3, // Rip\n\t[24248]: MELEE_ACTION_CATEGORY + 0.4, // Ferocious Bite\n\n\t// Hunter\n\t[48996]: 0.1, // Raptor Strike\n\t[53217]: 0.6, // Wild Quiver\n\t[53209]: MELEE_ACTION_CATEGORY + 0.10, // Chimera Shot\n\t[53353]: MELEE_ACTION_CATEGORY + 0.11, // Chimera Shot Serpent\n\t[60053]: MELEE_ACTION_CATEGORY + 0.10, // Explosive Shot\n\t[49050]: MELEE_ACTION_CATEGORY + 0.20, // Aimed Shot\n\t[49048]: MELEE_ACTION_CATEGORY + 0.21, // Multi Shot\n\t[49045]: MELEE_ACTION_CATEGORY + 0.22, // Arcane Shot\n\t[49052]: MELEE_ACTION_CATEGORY + 0.27, // Steady Shot\n\t[61006]: MELEE_ACTION_CATEGORY + 0.28, // Kill Shot\n\t[34490]: MELEE_ACTION_CATEGORY + 0.29, // Silencing Shot\n\t[49001]: MELEE_ACTION_CATEGORY + 0.30, // Serpent Sting\n\t[3043]:  MELEE_ACTION_CATEGORY + 0.30, // Scorpid Sting\n\t[53238]: MELEE_ACTION_CATEGORY + 0.31, // Piercing Shots\n\t[63672]: MELEE_ACTION_CATEGORY + 0.32, // Black Arrow\n\t[49067]: MELEE_ACTION_CATEGORY + 0.33, // Explosive Trap\n\t[58434]: MELEE_ACTION_CATEGORY + 0.34, // Volley\n\n\t// Paladin\n\t[27156]: 0.1, // Seal of Righteousness Proc\n\t[20182]: 0.2, // Reckoning\n\t[27179]: SPELL_ACTION_CATEGORY + 0.1, // Holy Shield\n\t\n\t[35395]: MELEE_ACTION_CATEGORY + 0.10, // Crusader Strike\n\t[53385]: MELEE_ACTION_CATEGORY + 0.20, // Divine Storm\n\t[53408]: SPELL_ACTION_CATEGORY + 0.10, // Judgement of Wisdom\n\t[20271]: SPELL_ACTION_CATEGORY + 0.10, // Judgement of Light\n\t[31804]: SPELL_ACTION_CATEGORY + 0.20, // Judgement of Vengeance\n\t[20467]: SPELL_ACTION_CATEGORY + 0.20, // Judgement of Command\n\t[20187]: SPELL_ACTION_CATEGORY + 0.20, // Judgement of Righteousness\n\t[48801]: SPELL_ACTION_CATEGORY + 0.30, // Exorcism\n\t[48819]: SPELL_ACTION_CATEGORY + 0.40, // Consecration\n\t[48817]: SPELL_ACTION_CATEGORY + 0.50, // Holy Wrath\n\t[48806]: SPELL_ACTION_CATEGORY + 0.60, // Hammer of Wrath\n\t[54428]: SPELL_ACTION_CATEGORY + 0.70, // Divine Plea\n\n\t// Rogue\n\t[6774]: MELEE_ACTION_CATEGORY + 0.1, // Slice and Dice\n\t[26866]: MELEE_ACTION_CATEGORY + 0.2, // Expose Armor\n\t[48672]: MELEE_ACTION_CATEGORY + 0.3, // Rupture\n\t[57993]: MELEE_ACTION_CATEGORY + 0.3, // Envenom\n\t[48668]: MELEE_ACTION_CATEGORY + 0.4, // Eviscerate\n\t[48666]: MELEE_ACTION_CATEGORY + 0.5, // Mutilate\n\t[48665]: MELEE_ACTION_CATEGORY + 0.6, // Mutilate (MH)\n\t[48664]: MELEE_ACTION_CATEGORY + 0.7, // Mutilate (OH)\n\t[48638]: MELEE_ACTION_CATEGORY + 0.5, // Sinister Strike\n\t[51723]: MELEE_ACTION_CATEGORY + 0.8, // Fan of Knives\n\t[57973]: SPELL_ACTION_CATEGORY + 0.1, // Deadly Poison\n\t[57968]: SPELL_ACTION_CATEGORY + 0.2, // Instant Poison\n\n\t// Shaman\n\t[17364]: MELEE_ACTION_CATEGORY + 0.1, // Stormstrike\n\t[25454]: MELEE_ACTION_CATEGORY + 0.2, // Earth Shock\n\t[25457]: MELEE_ACTION_CATEGORY + 0.2, // Flame Shock\n\t[25464]: MELEE_ACTION_CATEGORY + 0.2, // Frost Shock\n\t[25533]: SPELL_ACTION_CATEGORY + 0.2, // Searing Totem\n\t[25552]: SPELL_ACTION_CATEGORY + 0.2, // Magma Totem\n\t[25537]: SPELL_ACTION_CATEGORY + 0.2, // Fire Nova Totem\n\t[25359]: SPELL_ACTION_CATEGORY + 0.3, // Grace of Air Totem\n\t[8512]: SPELL_ACTION_CATEGORY + 0.3, // Windfury Totem r1\n\t[10613]: SPELL_ACTION_CATEGORY + 0.3, // Windfury Totem r2\n\t[10614]: SPELL_ACTION_CATEGORY + 0.3, // Windfury Totem r3\n\t[25585]: SPELL_ACTION_CATEGORY + 0.3, // Windfury Totem r4\n\t[25587]: SPELL_ACTION_CATEGORY + 0.3, // Windfury Totem r5\n\t[2825]: DEFAULT_ACTION_CATEGORY + 0.1, // Bloodlust\n\n\t// Warlock\n\t[47867]: SPELL_ACTION_CATEGORY + 0.01, // Curse of Doom\n\t[47864]: SPELL_ACTION_CATEGORY + 0.02, // Curse of Agony\n\t[47813]: SPELL_ACTION_CATEGORY + 0.1, // Corruption\n\t[59164]: SPELL_ACTION_CATEGORY + 0.2, // Haunt\n\t[47843]: SPELL_ACTION_CATEGORY + 0.3, // Unstable Affliction\n\t[47811]: SPELL_ACTION_CATEGORY + 0.31, // Immolate\n\t[17962]: SPELL_ACTION_CATEGORY + 0.32, // Conflagrate\n\t[59172]: SPELL_ACTION_CATEGORY + 0.49, // Chaos Bolt\n\t[47809]: SPELL_ACTION_CATEGORY + 0.5, // Shadow Bolt\n\t[47838]: SPELL_ACTION_CATEGORY + 0.51, // Incinerate\n\t[47825]: SPELL_ACTION_CATEGORY + 0.52, // Soul Fire\n\t[47855]: SPELL_ACTION_CATEGORY + 0.6, // Drain Soul\n\t[57946]: SPELL_ACTION_CATEGORY + 0.7, // Life Tap\n\t[47241]: SPELL_ACTION_CATEGORY + 0.8, // Metamorphosis\n\t[50589]: SPELL_ACTION_CATEGORY + 0.81, // Immolation Aura\n\t[47193]: SPELL_ACTION_CATEGORY + 0.82, // Demonic Empowerment\n\n\t// Mage\n\t[42842]: SPELL_ACTION_CATEGORY + 0.01, // Frostbolt\n\t[47610]: SPELL_ACTION_CATEGORY + 0.02, // Frostfire Bolt\n\t[42897]: SPELL_ACTION_CATEGORY + 0.02, // Arcane Blast\n\t[42833]: SPELL_ACTION_CATEGORY + 0.02, // Fireball\n\t[42891]: SPELL_ACTION_CATEGORY + 0.1, // Pyroblast\n\t[42846]: SPELL_ACTION_CATEGORY + 0.1, // Arcane Missiles\n\t[55360]: SPELL_ACTION_CATEGORY + 0.2, //Living Bomb\n\t[12848]: SPELL_ACTION_CATEGORY + 0.3, // Ignite\n\t[12472]: SPELL_ACTION_CATEGORY + 0.4, // Icy Veins\n\t[11129]: SPELL_ACTION_CATEGORY + 0.4, // Combustion\n\t[12042]: SPELL_ACTION_CATEGORY + 0.4, // Arcane Power\n\t[12043]: SPELL_ACTION_CATEGORY + 0.41, // Presence of Mind\n\t[31687]: SPELL_ACTION_CATEGORY + 0.41, // Water Elemental\n\t[55342]: SPELL_ACTION_CATEGORY + 0.5, // Mirror Image\n\t[33312]: SPELL_ACTION_CATEGORY + 0.51, // Mana Gems\n\t[12051]: SPELL_ACTION_CATEGORY + 0.52, // Evocate\n\t[44401]: SPELL_ACTION_CATEGORY + 0.6, // Missile Barrage\n\t[44448]: SPELL_ACTION_CATEGORY + 0.6, // Hot Streak\n\t[12536]: SPELL_ACTION_CATEGORY + 0.61, // Clearcasting\n\t// [55360]: SPELL_ACTION_CATEGORY + 0.6, // Fingers of Frost\n\t// [55360]: SPELL_ACTION_CATEGORY + 0.61, // Brain Freeze\n\n\n\t// Warrior\n\t[25231]: 0.1, // Cleave\n\t[29707]: 0.1, // Heroic Strike\n\t[25242]: MELEE_ACTION_CATEGORY + 0.05, // Slam\n\t[30335]: MELEE_ACTION_CATEGORY + 0.1, // Bloodthirst\n\t[30330]: MELEE_ACTION_CATEGORY + 0.1, // Mortal Strike\n\t[30356]: MELEE_ACTION_CATEGORY + 0.1, // Shield Slam\n\t[1680]: MELEE_ACTION_CATEGORY + 0.2, // Whirlwind\n\t[11585]: MELEE_ACTION_CATEGORY + 0.3, // Overpower\n\t[25212]: MELEE_ACTION_CATEGORY + 0.4, // Hamstring\n\t[25236]: MELEE_ACTION_CATEGORY + 0.5, // Execute\n\t[71]: DEFAULT_ACTION_CATEGORY + 0.1, // Defensive Stance\n\t[2457]: DEFAULT_ACTION_CATEGORY + 0.1, // Battle Stance\n\t[2458]: DEFAULT_ACTION_CATEGORY + 0.1, // Berserker Stance\n\t\n\t// Deathknight\n\t[51425]: MELEE_ACTION_CATEGORY + 0.05, // Obliterate\n\t[55268]: MELEE_ACTION_CATEGORY + 0.1, // Frost strike\n\t[49930]: MELEE_ACTION_CATEGORY + 0.15, // Blood strike\n\t[50842]: MELEE_ACTION_CATEGORY + 0.2, // Pestilence\n\t[51411]: MELEE_ACTION_CATEGORY + 0.25, // Howling Blast\n\t[49895]: MELEE_ACTION_CATEGORY + 0.25, // Death Coil\n\t[49938]: MELEE_ACTION_CATEGORY + 0.25, // Death and Decay\n\t[63560]: MELEE_ACTION_CATEGORY + 0.25, // Ghoul Frenzy\n\t[50536]: MELEE_ACTION_CATEGORY + 0.25, // Unholy Blight\n\t[57623]: MELEE_ACTION_CATEGORY + 0.25, // HoW\n\t[59131]: MELEE_ACTION_CATEGORY + 0.3, // Icy touch\n\t[49921]: MELEE_ACTION_CATEGORY + 0.3, // Plague strike\n\t[51271]: MELEE_ACTION_CATEGORY + 0.35, // UA\n\t[45529]: MELEE_ACTION_CATEGORY + 0.35, // BT\n\t[47568]: MELEE_ACTION_CATEGORY + 0.35, // ERW\n\t[49206]: MELEE_ACTION_CATEGORY + 0.35, // Summon Gargoyle\n\t[46584]: MELEE_ACTION_CATEGORY + 0.35, // Raise Dead\n\t[55095]: MELEE_ACTION_CATEGORY + 0.4, // Frost Fever\n\t[55078]: MELEE_ACTION_CATEGORY + 0.4, // Blood Plague\n\t[49655]: MELEE_ACTION_CATEGORY + 0.4, // Wandering Plague\n\t[50401]: MELEE_ACTION_CATEGORY + 0.5, // Razor Frost\n\t[51460]: MELEE_ACTION_CATEGORY + 0.5, // Necrosis\n\t[50463]: MELEE_ACTION_CATEGORY + 0.5, // BCB\n\t[50689]: DEFAULT_ACTION_CATEGORY + 0.1, // Blood Presence\n\t[48263]: DEFAULT_ACTION_CATEGORY + 0.1, // Frost Presence\n\t[48265]: DEFAULT_ACTION_CATEGORY + 0.1, // Unholy Presence\n\n\t// Generic\n\t[26992]: SPELL_ACTION_CATEGORY + 0.91, // Thorns\n\t[27150]: SPELL_ACTION_CATEGORY + 0.92, // Retribution Aura\n\t[27169]: SPELL_ACTION_CATEGORY + 0.93, // Blessing of Sanctuary\n\t// [54758]: DEFAULT_ACTION_CATEGORY + 0.000001, // Hyperspeed Acceleration\n};\n\nconst idsToGroupForRotation: Array<number> = [\n\t6774,  // Slice and Dice\n\t26866, // Expose Armor\n\t26865, // Eviscerate\n\t26867, // Rupture\n];\n\nconst percentageResources: Array<ResourceType> = [\n\tResourceType.ResourceTypeHealth,\n\tResourceType.ResourceTypeMana,\n];\n","import { Spec } from '../core/proto/common.js';\nimport { SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\n\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\nimport { RaidSimResultsManager } from '../core/components/raid_sim_action.js';\n\nexport class ToplineResults extends ResultComponent {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'topline-results-root';\n\t\tsuper(config);\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t\tlet content = RaidSimResultsManager.makeToplineResultsContent(resultData.result, resultData.filter);\n\n\t\tconst noManaSpecs = [\n\t\t\tSpec.SpecFeralTankDruid,\n\t\t\tSpec.SpecRogue,\n\t\t\tSpec.SpecWarrior,\n\t\t\tSpec.SpecProtectionWarrior,\n\t\t];\n\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length == 1 && !noManaSpecs.includes(players[0].spec)) {\n\t\t\tconst player = players[0];\n\t\t\tconst secondsOOM = player.secondsOomAvg;\n\t\t\tconst percentOOM = secondsOOM / resultData.result.encounterMetrics.durationSeconds;\n\t\t\tconst dangerLevel = percentOOM < 0.01 ? 'safe' : (percentOOM < 0.05 ? 'warning' : 'danger');\n\n\t\t\tcontent += `\n\t\t\t\t<div class=\"percent-oom ${dangerLevel}\">\n\t\t\t\t\t<span class=\"topline-result-avg\">${secondsOOM.toFixed(1)}s</span>\n\t\t\t\t\t<span class=\"topline-result-label\"> spent OOM</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tthis.rootElem.innerHTML = content;\n\t}\n}\n","import { DetailedResultsUpdate, SimRun, SimRunData } from '../core/proto/ui.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\n\nimport { SimResultData } from './result_component.js';\nimport { ResultsFilter } from './results_filter.js';\nimport { CastMetricsTable } from './cast_metrics.js';\nimport { DtpsMeleeMetricsTable } from './dtps_melee_metrics.js';\nimport { HealingMetricsTable } from './healing_metrics.js';\nimport { MeleeMetricsTable } from './melee_metrics.js';\nimport { SpellMetricsTable } from './spell_metrics.js';\nimport { ResourceMetricsTable } from './resource_metrics.js';\nimport { PlayerDamageMetricsTable } from './player_damage.js';\nimport { AuraMetricsTable } from './aura_metrics.js'\nimport { DpsHistogram } from './dps_histogram.js';\nimport { SourceChart } from './source_chart.js';\nimport { Timeline } from './timeline.js';\nimport { ToplineResults } from './topline_results.js';\n\ndeclare var Chart: any;\n\nconst urlParams = new URLSearchParams(window.location.search);\nif (urlParams.has('mainTextColor')) {\n\tdocument.body.style.setProperty('--main-text-color', urlParams.get('mainTextColor')!);\n}\nif (urlParams.has('themeColorPrimary')) {\n\tdocument.body.style.setProperty('--theme-color-primary', urlParams.get('themeColorPrimary')!);\n}\nif (urlParams.has('themeColorBackground')) {\n\tdocument.body.style.setProperty('--theme-color-background', urlParams.get('themeColorBackground')!);\n}\nif (urlParams.has('themeColorBackgroundRaw')) {\n\tdocument.body.style.setProperty('--theme-color-background-raw', urlParams.get('themeColorBackgroundRaw')!);\n}\nif (urlParams.has('themeBackgroundImage')) {\n\tdocument.body.style.setProperty('--theme-background-image', urlParams.get('themeBackgroundImage')!);\n}\nif (urlParams.has('themeBackgroundOpacity')) {\n\tdocument.body.style.setProperty('--theme-background-opacity', urlParams.get('themeBackgroundOpacity')!);\n}\n\nconst isIndividualSim = urlParams.has('isIndividualSim');\nif (isIndividualSim) {\n\tdocument.body.classList.add('individual-sim');\n}\n\nconst isInIframe = Boolean(window.frameElement);\nif (isInIframe) {\n\t// Causes links opened from the iframe to be opened as tabs in the parent window instead.\n\tconst base = document.createElement('base');\n\tbase.target = '_parent';\n\tdocument.head.appendChild(base);\n} else {\n\tdocument.body.classList.add('new-tab');\n}\n\nconst colorSettings = {\n\tmainTextColor: document.body.style.getPropertyValue('--main-text-color'),\n};\n\nChart.defaults.color = colorSettings.mainTextColor;\n\nconst layoutHTML = `\n<div class=\"dr-root\">\n\t<ul class=\"dr-toolbar nav nav-tabs\">\n\t\t<li class=\"results-filter\"></li>\n\t\t<li class=\"tabs-filler\"></li>\n\t\t<li class=\"dr-tab-tab damage-metrics active\"><a data-toggle=\"tab\" href=\"#damageTab\">DAMAGE</a></li>\n\t\t<li class=\"dr-tab-tab healing-metrics\"><a data-toggle=\"tab\" href=\"#healingTab\">HEALING</a></li>\n\t\t<li class=\"dr-tab-tab threat-metrics\"><a data-toggle=\"tab\" href=\"#damageTakenTab\">DAMAGE TAKEN</a></li>\n\t\t<li class=\"dr-tab-tab\"><a data-toggle=\"tab\" href=\"#buffsTab\">BUFFS</a></li>\n\t\t<li class=\"dr-tab-tab\"><a data-toggle=\"tab\" href=\"#debuffsTab\">DEBUFFS</a></li>\n\t\t<li class=\"dr-tab-tab\"><a data-toggle=\"tab\" href=\"#castsTab\">CASTS</a></li>\n\t\t<li class=\"dr-tab-tab\"><a data-toggle=\"tab\" href=\"#resourcesTab\">RESOURCES</a></li>\n\t\t<li class=\"dr-tab-tab\"><a data-toggle=\"tab\" href=\"#timelineTab\" id=\"timelineTabTab\">TIMELINE</a></li>\n\t</ul>\n\t<div class=\"tab-content\">\n\t\t<div id=\"damageTab\" class=\"tab-pane dr-tab-content damage-content fade active in\">\n\t\t\t<div class=\"dr-row topline-results\">\n\t\t\t</div>\n\t\t\t<div class=\"dr-row all-players-only\">\n\t\t\t\t<div class=\"player-damage-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row single-player-only\">\n\t\t\t\t<div class=\"melee-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row single-player-only\">\n\t\t\t\t<div class=\"spell-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row dps-histogram\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"healingTab\" class=\"tab-pane dr-tab-content healing-content fade\">\n\t\t\t<div class=\"dr-row topline-results\">\n\t\t\t</div>\n\t\t\t<div class=\"dr-row single-player-only\">\n\t\t\t\t<div class=\"healing-spell-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row hps-histogram\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"damageTakenTab\" class=\"tab-pane dr-tab-content damage-taken-content fade\">\n\t\t\t<div class=\"dr-row single-player-only\">\n\t\t\t\t<div class=\"dtps-melee-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row single-player-only\">\n\t\t\t\t<div class=\"dtps-spell-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dr-row damage-taken-histogram single-player-only\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"buffsTab\" class=\"tab-pane dr-tab-content buffs-content fade\">\n\t\t\t<div class=\"dr-row\">\n\t\t\t\t<div class=\"buff-aura-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"debuffsTab\" class=\"tab-pane dr-tab-content debuffs-content fade\">\n\t\t\t<div class=\"dr-row\">\n\t\t\t\t<div class=\"debuff-aura-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"castsTab\" class=\"tab-pane dr-tab-content casts-content fade\">\n\t\t\t<div class=\"dr-row\">\n\t\t\t\t<div class=\"cast-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"resourcesTab\" class=\"tab-pane dr-tab-content resources-content fade\">\n\t\t\t<div class=\"dr-row\">\n\t\t\t\t<div class=\"resource-metrics\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"timelineTab\" class=\"tab-pane dr-tab-content timeline-content fade\">\n\t\t\t<div class=\"dr-row\">\n\t\t\t\t<div class=\"timeline\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n\ndocument.body.innerHTML = layoutHTML;\nconst resultsEmitter = new TypedEvent<SimResultData | null>();\n\nconst resultsFilter = new ResultsFilter({\n\tparent: document.body.getElementsByClassName('results-filter')[0] as HTMLElement,\n\tresultsEmitter: resultsEmitter,\n\tcolorSettings: colorSettings,\n});\n\n(Array.from(document.body.getElementsByClassName('topline-results')) as Array<HTMLElement>).forEach(toplineResultsDiv => {\n\tnew ToplineResults({ parent: toplineResultsDiv, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\n});\n\nconst castMetrics = new CastMetricsTable({ parent: document.body.getElementsByClassName('cast-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\nconst meleeMetrics = new MeleeMetricsTable({ parent: document.body.getElementsByClassName('melee-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\nconst spellMetrics = new SpellMetricsTable({ parent: document.body.getElementsByClassName('spell-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\nconst healingMetrics = new HealingMetricsTable({ parent: document.body.getElementsByClassName('healing-spell-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\nconst resourceMetrics = new ResourceMetricsTable({ parent: document.body.getElementsByClassName('resource-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\nconst playerDamageMetrics = new PlayerDamageMetricsTable({ parent: document.body.getElementsByClassName('player-damage-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings }, resultsFilter);\nconst buffAuraMetrics = new AuraMetricsTable({\n\tparent: document.body.getElementsByClassName('buff-aura-metrics')[0] as HTMLElement,\n\tresultsEmitter: resultsEmitter,\n\tcolorSettings: colorSettings,\n}, false);\nconst debuffAuraMetrics = new AuraMetricsTable({\n\tparent: document.body.getElementsByClassName('debuff-aura-metrics')[0] as HTMLElement,\n\tresultsEmitter: resultsEmitter,\n\tcolorSettings: colorSettings,\n}, true);\nconst dpsHistogram = new DpsHistogram({ parent: document.body.getElementsByClassName('dps-histogram')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\n\nconst dtpsMeleeMetrics = new DtpsMeleeMetricsTable({ parent: document.body.getElementsByClassName('dtps-melee-metrics')[0] as HTMLElement, resultsEmitter: resultsEmitter, colorSettings: colorSettings });\n\nconst timeline = new Timeline({\n\tparent: document.body.getElementsByClassName('timeline')[0] as HTMLElement,\n\tresultsEmitter: resultsEmitter,\n\tcolorSettings: colorSettings,\n});\n(document.getElementById('timelineTabTab') as HTMLElement).addEventListener('click', event => timeline.render());\n\nlet currentSimResult: SimResult | null = null;\nfunction updateResults() {\n\tconst eventID = TypedEvent.nextEventID();\n\tif (currentSimResult == null) {\n\t\tresultsEmitter.emit(eventID, null);\n\t} else {\n\t\tresultsEmitter.emit(eventID, {\n\t\t\teventID: eventID,\n\t\t\tresult: currentSimResult,\n\t\t\tfilter: resultsFilter.getFilter(),\n\t\t});\n\t}\n}\n\ndocument.body.classList.add('hide-damage-metrics');\ndocument.body.classList.add('hide-threat-metrics');\ndocument.body.classList.add('hide-healing-metrics');\nwindow.addEventListener('message', async event => {\n\tconst data = DetailedResultsUpdate.fromJson(event.data);\n\tswitch (data.data.oneofKind) {\n\t\tcase 'runData':\n\t\t\tconst runData = data.data.runData;\n\t\t\tcurrentSimResult = await SimResult.fromProto(runData.run || SimRun.create());\n\t\t\tupdateResults();\n\t\t\tbreak;\n\t\tcase 'settings':\n\t\t\tconst settings = data.data.settings;\n\t\t\tif (settings.showDamageMetrics) {\n\t\t\t\tdocument.body.classList.remove('hide-damage-metrics');\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.add('hide-damage-metrics');\n\t\t\t\tif (document.getElementById('damageTab')!.classList.contains('active')) {\n\t\t\t\t\tdocument.getElementById('damageTab')!.classList.remove('active');\n\t\t\t\t\tdocument.getElementById('damageTab')!.classList.remove('in');\n\t\t\t\t\tdocument.getElementById('healingTab')!.classList.add('active');\n\t\t\t\t\tdocument.getElementById('healingTab')!.classList.add('in');\n\n\t\t\t\t\tconst toolbar = document.getElementsByClassName('dr-toolbar')[0] as HTMLElement;\n\t\t\t\t\t(toolbar.getElementsByClassName('damage-metrics')[0] as HTMLElement).classList.remove('active');\n\t\t\t\t\t(toolbar.getElementsByClassName('healing-metrics')[0] as HTMLElement).classList.add('active');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (settings.showThreatMetrics) {\n\t\t\t\tdocument.body.classList.remove('hide-threat-metrics');\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.add('hide-threat-metrics');\n\t\t\t}\n\t\t\tif (settings.showHealingMetrics) {\n\t\t\t\tdocument.body.classList.remove('hide-healing-metrics');\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.add('hide-healing-metrics');\n\t\t\t}\n\t\t\tif (settings.showExperimental) {\n\t\t\t\tdocument.body.classList.remove('hide-experimental');\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.add('hide-experimental');\n\t\t\t}\n\t\t\tbreak;\n\t}\n});\n\nresultsFilter.changeEmitter.on(() => updateResults());\n\nconst rootDiv = document.body.getElementsByClassName('dr-root')[0] as HTMLElement;\nresultsEmitter.on((eventID, resultData) => {\n\tif (resultData?.filter.player || resultData?.filter.player === 0) {\n\t\trootDiv.classList.remove('all-players');\n\t\trootDiv.classList.add('single-player');\n\t} else {\n\t\trootDiv.classList.add('all-players');\n\t\trootDiv.classList.remove('single-player');\n\t}\n});\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ActionMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class CastMetricsTable extends MetricsTable<ActionMetrics> {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'cast-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ActionMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.casts,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.casts.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'CPM',\n\t\t\t\ttooltip: 'Casts / (Encounter Duration / 60 Seconds)',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.castsPerMinute,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.castsPerMinute.toFixed(1),\n\t\t\t},\n\t\t]);\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ActionMetrics>> {\n\t\t//const actionMetrics = resultData.result.getActionMetrics(resultData.filter);\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\tconst actions = player.actions.filter(action => action.casts != 0).map(action => action.forTarget(resultData.filter));\n\t\tconst actionGroups = ActionMetrics.groupById(actions);\n\t\tconst petGroups = player.pets.map(pet => pet.actions.filter(action => action.casts != 0).map(action => action.forTarget(resultData.filter)));\n\n\t\treturn actionGroups.concat(petGroups);\n\t}\n\n\tmergeMetrics(metrics: Array<ActionMetrics>): ActionMetrics {\n\t\treturn ActionMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n\n\tshouldCollapse(metric: ActionMetrics): boolean {\n\t\treturn !metric.unit?.isPet;\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ActionMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { bucket } from '../core/utils.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class MeleeMetricsTable extends MetricsTable<ActionMetrics> {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'melee-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ActionMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'DPS',\n\t\t\t\ttooltip: 'Damage / Encounter Duration',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.dps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.dps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Damage / Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCast,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCast.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Hit',\n\t\t\t\ttooltip: 'Damage / (Hits + Crits + Glances + Blocks)',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgHit,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgHit.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'TPS',\n\t\t\t\ttooltip: 'Threat / Encounter Duration',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.tps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.tps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Threat / Casts',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCastThreat,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCastThreat.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Hit',\n\t\t\t\ttooltip: 'Threat / (Hits + Crits + Glances + Blocks)',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgHitThreat,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgHitThreat.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.casts,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.casts.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Hits',\n\t\t\t\ttooltip: 'Hits + Crits + Glances + Blocks',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.landedHits,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.landedHits.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Miss %',\n\t\t\t\ttooltip: 'Misses / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.missPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.missPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Dodge %',\n\t\t\t\ttooltip: 'Dodges / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.dodgePercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.dodgePercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Parry %',\n\t\t\t\ttooltip: 'Parries / Swings',\n\t\t\t\tcolumnClass: 'in-front-of-target',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.parryPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.parryPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Block %',\n\t\t\t\ttooltip: 'Blocks / Swings',\n\t\t\t\tcolumnClass: 'in-front-of-target',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.blockPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.blockPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Glance %',\n\t\t\t\ttooltip: 'Glances / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.glancePercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.glancePercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Crit %',\n\t\t\t\ttooltip: 'Crits / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.critPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.critPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t]);\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ActionMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\tif (player.inFrontOfTarget) {\n\t\t\tthis.rootElem.classList.remove('hide-in-front-of-target');\n\t\t} else {\n\t\t\tthis.rootElem.classList.add('hide-in-front-of-target');\n\t\t}\n\n\t\tconst actions = player.getMeleeActions().map(action => action.forTarget(resultData.filter));\n\t\tconst actionGroups = ActionMetrics.groupById(actions);\n\n\t\tconst petsByName = bucket(player.pets, pet => pet.name);\n\t\tconst petGroups = Object.values(petsByName).map(pets => ActionMetrics.joinById(pets.map(pet => pet.getMeleeActions().map(action => action.forTarget(resultData.filter))).flat(), true));\n\n\t\treturn actionGroups.concat(petGroups);\n\t}\n\n\tmergeMetrics(metrics: Array<ActionMetrics>): ActionMetrics {\n\t\treturn ActionMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n\n\tshouldCollapse(metric: ActionMetrics): boolean {\n\t\treturn !metric.unit?.isPet;\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ActionMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { bucket } from '../core/utils.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class SpellMetricsTable extends MetricsTable<ActionMetrics> {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'spell-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ActionMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'DPS',\n\t\t\t\ttooltip: 'Damage / Encounter Duration',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.dps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.dps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Damage / Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCast,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCast.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Hit',\n\t\t\t\ttooltip: 'Damage / Hits',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgHit,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgHit.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'TPS',\n\t\t\t\ttooltip: 'Threat / Encounter Duration',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.tps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.tps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Threat / Casts',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCastThreat,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCastThreat.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Hit',\n\t\t\t\ttooltip: 'Threat / Hits',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgHitThreat,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgHitThreat.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.casts,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.casts.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Hits',\n\t\t\t\ttooltip: 'Hits',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.landedHits,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.landedHits.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Miss %',\n\t\t\t\ttooltip: 'Misses / (Hits + Misses)',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.missPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.missPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Crit %',\n\t\t\t\ttooltip: 'Crits / Hits',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.critPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.critPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t]);\n\t}\n\n\tcustomizeRowElem(action: ActionMetrics, rowElem: HTMLElement) {\n\t\tif (action.hitAttempts == 0 && action.dps == 0) {\n\t\t\trowElem.classList.add('threat-metrics');\n\t\t}\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ActionMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\tconst actions = player.getSpellActions().map(action => action.forTarget(resultData.filter));\n\t\tconst actionGroups = ActionMetrics.groupById(actions);\n\n\t\tconst petsByName = bucket(player.pets, pet => pet.name);\n\t\tconst petGroups = Object.values(petsByName).map(pets => ActionMetrics.joinById(pets.map(pet => pet.getSpellActions().map(action => action.forTarget(resultData.filter))).flat(), true));\n\n\t\treturn actionGroups.concat(petGroups);\n\t}\n\n\tmergeMetrics(metrics: Array<ActionMetrics>): ActionMetrics {\n\t\treturn ActionMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n\n\tshouldCollapse(metric: ActionMetrics): boolean {\n\t\treturn !metric.unit?.isPet;\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ActionMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { bucket } from '../core/utils.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class HealingMetricsTable extends MetricsTable<ActionMetrics> {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'healing-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ActionMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'HPS',\n\t\t\t\ttooltip: 'Healing / Encounter Duration',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.hps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.hps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Healing / Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCastHealing,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCastHealing.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'TPS',\n\t\t\t\ttooltip: 'Threat / Encounter Duration',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.tps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.tps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Threat / Casts',\n\t\t\t\tcolumnClass: 'threat-metrics',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCastThreat,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCastThreat.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.casts,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.casts.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Crit %',\n\t\t\t\ttooltip: 'Crits / Hits',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.critPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.critPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t]);\n\t}\n\n\tcustomizeRowElem(action: ActionMetrics, rowElem: HTMLElement) {\n\t\tif (action.hitAttempts == 0 && action.hps == 0) {\n\t\t\trowElem.classList.add('threat-metrics');\n\t\t}\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ActionMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\t//const actions = player.getSpellActions().map(action => action.forTarget(resultData.filter));\n\t\tconst actions = player.getHealingActions();\n\t\tconst actionGroups = ActionMetrics.groupById(actions);\n\n\t\treturn actionGroups;\n\t}\n\n\tmergeMetrics(metrics: Array<ActionMetrics>): ActionMetrics {\n\t\treturn ActionMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n\n\tshouldCollapse(metric: ActionMetrics): boolean {\n\t\treturn !metric.unit?.isPet;\n\t}\n}\n","import { UnitMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\nimport { maxIndex } from '../core/utils.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\nimport { ResultsFilter } from './results_filter.js';\nimport { SourceChart } from './source_chart.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class PlayerDamageMetricsTable extends MetricsTable<UnitMetrics> {\n\tprivate readonly resultsFilter: ResultsFilter;\n\n\t// Cached values from most recent result.\n\tprivate raidDps: number;\n\tprivate maxDps: number;\n\n\tconstructor(config: ResultComponentConfig, resultsFilter: ResultsFilter) {\n\t\tconfig.rootCssClass = 'player-damage-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.playerNameCellConfig(),\n\t\t\t{\n\t\t\t\tname: 'Amount',\n\t\t\t\ttooltip: 'Player Damage / Raid Damage',\n\t\t\t\theaderCellClass: 'amount-header-cell',\n\t\t\t\tfillCell: (player: UnitMetrics, cellElem: HTMLElement, rowElem: HTMLElement) => {\n\t\t\t\t\tcellElem.classList.add('amount-cell');\n\n\t\t\t\t\tlet chart: HTMLElement | null = null;\n\t\t\t\t\tconst makeChart = () => {\n\t\t\t\t\t\tconst chartContainer = document.createElement('div');\n\t\t\t\t\t\trowElem.appendChild(chartContainer);\n\t\t\t\t\t\tconst sourceChart = new SourceChart(chartContainer, player.actions);\n\t\t\t\t\t\treturn chartContainer;\n\t\t\t\t\t};\n\n\t\t\t\t\ttippy(rowElem, {\n\t\t\t\t\t\tcontent: 'Loading...',\n\t\t\t\t\t\tplacement: 'bottom',\n\t\t\t\t\t\tonShow(instance: any) {\n\t\t\t\t\t\t\tif (!chart) {\n\t\t\t\t\t\t\t\tchart = makeChart();\n\t\t\t\t\t\t\t\tinstance.setContent(chart);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tcellElem.innerHTML = `\n\t\t\t\t\t\t<div class=\"player-damage-percent\">\n\t\t\t\t\t\t\t<span>${(player.dps.avg / this.raidDps * 100).toFixed(2)}%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"player-damage-bar-container\">\n\t\t\t\t\t\t\t<div class=\"player-damage-bar\" style=\"background-color:${player.classColor}; width:${player.dps.avg / this.maxDps * 100}%\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"player-damage-total\">\n\t\t\t\t\t\t\t<span>${(player.totalDamage / 1000).toFixed(1)}k</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'DPS',\n\t\t\t\ttooltip: 'Damage / Encounter Duration',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: UnitMetrics) => metric.dps.avg,\n\t\t\t\tgetDisplayString: (metric: UnitMetrics) => metric.dps.avg.toFixed(1),\n\t\t\t},\n\t\t]);\n\t\tthis.resultsFilter = resultsFilter;\n\t\tthis.raidDps = 0;\n\t\tthis.maxDps = 0;\n\t}\n\n\tcustomizeRowElem(player: UnitMetrics, rowElem: HTMLElement) {\n\t\trowElem.classList.add('player-damage-row');\n\t\trowElem.addEventListener('click', event => {\n\t\t\tthis.resultsFilter.setPlayer(this.getLastSimResult().eventID, player.unitIndex);\n\t\t});\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<UnitMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\n\t\tthis.raidDps = resultData.result.raidMetrics.dps.avg;\n\t\tconst maxDpsIndex = maxIndex(players.map(player => player.dps.avg))!;\n\t\tthis.maxDps = players[maxDpsIndex].dps.avg;\n\n\t\treturn players.map(player => [player]);\n\t}\n}\n","import { SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\n\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var Chart: any;\n\nexport class DpsHistogram extends ResultComponent {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'dps-histogram-root';\n\t\tsuper(config);\n\t}\n\n\tonSimResult(resultData: SimResultData) {\n\t\tconst chartBounds = this.rootElem.getBoundingClientRect();\n\n\t\tthis.rootElem.textContent = '';\n\t\tconst chartCanvas = document.createElement(\"canvas\");\n\t\tchartCanvas.height = chartBounds.height;\n\t\tchartCanvas.width = chartBounds.width;\n\n\t\tconst damageMetrics = resultData.result.getDamageMetrics(resultData.filter);\n\n\t\tconst min = damageMetrics.avg - damageMetrics.stdev;\n\t\tconst max = damageMetrics.avg + damageMetrics.stdev;\n\t\tconst vals: Array<number> = [];\n\t\tconst colors: Array<string> = [];\n\n\t\tconst labels = Object.keys(damageMetrics.hist);\n\t\tlabels.forEach((k, i) => {\n\t\t\tvals.push(damageMetrics.hist[Number(k)]);\n\t\t\tconst val = parseInt(k);\n\t\t\tif (val > min && val < max) {\n\t\t\t\tcolors.push('#1E87F0');\n\t\t\t} else {\n\t\t\t\tcolors.push('#FF6961');\n\t\t\t}\n\t\t});\n\n\t\tconst ctx = chartCanvas.getContext('2d');\n\t\tconst chart = new Chart(ctx, {\n\t\t\ttype: 'bar',\n\t\t\tdata: {\n\t\t\t\tlabels: labels,\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: vals,\n\t\t\t\t\tbackgroundColor: colors,\n\t\t\t\t}],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'DPS Histogram',\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlabels: {},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\tthis.rootElem.appendChild(chartCanvas);\n\t}\n}\n","import { ActionId } from '../core/proto_utils/action_id.js';\nimport { ActionMetrics, SimResult, SimResultFilter } from '../core/proto_utils/sim_result.js';\n\nimport { ColumnSortType, MetricsTable } from './metrics_table.js';\nimport { ResultComponent, ResultComponentConfig, SimResultData } from './result_component.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class DtpsMeleeMetricsTable extends MetricsTable<ActionMetrics> {\n\tconstructor(config: ResultComponentConfig) {\n\t\tconfig.rootCssClass = 'dtps-melee-metrics-root';\n\t\tsuper(config, [\n\t\t\tMetricsTable.nameCellConfig((metric: ActionMetrics) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: metric.name,\n\t\t\t\t\tactionId: metric.actionId,\n\t\t\t\t};\n\t\t\t}),\n\t\t\t{\n\t\t\t\tname: 'DPS',\n\t\t\t\ttooltip: 'Damage / Encounter Duration',\n\t\t\t\tsort: ColumnSortType.Descending,\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.dps,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.dps.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Cast',\n\t\t\t\ttooltip: 'Damage / Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgCast,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgCast.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg Hit',\n\t\t\t\ttooltip: 'Damage / (Hits + Crits + Glances + Blocks)',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.avgHit,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.avgHit.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Casts',\n\t\t\t\ttooltip: 'Casts',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.casts,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.casts.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Hits',\n\t\t\t\ttooltip: 'Hits + Crits + Glances + Blocks',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.landedHits,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.landedHits.toFixed(1),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Miss %',\n\t\t\t\ttooltip: 'Misses / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.missPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.missPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Dodge %',\n\t\t\t\ttooltip: 'Dodges / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.dodgePercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.dodgePercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Parry %',\n\t\t\t\ttooltip: 'Parries / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.parryPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.parryPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Block %',\n\t\t\t\ttooltip: 'Blocks / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.blockPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.blockPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Crit %',\n\t\t\t\ttooltip: 'Crits / Swings',\n\t\t\t\tgetValue: (metric: ActionMetrics) => metric.critPercent,\n\t\t\t\tgetDisplayString: (metric: ActionMetrics) => metric.critPercent.toFixed(2) + '%',\n\t\t\t},\n\t\t]);\n\t}\n\n\tgetGroupedMetrics(resultData: SimResultData): Array<Array<ActionMetrics>> {\n\t\tconst players = resultData.result.getPlayers(resultData.filter);\n\t\tif (players.length != 1) {\n\t\t\treturn [];\n\t\t}\n\t\tconst player = players[0];\n\n\t\tconst targets = resultData.result.getTargets(resultData.filter);\n\t\tconst targetActions = targets.map(target => target.getMeleeActions().map(action => action.forTarget(resultData.filter))).flat();\n\t\tconst actionGroups = ActionMetrics.groupById(targetActions);\n\n\t\treturn actionGroups;\n\t}\n\n\tmergeMetrics(metrics: Array<ActionMetrics>): ActionMetrics {\n\t\t// TODO: Use NPC ID here instead of pet ID.\n\t\treturn ActionMetrics.merge(metrics, true, metrics[0].unit?.petActionId || undefined);\n\t}\n}\n"],"names":["ResultComponent","Component","constructor","config","super","parent","rootCssClass","this","colorSettings","lastSimResult","resultsEmitter","on","eventID","resultData","onSimResult","getLastSimResult","Error","UnitGroupFilter","Input","filterData","allUnitsLabel","changeEmitter","TypedEvent","extraCssClasses","changedEvent","getValue","getFilterDataValue","setValue","newValue","setFilterDataValue","allUnitsOption","iconUrl","text","color","value","currentOptions","rootElem","innerHTML","buttonElem","getElementsByClassName","dropdownElem","addEventListener","event","preventDefault","init","setOptions","simResult","concat","getAllUnits","map","unit","label","classColor","unitIndex","find","option","getInputValue","emit","forEach","appendChild","makeOption","data","makeOptionElem","nextEventID","optionContainer","document","createElement","classList","add","style","backgroundColor","icon","src","textContent","getInputElem","setInputValue","optionData","PlayerFilter","player","getPlayers","TargetFilter","target","getTargets","ColumnSortType","ColumnSortType2","MetricsTable","columnConfigs","onUpdate","tableElem","bodyElem","headerRowElem","columnConfig","headerCell","headerCellClass","columnClass","name","tooltip","tippy","content","allowHTML","sortList","i","sort","filter","sortData","$","tablesorter","cssChildRow","sortMetrics","metrics","a","b","addRow","metric","rowElem","cellElem","fillCell","getDisplayString","customizeRowElem","addGroup","length","shouldCollapse","mergedMetrics","mergeMetrics","parentRow","childRows","childRow","expand","row","remove","groupedMetrics","getGroupedMetrics","group","trigger","static","getData","iconElem","actionId","setBackgroundAndHref","TypedResourceMetricsTable","resourceType","nameCellConfig","events","toFixed","Descending","gain","gainPerSecond","avgGain","wastedGain","players","result","resources","getResourceMetrics","ResourceMetrics","groupById","merge","petActionId","actionColors","SourceChart","parentElem","allActionMetrics","chartCanvas","height","width","actionMetrics","actionMetric","damage","names","am","totalDmg","sum","vals","bgColors","slice","ctx","getContext","Chart","type","labels","datasets","options","plugins","legend","display","position","AuraMetricsTable","useDebuffs","averageProcs","ppm","uptimePercent","AuraMetrics","getDebuffMetrics","auras","actionGroups","petGroups","pets","pet","isPet","MELEE_ACTION_CATEGORY","SPELL_ACTION_CATEGORY","DEFAULT_ACTION_CATEGORY","idToCategoryMap","OtherAction","OtherActionAttack","OtherActionShoot","idsToGroupForRotation","percentageResources","ResourceType","ResourceTypeHealth","ResourceTypeMana","ToplineResults","RaidSimResultsManager","makeToplineResultsContent","noManaSpecs","Spec","SpecFeralTankDruid","SpecRogue","SpecWarrior","SpecProtectionWarrior","includes","spec","secondsOOM","secondsOomAvg","percentOOM","encounterMetrics","durationSeconds","urlParams","URLSearchParams","window","location","search","has","body","setProperty","get","Boolean","frameElement","base","head","mainTextColor","getPropertyValue","defaults","resultsFilter","currentFilter","playerFilter","targetFilter","getFilter","setPlayer","newPlayer","setTarget","newTarget","Array","from","toplineResultsDiv","casts","castsPerMinute","actions","action","forTarget","ActionMetrics","dps","avgCast","avgHit","tps","avgCastThreat","avgHitThreat","landedHits","missPercent","dodgePercent","parryPercent","blockPercent","glancePercent","critPercent","inFrontOfTarget","getMeleeActions","petsByName","bucket","Object","values","joinById","flat","hitAttempts","getSpellActions","hps","avgCastHealing","getHealingActions","orderedResourceTypes","containerElem","resourceNames","childConfig","table","contains","playerNameCellConfig","chart","placement","onShow","instance","chartContainer","makeChart","setContent","avg","raidDps","maxDps","totalDamage","raidMetrics","maxDpsIndex","maxIndex","chartBounds","getBoundingClientRect","damageMetrics","getDamageMetrics","min","stdev","max","colors","keys","hist","k","push","Number","val","parseInt","title","scales","y","beginAtZero","ticks","targetActions","timeline","rendered","hiddenIds","hiddenIdsChangeEmitter","opener","postMessage","chartPicker","dpsResourcesPlotElem","rotationPlotElem","updatePlot","dpsResourcesPlot","ApexCharts","foreColor","id","animations","enabled","series","xaxis","noData","stroke","curve","rotationLabels","rotationTimeline","rotationHiddenIdsContainer","duration","firstIterationDuration","toDatetime","getTime","tickAmount","decimalsInFloat","show","formatter","defaultValue","timestamp","yaxis","beforeResetZoom","tooltipHandlers","custom","seriesIndex","dataPointIndex","updateRotationChart","e","console","log","dpsData","addDpsSeries","addDpsYAxis","tooltipHandler","addManaSeries","addThreatSeries","handler","addMajorCooldownAnnotations","clearRotationChart","Math","maxThreat","addThreatYAxis","updateOptions","dpsAxisMax","ceil","seriesName","axisBorder","axisTicks","minWidth","axisMax","colorOverride","dpsLogs","x","l","dpsTooltip","manaLogs","groupedResourceLogs","maxMana","valueBefore","valueAfter","opposite","v","parseFloat","resourceTooltip","threatLogs","threatAfter","threatTooltip","mcdLogs","majorCooldownLogs","mcdAuraLogs","majorCooldownAuraUptimeLogs","cooldownIconOffsets","mcdLog","mcdIdx","cdLog","cdIdx","distinctMcdAuras","distinct","equalsIgnoringTag","stringComparator","mcdAuraColors","mcdAuraLog","findIndex","dAura","annotations","gainedAt","x2","fadedAt","fillColor","points","image","path","offsetY","targets","drawRotationTimeRuler","addResourceRow","buffsById","auraUptimeLogs","toString","debuffsById","buffsAndDebuffsById","playerCastsByAbility","getSortedCastsByAbility","castLogs","addCastRow","buffsToShow","addSeparatorRow","addAuraRow","targetCastsByAbility","debuffsToShow","meleeActionIds","spellActionIds","getActionCategory","fixedCategory","anyId","meleeActionId","equals","spellActionId","castsByAbility","spellId","toStringIgnoringTag","categoryA","categoryB","tag","makeLabelElem","isHiddenLabel","labelElem","labelText","baseName","hideElem","index","hiddenId","splice","updateHidden","labelIcon","makeRowElem","timeToPx","separatorElem","resourceLogs","startValue","resourceTypeToIcon","resourceLogGroup","resourceElem","toLowerCase","replaceAll","left","floor","aurasById","castLog","castElem","castTime","travelTime","travelTimeElem","damageDealtLogs","ddl","miss","dodge","parry","glance","block","partialResist1_4","partialResist2_4","partialResist3_4","crit","setBackground","travelTimeStr","resultString","source","isTarget","threat","join","tick","tickElem","applyAuraUptimeLogsToRow","aul","auraElem","stacksChange","scl","stacksChangeElem","String","newStacks","timeToPxValue","time","canvas","strokeStyle","font","fillStyle","lineWidth","beginPath","moveTo","lineTo","numTicks","textAlign","lineHeight","fillText","includeAuras","damageLogs","damageLog","tooltipLogItem","tooltipAurasSection","threatBefore","logs","maxValue","valToDisplayString","manaChangedLog","valueElem","actionElem","activeAuras","auraLog","render","setTimeout","Date","getElementById","currentSimResult","updateResults","async","DetailedResultsUpdate","fromJson","oneofKind","runData","SimResult","fromProto","run","SimRun","create","settings","showDamageMetrics","toolbar","showThreatMetrics","showHealingMetrics","showExperimental","rootDiv"],"mappings":"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EjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GAGjC,MAAS,GACT,MAAS,GACT,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,KAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IAGjC,MAAS,GACT,MAAS,GACT,MAASC,EAAwB,GAEjC,MAASD,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASC,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GAGjC,KAAQD,EAAwB,GAChC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASC,EAAwB,GACjC,MAASA,EAAwB,GAGjC,MAASD,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASC,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,KAAQA,EAAwB,GAChC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,KAAQC,EAA0B,GAGlC,MAASD,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IAGjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IAMjC,MAAS,GACT,MAAS,GACT,MAASD,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,KAAQA,EAAwB,GAChC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,GAAME,EAA0B,GAChC,KAAQA,EAA0B,GAClC,KAAQA,EAA0B,GAGlC,MAASF,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,IACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASA,EAAwB,GACjC,MAASE,EAA0B,GACnC,MAASA,EAA0B,GACnC,MAASA,EAA0B,GA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"}