import{B as t,M as e,a as s,b as a,T as i,c as n,d as o,E as l,R as r,D as d,e as c,s as m,f as h,N as p,g as u,h as g,G as f,i as E,C as S,j as v,k as w,l as I,m as y,n as b,o as C,p as P,q as x,F as k,r as T,t as D,u as M,v as R,w as B,x as L,y as N,z as V,I as O,A,H as W,J as H,K as F,L as U,O as j,Q as G,U as q,V as $,W as _,X as z,Y as J,Z as K,_ as Y,$ as X,a0 as Z,a1 as Q,a2 as tt,a3 as et,a4 as st,a5 as at,a6 as it,a7 as nt,a8 as ot,a9 as lt,aa as rt,ab as dt,ac as ct,ad as mt,ae as ht,af as pt,ag as ut,ah as gt,ai as ft,aj as Et,ak as St,al as vt,am as wt,an as It,ao as yt,ap as bt,aq as Ct,ar as Pt,as as xt,at as kt,au as Tt,av as Dt,aw as Mt,ax as Rt,ay as Bt,az as Lt,S as Nt,aA as Vt,aB as Ot,aC as At,aD as Wt,aE as Ht,aF as Ft,aG as Ut,aH as jt,aI as Gt,aJ as qt,aK as $t,aL as _t,aM as zt,aN as Jt,aO as Kt,aP as Yt,aQ as Xt,aR as Zt,aS as Qt,aT as te,aU as ee,aV as se,aW as ae,aX as ie,aY as ne,aZ as oe,a_ as le,a$ as re,b0 as de,b1 as ce,b2 as me,b3 as he,b4 as pe,b5 as ue,b6 as ge,b7 as fe,b8 as Ee,b9 as Se,ba as ve,bb as we,bc as Ie,bd as ye,be,bf as Ce,bg as Pe,bh as xe,bi as ke,bj as Te,bk as De,bl as Me,bm as Re,bn as Be,bo as Le,bp as Ne,bq as Ve,br as Oe}from"./raid_sim_action-ba7bc10a.chunk.js";class Ae{constructor(n){this.id=0,this.name="",this.level=t,this.mobType=e.MobTypeDemon,this.tankIndex=0,this.stats=new s,this.swingSpeed=0,this.minBaseDamage=0,this.dualWield=!1,this.dualWieldPenalty=!1,this.suppressDodge=!1,this.parryHaste=!0,this.spellSchool=a.SpellSchoolPhysical,this.idChangeEmitter=new i,this.nameChangeEmitter=new i,this.levelChangeEmitter=new i,this.mobTypeChangeEmitter=new i,this.propChangeEmitter=new i,this.statsChangeEmitter=new i,this.changeEmitter=new i,this.sim=n,[this.idChangeEmitter,this.nameChangeEmitter,this.levelChangeEmitter,this.mobTypeChangeEmitter,this.propChangeEmitter,this.statsChangeEmitter].forEach((t=>t.on((t=>this.changeEmitter.emit(t))))),this.changeEmitter.on((t=>this.sim.encounter?.changeEmitter.emit(t)))}getId(){return this.id}setId(t,e){e!=this.id&&(this.id=e,this.idChangeEmitter.emit(t))}getName(){return this.name}setName(t,e){e!=this.name&&(this.name=e,this.nameChangeEmitter.emit(t))}getLevel(){return this.level}setLevel(t,e){e!=this.level&&(this.level=e,this.levelChangeEmitter.emit(t))}getMobType(){return this.mobType}setMobType(t,e){e!=this.mobType&&(this.mobType=e,this.mobTypeChangeEmitter.emit(t))}getTankIndex(){return this.tankIndex}setTankIndex(t,e){e!=this.tankIndex&&(this.tankIndex=e,this.propChangeEmitter.emit(t))}getSwingSpeed(){return this.swingSpeed}setSwingSpeed(t,e){e!=this.swingSpeed&&(this.swingSpeed=e,this.propChangeEmitter.emit(t))}getMinBaseDamage(){return this.minBaseDamage}setMinBaseDamage(t,e){e!=this.minBaseDamage&&(this.minBaseDamage=e,this.propChangeEmitter.emit(t))}getDualWield(){return this.dualWield}setDualWield(t,e){e!=this.dualWield&&(this.dualWield=e,this.propChangeEmitter.emit(t))}getDualWieldPenalty(){return this.dualWieldPenalty}setDualWieldPenalty(t,e){e!=this.dualWieldPenalty&&(this.dualWieldPenalty=e,this.propChangeEmitter.emit(t))}getSuppressDodge(){return this.suppressDodge}setSuppressDodge(t,e){e!=this.suppressDodge&&(this.suppressDodge=e,this.propChangeEmitter.emit(t))}getParryHaste(){return this.parryHaste}setParryHaste(t,e){e!=this.parryHaste&&(this.parryHaste=e,this.propChangeEmitter.emit(t))}getSpellSchool(){return this.spellSchool}setSpellSchool(t,e){e!=this.spellSchool&&(this.spellSchool=e,this.propChangeEmitter.emit(t))}getStats(){return this.stats}setStats(t,e){e.equals(this.stats)||(this.stats=e,this.statsChangeEmitter.emit(t))}matchesPreset(t){return n.equals(this.toProto(),t.target)}applyPreset(t,e){this.fromProto(t,e.target||n.create())}toProto(){return n.create({id:this.getId(),name:this.getName(),level:this.getLevel(),mobType:this.getMobType(),tankIndex:this.getTankIndex(),swingSpeed:this.getSwingSpeed(),minBaseDamage:this.getMinBaseDamage(),dualWield:this.getDualWield(),dualWieldPenalty:this.getDualWieldPenalty(),suppressDodge:this.getSuppressDodge(),parryHaste:this.getParryHaste(),spellSchool:this.getSpellSchool(),stats:this.stats.asArray()})}fromProto(t,e){i.freezeAllAndDo((()=>{this.setId(t,e.id),this.setName(t,e.name),this.setLevel(t,e.level),this.setMobType(t,e.mobType),this.setTankIndex(t,e.tankIndex),this.setSwingSpeed(t,e.swingSpeed),this.setMinBaseDamage(t,e.minBaseDamage),this.setDualWield(t,e.dualWield),this.setDualWieldPenalty(t,e.dualWieldPenalty),this.setSuppressDodge(t,e.suppressDodge),this.setParryHaste(t,e.parryHaste),this.setSpellSchool(t,e.spellSchool),this.setStats(t,new s(e.stats))}))}clone(t){const e=new Ae(this.sim);return e.fromProto(t,this.toProto()),e}static defaultProto(){return n.create({level:t,mobType:e.MobTypeUndead,tankIndex:0,swingSpeed:1.5,minBaseDamage:3e4,dualWield:!0,dualWieldPenalty:!1,suppressDodge:!1,parryHaste:!0,spellSchool:a.SpellSchoolPhysical,stats:s.fromMap({[o.StatArmor]:10643,[o.StatAttackPower]:640}).asArray()})}static fromDefaults(t,e){const s=new Ae(e);return s.fromProto(t,Ae.defaultProto()),s}}class We{constructor(t){this.duration=180,this.durationVariation=5,this.executeProportion20=.2,this.executeProportion25=.25,this.executeProportion35=.35,this.useHealth=!1,this.targetsChangeEmitter=new i,this.durationChangeEmitter=new i,this.executeProportionChangeEmitter=new i,this.changeEmitter=new i,this.sim=t,this.targets=[Ae.fromDefaults(i.nextEventID(),t)],[this.targetsChangeEmitter,this.durationChangeEmitter,this.executeProportionChangeEmitter].forEach((t=>t.on((t=>this.changeEmitter.emit(t)))))}get primaryTarget(){return this.targets[0]}getDurationVariation(){return this.durationVariation}setDurationVariation(t,e){e!=this.durationVariation&&(this.durationVariation=e,this.durationChangeEmitter.emit(t))}getDuration(){return this.duration}setDuration(t,e){e!=this.duration&&(this.duration=e,this.durationChangeEmitter.emit(t))}getExecuteProportion20(){return this.executeProportion20}setExecuteProportion20(t,e){e!=this.executeProportion20&&(this.executeProportion20=e,this.executeProportionChangeEmitter.emit(t))}getExecuteProportion25(){return this.executeProportion25}setExecuteProportion25(t,e){e!=this.executeProportion25&&(this.executeProportion25=e,this.executeProportionChangeEmitter.emit(t))}getExecuteProportion35(){return this.executeProportion35}setExecuteProportion35(t,e){e!=this.executeProportion35&&(this.executeProportion35=e,this.executeProportionChangeEmitter.emit(t))}getUseHealth(){return this.useHealth}setUseHealth(t,e){e!=this.useHealth&&(this.useHealth=e,this.durationChangeEmitter.emit(t),this.executeProportionChangeEmitter.emit(t))}getNumTargets(){return this.targets.length}getTargets(){return this.targets.slice()}setTargets(t,e){i.freezeAllAndDo((()=>{0==e.length&&(e=[Ae.fromDefaults(t,this.sim)]),e.length==this.targets.length&&e.every(((t,e)=>n.equals(t.toProto(),this.targets[e].toProto())))||(this.targets=e,this.targetsChangeEmitter.emit(t))}))}matchesPreset(t){return t.targets.length==this.targets.length&&this.targets.every(((e,s)=>e.matchesPreset(t.targets[s])))}applyPreset(t,e){i.freezeAllAndDo((()=>{let s=this.targets.slice(0,e.targets.length);for(;s.length<e.targets.length;)s.push(new Ae(this.sim));s.forEach(((s,a)=>s.applyPreset(t,e.targets[a]))),this.setTargets(t,s)}))}toProto(){return l.create({duration:this.duration,durationVariation:this.durationVariation,executeProportion20:this.executeProportion20,executeProportion25:this.executeProportion25,executeProportion35:this.executeProportion35,useHealth:this.useHealth,targets:this.targets.map((t=>t.toProto()))})}fromProto(t,e){i.freezeAllAndDo((()=>{this.setDuration(t,e.duration),this.setDurationVariation(t,e.durationVariation),this.setExecuteProportion20(t,e.executeProportion20),this.setExecuteProportion25(t,e.executeProportion25),this.setExecuteProportion35(t,e.executeProportion35),this.setUseHealth(t,e.useHealth),e.targets.length>0?this.setTargets(t,e.targets.map((e=>{const s=new Ae(this.sim);return s.fromProto(t,e),s}))):this.setTargets(t,[Ae.fromDefaults(t,this.sim)])}))}applyDefaults(t){this.fromProto(t,l.create({duration:180,durationVariation:5,executeProportion20:.2,executeProportion25:.25,executeProportion35:.35,targets:[Ae.defaultProto()]}))}}const He=5;class Fe{constructor(t){this.buffs=r.create(),this.debuffs=d.create(),this.tanks=[],this.targetDummies=0,this.compChangeEmitter=new i,this.buffsChangeEmitter=new i,this.debuffsChangeEmitter=new i,this.tanksChangeEmitter=new i,this.targetDummiesChangeEmitter=new i,this.sim=t,this.parties=[...Array(5).keys()].map((e=>{const s=new c(this,t);return s.compChangeEmitter.on((t=>this.compChangeEmitter.emit(t))),s.changeEmitter.on((t=>this.changeEmitter.emit(t))),s})),this.changeEmitter=i.onAny([this.compChangeEmitter,this.buffsChangeEmitter,this.debuffsChangeEmitter,this.tanksChangeEmitter,this.targetDummiesChangeEmitter],"RaidChange")}size(){return m(this.parties.map((t=>t.size())))}isEmpty(){return 0==this.size()}getParties(){return this.parties.slice()}getParty(t){return this.parties[t]}getPlayers(){return this.parties.map((t=>t.getPlayers())).flat()}getPlayer(t){return this.parties[Math.floor(t/h)].getPlayer(t%h)}getPlayerFromRaidTarget(t){return t.targetIndex==p?null:this.getPlayer(t.targetIndex)}setPlayer(t,e,s){this.parties[Math.floor(e/h)].setPlayer(t,e%h,s)}getClassCount(t){return this.getPlayers().filter((e=>null!=e&&e.getClass()==t)).length}getBuffs(){return r.clone(this.buffs)}setBuffs(t,e){if(!r.equals(this.buffs,e)){if(this.buffs=r.clone(e),!this.debuffs.totemOfWrath&&this.buffs.totemOfWrath){var s=d.clone(this.debuffs);s.totemOfWrath=this.buffs.totemOfWrath,this.setDebuffs(t,s)}this.buffsChangeEmitter.emit(t)}}getDebuffs(){return d.clone(this.debuffs)}setDebuffs(t,e){if(!d.equals(this.debuffs,e)){if(this.debuffs=d.clone(e),this.debuffs.totemOfWrath&&!this.buffs.totemOfWrath){var s=r.clone(this.buffs);s.totemOfWrath=this.debuffs.totemOfWrath,this.setBuffs(t,s)}this.debuffsChangeEmitter.emit(t)}}getTanks(){return this.tanks.map((t=>u.clone(t)))}setTanks(t,e){this.tanks.length==e.length&&this.tanks.every(((t,s)=>u.equals(t,e[s])))||(this.tanks=e.map((t=>u.clone(t))),this.tanksChangeEmitter.emit(t))}getTargetDummies(){return this.targetDummies}setTargetDummies(t,e){this.targetDummies!=e&&(this.targetDummies=e,this.targetDummiesChangeEmitter.emit(t))}toProto(t){return g.create({parties:this.parties.map((e=>e.toProto(t))),buffs:this.getBuffs(),debuffs:this.getDebuffs(),tanks:this.getTanks(),targetDummies:this.getTargetDummies()})}fromProto(t,e){i.freezeAllAndDo((()=>{this.setBuffs(t,e.buffs||r.create()),this.setDebuffs(t,e.debuffs||d.create()),this.setTanks(t,e.tanks),this.setTargetDummies(t,e.targetDummies);for(let s=0;s<5;s++)e.parties[s]?this.parties[s].fromProto(t,e.parties[s]):this.parties[s].clear(t)}))}clear(t){i.freezeAllAndDo((()=>{for(let e=0;e<5;e++)this.parties[e].clear(t)}))}}const Ue=`/${P}/sim_worker.js`;class je{constructor(t){this.workers=[];for(let e=0;e<t;e++)this.workers.push(new Ge)}getLeastBusyWorker(){return this.workers.reduce(((t,e)=>t.numTasksRunning<e.numTasksRunning?t:e))}async makeApiCall(t,e){return await this.getLeastBusyWorker().doApiCall(t,e,"")}async getGearList(t){const e=await this.makeApiCall("gearList",f.toBinary(t));return E.fromBinary(e)}async computeStats(t){const e=await this.makeApiCall("computeStats",S.toBinary(t));return v.fromBinary(e)}async statWeightsAsync(t,e){console.log("Stat weights request: "+w.toJsonString(t));const s=this.getLeastBusyWorker(),a=s.makeTaskId();s.addPromiseFunc(a+"progress",this.newProgressHandler(a,s,e),(t=>{}));const i=await s.doApiCall("statWeightsAsync",w.toBinary(t),a),n=I.fromBinary(i);return console.log("Stat weights result: "+y.toJsonString(n.finalWeightResult)),n.finalWeightResult}async raidSimAsync(t,e){console.log("Raid sim request: "+b.toJsonString(t));const s=this.getLeastBusyWorker(),a=s.makeTaskId();s.addPromiseFunc(a+"progress",this.newProgressHandler(a,s,e),(t=>{}));const i=await s.doApiCall("raidSimAsync",b.toBinary(t),a),n=I.fromBinary(i),o=C.toJson(n.finalRaidResult);return delete o.logs,console.log("Raid sim result: "+JSON.stringify(o)),n.finalRaidResult}newProgressHandler(t,e,s){return a=>{var i=I.fromBinary(a);s(i),null==i.finalRaidResult&&null==i.finalWeightResult&&e.addPromiseFunc(t+"progress",this.newProgressHandler(t,e,s),(t=>{}))}}}class Ge{constructor(){this.numTasksRunning=0,this.taskIdsToPromiseFuncs={},this.worker=new window.Worker(Ue);let t=null;this.onReady=new Promise(((e,s)=>{t=e})),this.worker.onmessage=e=>{if("ready"==e.data.msg)this.worker.postMessage({msg:"setID",id:"1"}),t();else if("idconfirm"==e.data.msg);else{const t=e.data.id;if(!this.taskIdsToPromiseFuncs[t])return void console.warn("Unrecognized result id: "+t);const s=this.taskIdsToPromiseFuncs[t];delete this.taskIdsToPromiseFuncs[t],this.numTasksRunning--,s[0](e.data.outputData)}}}addPromiseFunc(t,e,s){this.taskIdsToPromiseFuncs[t]=[e,s]}makeTaskId(){let t="";const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let s=0;s<16;s++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}async doApiCall(t,e,s){this.numTasksRunning++,await this.onReady;const a=new Promise(((a,i)=>{s||(s=this.makeTaskId()),this.taskIdsToPromiseFuncs[s]=[a,i],this.worker.postMessage({msg:t,id:s,inputData:e})}));return await a}}const qe=class{constructor(){this.iterations=3e3,this.phase=x,this.faction=k.Alliance,this.fixedRngSeed=0,this.show1hWeapons=!0,this.show2hWeapons=!0,this.showMatchingGems=!0,this.showDamageMetrics=!0,this.showThreatMetrics=!1,this.showHealingMetrics=!1,this.showExperimental=!1,this.items={},this.enchants=[],this.gems={},this.presetEncounters={},this.presetTargets={},this.iterationsChangeEmitter=new i,this.phaseChangeEmitter=new i,this.factionChangeEmitter=new i,this.fixedRngSeedChangeEmitter=new i,this.lastUsedRngSeedChangeEmitter=new i,this.show1hWeaponsChangeEmitter=new i,this.show2hWeaponsChangeEmitter=new i,this.showMatchingGemsChangeEmitter=new i,this.showDamageMetricsChangeEmitter=new i,this.showThreatMetricsChangeEmitter=new i,this.showHealingMetricsChangeEmitter=new i,this.showExperimentalChangeEmitter=new i,this.crashEmitter=new i,this.simResultEmitter=new i,this.lastUsedRngSeed=0,this.modifyRaidProto=()=>{},this.workerPool=new je(3),this._initPromise=this.workerPool.getGearList(f.create()).then((t=>{t.items.forEach((t=>this.items[t.id]=t)),this.enchants=t.enchants,t.gems.forEach((t=>this.gems[t.id]=t)),t.encounters.forEach((t=>this.presetEncounters[t.path]=t)),t.encounters.map((t=>t.targets)).flat().forEach((t=>this.presetTargets[t.path]=t))})),this.raid=new Fe(this),this.encounter=new We(this),this.settingsChangeEmitter=i.onAny([this.iterationsChangeEmitter,this.phaseChangeEmitter,this.fixedRngSeedChangeEmitter,this.show1hWeaponsChangeEmitter,this.show2hWeaponsChangeEmitter,this.showMatchingGemsChangeEmitter,this.showDamageMetricsChangeEmitter,this.showThreatMetricsChangeEmitter,this.showHealingMetricsChangeEmitter,this.showExperimentalChangeEmitter]),this.changeEmitter=i.onAny([this.settingsChangeEmitter,this.raid.changeEmitter,this.encounter.changeEmitter]),this.raid.changeEmitter.on((t=>this.updateCharacterStats(t)))}waitForInit(){return this._initPromise}setModifyRaidProto(t){this.modifyRaidProto=t}getModifiedRaidProto(){const t=this.raid.toProto();return this.modifyRaidProto(t),t.parties.forEach((t=>{t.players.forEach((t=>{if(!t.equipment)return;let e=this.lookupEquipmentSpec(t.equipment),s=!1;const a=[t.profession1,t.profession2].includes(T.Blacksmithing);e.hasInactiveMetaGem(a)&&(e=e.withoutMetaGem(),s=!0),a||(e=e.withoutBlacksmithSockets(),s=!0),s&&(t.equipment=e.asSpec())}))})),t}makeRaidSimRequest(t){const e=this.getModifiedRaidProto(),s=this.encounter.toProto();return b.create({raid:e,encounter:s,simOptions:D.create({iterations:t?1:this.getIterations(),randomSeed:BigInt(this.nextRngSeed()),debugFirstIteration:!0})})}async runRaidSim(t,e){if(this.raid.isEmpty())throw new Error("Raid is empty! Try adding some players first.");if(this.encounter.getNumTargets()<1)throw new Error("Encounter has no targets! Try adding some targets first.");await this.waitForInit();const s=this.makeRaidSimRequest(!1);var a=await this.workerPool.raidSimAsync(s,e);if(""!=a.errorResult)throw new _e(a.errorResult);const i=await M.makeNew(s,a);this.simResultEmitter.emit(t,i)}async runRaidSimWithLogs(t){if(this.raid.isEmpty())throw new Error("Raid is empty! Try adding some players first.");if(this.encounter.getNumTargets()<1)throw new Error("Encounter has no targets! Try adding some targets first.");await this.waitForInit();const e=this.makeRaidSimRequest(!0),s=await this.workerPool.raidSimAsync(e,(()=>{}));if(""!=s.errorResult)throw new _e(s.errorResult);const a=await M.makeNew(e,s);return this.simResultEmitter.emit(t,a),a}async updateCharacterStats(t){if(0==t)return;t=i.nextEventID(),await this.waitForInit();const e=this.raid.getPlayers(),s=S.create({raid:this.getModifiedRaidProto()}),a=await this.workerPool.computeStats(s);""==a.errorResult?i.freezeAllAndDo((()=>{a.raidStats.parties.forEach(((s,a)=>s.players.forEach(((s,i)=>e[5*a+i]?.setCurrentStats(t,s)))))})):this.crashEmitter.emit(t,new _e(a.errorResult))}async statWeights(t,e,s,a){if(this.raid.isEmpty())throw new Error("Raid is empty! Try adding some players first.");if(this.encounter.getNumTargets()<1)throw new Error("Encounter has no targets! Try adding some targets first.");if(await this.waitForInit(),null==t.getParty())return console.warn("Trying to get stat weights without a party!"),y.create();{const i=this.raid.getTanks().map((t=>t.targetIndex)).includes(t.getRaidIndex())?[u.create({targetIndex:0})]:[],n=w.create({player:t.toProto(),raidBuffs:this.raid.getBuffs(),partyBuffs:t.getParty().getBuffs(),debuffs:this.raid.getDebuffs(),encounter:this.encounter.toProto(),simOptions:D.create({iterations:this.getIterations(),randomSeed:BigInt(this.nextRngSeed()),debug:!1}),tanks:i,statsToWeigh:e,epReferenceStat:s});return await this.workerPool.statWeightsAsync(n,a)}}getItems(t){let e=Object.values(this.items);return null!=t&&(e=e.filter((e=>R(e).includes(t)))),e}getEnchants(t){let e=Object.values(this.enchants);return null!=t&&(e=e.filter((e=>B(e).includes(t)))),e}getEnchantFlexible(t){return Object.values(this.enchants).find((e=>e.id==t||e.effectId==t))||null}getGems(t){let e=Object.values(this.gems);return t&&(e=e.filter((e=>L(e,t)))),e}getMatchingGems(t){return Object.values(this.gems).filter((e=>N(e,t)))}getPresetEncounter(t){return this.presetEncounters[t]||null}getPresetTarget(t){return this.presetTargets[t]||null}getAllPresetEncounters(){return Object.values(this.presetEncounters)}getAllPresetTargets(){return Object.values(this.presetTargets)}getPhase(){return this.phase}setPhase(t,e){e!=this.phase&&e>0&&(this.phase=e,this.phaseChangeEmitter.emit(t))}getFaction(){return this.faction}setFaction(t,e){e!=this.faction&&e&&(this.faction=e,this.factionChangeEmitter.emit(t))}getFixedRngSeed(){return this.fixedRngSeed}setFixedRngSeed(t,e){e!=this.fixedRngSeed&&(this.fixedRngSeed=e,this.fixedRngSeedChangeEmitter.emit(t))}nextRngSeed(){let t=0;return t=this.fixedRngSeed?this.fixedRngSeed:Math.floor(Math.random()*qe.MAX_RNG_SEED),this.lastUsedRngSeed=t,this.lastUsedRngSeedChangeEmitter.emit(i.nextEventID()),t}getLastUsedRngSeed(){return this.lastUsedRngSeed}getShow1hWeapons(){return this.show1hWeapons}setShow1hWeapons(t,e){e!=this.show1hWeapons&&(this.show1hWeapons=e,this.show1hWeaponsChangeEmitter.emit(t))}getShow2hWeapons(){return this.show2hWeapons}setShow2hWeapons(t,e){e!=this.show2hWeapons&&(this.show2hWeapons=e,this.show2hWeaponsChangeEmitter.emit(t))}getShowMatchingGems(){return this.showMatchingGems}setShowMatchingGems(t,e){e!=this.showMatchingGems&&(this.showMatchingGems=e,this.showMatchingGemsChangeEmitter.emit(t))}getShowDamageMetrics(){return this.showDamageMetrics}setShowDamageMetrics(t,e){e!=this.showDamageMetrics&&(this.showDamageMetrics=e,this.showDamageMetricsChangeEmitter.emit(t))}getShowThreatMetrics(){return this.showThreatMetrics}setShowThreatMetrics(t,e){e!=this.showThreatMetrics&&(this.showThreatMetrics=e,this.showThreatMetricsChangeEmitter.emit(t))}getShowHealingMetrics(){return this.showHealingMetrics}setShowHealingMetrics(t,e){e!=this.showHealingMetrics&&(this.showHealingMetrics=e,this.showHealingMetricsChangeEmitter.emit(t))}getShowExperimental(){return this.showExperimental}setShowExperimental(t,e){e!=this.showExperimental&&(this.showExperimental=e,this.showExperimentalChangeEmitter.emit(t))}getIterations(){return this.iterations}setIterations(t,e){e!=this.iterations&&(this.iterations=e,this.iterationsChangeEmitter.emit(t))}lookupItemSpec(t){const e=this.items[t.id];if(!e)return null;const s=t.enchant>0?this.enchants.find((s=>s.id==t.enchant&&s.type==e.type)):null,a=t.gems.map((t=>this.gems[t]||null));return new V(e,s,a)}lookupEquipmentSpec(t){const e={};return t.items.forEach((t=>{const s=this.lookupItemSpec(t);if(!s)return;const a=R(s.item).find((t=>!e[t]));if(null==a)throw new Error("No slots left to equip "+O.toJsonString(s.item));e[a]=s})),new A(e)}toProto(){return W.create({iterations:this.getIterations(),phase:this.getPhase(),fixedRngSeed:BigInt(this.getFixedRngSeed()),showDamageMetrics:this.getShowDamageMetrics(),showThreatMetrics:this.getShowThreatMetrics(),showHealingMetrics:this.getShowHealingMetrics(),showExperimental:this.getShowExperimental(),faction:this.getFaction()})}fromProto(t,e){i.freezeAllAndDo((()=>{this.setIterations(t,e.iterations||3e3),this.setPhase(t,e.phase||x),this.setFixedRngSeed(t,Number(e.fixedRngSeed)),this.setShowDamageMetrics(t,e.showDamageMetrics),this.setShowThreatMetrics(t,e.showThreatMetrics),this.setShowHealingMetrics(t,e.showHealingMetrics),this.setShowExperimental(t,e.showExperimental),this.setFaction(t,e.faction||k.Alliance)}))}applyDefaults(t,e,s){this.fromProto(t,W.create({iterations:3e3,phase:x,faction:k.Alliance,showDamageMetrics:!s,showThreatMetrics:e,showHealingMetrics:s}))}};let $e=qe;$e.MAX_RNG_SEED=Math.pow(2,32)-1;class _e extends Error{constructor(t){super(t),this.errorStr=t}}class ze extends H{constructor(t,e,s){super(t,"number-picker-root",e,s),this.float=s.float||!1,this.positive=s.positive||!1,this.inputElem=document.createElement("input"),this.float?(this.inputElem.type="text",this.inputElem.inputMode="numeric"):(this.inputElem.type="number",this.positive&&(this.inputElem.min="0",this.inputElem.onchange=t=>{this.inputElem.value=Math.abs(parseInt(this.inputElem.value)).toString()})),this.inputElem.classList.add("number-picker-input"),this.rootElem.appendChild(this.inputElem),this.init(),this.inputElem.addEventListener("change",(t=>{this.inputChanged(i.nextEventID())}))}getInputElem(){return this.inputElem}getInputValue(){return this.float?parseFloat(this.inputElem.value||"")||0:parseInt(this.inputElem.value||"")||0}setInputValue(t){this.inputElem.value=String(t)}}class Je extends F{constructor(t,e,s){super(t,"bonus-stats-root"),this.stats=s;const a=document.createElement("span");a.classList.add("bonus-stats-label"),a.textContent="Bonus Stats",tippy(a,{content:"Extra stats to add on top of gear, buffs, etc.",allowHTML:!0}),this.rootElem.appendChild(a),this.statPickers=U.filter((t=>this.stats.includes(t))).map((t=>new ze(this.rootElem,e,{label:j[t],changedEvent:t=>t.bonusStatsChangeEmitter,getValue:e=>e.getBonusStats().getStat(t),setValue:(e,s,a)=>{const i=s.getBonusStats().withStat(t,a);s.setBonusStats(e,i)}}))),e.bonusStatsChangeEmitter.on((()=>{this.statPickers.forEach((t=>{t.getInputValue()>0?(t.rootElem.classList.remove("negative"),t.rootElem.classList.add("positive")):t.getInputValue()<0?(t.rootElem.classList.remove("positive"),t.rootElem.classList.add("negative")):(t.rootElem.classList.remove("negative"),t.rootElem.classList.remove("positive"))}))}))}}class Ke extends H{constructor(t,e,s){super(t,"boolean-picker-root",e,s),this.inputElem=document.createElement("input"),this.inputElem.type="checkbox",this.inputElem.classList.add("boolean-picker-input"),this.rootElem.appendChild(this.inputElem),this.init(),this.inputElem.addEventListener("change",(t=>{this.inputChanged(i.nextEventID())}))}getInputElem(){return this.inputElem}getInputValue(){return Boolean(this.inputElem.checked)}setInputValue(t){this.inputElem.checked=t}}const Ye=[o.StatArcaneSpellPower,o.StatFireSpellPower,o.StatFrostSpellPower,o.StatHolySpellPower,o.StatNatureSpellPower,o.StatShadowSpellPower];class Xe extends F{constructor(t,e,s,a){super(t,"character-stats-root"),this.stats=U.filter((t=>s.includes(t))),this.player=e,this.modifyDisplayStats=a;const n=document.createElement("table");n.classList.add("character-stats-table"),this.rootElem.appendChild(n),this.valueElems=[],this.tooltipElems=[],this.stats.forEach((t=>{const e=document.createElement("tr");e.classList.add("character-stats-table-row"),e.innerHTML=`\n\t\t\t\t<td class="character-stats-table-label">\n\t\t\t\t\t<span>${j[t].toUpperCase()}<span>\n\t\t\t\t\t<span class="character-stats-table-tooltip fas fa-search"></span>\n\t\t\t\t</td>\n\t\t\t\t<td class="character-stats-table-value"></td>\n\t\t\t`,n.appendChild(e);const s=e.getElementsByClassName("character-stats-table-value")[0];this.valueElems.push(s);const a=e.getElementsByClassName("character-stats-table-tooltip")[0];this.tooltipElems.push(a)})),this.updateStats(e),i.onAny([e.currentStatsEmitter,e.sim.changeEmitter]).on((()=>{this.updateStats(e)}))}updateStats(t){const e=t.getCurrentStats(),a=this.modifyDisplayStats?this.modifyDisplayStats(this.player):{talents:new s},i=new s(e.baseStats),n=new s(e.gearStats),o=new s(e.talentsStats),l=new s(e.buffsStats),r=new s(e.consumesStats),d=Xe.getDebuffStats(t),c=new s(e.finalStats).add(a.talents).add(d),m=n.subtract(i),h=o.subtract(n).add(a.talents),p=l.subtract(o),u=r.subtract(l);this.stats.forEach(((e,s)=>{this.valueElems[s].textContent=Xe.statDisplayString(t,c,e),tippy(this.tooltipElems[s],{content:`\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Base:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,i,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Gear:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,m,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Talents:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,h,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Buffs:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,p,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Consumes:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,u,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${0==d.getStat(e)?"":`\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,d,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\t\t\t\t\t<div class="character-stats-tooltip-row">\n\t\t\t\t\t\t<span>Total:</span>\n\t\t\t\t\t\t<span>${Xe.statDisplayString(t,c,e)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t`,allowHTML:!0})}))}static statDisplayString(t,e,s){let a=e.getStat(s);Ye.includes(s)&&(a+=e.getStat(o.StatSpellPower));let i=String(Math.round(a));return s==o.StatMeleeHit?i+=` (${(a/G).toFixed(2)}%)`:s==o.StatSpellHit?i+=` (${(a/q).toFixed(2)}%)`:s==o.StatMeleeCrit||s==o.StatSpellCrit?i+=` (${(a/$).toFixed(2)}%)`:s==o.StatMeleeHaste?[_.ClassDruid,_.ClassShaman,_.ClassPaladin,_.ClassDeathknight].includes(t.getClass())?i+=` (${(a/z).toFixed(2)}%)`:i+=` (${(a/J).toFixed(2)}%)`:s==o.StatSpellHaste?i+=` (${(a/J).toFixed(2)}%)`:s==o.StatExpertise?i+=` (${Math.floor(a/K).toFixed(0)})`:s==o.StatDefense?i+=` (${(5*Y+a/X).toFixed(1)})`:s==o.StatBlock?i+=` (${(a/Z).toFixed(2)}%)`:s==o.StatDodge?i+=` (${(a/Q).toFixed(2)}%)`:s==o.StatParry&&(i+=` (${(a/tt).toFixed(2)}%)`),i}static getDebuffStats(t){let e=new s;const a=t.sim.raid.getDebuffs();return(a.misery||a.faerieFire==et.TristateEffectImproved)&&(e=e.addStat(o.StatSpellHit,3*q)),(a.totemOfWrath||a.heartOfTheCrusader||a.masterPoisoner)&&(e=e.addStat(o.StatSpellCrit,3*$),e=e.addStat(o.StatMeleeCrit,3*st)),(a.improvedScorch||a.wintersChill||a.shadowMastery)&&(e=e.addStat(o.StatSpellCrit,5*$)),e}}class Ze extends H{constructor(t,e,s){super(t,"icon-enum-picker-root",e,s),this.config=s,this.currentValue=this.config.zeroValue,this.rootElem.classList.add("dropdown-root"),this.rootElem.innerHTML='\n\t\t\t<a class="dropdown-button icon-enum-picker-button"></a>\n\t\t\t<div class="dropdown-panel icon-enum-picker-dropdown"></div>\n    ',this.buttonElem=this.rootElem.getElementsByClassName("icon-enum-picker-button")[0];const a=this.rootElem.getElementsByClassName("icon-enum-picker-dropdown")[0];this.buttonElem.addEventListener("click",(t=>{t.preventDefault()})),this.buttonElem.addEventListener("touchstart",(t=>{"block"==a.style.display?a.style.display="none":a.style.display="block",t.preventDefault()})),this.buttonElem.addEventListener("touchend",(t=>{t.preventDefault()})),a.style.gridTemplateColumns=`repeat(${this.config.numColumns}, 1fr)`,s.values.forEach(((t,e)=>{const n=document.createElement("div");n.classList.add("dropdown-option-container"),a.appendChild(n);const o=document.createElement("a");o.classList.add("dropdown-option","icon-enum-picker-option"),n.appendChild(o),this.setImage(o,t),t.tooltip&&tippy(o,{content:t.tooltip,allowHTML:!0}),t.showWhen&&s.changedEvent(this.modObject).on((e=>{t.showWhen&&t.showWhen(this.modObject)?n.classList.remove("hide"):n.classList.add("hide")})),o.addEventListener("click",(e=>{e.preventDefault(),this.currentValue=t.value,this.inputChanged(i.nextEventID()),o.dispatchEvent(new Event("mouseout"))})),o.addEventListener("touchstart",(t=>{t.preventDefault()})),o.addEventListener("touchend",(e=>{e.preventDefault(),this.currentValue=t.value,this.inputChanged(i.nextEventID()),a.style.display="none"}))})),this.init()}setActionImage(t,e){e.fillAndSet(t,!0,!0)}setImage(t,e){e.actionId?this.setActionImage(t,e.actionId):(t.style.backgroundImage="",t.style.backgroundColor=e.color)}getInputElem(){return this.buttonElem}getInputValue(){return this.currentValue}setInputValue(t){this.currentValue=t,this.config.equals(this.currentValue,this.config.zeroValue)?this.rootElem.classList.remove("active"):this.rootElem.classList.add("active");const e=this.config.values.find((t=>this.config.equals(t.value,this.currentValue)));if(e)this.setImage(this.buttonElem,e);else if(this.config.backupIconUrl){const t=this.config.backupIconUrl(this.currentValue);this.setActionImage(this.buttonElem,t),this.rootElem.classList.remove("active")}}}class Qe extends H{constructor(t,e,s){super(t,"number-list-picker-root",e,s),this.inputElem=document.createElement("input"),this.inputElem.type="text",this.inputElem.placeholder=s.placeholder||"",this.inputElem.classList.add("number-list-picker-input"),this.rootElem.appendChild(this.inputElem),this.init(),this.inputElem.addEventListener("change",(t=>{this.inputChanged(i.nextEventID())}))}getInputElem(){return this.inputElem}getInputValue(){const t=this.inputElem.value;return t?t.split(",").map(parseFloat).filter((t=>!isNaN(t))):[]}setInputValue(t){at(this.getInputValue(),t)||(this.inputElem.value=t.map((t=>String(t))).join(","))}}class ts extends F{constructor(t,e){super(t,"cooldowns-picker-root"),this.player=e,this.cooldownPickers=[],i.onAny([this.player.currentStatsEmitter]).on((t=>{this.update()})),this.update()}update(){this.rootElem.innerHTML="";const t=this.player.getCooldowns().cooldowns;this.cooldownPickers=[];for(let e=0;e<t.length+1;e++){const s=t[e],a=document.createElement("div");a.classList.add("cooldown-picker"),e==t.length&&a.classList.add("add-cooldown-picker"),this.rootElem.appendChild(a);const n=document.createElement("span");n.classList.add("delete-cooldown","fa","fa-times"),n.addEventListener("click",(t=>{const s=this.player.getCooldowns();s.cooldowns.splice(e,1),this.player.setCooldowns(i.nextEventID(),s)})),a.appendChild(n),this.makeActionPicker(a,e);const o=document.createElement("span");o.classList.add("cooldown-picker-label"),s&&s.id&&it.fromProto(s.id).fill(this.player.getRaidIndex()).then((t=>o.textContent=t.name)),a.appendChild(o),this.makeTimingsPicker(a,e),this.cooldownPickers.push(a)}}makeActionPicker(t,e){const s=this.player.getCurrentStats().cooldowns;return new Ze(t,this.player,{extraCssClasses:["cooldown-action-picker"],numColumns:3,values:[{color:"#grey",value:nt.create()}].concat(s.map((t=>({actionId:it.fromProto(t),value:t})))),equals:(t,e)=>nt.equals(t,e),zeroValue:nt.create(),backupIconUrl:t=>it.fromProto(t),changedEvent:t=>t.cooldownsChangeEmitter,getValue:t=>t.getCooldowns().cooldowns[e]?.id||nt.create(),setValue:(t,s,a)=>{const i=s.getCooldowns();for(;i.cooldowns.length<e;)i.cooldowns.push(ot.create());i.cooldowns[e]=ot.create({id:a,timings:[]}),s.setCooldowns(t,i)}})}makeTimingsPicker(t,e){return new Qe(t,this.player,{extraCssClasses:["cooldown-timings-picker"],placeholder:"20, 40, ...",changedEvent:t=>t.cooldownsChangeEmitter,getValue:t=>t.getCooldowns().cooldowns[e]?.timings||[],setValue:(t,s,a)=>{const i=s.getCooldowns();i.cooldowns[e].timings=a,s.setCooldowns(t,i)},enableWhen:t=>{const s=t.getCooldowns().cooldowns[e];return s&&!nt.equals(s.id,nt.create())}})}}class es extends F{constructor(t,e,s){super(t,"detailed-results-manager-root"),this.simUI=e,this.tabWindow=null,this.latestRun=null,this.simUI.sim.settingsChangeEmitter.on((()=>this.updateSettings()));const a=window.getComputedStyle(this.rootElem),i=new URL(`${window.location.protocol}//${window.location.host}/${P}/detailed_results/index.html`);i.searchParams.append("mainTextColor",a.getPropertyValue("--main-text-color").trim()),i.searchParams.append("themeColorPrimary",a.getPropertyValue("--theme-color-primary").trim()),i.searchParams.append("themeColorBackground",a.getPropertyValue("--theme-color-background").trim()),i.searchParams.append("themeColorBackgroundRaw",a.getPropertyValue("--theme-color-background-raw").trim()),i.searchParams.append("themeBackgroundImage",a.getPropertyValue("--theme-background-image").trim()),i.searchParams.append("themeBackgroundOpacity",a.getPropertyValue("--theme-background-opacity").trim()),e.isIndividualSim()&&i.searchParams.append("isIndividualSim",""),this.rootElem.innerHTML=`\n\t\t<div class="detailed-results-controls-div">\n\t\t\t<button class="detailed-results-new-tab-button sim-button">VIEW IN SEPARATE TAB</button>\n\t\t</div>\n\t\t<iframe class="detailed-results-iframe" src="${i.href}" allowtransparency="true"></iframe>\n\t\t`,this.iframeElem=this.rootElem.getElementsByClassName("detailed-results-iframe")[0];this.rootElem.getElementsByClassName("detailed-results-new-tab-button")[0].addEventListener("click",(t=>{null==this.tabWindow||this.tabWindow.closed?(this.tabWindow=window.open(i.href,"Detailed Results"),this.tabWindow.addEventListener("load",(t=>{this.latestRun&&(this.updateSettings(),this.setSimRunData(this.latestRun))}))):this.tabWindow.focus()})),s.currentChangeEmitter.on((()=>{const t=s.getRunData();t&&this.setSimRunData(t)}))}setSimRunData(t){this.latestRun=t,this.postMessage(lt.create({data:{oneofKind:"runData",runData:t}}))}updateSettings(){this.postMessage(lt.create({data:{oneofKind:"settings",settings:this.simUI.sim.toProto()}}))}postMessage(t){this.iframeElem.contentWindow.postMessage(lt.toJson(t),"*"),this.tabWindow&&this.tabWindow.postMessage(lt.toJson(t),"*")}}class ss extends H{constructor(t,e,s){if(super(t,"list-picker-root",e,s),this.config=s,this.itemPickerPairs=[],this.rootElem.innerHTML=`\n\t\t\t${this.config.title?`<span class="list-picker-title">${this.config.title}</span>`:""}\n\t\t\t<div class="list-picker-items"></div>\n\t\t\t<button class="list-picker-new-button sim-button">NEW ${s.itemLabel.toUpperCase()}</button>\n\t\t`,this.config.title&&this.config.titleTooltip){const t=this.rootElem.getElementsByClassName("list-picker-title")[0];tippy(t,{content:this.config.titleTooltip,allowHTML:!0})}this.itemsDiv=this.rootElem.getElementsByClassName("list-picker-items")[0];this.rootElem.getElementsByClassName("list-picker-new-button")[0].addEventListener("click",(t=>{const e=this.config.newItem(),s=this.config.getValue(this.modObject).concat([e]);this.config.setValue(i.nextEventID(),this.modObject,s)})),this.init()}getInputElem(){return this.rootElem}getInputValue(){return this.itemPickerPairs.map((t=>t.item))}setInputValue(t){const e=this.itemPickerPairs.filter((e=>!t.includes(e.item)));e.forEach((t=>t.elem.remove())),this.itemPickerPairs=this.itemPickerPairs.filter((t=>!e.includes(t)));const s=this.getInputValue();t.filter((t=>!s.includes(t))).forEach((t=>this.addNewPicker(t))),this.itemPickerPairs=t.map((t=>this.itemPickerPairs.find((e=>e.item==t))));Array.from(this.itemsDiv.children).every(((t,e)=>t==this.itemPickerPairs[e].elem))||(this.itemPickerPairs.forEach((t=>t.elem.remove())),this.itemPickerPairs.forEach((t=>this.itemsDiv.appendChild(t.elem))))}getPickerIndex(t){return this.itemPickerPairs.findIndex((e=>e.picker==t))}addNewPicker(t){const e=document.createElement("div");e.classList.add("list-picker-item-container"),this.config.inlineMenuBar&&e.classList.add("inline");const s='<div class="list-picker-item"></div>';e.innerHTML=`\n\t\t\t${this.config.inlineMenuBar?s:""}\n\t\t\t<div class="list-picker-item-header">\n\t\t\t\t<span class="list-picker-item-up fa fa-angle-up"></span>\n\t\t\t\t<span class="list-picker-item-down fa fa-angle-down"></span>\n\t\t\t\t<span class="list-picker-item-copy fa fa-copy"></span>\n\t\t\t\t<span class="list-picker-item-delete fa fa-times"></span>\n\t\t\t</div>\n\t\t\t${this.config.inlineMenuBar?"":s}\n\t\t`;const a=e.getElementsByClassName("list-picker-item-up")[0];a.addEventListener("click",(e=>{const s=this.itemPickerPairs.findIndex((e=>e.item==t));if(-1==s)return void console.error("Could not find list picker item!");if(0==s)return;const a=this.config.getValue(this.modObject);rt(a,s,s-1),this.config.setValue(i.nextEventID(),this.modObject,a)})),tippy(a,{content:"Move Up",allowHTML:!0});const n=e.getElementsByClassName("list-picker-item-down")[0];n.addEventListener("click",(e=>{const s=this.itemPickerPairs.findIndex((e=>e.item==t));if(-1==s)return void console.error("Could not find list picker item!");if(s==this.itemPickerPairs.length-1)return;const a=this.config.getValue(this.modObject);rt(a,s,s+1),this.config.setValue(i.nextEventID(),this.modObject,a)})),tippy(n,{content:"Move Down",allowHTML:!0});const o=e.getElementsByClassName("list-picker-item-copy")[0];o.addEventListener("click",(e=>{if(-1==this.itemPickerPairs.findIndex((e=>e.item==t)))return void console.error("Could not find list picker item!");const s=this.config.copyItem(t),a=this.config.getValue(this.modObject).concat([s]);this.config.setValue(i.nextEventID(),this.modObject,a)})),tippy(o,{content:`Copy to New ${this.config.itemLabel}`,allowHTML:!0});const l=e.getElementsByClassName("list-picker-item-delete")[0];l.addEventListener("click",(e=>{const s=this.itemPickerPairs.findIndex((e=>e.item==t));if(-1==s)return void console.error("Could not find list picker item!");const a=this.config.getValue(this.modObject);a.splice(s,1),this.config.setValue(i.nextEventID(),this.modObject,a)})),tippy(l,{content:"Delete",allowHTML:!0});const r=e.getElementsByClassName("list-picker-item")[0],d=this.config.newItemPicker(r,t,this);this.itemsDiv.appendChild(e),this.itemPickerPairs.push({item:t,elem:e,picker:d})}}class as extends F{constructor(t,e,s){super(t,"custom-rotation-picker-root"),new ss(this.rootElem,e,{extraCssClasses:["custom-spells-picker"],title:"Spell Priority",titleTooltip:"Spells at the top of the list are prioritized first. Safely ignores untalented options.",itemLabel:"Spell",changedEvent:t=>t.changeEmitter,getValue:t=>s.getValue(t).spells,setValue:(t,e,a)=>{s.setValue(t,e,dt.create({spells:a}))},newItem:()=>ct.create(),copyItem:t=>ct.clone(t),newItemPicker:(t,a,i)=>new is(t,e,a,s,i),inlineMenuBar:!0,showWhen:s.showWhen})}}class is extends F{constructor(t,e,s,a,i){super(t,"custom-spell-picker-root"),this.player=e,this.config=a,this.listPicker=i,new Ze(this.rootElem,s,{numColumns:a.numColumns,values:a.values.map((t=>{if(t.showWhen){const s=t.showWhen;t.showWhen=t=>s(e)}return t})),equals:(t,e)=>t==e,zeroValue:0,changedEvent:t=>e.changeEmitter,getValue:t=>t.spell,setValue:(t,e,s)=>{e.spell=s,this.setSpell(t,e)}})}setSpell(t,e){const s=this.listPicker.getPickerIndex(this),a=this.config.getValue(this.player);a.spells[s]=ct.clone(e),this.config.setValue(t,this.player,a)}}class ns extends H{constructor(t,e,s){super(t,"enum-picker-root",e,s),this.selectElem=document.createElement("select"),this.selectElem.classList.add("enum-picker-selector"),this.rootElem.appendChild(this.selectElem),s.values.forEach((t=>{const e=document.createElement("option");e.value=String(t.value),e.textContent=t.name,this.selectElem.appendChild(e),t.tooltip&&(e.title=t.tooltip)})),this.init(),this.selectElem.addEventListener("change",(t=>{this.inputChanged(i.nextEventID())}))}getInputElem(){return this.selectElem}getInputValue(){return parseInt(this.selectElem.value)}setInputValue(t){this.selectElem.value=String(t)}}class os extends F{constructor(t,e,s,a){super(t,"encounter-picker-root"),ds(this.rootElem,e,s.showExecuteProportion),e.sim.waitForInit().then((()=>{const t=e.sim.getAllPresetTargets();new ns(this.rootElem,e,{extraCssClasses:["damage-metrics","npc-picker"],label:"NPC",labelTooltip:"Selects a preset NPC configuration.",values:[{name:"Custom",value:-1}].concat(t.map(((t,e)=>({name:t.path,value:e})))),changedEvent:t=>t.changeEmitter,getValue:e=>t.findIndex((t=>e.primaryTarget.matchesPreset(t))),setValue:(e,s,a)=>{-1!=a&&s.primaryTarget.applyPreset(e,t[a])}}),a.isIndividualSim()&&mt(a.player.spec)&&new ze(this.rootElem,a.sim.raid,{label:"Num Allies",labelTooltip:"Number of allied players in the raid.",changedEvent:t=>t.targetDummiesChangeEmitter,getValue:t=>t.getTargetDummies(),setValue:(t,e,s)=>{e.setTargetDummies(t,s)}}),a.isIndividualSim()&&ht(a.player.spec)&&new ze(this.rootElem,e,{label:"Min Base Damage",labelTooltip:"Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.",changedEvent:t=>t.changeEmitter,getValue:t=>t.primaryTarget.getMinBaseDamage(),setValue:(t,e,s)=>{e.primaryTarget.setMinBaseDamage(t,s)}});const s=document.createElement("button");s.classList.add("sim-button","advanced-button","damage-metrics"),s.textContent="ADVANCED",s.addEventListener("click",(()=>new ls(this.rootElem,e,a))),this.rootElem.appendChild(s)}))}}class ls extends pt{constructor(t,e,s){super(t),this.encounter=e,this.rootElem.classList.add("advanced-encounter-picker"),this.rootElem.innerHTML='\n\t\t\t<div class="encounter-type"></div>\n\t\t\t<div class="encounter-header">\n\t\t\t</div>\n\t\t\t<div class="encounter-targets">\n\t\t\t</div>\n\t\t',this.addCloseButton();const a=this.encounter.sim.getAllPresetEncounters(),n=this.rootElem.getElementsByClassName("encounter-type")[0];new ns(n,this.encounter,{label:"ENCOUNTER",values:[{name:"Custom",value:-1}].concat(a.map(((t,e)=>({name:t.path,value:e})))),changedEvent:t=>t.changeEmitter,getValue:t=>a.findIndex((e=>t.matchesPreset(e))),setValue:(t,e,s)=>{-1!=s&&e.applyPreset(t,a[s])}});const o=this.rootElem.getElementsByClassName("encounter-header")[0],l=this.rootElem.getElementsByClassName("encounter-targets")[0];ds(o,this.encounter,!0),s.isIndividualSim()||new Ke(o,e,{label:"Use Health",labelTooltip:"Uses a damage limit in place of a duration limit. Damage limit is equal to sum of all targets health.",changedEvent:t=>t.changeEmitter,getValue:t=>t.getUseHealth(),setValue:(t,e,s)=>{e.setUseHealth(t,s)}}),new ss(l,this.encounter,{extraCssClasses:["targets-picker"],itemLabel:"Target",changedEvent:t=>t.targetsChangeEmitter,getValue:t=>t.getTargets(),setValue:(t,e,s)=>{e.setTargets(t,s)},newItem:()=>Ae.fromDefaults(i.nextEventID(),this.encounter.sim),copyItem:t=>t.clone(i.nextEventID()),newItemPicker:(t,e)=>new rs(t,e)})}}class rs extends F{constructor(e,s){super(e,"target-picker-root"),this.rootElem.innerHTML='\n\t\t\t<div class="target-picker-section target-picker-section1"></div>\n\t\t\t<div class="target-picker-section target-picker-section2"></div>\n\t\t\t<div class="target-picker-section target-picker-section3 threat-metrics"></div>\n\t\t',s.sim.encounter;const i=this.rootElem.getElementsByClassName("target-picker-section1")[0],n=this.rootElem.getElementsByClassName("target-picker-section2")[0],o=this.rootElem.getElementsByClassName("target-picker-section3")[0],l=s.sim.getAllPresetTargets();new ns(i,s,{extraCssClasses:["npc-picker"],label:"NPC",labelTooltip:"Selects a preset NPC configuration.",values:[{name:"Custom",value:-1}].concat(l.map(((t,e)=>({name:t.path,value:e})))),changedEvent:t=>t.changeEmitter,getValue:t=>l.findIndex((e=>t.matchesPreset(e))),setValue:(t,e,s)=>{-1!=s&&e.applyPreset(t,l[s])}}),new ns(i,s,{extraCssClasses:["ai-picker"],label:"AI",labelTooltip:"\n\t\t\t\t<p>Determines the target's ability rotation.</p>\n\t\t\t\t<p>Note that most rotations are not yet implemented.</p>\n\t\t\t",values:[{name:"None",value:0}].concat(l.map((t=>({name:t.path,value:t.target.id})))),changedEvent:t=>t.changeEmitter,getValue:t=>t.getId(),setValue:(t,e,s)=>{e.setId(t,s)}}),new ns(i,s,{label:"Level",values:[{name:"83",value:83},{name:"82",value:82},{name:"81",value:81},{name:"80",value:80}],changedEvent:t=>t.levelChangeEmitter,getValue:t=>t.getLevel(),setValue:(t,e,s)=>{e.setLevel(t,s)}}),new ns(i,s,{label:"Mob Type",values:ms,changedEvent:t=>t.mobTypeChangeEmitter,getValue:t=>t.getMobType(),setValue:(t,e,s)=>{e.setMobType(t,s)}}),new ns(i,s,{extraCssClasses:["threat-metrics"],label:"Tanked By",labelTooltip:"Determines which player in the raid this enemy will attack. If no player is assigned to the specified tank slot, this enemy will not attack.",values:[{name:"None",value:-1},{name:"Main Tank",value:0},{name:"Tank 2",value:1},{name:"Tank 3",value:2},{name:"Tank 4",value:3}],changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getTankIndex(),setValue:(t,e,s)=>{e.setTankIndex(t,s)}}),cs.forEach((t=>{const e=t.stat;new ze(n,s,{extraCssClasses:t.extraCssClasses,label:j[e],labelTooltip:t.tooltip,changedEvent:t=>t.statsChangeEmitter,getValue:t=>t.getStats().getStat(e),setValue:(t,s,a)=>{s.setStats(t,s.getStats().withStat(e,a))}})})),new ze(o,s,{label:"Swing Speed",labelTooltip:"Time in seconds between auto attacks. Set to 0 to disable auto attacks.",changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getSwingSpeed(),setValue:(t,e,s)=>{e.setSwingSpeed(t,s)}}),new ze(o,s,{label:"Min Base Damage",labelTooltip:"Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.",changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getMinBaseDamage(),setValue:(t,e,s)=>{e.setMinBaseDamage(t,s)}}),new Ke(o,s,{label:"Dual Wield",labelTooltip:"Uses 2 separate weapons to attack.",changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getDualWield(),setValue:(t,e,s)=>{e.setDualWield(t,s)}}),new Ke(o,s,{label:"DW Miss Penalty",labelTooltip:"Enables the Dual Wield Miss Penalty (+19% chance to miss) if dual wielding. Bosses in Hyjal/BT/SWP usually have this disabled to stop tanks from avoidance stacking.",changedEvent:t=>t.changeEmitter,getValue:t=>t.getDualWieldPenalty(),setValue:(t,e,s)=>{e.setDualWieldPenalty(t,s)},enableWhen:t=>t.getDualWield()}),new Ke(o,s,{label:"Parry Haste",labelTooltip:"Whether this enemy will gain parry haste when parrying attacks.",changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getParryHaste(),setValue:(t,e,s)=>{e.setParryHaste(t,s)}}),new ns(o,s,{label:"Spell School",labelTooltip:"Type of damage caused by auto attacks. This is usually Physical, but some enemies have elemental attacks.",values:[{name:"Physical",value:a.SpellSchoolPhysical},{name:"Arcane",value:a.SpellSchoolArcane},{name:"Fire",value:a.SpellSchoolFire},{name:"Frost",value:a.SpellSchoolFrost},{name:"Holy",value:a.SpellSchoolHoly},{name:"Nature",value:a.SpellSchoolNature},{name:"Shadow",value:a.SpellSchoolShadow}],changedEvent:t=>t.propChangeEmitter,getValue:t=>t.getSpellSchool(),setValue:(t,e,s)=>{e.setSpellSchool(t,s)}}),new Ke(o,s,{label:"Sunwell Radiance",labelTooltip:"Reduces the chance for this enemy's attacks to be dodged by 20% and be missed by 5%. All Sunwell Plateau bosses have this.",changedEvent:t=>t.changeEmitter,getValue:t=>t.getSuppressDodge(),setValue:(t,e,s)=>{e.setSuppressDodge(t,s)},enableWhen:e=>e.getLevel()==t})}}function ds(t,e,s){new ze(t,e,{label:"Duration",labelTooltip:"The fight length for each sim iteration, in seconds.",changedEvent:t=>t.changeEmitter,getValue:t=>t.getDuration(),setValue:(t,e,s)=>{e.setDuration(t,s)},enableWhen:t=>!e.getUseHealth()}),new ze(t,e,{label:"Duration +/-",labelTooltip:"Adds a random amount of time, in seconds, between [value, -1 * value] to each sim iteration. For example, setting Duration to 180 and Duration +/- to 10 will result in random durations between 170s and 190s.",changedEvent:t=>t.changeEmitter,getValue:t=>t.getDurationVariation(),setValue:(t,e,s)=>{e.setDurationVariation(t,s)},enableWhen:t=>!e.getUseHealth()}),s&&(new ze(t,e,{label:"Execute Duration 20 (%)",labelTooltip:"Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 20% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.",changedEvent:t=>t.changeEmitter,getValue:t=>100*t.getExecuteProportion20(),setValue:(t,e,s)=>{e.setExecuteProportion20(t,s/100)},enableWhen:t=>!e.getUseHealth()}),new ze(t,e,{label:"Execute Duration 25 (%)",labelTooltip:"Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 25% HP) for the purpose of effects like Warlock's Drain Soul.",changedEvent:t=>t.changeEmitter,getValue:t=>100*t.getExecuteProportion25(),setValue:(t,e,s)=>{e.setExecuteProportion25(t,s/100)},enableWhen:t=>!e.getUseHealth()}),new ze(t,e,{label:"Execute Duration 35 (%)",labelTooltip:"Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 35% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.",changedEvent:t=>t.changeEmitter,getValue:t=>100*t.getExecuteProportion35(),setValue:(t,e,s)=>{e.setExecuteProportion35(t,s/100)},enableWhen:t=>!e.getUseHealth()}))}const cs=[{stat:o.StatHealth,tooltip:"",extraCssClasses:[]},{stat:o.StatArmor,tooltip:"",extraCssClasses:[]},{stat:o.StatArcaneResistance,tooltip:"",extraCssClasses:[]},{stat:o.StatFireResistance,tooltip:"",extraCssClasses:[]},{stat:o.StatFrostResistance,tooltip:"",extraCssClasses:[]},{stat:o.StatNatureResistance,tooltip:"",extraCssClasses:[]},{stat:o.StatShadowResistance,tooltip:"",extraCssClasses:[]},{stat:o.StatAttackPower,tooltip:"",extraCssClasses:["threat-metrics"]},{stat:o.StatBlockValue,tooltip:"",extraCssClasses:["threat-metrics"]}],ms=[{name:"None",value:e.MobTypeUnknown},{name:"Beast",value:e.MobTypeBeast},{name:"Demon",value:e.MobTypeDemon},{name:"Dragonkin",value:e.MobTypeDragonkin},{name:"Elemental",value:e.MobTypeElemental},{name:"Giant",value:e.MobTypeGiant},{name:"Humanoid",value:e.MobTypeHumanoid},{name:"Mechanical",value:e.MobTypeMechanical},{name:"Undead",value:e.MobTypeUndead}];let hs=null;async function ps(t){return(await(null==hs&&(hs=fetch("/wotlk/assets/enchants/descriptions.json").then((t=>t.json())).then((t=>{const e={};for(let s in t)e[parseInt(s)]=t[s];return e}))),hs))[t.effectId]||t.name}const us={type:"enum",label:"Starting Conjured",labelTooltip:"If set, this conjured will be used instead of the default conjured for the first few uses.",values:[{name:"None",value:ut.ConjuredUnknown},{name:"Dark Rune",value:ut.ConjuredDarkRune},{name:"Flame Cap",value:ut.ConjuredFlameCap},{name:"Thistle Tea",value:ut.ConjuredRogueThistleTea}],changedEvent:t=>t.consumesChangeEmitter,getValue:t=>t.getConsumes().startingConjured,setValue:(t,e,s)=>{const a=e.getConsumes();a.startingConjured=s,e.setConsumes(t,a)}},gs={type:"boolean",label:"In Front of Target",labelTooltip:"Stand in front of the target, causing Blocks and Parries to be included in the attack table.",changedEvent:t=>t.inFrontOfTargetChangeEmitter,getValue:t=>t.getInFrontOfTarget(),setValue:(t,e,s)=>{e.setInFrontOfTarget(t,s)}},fs={type:"number",label:"Distance From Target",labelTooltip:"Distance from targets, in yards. Used to calculate travel time for certain spells.",changedEvent:t=>t.distanceFromTargetChangeEmitter,getValue:t=>t.getDistanceFromTarget(),setValue:(t,e,s)=>{e.setDistanceFromTarget(t,s)}},Es={type:"enum",extraCssClasses:["tank-selector","threat-metrics","within-raid-sim-hide"],label:"Tank Assignment",labelTooltip:"Determines which mobs will be tanked. Most mobs default to targeting the Main Tank, but in preset multi-target encounters this is not always true.",values:[{name:"None",value:-1},{name:"Main Tank",value:0},{name:"Tank 2",value:1},{name:"Tank 3",value:2},{name:"Tank 4",value:3}],changedEvent:t=>t.getRaid().tanksChangeEmitter,getValue:t=>t.getRaid().getTanks().findIndex((e=>u.equals(e,t.makeRaidTarget()))),setValue:(t,e,s)=>{const a=[];if(-1!=s){for(let t=0;t<s;t++)a.push(gt());a.push(e.makeRaidTarget())}e.getRaid().setTanks(t,a)}},Ss={type:"number",label:"Incoming HPS",labelTooltip:"\n\t\t<p>Average amount of healing received per second. Used for calculating chance of death.</p>\n\t\t<p>If set to 0, defaults to 125% of DTPS.</p>\n\t",changedEvent:t=>t.getRaid().changeEmitter,getValue:t=>t.getHealingModel().hps,setValue:(t,e,s)=>{const a=e.getHealingModel();a.hps=s,e.setHealingModel(t,a)},enableWhen:t=>null!=t.getRaid().getTanks().find((e=>u.equals(e,t.makeRaidTarget())))},vs={type:"number",float:!0,label:"Healing Cadence",labelTooltip:"\n\t\t<p>How often the incoming heal 'ticks', in seconds. Generally, longer durations favor Effective Hit Points (EHP) for minimizing Chance of Death, while shorter durations favor avoidance.</p>\n\t\t<p>Example: if Incoming HPS is set to 1000 and this is set to 1s, then every 1s a heal will be received for 1000. If this is instead set to 2s, then every 2s a heal will be recieved for 2000.</p>\n\t\t<p>If set to 0, defaults to 2.5 seconds.</p>\n\t",changedEvent:t=>t.getRaid().changeEmitter,getValue:t=>t.getHealingModel().cadenceSeconds,setValue:(t,e,s)=>{const a=e.getHealingModel();a.cadenceSeconds=s,e.setHealingModel(t,a)},enableWhen:t=>null!=t.getRaid().getTanks().find((e=>u.equals(e,t.makeRaidTarget())))},ws={type:"number",float:!0,label:"HP % for Defensive CDs",labelTooltip:"\n\t\t<p>% of Maximum Health, below which defensive cooldowns are allowed to be used.</p>\n\t\t<p>If set to 0, this restriction is disabled.</p>\n\t",changedEvent:t=>t.cooldownsChangeEmitter,getValue:t=>100*t.getCooldowns().hpPercentForDefensives,setValue:(t,e,s)=>{const a=e.getCooldowns();a.hpPercentForDefensives=s/100,e.setCooldowns(t,a)}};class Is extends F{constructor(t,e){super(t,"gear-picker-root");const s=document.createElement("div");s.classList.add("gear-picker-left"),this.rootElem.appendChild(s);const a=document.createElement("div");a.classList.add("gear-picker-right"),this.rootElem.appendChild(a);const i=[ft.ItemSlotHead,ft.ItemSlotNeck,ft.ItemSlotShoulder,ft.ItemSlotBack,ft.ItemSlotChest,ft.ItemSlotWrist,ft.ItemSlotMainHand,ft.ItemSlotOffHand].map((t=>new ys(s,e,t))),n=[ft.ItemSlotHands,ft.ItemSlotWaist,ft.ItemSlotLegs,ft.ItemSlotFeet,ft.ItemSlotFinger1,ft.ItemSlotFinger2,ft.ItemSlotTrinket1,ft.ItemSlotTrinket2,ft.ItemSlotRanged].map((t=>new ys(a,e,t)));this.itemPickers=i.concat(n).sort(((t,e)=>t.slot-e.slot))}}class ys extends F{constructor(t,e,s){super(t,"item-picker-root"),this._items=[],this._enchants=[],this._equippedItem=null,this.slot=s,this.player=e,this.rootElem.innerHTML='\n      <a class="item-picker-icon">\n        <div class="item-picker-sockets-container">\n        </div>\n      </a>\n      <div class="item-picker-labels-container">\n        <a class="item-picker-name"></a><br>\n        <a class="item-picker-enchant"></a>\n      </div>\n    ',this.iconElem=this.rootElem.getElementsByClassName("item-picker-icon")[0],this.nameElem=this.rootElem.getElementsByClassName("item-picker-name")[0],this.enchantElem=this.rootElem.getElementsByClassName("item-picker-enchant")[0],this.socketsContainerElem=this.rootElem.getElementsByClassName("item-picker-sockets-container")[0],this.item=e.getEquippedItem(s),e.sim.waitForInit().then((()=>{this._items=this.player.getItems(this.slot),this._enchants=this.player.getEnchants(this.slot);const t=t=>{t.preventDefault(),new bs(this.rootElem.closest(".individual-sim-ui"),this.player,this.slot,this._equippedItem,this._items,this._enchants)},e=t=>{t.preventDefault()};this.iconElem.addEventListener("click",t),this.iconElem.addEventListener("touchstart",t),this.iconElem.addEventListener("touchend",e),this.nameElem.addEventListener("click",t),this.nameElem.addEventListener("touchstart",t),this.nameElem.addEventListener("touchend",e),this.enchantElem.addEventListener("click",(t=>{t.preventDefault();new bs(this.rootElem.closest(".individual-sim-ui"),this.player,this.slot,this._equippedItem,this._items,this._enchants).openTab(1)})),this.enchantElem.addEventListener("touchstart",(t=>{t.preventDefault();new bs(this.rootElem.closest(".individual-sim-ui"),this.player,this.slot,this._equippedItem,this._items,this._enchants).openTab(1)})),this.enchantElem.addEventListener("touchend",e)})),e.gearChangeEmitter.on((()=>{this.item=e.getEquippedItem(s)})),e.professionChangeEmitter.on((()=>{null!=this._equippedItem&&this.player.setWowheadData(this._equippedItem,this.iconElem)}))}set item(t){var e;if(this.nameElem.removeAttribute("data-wowhead"),this.nameElem.removeAttribute("href"),this.iconElem.style.backgroundImage=`url('${e=this.slot,Cs[e]}')`,this.iconElem.removeAttribute("data-wowhead"),this.iconElem.removeAttribute("href"),this.enchantElem.removeAttribute("data-wowhead"),this.nameElem.textContent=Et[this.slot],St(this.nameElem,null),this.enchantElem.innerHTML="",this.socketsContainerElem.innerHTML="",null!=t){if(this.nameElem.textContent=t.item.name,t.item.heroic){var s=document.createElement("span");s.style.color="green",s.style.marginLeft="3px",s.innerText="[H]",this.nameElem.appendChild(s)}St(this.nameElem,t.item.quality),this.player.setWowheadData(t,this.iconElem),this.player.setWowheadData(t,this.nameElem),t.asActionId().fill().then((t=>{t.setBackgroundAndHref(this.iconElem),t.setWowheadHref(this.nameElem)})),t.enchant&&(ps(t.enchant).then((t=>{this.enchantElem.textContent=t})),t.enchant.isSpellId?this.enchantElem.setAttribute("data-wowhead",`domain=wotlk&spell=${t.enchant.id}`):this.enchantElem.setAttribute("data-wowhead",`domain=wotlk&item=${t.enchant.id}`)),t.allSocketColors().forEach(((e,s)=>{const a=document.createElement("img");if(a.classList.add("item-picker-gem-icon"),vt(a,e),null==t.gems[s]?a.src=wt(e):it.fromItemId(t.gems[s].id).fill().then((t=>{a.src=t.iconUrl})),this.socketsContainerElem.appendChild(a),s==t.numPossibleSockets-1&&[It.ItemTypeWrist,It.ItemTypeHands].includes(t.item.type)){const t=()=>{this.player.isBlacksmithing()?a.style.removeProperty("display"):a.style.display="none"};this.player.professionChangeEmitter.on(t),t()}}))}this._equippedItem=t}}class bs extends pt{constructor(t,e,s,a,i,n){super(t),this.player=e,this.rootElem.classList.add("selector-modal"),this.rootElem.innerHTML='\n\t\t\t<ul class="nav nav-tabs selector-modal-tabs">\n\t\t\t</ul>\n\t\t\t<div class="tab-content selector-modal-tab-content">\n\t\t\t</div>\n\t\t',this.addCloseButton(),this.tabsElem=this.rootElem.getElementsByClassName("selector-modal-tabs")[0],this.contentElem=this.rootElem.getElementsByClassName("selector-modal-tab-content")[0],this.setData(s,a,i,n)}openTab(t){this.tabsElem.getElementsByClassName("selector-modal-item-tab")[t].click()}setData(t,e,a,i){this.tabsElem.innerHTML="",this.contentElem.innerHTML="",this.addTab("Items",t,e,a.map((e=>({item:e,id:e.id,actionId:it.fromItem(e),name:e.name,quality:e.quality,heroic:e.heroic,phase:e.phase,baseEP:this.player.computeItemEP(e),ignoreEPFilter:!1,onEquip:(e,s)=>{const a=this.player.getEquippedItem(t);a?this.player.equipItem(e,t,a.withItem(s)):this.player.equipItem(e,t,new V(s))}}))),(t=>this.player.computeItemEP(t)),(t=>t?.item),yt.GemColorUnknown,(e=>{this.player.equipItem(e,t,null)})),this.addTab("Enchants",t,e,i.map((e=>({item:e,id:e.id,actionId:e.isSpellId?it.fromSpellId(e.id):it.fromItemId(e.id),name:e.name,quality:e.quality,phase:e.phase||1,baseEP:this.player.computeStatsEP(new s(e.stats)),ignoreEPFilter:!0,heroic:!1,onEquip:(e,s)=>{const a=this.player.getEquippedItem(t);a&&this.player.equipItem(e,t,a.withEnchant(s))}}))),(t=>this.player.computeEnchantEP(t)),(t=>t?.enchant),yt.GemColorUnknown,(e=>{const s=this.player.getEquippedItem(t);s&&this.player.equipItem(e,t,s.withEnchant(null))})),this.addGemTabs(t,e)}addGemTabs(t,e){if(null==e)return;const a=this.player.computeStatsEP(new s(e.item.socketBonus))/(e.item.gemSockets.length||1);e.curSocketColors(this.player.isBlacksmithing()).forEach(((i,n)=>{this.addTab("Gem "+(n+1),t,e,this.player.getGems(i).map((e=>({item:e,id:e.id,actionId:it.fromItemId(e.id),name:e.name,quality:e.quality,phase:e.phase,heroic:!1,baseEP:this.player.computeStatsEP(new s(e.stats)),ignoreEPFilter:!0,onEquip:(e,s)=>{const a=this.player.getEquippedItem(t);a&&this.player.equipItem(e,t,a.withGem(s,n))}}))),(t=>{let e=this.player.computeGemEP(t);return N(t,i)&&(e+=a),e}),(t=>t?.gems[n]),i,(e=>{const s=this.player.getEquippedItem(t);s&&this.player.equipItem(e,t,s.withGem(null,n))}),(e=>{e.classList.add("selector-modal-tab-gem-icon"),vt(e,i);const s=()=>{const s=this.player.getEquippedItem(t)?.gems[n];if(s)it.fromItemId(s.id).fill().then((t=>{e.style.backgroundImage=`url('${t.iconUrl}')`}));else{const t=wt(i);e.style.backgroundImage=`url('${t}')`}};this.player.gearChangeEmitter.on(s),s()}))}))}addTab(t,e,s,a,n,o,l,r,d){if(0==a.length)return;e==ft.ItemSlotTrinket1||e==ft.ItemSlotTrinket2?a.sort(((t,e)=>e.item.ilvl-t.item.ilvl)):a.sort(((t,e)=>{const s=n(e.item)-n(t.item);return Math.abs(s)<.01?e.item.ilvl-t.item.ilvl:s}));const c=document.createElement("li");this.tabsElem.appendChild(c);const m=(t+"-tab").split(" ").join("");c.innerHTML=`<a class="selector-modal-item-tab" data-toggle="tab" href="#${m}"></a>`;const h=c.getElementsByClassName("selector-modal-item-tab")[0];h.dataset.label=t,d?d(h):h.textContent=t;const p=document.createElement("div");var u,g;p.id=m,p.classList.add("tab-pane","fade","selector-modal-tab-content"),this.contentElem.appendChild(p),p.innerHTML='\n    <div class="selector-modal-tab-content-header">\n      <button class="selector-modal-remove-button sim-button">Remove</button>\n      <input class="selector-modal-search" type="text" placeholder="Search...">\n      <div class="selector-modal-filter-bar-filler"></div>\n      <div class="sim-input selector-modal-boolean-option selector-modal-show-1h-weapons"></div>\n      <div class="sim-input selector-modal-boolean-option selector-modal-show-2h-weapons"></div>\n      <div class="sim-input selector-modal-boolean-option selector-modal-show-matching-gems"></div>\n      <div class="selector-modal-phase-selector"></div>\n    </div>\n    <ul class="selector-modal-list"></ul>\n    ',u=p.getElementsByClassName("selector-modal-show-1h-weapons")[0],g=this.player.sim,new Ke(u,g,{extraCssClasses:["show-1h-weapons-selector"],label:"1H",changedEvent:t=>t.show1hWeaponsChangeEmitter,getValue:t=>t.getShow1hWeapons(),setValue:(t,e,s)=>{e.setShow1hWeapons(t,s)}}),function(t,e){new Ke(t,e,{extraCssClasses:["show-2h-weapons-selector"],label:"2H",changedEvent:t=>t.show2hWeaponsChangeEmitter,getValue:t=>t.getShow2hWeapons(),setValue:(t,e,s)=>{e.setShow2hWeapons(t,s)}})}(p.getElementsByClassName("selector-modal-show-2h-weapons")[0],this.player.sim),("Items"!=t||e!=ft.ItemSlotMainHand&&this.player.getClass()!=_.ClassWarrior)&&(p.getElementsByClassName("selector-modal-show-1h-weapons")[0].style.display="none",p.getElementsByClassName("selector-modal-show-2h-weapons")[0].style.display="none"),function(t,e){new Ke(t,e,{extraCssClasses:["show-matching-gems-selector"],label:"Match Socket",changedEvent:t=>t.showMatchingGemsChangeEmitter,getValue:t=>t.getShowMatchingGems(),setValue:(t,e,s)=>{e.setShowMatchingGems(t,s)}})}(p.getElementsByClassName("selector-modal-show-matching-gems")[0],this.player.sim),t.startsWith("Gem")||(p.getElementsByClassName("selector-modal-show-matching-gems")[0].style.display="none"),function(t,e){new ns(t,e,{extraCssClasses:["phase-selector"],values:[{name:"Phase 1",value:1},{name:"Phase 2",value:2},{name:"Phase 3",value:3},{name:"Phase 4",value:4},{name:"Phase 5",value:5}],changedEvent:t=>t.phaseChangeEmitter,getValue:t=>t.getPhase(),setValue:(t,e,s)=>{e.setPhase(t,s)}})}(p.getElementsByClassName("selector-modal-phase-selector")[0],this.player.sim),"Items"==t&&(c.classList.add("active","in"),p.classList.add("active","in"));const f=p.getElementsByClassName("selector-modal-list")[0],E=a.map(((t,s)=>{const a=t.item,o=n(a),l=document.createElement("li");if(l.classList.add("selector-modal-list-item"),f.appendChild(l),l.dataset.idx=String(s),l.innerHTML=`\n        <a class="selector-modal-list-item-icon"></a>\n        <a class="selector-modal-list-item-name">${t.heroic?t.name+'<span style="color:green">[H]</span>':t.name}</a>\n        <div class="selector-modal-list-item-padding"></div>\n        <div class="selector-modal-list-item-ep">\n\t\t\t\t\t<span class="selector-modal-list-item-ep-value">${o<9.95?o.toFixed(1):Math.round(o)}</span>\n\t\t\t\t\t<span class="selector-modal-list-item-ep-delta"></span>\n\t\t\t\t</div>\n      `,e==ft.ItemSlotTrinket1||e==ft.ItemSlotTrinket2){l.getElementsByClassName("selector-modal-list-item-ep")[0].style.display="none"}const r=l.getElementsByClassName("selector-modal-list-item-icon")[0];t.actionId.fill().then((t=>{t.setWowheadHref(l.children[0]),t.setWowheadHref(l.children[1]),r.style.backgroundImage=`url('${t.iconUrl}')`}));const d=l.getElementsByClassName("selector-modal-list-item-name")[0];St(d,t.quality);const c=s=>{s.preventDefault(),t.onEquip(i.nextEventID(),a),O.is(a)&&(this.removeTabs("Gem"),this.addGemTabs(e,this.player.getEquippedItem(e)))};return d.addEventListener("click",c),r.addEventListener("click",c),l}));p.getElementsByClassName("selector-modal-remove-button")[0].addEventListener("click",(t=>{E.forEach((t=>t.classList.remove("active"))),r(i.nextEventID())}));const S=()=>{const t=this.player.getEquippedItem(e),s=o(t),i=s?.id||null,l=s?n(s):0;E.forEach((t=>{const e=parseInt(t.dataset.idx),s=a[e],o=s.item;t.classList.remove("active"),s.id==i&&t.classList.add("active");const r=t.getElementsByClassName("selector-modal-list-item-ep-delta")[0];if(r.textContent="",o){const t=n(o);bt(r,l,t,0)}}))};S(),this.player.gearChangeEmitter.on(S);const v=()=>{let s=E;const i=this.player.getEquippedItem(e);s=s.filter((e=>{const s=parseInt(e.dataset.idx),n=a[s];if("Items"==t){const t=n.item;if(!this.player.sim.getShow1hWeapons()&&t.weaponType!=Ct.WeaponTypeUnknown&&t.handType!=Pt.HandTypeTwoHand)return!1;if(!this.player.sim.getShow2hWeapons()&&t.weaponType!=Ct.WeaponTypeUnknown&&t.handType==Pt.HandTypeTwoHand)return!1}else if("Enchants"==t){const t=n.item;if(i&&!xt(t,i.item))return!1}else if(t.startsWith("Gem")){const t=n.item;if(this.player.sim.getShowMatchingGems()&&!N(t,l))return!1}if(n.phase>this.player.sim.getPhase())return!1;if(w.value.length>0){const t=w.value.toLowerCase().split(" "),e=n.name.toLowerCase();var o=!0;if(t.forEach((t=>{e.includes(t)||(o=!1)})),!o)return!1}return!0}));let n=0;E.forEach((t=>{s.includes(t)?(t.classList.remove("hidden"),n++,n%2==0?t.classList.remove("odd"):t.classList.add("odd")):t.classList.add("hidden")}))},w=p.getElementsByClassName("selector-modal-search")[0];w.addEventListener("input",v),w.addEventListener("keyup",(t=>{"Enter"==t.key&&E.find((t=>{if(t.classList.contains("hidden"))return!1;return t.getElementsByClassName("selector-modal-list-item-name")[0].click(),!0}))})),this.player.sim.phaseChangeEmitter.on((()=>{v()})),i.onAny([this.player.sim.show1hWeaponsChangeEmitter,this.player.sim.show2hWeaponsChangeEmitter,this.player.sim.showMatchingGemsChangeEmitter]).on((()=>{v()})),this.player.gearChangeEmitter.on((()=>{v(),S()})),v()}removeTabs(t){const e=Array.prototype.slice.call(this.tabsElem.getElementsByClassName("selector-modal-item-tab")).filter((e=>e.dataset.label.includes(t))),s=e.map((t=>document.getElementById(t.getAttribute("href").substring(1)))).filter((t=>Boolean(t)));e.forEach((t=>t.parentElement.remove())),s.forEach((t=>t.remove()))}}const Cs={[ft.ItemSlotHead]:"https://cdn.seventyupgrades.com/item-slots/Head.jpg",[ft.ItemSlotNeck]:"https://cdn.seventyupgrades.com/item-slots/Neck.jpg",[ft.ItemSlotShoulder]:"https://cdn.seventyupgrades.com/item-slots/Shoulders.jpg",[ft.ItemSlotBack]:"https://cdn.seventyupgrades.com/item-slots/Back.jpg",[ft.ItemSlotChest]:"https://cdn.seventyupgrades.com/item-slots/Chest.jpg",[ft.ItemSlotWrist]:"https://cdn.seventyupgrades.com/item-slots/Wrists.jpg",[ft.ItemSlotHands]:"https://cdn.seventyupgrades.com/item-slots/Hands.jpg",[ft.ItemSlotWaist]:"https://cdn.seventyupgrades.com/item-slots/Waist.jpg",[ft.ItemSlotLegs]:"https://cdn.seventyupgrades.com/item-slots/Legs.jpg",[ft.ItemSlotFeet]:"https://cdn.seventyupgrades.com/item-slots/Feet.jpg",[ft.ItemSlotFinger1]:"https://cdn.seventyupgrades.com/item-slots/Finger.jpg",[ft.ItemSlotFinger2]:"https://cdn.seventyupgrades.com/item-slots/Finger.jpg",[ft.ItemSlotTrinket1]:"https://cdn.seventyupgrades.com/item-slots/Trinket.jpg",[ft.ItemSlotTrinket2]:"https://cdn.seventyupgrades.com/item-slots/Trinket.jpg",[ft.ItemSlotMainHand]:"https://cdn.seventyupgrades.com/item-slots/MainHand.jpg",[ft.ItemSlotOffHand]:"https://cdn.seventyupgrades.com/item-slots/OffHand.jpg",[ft.ItemSlotRanged]:"https://cdn.seventyupgrades.com/item-slots/Ranged.jpg"};class Ps extends F{constructor(t,e,s){super(t,"saved-data-manager-root"),this.modObject=e,this.config=s,this.userData=[],this.presets=[],this.frozen=!1,this.rootElem.innerHTML=`\n    <div class="saved-data-container">\n    </div>\n    <div class="saved-data-create-container presets-only-hide">\n      <input class="saved-data-save-input" type="text" placeholder="Label">\n      <button class="saved-data-save-button sim-button">SAVE CURRENT ${s.label.toUpperCase()}</button>\n    </div>\n    `,s.presetsOnly&&this.rootElem.classList.add("presets-only"),this.savedDataDiv=this.rootElem.getElementsByClassName("saved-data-container")[0],this.saveInput=this.rootElem.getElementsByClassName("saved-data-save-input")[0];this.rootElem.getElementsByClassName("saved-data-save-button")[0].addEventListener("click",(t=>{if(this.frozen)return;const e=this.saveInput.value;e?e in this.presets?alert(`${s.label} with name ${e} already exists.`):(this.addSavedData({name:e,data:s.getData(this.modObject)}),this.saveUserData()):alert(`Choose a label for your saved ${s.label}!`)}))}addSavedData(t){const e=this.makeSavedData(t),s=t.isPreset?this.presets:this.userData,a=s.findIndex((e=>e.name==t.name));-1==a?(t.isPreset||0==this.presets.length?this.savedDataDiv.appendChild(e.elem):this.savedDataDiv.insertBefore(e.elem,this.presets[0].elem),s.push(e)):(this.savedDataDiv.replaceChild(e.elem,s[a].elem),s[a]=e)}makeSavedData(t){const e=document.createElement("div");if(e.classList.add("saved-data-set-chip"),e.innerHTML=`\n    <span class="saved-data-set-name">${t.name}</span>\n    <span class="saved-data-set-tooltip fa fa-info-circle"></span>\n    <span class="saved-data-set-delete fa fa-times"></span>\n    `,e.addEventListener("click",(e=>{this.config.setData(i.nextEventID(),this.modObject,t.data),this.saveInput.value=t.name})),t.isPreset)e.classList.add("saved-data-preset");else{e.getElementsByClassName("saved-data-set-delete")[0].addEventListener("click",(e=>{e.stopPropagation();if(!confirm(`Delete saved ${this.config.label} '${t.name}'?`))return;const s=this.userData.findIndex((e=>e.name==t.name));this.userData[s].elem.remove(),this.userData.splice(s,1),this.saveUserData()}))}t.tooltip&&(e.classList.add("saved-data-has-tooltip"),tippy(e.getElementsByClassName("saved-data-set-tooltip")[0],{content:t.tooltip,allowHTML:!0}));const s=()=>{this.config.equals(t.data,this.config.getData(this.modObject))?e.classList.add("active"):e.classList.remove("active"),t.enableWhen&&!t.enableWhen(this.modObject)?e.classList.add("disabled"):e.classList.remove("disabled")};return s(),this.config.changeEmitters.forEach((t=>t.on(s))),{name:t.name,data:t.data,elem:e,enableWhen:t.enableWhen}}saveUserData(){const t={};this.userData.forEach((e=>{t[e.name]=this.config.toJson(e.data)})),window.localStorage.setItem(this.config.storageKey,JSON.stringify(t))}loadUserData(){const t=window.localStorage.getItem(this.config.storageKey);if(!t)return;let e;try{e=JSON.parse(t)}catch(s){console.warn("Invalid json for local storage value: "+t)}for(let a in e)try{this.addSavedData({name:a,data:this.config.fromJson(e[a])})}catch(s){console.warn("Failed parsing saved data: "+e[a])}}freeze(){this.frozen=!0,this.rootElem.classList.add("frozen")}}function xs(t,e,s){return{inputs:t,numColumns:s||1,emptyColor:"grey",label:e}}function ks(t){const e=t.getModObject;return{type:"boolean",label:t.label,labelTooltip:t.labelTooltip,changedEvent:s=>t.changedEvent(e(s)),getValue:s=>t.getValue(e(s)),setValue:(s,a,i)=>t.setValue(s,e(a),i),enableWhen:t.enableWhen?s=>t.enableWhen(e(s)):void 0,showWhen:t.showWhen?s=>t.showWhen(e(s)):void 0}}function Ts(t){return ks({label:t.label,labelTooltip:t.labelTooltip,getModObject:t=>t,getValue:t.getValue||(e=>e.getSpecOptions()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getSpecOptions();i[t.fieldName]=a,s.setSpecOptions(e,i)}),changedEvent:t.changeEmitter||(t=>t.specOptionsChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen,extraCssClasses:t.extraCssClasses})}function Ds(t){return ks({label:t.label,labelTooltip:t.labelTooltip,getModObject:t=>t,getValue:t.getValue||(e=>e.getRotation()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getRotation();i[t.fieldName]=a,s.setRotation(e,i)}),changedEvent:t.changeEmitter||(t=>t.rotationChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen,extraCssClasses:t.extraCssClasses})}function Ms(t){const e=t.getModObject;return{type:"number",label:t.label,labelTooltip:t.labelTooltip,float:t.float,positive:t.positive,changedEvent:s=>t.changedEvent(e(s)),getValue:s=>t.getValue(e(s)),setValue:(s,a,i)=>t.setValue(s,e(a),i),enableWhen:t.enableWhen?s=>t.enableWhen(e(s)):void 0,showWhen:t.showWhen?s=>t.showWhen(e(s)):void 0}}function Rs(t){const e={label:t.label,labelTooltip:t.labelTooltip,float:t.float,positive:t.positive,getModObject:t=>t,getValue:t.getValue||(e=>e.getSpecOptions()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getSpecOptions();i[t.fieldName]=a,s.setSpecOptions(e,i)}),changedEvent:t.changeEmitter||(t=>t.specOptionsChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen,extraCssClasses:t.extraCssClasses};if(t.percent){const t=e.getValue;e.getValue=e=>100*t(e);const s=e.setValue;e.setValue=(t,e,a)=>s(t,e,a/100)}return Ms(e)}function Bs(t){const e={label:t.label,labelTooltip:t.labelTooltip,float:t.float,positive:t.positive,getModObject:t=>t,getValue:t.getValue||(e=>e.getRotation()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getRotation();i[t.fieldName]=a,s.setRotation(e,i)}),changedEvent:t.changeEmitter||(t=>t.rotationChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen,extraCssClasses:t.extraCssClasses};if(t.percent){const t=e.getValue;e.getValue=e=>100*t(e);const s=e.setValue;e.setValue=(t,e,a)=>s(t,e,a/100)}return Ms(e)}function Ls(t){const e=t.getModObject;return{type:"enum",label:t.label,labelTooltip:t.labelTooltip,values:t.values,changedEvent:s=>t.changedEvent(e(s)),getValue:s=>t.getValue(e(s)),setValue:(s,a,i)=>t.setValue(s,e(a),i),enableWhen:t.enableWhen?s=>t.enableWhen(e(s)):void 0,showWhen:t.showWhen?s=>t.showWhen(e(s)):void 0}}function Ns(t){return Ls({label:t.label,labelTooltip:t.labelTooltip,values:t.values,getModObject:t=>t,getValue:t.getValue||(e=>e.getSpecOptions()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getSpecOptions();i[t.fieldName]=a,s.setSpecOptions(e,i)}),changedEvent:t.changeEmitter||(t=>t.specOptionsChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen})}function Vs(t){return Ls({label:t.label,labelTooltip:t.labelTooltip,values:t.values,getModObject:t=>t,getValue:t.getValue||(e=>e.getRotation()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getRotation();i[t.fieldName]=a,s.setRotation(e,i)}),changedEvent:t.changeEmitter||(t=>t.rotationChangeEmitter),enableWhen:t.enableWhen,showWhen:t.showWhen})}function Os(t){const e=t.getModObject;return{type:"icon",id:t.id,states:t.states,changedEvent:s=>t.changedEvent(e(s)),getValue:s=>t.getValue(e(s)),setValue:(s,a,i)=>t.setValue(s,e(a),i),extraCssClasses:t.extraCssClasses}}function As(t,e,s,a){return Os({getModObject:t.getModObject,id:e,states:2,changedEvent:t.changeEmitter,getValue:t.getFieldValue||(e=>a?t.getValue(e)[s]==a:t.getValue(e)[s]),setValue:t.setFieldValue||((e,i,n)=>{const o=t.getValue(i);a?n?o[s]=a:o[s]==a&&(o[s]=0):o[s]=n,t.setValue(e,i,o)}),extraCssClasses:t.extraCssClasses})}function Ws(t){return As({getModObject:t=>t,getValue:t=>t.getSpecOptions(),setValue:(t,e,s)=>e.setSpecOptions(t,s),changeEmitter:t.changeEmitter||(t=>t.specOptionsChangeEmitter),extraCssClasses:t.extraCssClasses,getFieldValue:t.getValue,setFieldValue:t.setValue},t.id,t.fieldName,t.value)}function Hs(t,e,s,a){return Os({getModObject:t.getModObject,id:e,states:0,changedEvent:t.changeEmitter,getValue:e=>t.getValue(e)[s],setValue:(e,i,n)=>{const o=t.getValue(i);if(a){const t=n-o[s];n+=(a-1)*t}n<0&&(n=0),o[s]=n,t.setValue(e,i,o)}})}function Fs(t,e,s,a){const i=Hs(t,e,a);return i.states=3,i.improvedId=s,i}function Us(t,e,s,a,i){const n=Hs(t,e,a,i);return n.states=s,n}function js(t){const e=t.getModObject;return{type:"iconEnum",numColumns:t.numColumns,values:t.values.map((t=>{if(t.showWhen){const s=t.showWhen;t.showWhen=t=>s(e(t))}return t})),equals:t.equals,zeroValue:t.zeroValue,changedEvent:s=>t.changedEvent(e(s)),getValue:s=>t.getValue(e(s)),setValue:(s,a,i)=>t.setValue(s,e(a),i),extraCssClasses:t.extraCssClasses}}function Gs(t){return js({numColumns:t.numColumns||1,values:t.values,equals:(t,e)=>t==e,zeroValue:0,getModObject:t=>t,getValue:t.getValue||(e=>e.getSpecOptions()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getSpecOptions();i[t.fieldName]=a,s.setSpecOptions(e,i)}),changedEvent:t.changeEmitter||(t=>t.specOptionsChangeEmitter),extraCssClasses:t.extraCssClasses})}function qs(t){return js({numColumns:t.numColumns||1,values:t.values,equals:(t,e)=>t==e,zeroValue:0,getModObject:t=>t,getValue:t.getValue||(e=>e.getRotation()[t.fieldName]),setValue:t.setValue||((e,s,a)=>{const i=s.getRotation();i[t.fieldName]=a,s.setRotation(e,i)}),changedEvent:t.changeEmitter||(t=>t.rotationChangeEmitter),extraCssClasses:t.extraCssClasses})}function $s(t){return{type:"customRotation",getValue:t.getValue||(e=>e.getRotation()[t.fieldName]||dt.create()),setValue:t.setValue||((e,s,a)=>{const i=s.getRotation();i[t.fieldName]=a,s.setRotation(e,i)}),showWhen:t.showWhen,numColumns:t.numColumns,values:t.values}}function _s(t){return Gs({fieldName:"petType",numColumns:5,values:[{color:"grey",value:kt.PetNone},{actionId:it.fromPetName("Bat"),tooltip:"Bat",value:kt.Bat},{actionId:it.fromPetName("Bear"),tooltip:"Bear",value:kt.Bear},{actionId:it.fromPetName("Bird of Prey"),tooltip:"Bird of Prey",value:kt.BirdOfPrey},{actionId:it.fromPetName("Boar"),tooltip:"Boar",value:kt.Boar},{actionId:it.fromPetName("Carrion Bird"),tooltip:"Carrion Bird",value:kt.CarrionBird},{actionId:it.fromPetName("Cat"),tooltip:"Cat",value:kt.Cat},{actionId:it.fromPetName("Chimaera"),tooltip:"Chimaera (Exotic)",value:kt.Chimaera},{actionId:it.fromPetName("Core Hound"),tooltip:"Core Hound (Exotic)",value:kt.CoreHound},{actionId:it.fromPetName("Crab"),tooltip:"Crab",value:kt.Crab},{actionId:it.fromPetName("Crocolisk"),tooltip:"Crocolisk",value:kt.Crocolisk},{actionId:it.fromPetName("Devilsaur"),tooltip:"Devilsaur (Exotic)",value:kt.Devilsaur},{actionId:it.fromPetName("Dragonhawk"),tooltip:"Dragonhawk",value:kt.Dragonhawk},{actionId:it.fromPetName("Gorilla"),tooltip:"Gorilla",value:kt.Gorilla},{actionId:it.fromPetName("Hyena"),tooltip:"Hyena",value:kt.Hyena},{actionId:it.fromPetName("Moth"),tooltip:"Moth",value:kt.Moth},{actionId:it.fromPetName("Nether Ray"),tooltip:"Nether Ray",value:kt.NetherRay},{actionId:it.fromPetName("Raptor"),tooltip:"Raptor",value:kt.Raptor},{actionId:it.fromPetName("Ravager"),tooltip:"Ravager",value:kt.Ravager},{actionId:it.fromPetName("Rhino"),tooltip:"Rhino",value:kt.Rhino},{actionId:it.fromPetName("Scorpid"),tooltip:"Scorpid",value:kt.Scorpid},{actionId:it.fromPetName("Serpent"),tooltip:"Serpent",value:kt.Serpent},{actionId:it.fromPetName("Silithid"),tooltip:"Silithid (Exotic)",value:kt.Silithid},{actionId:it.fromPetName("Spider"),tooltip:"Spider",value:kt.Spider},{actionId:it.fromPetName("Spirit Beast"),tooltip:"Spirit Beast (Exotic)",value:kt.SpiritBeast},{actionId:it.fromPetName("Spore Bat"),tooltip:"Spore Bat",value:kt.SporeBat},{actionId:it.fromPetName("Tallstrider"),tooltip:"Tallstrider",value:kt.Tallstrider},{actionId:it.fromPetName("Turtle"),tooltip:"Turtle",value:kt.Turtle},{actionId:it.fromPetName("Warp Stalker"),tooltip:"Warp Stalker",value:kt.WarpStalker},{actionId:it.fromPetName("Wasp"),tooltip:"Wasp",value:kt.Wasp},{actionId:it.fromPetName("Wind Serpent"),tooltip:"Wind Serpent",value:kt.WindSerpent},{actionId:it.fromPetName("Wolf"),tooltip:"Wolf",value:kt.Wolf},{actionId:it.fromPetName("Worm"),tooltip:"Worm (Exotic)",value:kt.Worm}]})}const zs={[kt.PetNone]:1,[kt.Bat]:0,[kt.Bear]:2,[kt.BirdOfPrey]:0,[kt.Boar]:2,[kt.CarrionBird]:1,[kt.Cat]:1,[kt.Chimaera]:0,[kt.CoreHound]:1,[kt.Crab]:2,[kt.Crocolisk]:2,[kt.Devilsaur]:1,[kt.Dragonhawk]:0,[kt.Gorilla]:2,[kt.Hyena]:1,[kt.Moth]:1,[kt.NetherRay]:0,[kt.Raptor]:1,[kt.Ravager]:0,[kt.Rhino]:2,[kt.Scorpid]:2,[kt.Serpent]:0,[kt.Silithid]:0,[kt.Spider]:0,[kt.SpiritBeast]:1,[kt.SporeBat]:0,[kt.Tallstrider]:1,[kt.Turtle]:2,[kt.WarpStalker]:2,[kt.Wasp]:1,[kt.WindSerpent]:0,[kt.Wolf]:1,[kt.Worm]:2},Js=[0,1,2],Ks=["cunning","ferocity","tenacity"];class Ys extends F{constructor(t,e){super(t,"hunter-pet-talents-picker"),this.player=e,this.rootElem.innerHTML='\n\t\t\t<div class="pet-talents-container"></div>\n\t\t',this.curCategory=this.getCategoryFromPlayer(),this.curTalents=this.getPetTalentsFromPlayer(),this.savedSets=ta.slice(),this.savedSets[this.curCategory]=this.curTalents,this.rootElem.classList.add(Ks[this.curCategory]);const s=this.rootElem.getElementsByClassName("pet-talents-container")[0],a=Js.map(((t,a)=>{const i=ia[a],n=document.createElement("div");n.classList.add("hunter-pet-talents-"+Ks[a]),s.appendChild(n);const o=new Mt(n,e,{trees:i,changedEvent:t=>t.specOptionsChangeEmitter,getValue:t=>Rt(this.getPetTalentsFromPlayer(),i),setValue:(t,e,s)=>{const n=e.getSpecOptions();n.petTalents=Bt(Tt.create(),s,i),e.setSpecOptions(t,n),this.savedSets[a]=n.petTalents,this.curTalents=n.petTalents},pointsPerRow:3,maxPoints:16}),l=new Ps(n,this.player,{presetsOnly:!0,label:"Pet Talents",storageKey:"__NEVER_USED__",getData:t=>Rt(this.getPetTalentsFromPlayer(),i),setData:(t,e,s)=>{const n=e.getSpecOptions();n.petTalents=Bt(Tt.create(),s,i),e.setSpecOptions(t,n),this.savedSets[a]=n.petTalents,this.curTalents=n.petTalents},changeEmitters:[this.player.specOptionsChangeEmitter],equals:(t,e)=>t==e,toJson:t=>t,fromJson:t=>""});return l.addSavedData({name:"Default",isPreset:!0,data:Rt(ta[a],i)}),l.addSavedData({name:"BM",isPreset:!0,data:Rt(aa[a],i)}),o}));e.specOptionsChangeEmitter.on((()=>{const t=this.getCategoryFromPlayer(),e=Js.indexOf(t);if(t!=this.curCategory){this.curCategory=t,this.rootElem.classList.remove(...Ks),this.rootElem.classList.add(Ks[e]);const s=this.getPetTalentsFromPlayer();if(Tt.equals(s,this.curTalents)){const t=this.player.getSpecOptions();t.petTalents=this.savedSets[this.curCategory],this.player.setSpecOptions(i.nextEventID(),t),this.curTalents=t.petTalents}else this.curTalents=s,this.savedSets[this.curCategory]=this.curTalents}}));const n=()=>{const t=this.player.getTalents().beastMastery?20:16;a.forEach((e=>e.setMaxPoints(t)))};e.talentsChangeEmitter.on(n),n()}getPetTalentsFromPlayer(){return this.player.getSpecOptions().petTalents||Tt.create()}getCategoryFromPlayer(){const t=this.player.getSpecOptions().petType;return zs[t]}}function Xs(t){const e=zs[t],s=Js.indexOf(e);return ia[s]}const Zs=Tt.create({cobraReflexes:2,dive:!0,boarsSpeed:!0,mobility:2,spikedCollar:3,cornered:2,feedingFrenzy:2,wolverineBite:!0,bullheaded:!0,wildHunt:1}),Qs=Tt.create({cobraReflexes:2,dive:!0,spikedCollar:3,boarsSpeed:!0,cullingTheHerd:3,spidersBite:3,rabid:!0,callOfTheWild:!0,wildHunt:1}),ta=[Zs,Qs,Tt.create({cobraReflexes:2,charge:!0,greatStamina:3,bloodOfTheRhino:2,guardDog:2,thunderstomp:!0,graceOfTheMantis:2,taunt:!0,roarOfSacrifice:!0,wildHunt:1})],ea=Tt.create({cobraReflexes:2,dive:!0,boarsSpeed:!0,mobility:2,spikedCollar:3,cornered:2,feedingFrenzy:2,wolverineBite:!0,bullheaded:!0,graceOfTheMantis:2,wildHunt:2,roarOfSacrifice:!0}),sa=Tt.create({cobraReflexes:2,dive:!0,bloodthirsty:1,spikedCollar:3,boarsSpeed:!0,cullingTheHerd:3,spidersBite:3,rabid:!0,callOfTheWild:!0,sharkAttack:2,wildHunt:2}),aa=[ea,sa,Tt.create({cobraReflexes:2,charge:!0,greatStamina:3,spikedCollar:3,bloodOfTheRhino:2,guardDog:2,thunderstomp:!0,graceOfTheMantis:2,taunt:!0,roarOfSacrifice:!0,wildHunt:2})],ia=[Dt([{name:"Cunning",backgroundUrl:"https://wotlkdb.com/static/images/wow/hunterpettalents/bg_3.jpg?85",talents:[{fieldName:"cobraReflexes",location:{rowIdx:0,colIdx:0},spellIds:[61682],maxPoints:2},{fieldName:"dive",location:{rowIdx:0,colIdx:1},spellIds:[23145],maxPoints:1},{fieldName:"greatStamina",location:{rowIdx:0,colIdx:2},spellIds:[61686],maxPoints:3},{fieldName:"naturalArmor",location:{rowIdx:0,colIdx:3},spellIds:[61689],maxPoints:2},{fieldName:"boarsSpeed",location:{rowIdx:1,colIdx:0},spellIds:[19596],maxPoints:1},{fieldName:"mobility",location:{rowIdx:1,colIdx:1},prereqLocation:{rowIdx:0,colIdx:1},spellIds:[53554],maxPoints:2},{fieldName:"owlsFocus",location:{rowIdx:1,colIdx:2},spellIds:[53514,53516],maxPoints:2},{fieldName:"spikedCollar",location:{rowIdx:1,colIdx:3},spellIds:[53182],maxPoints:3},{fieldName:"cullingTheHerd",location:{rowIdx:2,colIdx:0},spellIds:[61680,61681,52858],maxPoints:3},{fieldName:"lionhearted",location:{rowIdx:2,colIdx:1},spellIds:[53409,53411],maxPoints:2},{fieldName:"carrionFeeder",location:{rowIdx:2,colIdx:2},spellIds:[54044],maxPoints:1},{fieldName:"greatResistance",location:{rowIdx:3,colIdx:1},spellIds:[53427,53429],maxPoints:3},{fieldName:"cornered",location:{rowIdx:3,colIdx:2},spellIds:[52234,53497],maxPoints:2},{fieldName:"feedingFrenzy",location:{rowIdx:3,colIdx:3},prereqLocation:{rowIdx:1,colIdx:3},spellIds:[53511],maxPoints:2},{fieldName:"wolverineBite",location:{rowIdx:4,colIdx:0},spellIds:[53508],maxPoints:1},{fieldName:"roarOfRecovery",location:{rowIdx:4,colIdx:1},spellIds:[53517],maxPoints:1},{fieldName:"bullheaded",location:{rowIdx:4,colIdx:2},prereqLocation:{rowIdx:3,colIdx:2},spellIds:[53490],maxPoints:1},{fieldName:"graceOfTheMantis",location:{rowIdx:4,colIdx:3},spellIds:[53450],maxPoints:2},{fieldName:"wildHunt",location:{rowIdx:5,colIdx:0},prereqLocation:{rowIdx:4,colIdx:0},spellIds:[62758,62762],maxPoints:2},{fieldName:"roarOfSacrifice",location:{rowIdx:5,colIdx:3},prereqLocation:{rowIdx:4,colIdx:3},spellIds:[53480],maxPoints:1}]}]),Dt([{name:"Ferocity",backgroundUrl:"https://wotlkdb.com/static/images/wow/hunterpettalents/bg_1.jpg?85",talents:[{fieldName:"cobraReflexes",location:{rowIdx:0,colIdx:0},spellIds:[61682],maxPoints:2},{fieldName:"dive",location:{rowIdx:0,colIdx:1},spellIds:[23145],maxPoints:1},{fieldName:"greatStamina",location:{rowIdx:0,colIdx:2},spellIds:[61686],maxPoints:3},{fieldName:"naturalArmor",location:{rowIdx:0,colIdx:3},spellIds:[61689],maxPoints:2},{fieldName:"improvedCower",location:{rowIdx:1,colIdx:0},spellIds:[53180],maxPoints:2},{fieldName:"bloodthirsty",location:{rowIdx:1,colIdx:1},spellIds:[53186],maxPoints:2},{fieldName:"spikedCollar",location:{rowIdx:1,colIdx:2},spellIds:[53182],maxPoints:3},{fieldName:"boarsSpeed",location:{rowIdx:1,colIdx:3},spellIds:[19596],maxPoints:1},{fieldName:"cullingTheHerd",location:{rowIdx:2,colIdx:0},spellIds:[61680,61681,52858],maxPoints:3},{fieldName:"lionhearted",location:{rowIdx:2,colIdx:2},spellIds:[53409,53411],maxPoints:2},{fieldName:"charge",location:{rowIdx:2,colIdx:3},spellIds:[61685],maxPoints:1},{fieldName:"heartOfThePheonix",location:{rowIdx:3,colIdx:1},prereqLocation:{rowIdx:1,colIdx:1},spellIds:[55709],maxPoints:1},{fieldName:"spidersBite",location:{rowIdx:3,colIdx:2},spellIds:[53203],maxPoints:3},{fieldName:"greatResistance",location:{rowIdx:3,colIdx:3},spellIds:[53427,53429],maxPoints:3},{fieldName:"rabid",location:{rowIdx:4,colIdx:0},spellIds:[53401],maxPoints:1},{fieldName:"lickYourWounds",location:{rowIdx:4,colIdx:1},prereqLocation:{rowIdx:3,colIdx:1},spellIds:[53426],maxPoints:1},{fieldName:"callOfTheWild",location:{rowIdx:4,colIdx:2},prereqLocation:{rowIdx:3,colIdx:2},spellIds:[53434],maxPoints:1},{fieldName:"sharkAttack",location:{rowIdx:5,colIdx:0},spellIds:[62759],maxPoints:2},{fieldName:"wildHunt",location:{rowIdx:5,colIdx:2},prereqLocation:{rowIdx:4,colIdx:2},spellIds:[62758,62762],maxPoints:2}]}]),Dt([{name:"Tenacity",backgroundUrl:"https://wotlkdb.com/static/images/wow/hunterpettalents/bg_2.jpg?85",talents:[{fieldName:"cobraReflexes",location:{rowIdx:0,colIdx:0},spellIds:[61682],maxPoints:2},{fieldName:"charge",location:{rowIdx:0,colIdx:1},spellIds:[61685],maxPoints:1},{fieldName:"greatStamina",location:{rowIdx:0,colIdx:2},spellIds:[61686],maxPoints:3},{fieldName:"naturalArmor",location:{rowIdx:0,colIdx:3},spellIds:[61689],maxPoints:2},{fieldName:"spikedCollar",location:{rowIdx:1,colIdx:0},spellIds:[53182],maxPoints:3},{fieldName:"boarsSpeed",location:{rowIdx:1,colIdx:1},spellIds:[19596],maxPoints:1},{fieldName:"bloodOfTheRhino",location:{rowIdx:1,colIdx:2},prereqLocation:{rowIdx:0,colIdx:2},spellIds:[53481],maxPoints:2},{fieldName:"petBarding",location:{rowIdx:1,colIdx:3},prereqLocation:{rowIdx:0,colIdx:3},spellIds:[53175],maxPoints:2},{fieldName:"cullingTheHerd",location:{rowIdx:2,colIdx:0},spellIds:[61680,61681,52858],maxPoints:3},{fieldName:"guardDog",location:{rowIdx:2,colIdx:1},spellIds:[53178],maxPoints:2},{fieldName:"lionhearted",location:{rowIdx:2,colIdx:2},spellIds:[53409,53411],maxPoints:2},{fieldName:"thunderstomp",location:{rowIdx:2,colIdx:3},spellIds:[63900],maxPoints:1},{fieldName:"graceOfTheMantis",location:{rowIdx:3,colIdx:2},spellIds:[53450],maxPoints:2},{fieldName:"greatResistance",location:{rowIdx:3,colIdx:3},spellIds:[53427,53429],maxPoints:3},{fieldName:"lastStand",location:{rowIdx:4,colIdx:0},spellIds:[53478],maxPoints:1},{fieldName:"taunt",location:{rowIdx:4,colIdx:1},prereqLocation:{rowIdx:2,colIdx:1},spellIds:[53477],maxPoints:1},{fieldName:"roarOfSacrifice",location:{rowIdx:4,colIdx:2},prereqLocation:{rowIdx:3,colIdx:2},spellIds:[53480],maxPoints:1},{fieldName:"intervene",location:{rowIdx:4,colIdx:3},spellIds:[53476],maxPoints:1},{fieldName:"silverback",location:{rowIdx:5,colIdx:1},spellIds:[62764],maxPoints:2},{fieldName:"wildHunt",location:{rowIdx:5,colIdx:2},prereqLocation:{rowIdx:4,colIdx:2},spellIds:[62758,62762],maxPoints:2}]}])];class na extends H{constructor(t,e,s){super(t,"icon-input-root",e,s),this.config=s,this.currentValue=0,this.rootAnchor=document.createElement("a"),this.rootAnchor.classList.add("icon-input"),this.rootAnchor.target="_blank",this.rootElem.appendChild(this.rootAnchor);const a=Boolean(this.config.improvedId);a&&this.rootAnchor.classList.add("use-improved-icons"),this.config.improvedId2&&this.rootAnchor.classList.add("use-improved-icons2"),!a&&this.config.states>2&&this.rootAnchor.classList.add("use-counter");const n=document.createElement("div");n.classList.add("icon-input-level-container"),this.rootAnchor.appendChild(n),n.innerHTML='\n      <a class="icon-input-improved icon-input-improved1"></a>\n      <a class="icon-input-improved icon-input-improved2"></a>\n      <span class="icon-input-counter"></span>\n    ',this.improvedAnchor=this.rootAnchor.getElementsByClassName("icon-input-improved1")[0],this.improvedAnchor2=this.rootAnchor.getElementsByClassName("icon-input-improved2")[0],this.counterElem=this.rootAnchor.getElementsByClassName("icon-input-counter")[0],this.config.id.fillAndSet(this.rootAnchor,!0,!0),this.config.states>=3&&this.config.improvedId&&this.config.improvedId.fillAndSet(this.improvedAnchor,!0,!0),this.config.states>=4&&this.config.improvedId2&&this.config.improvedId2.fillAndSet(this.improvedAnchor2,!0,!0),this.init(),this.rootAnchor.addEventListener("click",(t=>{t.preventDefault()})),this.rootAnchor.addEventListener("contextmenu",(t=>{t.preventDefault()})),this.rootAnchor.addEventListener("mousedown",(t=>{Lt(t)?this.currentValue>0&&(this.currentValue--,this.inputChanged(i.nextEventID())):(0==this.config.states||this.currentValue+1<this.config.states)&&(this.currentValue++,this.inputChanged(i.nextEventID()))})),this.rootAnchor.addEventListener("touchstart",(t=>{0==this.config.states||this.currentValue+1<this.config.states?(this.currentValue++,this.inputChanged(i.nextEventID())):this.currentValue>0&&(this.currentValue=0,this.inputChanged(i.nextEventID())),t.preventDefault()})),this.rootAnchor.addEventListener("touchend",(t=>{t.preventDefault()}))}getInputElem(){return this.rootAnchor}getInputValue(){return 2==this.config.states?Boolean(this.currentValue):this.currentValue}getActionId(){const t=Number(this.config.getValue(this.modObject));return 0==t?null:1==t?this.config.id:2==t&&this.config.improvedId?this.config.improvedId:3==t&&this.config.improvedId2?this.config.improvedId2:this.config.id}setInputValue(t){this.currentValue=Number(t),this.currentValue>0?(this.rootAnchor.classList.add("active"),this.counterElem.classList.add("active")):(this.rootAnchor.classList.remove("active"),this.counterElem.classList.remove("active")),this.config.states>=3&&this.config.improvedId&&(this.currentValue>1?this.improvedAnchor.classList.add("active"):this.improvedAnchor.classList.remove("active")),this.config.states>=4&&this.config.improvedId2&&(this.currentValue>2?this.improvedAnchor2.classList.add("active"):this.improvedAnchor2.classList.remove("active")),!this.config.improvedId&&(this.config.states>3||0==this.config.states)&&(this.counterElem.textContent=String(this.currentValue))}}class oa extends F{constructor(t,e){super(t,"log-runner-root");const s=document.createElement("div");s.classList.add("log-runner-control-bar"),this.rootElem.appendChild(s);const a=document.createElement("button");a.classList.add("log-runner-button","sim-button"),a.textContent="SIM 1 ITERATION",s.appendChild(a);const i=document.createElement("div");i.classList.add("log-runner-logs"),this.rootElem.appendChild(i),a.addEventListener("click",(async()=>e.runSimOnce())),e.sim.simResultEmitter.on(((t,e)=>{const s=e.logs;i.textContent="",s.filter((t=>!t.isCastCompleted())).forEach((t=>{const e=document.createElement("span");e.textContent=t.toString(),i.appendChild(e)}))}))}}class la extends F{constructor(t,e,s,a){super(t,"multi-icon-picker-root"),this.config=s,this.currentValue=null,this.rootElem.innerHTML='\n\t\t\t<span class="multi-icon-picker-label"></span>\n\t\t\t<div class="dropdown-root multi-icon-picker-dropdown-root">\n\t\t\t\t<a class="dropdown-button multi-icon-picker-button"></a>\n\t\t\t\t<div class="dropdown-panel multi-icon-picker-dropdown"></div>\n\t\t\t</div>\n    ',this.dropdownRootElem=this.rootElem.getElementsByClassName("multi-icon-picker-dropdown-root")[0];const i=this.rootElem.getElementsByClassName("multi-icon-picker-label")[0];s.label?i.textContent=s.label:i.remove(),this.buttonElem=this.rootElem.getElementsByClassName("multi-icon-picker-button")[0];const n=this.rootElem.getElementsByClassName("multi-icon-picker-dropdown")[0];this.buttonElem.addEventListener("click",(t=>{t.preventDefault()})),this.buttonElem.addEventListener("touchstart",(t=>{"block"==n.style.display?n.style.display="none":n.style.display="block",t.preventDefault()})),this.buttonElem.addEventListener("touchend",(t=>{t.preventDefault()})),n.style.gridTemplateColumns=`repeat(${this.config.numColumns}, 1fr)`,this.pickers=s.inputs.map(((t,s)=>{const a=document.createElement("div");a.classList.add("dropdown-option-container"),a.classList.add("multi-icon-dropdown-container"),n.appendChild(a);const i=document.createElement("a");return i.classList.add("dropdown-option","multi-icon-picker-option"),a.appendChild(i),new na(i,e,t)})),a.sim.waitForInit().then((()=>this.updateButtonImage())),a.changeEmitter.on((()=>this.updateButtonImage()))}updateButtonImage(){this.currentValue=this.getMaxValue(),this.currentValue?(this.dropdownRootElem.classList.add("active"),null!=this.config.categoryId?this.config.categoryId.fillAndSet(this.buttonElem,!1,!0):this.currentValue.fillAndSet(this.buttonElem,!1,!0)):(this.dropdownRootElem.classList.remove("active"),null!=this.config.categoryId?this.config.categoryId.fillAndSet(this.buttonElem,!1,!0):this.buttonElem.style.backgroundImage="",this.buttonElem.style.backgroundColor=this.config.emptyColor,this.buttonElem.removeAttribute("href"))}getMaxValue(){return this.pickers.map((t=>t.getActionId())).filter((t=>null!=t))[0]||null}}class ra extends pt{constructor(t,e){super(t),this.rootElem.classList.add("settings-menu"),this.simUI=e,this.rootElem.innerHTML='\n\t\t\t<div class="settings-menu-title">\n\t\t\t\t<span>OPTIONS</span>\n\t\t\t</div>\n\t\t\t<div class="settings-menu-content">\n\t\t\t\t<div class="settings-menu-content-left">\n\t\t\t\t\t<button class="restore-defaults-button sim-button">RESTORE DEFAULTS</button>\n\t\t\t\t\t<div class="settings-menu-section">\n\t\t\t\t\t\t<div class="fixed-rng-seed">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="last-used-rng-seed-container">\n\t\t\t\t\t\t\t<span>Last used RNG seed:</span><span class="last-used-rng-seed">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="show-threat-metrics-picker">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="show-experimental-picker">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="settings-menu-content-right">\n\t\t\t\t\t<div class="settings-menu-section settings-menu-ep-weights within-raid-sim-hide">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t',this.addCloseButton();const s=this.rootElem.getElementsByClassName("restore-defaults-button")[0];s.addEventListener("click",(t=>{this.simUI.applyDefaults(i.nextEventID())})),tippy(s,{content:"Restores all default settings (gear, consumes, buffs, talents, EP weights, etc).",allowHTML:!0});const a=this.rootElem.getElementsByClassName("fixed-rng-seed")[0];new ze(a,this.simUI.sim,{label:"Fixed RNG Seed",labelTooltip:"Seed value for the random number generator used during sims, or 0 to use different randomness each run. Use this to share exact sim results or for debugging.",changedEvent:t=>t.fixedRngSeedChangeEmitter,getValue:t=>t.getFixedRngSeed(),setValue:(t,e,s)=>{e.setFixedRngSeed(t,s)}});const n=this.rootElem.getElementsByClassName("last-used-rng-seed")[0];n.textContent=String(this.simUI.sim.getLastUsedRngSeed()),this.simUI.sim.lastUsedRngSeedChangeEmitter.on((()=>n.textContent=String(this.simUI.sim.getLastUsedRngSeed())));const o=this.rootElem.getElementsByClassName("show-threat-metrics-picker")[0];new Ke(o,this.simUI.sim,{label:"Show Threat/Tank Options",labelTooltip:"Shows all options and metrics relevant to tanks, like TPS/DTPS.",changedEvent:t=>t.showThreatMetricsChangeEmitter,getValue:t=>t.getShowThreatMetrics(),setValue:(t,e,s)=>{e.setShowThreatMetrics(t,s)}});const l=this.rootElem.getElementsByClassName("show-experimental-picker")[0];new Ke(l,this.simUI.sim,{label:"Show Experimental",changedEvent:t=>t.showExperimentalChangeEmitter,getValue:t=>t.getShowExperimental(),setValue:(t,e,s)=>{e.setShowExperimental(t,s)}})}}class da extends F{constructor(t){super(t,"results-viewer"),this.rootElem.innerHTML='\n      <div class="results-pending">\n        <div class="loader"></div>\n      </div>\n      <div class="results-content">\n      </div>\n\t\t',this.pendingElem=this.rootElem.getElementsByClassName("results-pending")[0],this.contentElem=this.rootElem.getElementsByClassName("results-content")[0],this.hideAll()}hideAll(){this.contentElem.style.display="none",this.pendingElem.style.display="none"}setPending(){this.contentElem.style.display="none",this.pendingElem.style.display="initial"}setContent(t){this.contentElem.innerHTML=t,this.contentElem.style.display="initial",this.pendingElem.style.display="none"}}var ca=(t=>(t[t.Unlaunched=0]="Unlaunched",t[t.Alpha=1]="Alpha",t[t.Beta=2]="Beta",t[t.Launched=3]="Launched",t))(ca||{});const ma={[Nt.SpecBalanceDruid]:1,[Nt.SpecElementalShaman]:1,[Nt.SpecEnhancementShaman]:1,[Nt.SpecFeralDruid]:0,[Nt.SpecFeralTankDruid]:0,[Nt.SpecHunter]:1,[Nt.SpecMage]:1,[Nt.SpecRogue]:1,[Nt.SpecRetributionPaladin]:1,[Nt.SpecProtectionPaladin]:0,[Nt.SpecHealingPriest]:0,[Nt.SpecShadowPriest]:1,[Nt.SpecSmitePriest]:1,[Nt.SpecWarlock]:1,[Nt.SpecWarrior]:1,[Nt.SpecProtectionWarrior]:1,[Nt.SpecDeathknight]:1,[Nt.SpecTankDeathknight]:0},ha=[Nt.SpecSmitePriest];class pa extends F{constructor(t,e){super(t,"sim-title-root"),this.rootElem.classList.add("dropdown-root"),this.rootElem.innerHTML='\n\t\t\t<div class="dropdown-button sim-title-button"></div>\n\t\t\t<div class="dropdown-panel sim-title-dropdown within-raid-sim-hide"></div>\n    ',this.buttonElem=this.rootElem.getElementsByClassName("sim-title-button")[0];const s=this.rootElem.getElementsByClassName("dropdown-panel")[0];this.buttonElem.addEventListener("click",(t=>{t.preventDefault()}));const a=Vt.filter((t=>Object.keys(ma).map((t=>parseInt(t))).filter((t=>ma[t]>0)).includes(t))).filter((t=>!t||!ha.includes(t))).concat([]);s.style.gridTemplateRows=`repeat(${Math.ceil(a.length/2)}, 1fr)`;const i=this.makeOptionData(e,!0),n=a.map((t=>this.makeOptionData(t,!1)));this.buttonElem.appendChild(pa.makeOptionElem(i));null!=this.rootElem.closest(".within-raid-sim")||n.forEach(((t,e)=>s.appendChild(this.makeOption(t))))}makeOptionData(t,e){return null==t?{iconUrl:Ot,href:At,text:"RAID",color:e?"":"black"}:{iconUrl:Wt[t],href:Ht(t),text:Ft[t].toUpperCase(),color:e?"":Ut[jt[t]]}}makeOption(t){const e=pa.makeOptionElem(t);return e.addEventListener("click",(e=>{e.preventDefault(),window.location.href=t.href})),e}static makeOptionElem(t){const e=document.createElement("a");e.href=t.href,e.classList.add("sim-title-dropdown-option-container","dropdown-option-container");const s=document.createElement("div");s.classList.add("sim-title-option","dropdown-option"),e.appendChild(s),t.color&&(s.style.backgroundColor=t.color);const a=document.createElement("img");a.src=t.iconUrl,a.classList.add("sim-title-icon"),s.appendChild(a);const i=document.createElement("div");if(i.classList.add("sim-title-label-container"),s.appendChild(i),!t.color){const t=document.createElement("span");t.textContent="WotLK Simulator",t.classList.add("sim-title-sim-label","sim-title-label"),i.appendChild(t)}const n=document.createElement("span");return n.textContent=t.text,n.classList.add("sim-title-spec-label","sim-title-label"),i.appendChild(n),e}}class ua extends F{constructor(t,e,s){super(t,"sim-ui"),this.sim=e,this.rootElem.innerHTML=ga,this.isWithinRaidSim=null!=this.rootElem.closest(".within-raid-sim"),this.isWithinRaidSim||this.rootElem.classList.add("not-within-raid-sim"),this.changeEmitter=i.onAny([this.sim.changeEmitter],"SimUIChange"),this.sim.crashEmitter.on(((t,e)=>this.handleCrash(e)));const a=()=>{this.sim.getShowDamageMetrics()?this.rootElem.classList.remove("hide-damage-metrics"):this.rootElem.classList.add("hide-damage-metrics")};a(),this.sim.showDamageMetricsChangeEmitter.on(a);const n=()=>{this.sim.getShowThreatMetrics()?this.rootElem.classList.remove("hide-threat-metrics"):this.rootElem.classList.add("hide-threat-metrics")};n(),this.sim.showThreatMetricsChangeEmitter.on(n);const o=()=>{this.sim.getShowHealingMetrics()?this.rootElem.classList.remove("hide-healing-metrics"):this.rootElem.classList.add("hide-healing-metrics")};o(),this.sim.showHealingMetricsChangeEmitter.on(o);const l=()=>{this.sim.getShowExperimental()?this.rootElem.classList.remove("hide-experimental"):this.rootElem.classList.add("hide-experimental")};l(),this.sim.showExperimentalChangeEmitter.on(l);document.getElementsByClassName("notices")[0].remove(),this.warnings=[];const r=document.getElementsByClassName("warnings")[0];this.warningsTippy=tippy(r,{content:"",allowHTML:!0}),this.updateWarnings();let d="";if(s.launchStatus==ca.Unlaunched?d="This sim is a WORK IN PROGRESS. It is not fully developed and should not be used for general purposes.":s.launchStatus==ca.Alpha?d="This sim is in ALPHA. Bugs are expected; please let us know if you find one!":s.launchStatus==ca.Beta&&(d="This sim is in BETA. There may still be a few bugs; please let us know if you find one!"),d&&(s.knownIssues=[d].concat(s.knownIssues||[])),s.knownIssues&&s.knownIssues.length){const t=document.getElementsByClassName("known-issues")[0];t.style.display="initial",tippy(t,{content:`\n\t\t\t\t<ul class="known-issues-tooltip">\n\t\t\t\t\t${s.knownIssues.map((t=>"<li>"+t+"</li>")).join("")}\n\t\t\t\t</ul>\n\t\t\t\t`,allowHTML:!0,interactive:!0})}const c=this.rootElem.getElementsByClassName("sim-sidebar-results")[0];this.resultsViewer=new da(c);const m=this.rootElem.getElementsByClassName("sim-sidebar-title")[0];new pa(m,s.spec);const h=this.rootElem.getElementsByClassName("sim-sidebar-actions")[0];new ze(h,this.sim,{label:"Iterations",extraCssClasses:["iterations-picker","within-raid-sim-hide"],changedEvent:t=>t.iterationsChangeEmitter,getValue:t=>t.getIterations(),setValue:(t,e,s)=>{e.setIterations(t,s)}});const p=document.createElement("span");p.classList.add("report-bug","fa","fa-bug"),tippy(p,{content:"Report a bug / request a feature",allowHTML:!0}),p.addEventListener("click",(t=>{window.open("https://github.com/wowsims/wotlk/issues/new/choose","_blank")})),this.addToolbarItem(p),this.isWithinRaidSim||window.addEventListener("message",(async t=>{"runOnce"==t.data&&this.runSimOnce()}));const u=document.createElement("span");u.classList.add("downbin","hide"),u.addEventListener("click",(t=>{window.open("https://github.com/wowsims/wotlk/releases","_blank")})),document.location.href.includes("localhost")?fetch(document.location.protocol+"//"+document.location.host+"/version").then((t=>{t.json().then((t=>{2==t.outdated&&(tippy(u,{content:"Newer version of simulator available for download",allowHTML:!0}),u.classList.add("downbinalert"),this.addToolbarItem(u))})).catch((t=>{console.warn("No version info found!")}))})):(tippy(u,{content:"Download simulator for faster simulating",allowHTML:!0}),u.classList.add("downbinnorm"),this.addToolbarItem(u))}addAction(t,e,s){const a=this.rootElem.getElementsByClassName("sim-sidebar-actions")[0],i=this.rootElem.getElementsByClassName("iterations-picker")[0],n=document.createElement("button");n.classList.add("sim-sidebar-actions-button",e),n.textContent=t,n.addEventListener("click",s),a.insertBefore(n,i)}addTab(t,e,s){const a=this.rootElem.getElementsByClassName("sim-tabs")[0],i=this.rootElem.getElementsByClassName("tab-content")[0],n=a.getElementsByClassName("sim-top-bar")[0],o=e.replace(/\s+/g,"-")+"-tab",l=1==a.children.length,r=document.createElement("li");r.innerHTML=`<a data-toggle="tab" href="#${o}">${t}</a>`,r.classList.add(e+"-tab");const d=document.createElement("div");d.id=o,d.classList.add(e,"tab-pane","fade"),d.innerHTML=s,l&&(r.classList.add("active"),d.classList.add("active","in")),a.insertBefore(r,n),i.appendChild(d)}addToolbarItem(t){const e=this.rootElem.getElementsByClassName("sim-top-bar")[0];t.classList.add("sim-top-bar-item"),e.appendChild(t)}updateWarnings(){const t=this.warnings.map((t=>t.getContent())).flat().filter((t=>""!=t)),e=document.getElementsByClassName("warnings")[0];0==t.length?e.style.display="none":(e.style.display="initial",this.warningsTippy.setContent(`\n\t\t\t\t<ul class="known-issues-tooltip">\n\t\t\t\t\t${t.map((t=>"<li>"+t+"</li>")).join("")}\n\t\t\t\t</ul>`))}addWarning(t){this.warnings.push(t),t.updateOn.on((()=>this.updateWarnings())),this.updateWarnings()}getSettingsStorageKey(){return this.getStorageKey("__currentSettings__")}getSavedEncounterStorageKey(){return"sharedData__savedEncounter__"}isIndividualSim(){return this.rootElem.classList.contains("individual-sim-ui")}async runSim(t){this.resultsViewer.setPending();try{await this.sim.runRaidSim(i.nextEventID(),t)}catch(e){this.resultsViewer.hideAll(),this.handleCrash(e)}}async runSimOnce(){this.resultsViewer.setPending();try{await this.sim.runRaidSimWithLogs(i.nextEventID())}catch(t){this.resultsViewer.hideAll(),this.handleCrash(t)}}handleCrash(t){if(!(t instanceof _e))return void alert(t);const e=t.errorStr;if(window.confirm("Simulation Failure:\n"+e+"\nPress Ok to file crash report")){const t=this.hashCode(e),s=this.toLink(),a=this.sim.getLastUsedRngSeed();fetch("https://api.github.com/search/issues?q=is:issue+is:open+repo:wowsims/wotlk+"+t).then((i=>{i.json().then((i=>{if(i.total_count>0)window.open(i.items[0].html_url,"_blank");else{const i=`${"https://github.com/wowsims/wotlk/issues/new?assignees=&labels=&title=Crash%20Report%20"}${t}&body=`,n=2048-i.length;let o=encodeURIComponent(`Link:\n${s}\n\nRNG Seed: ${a}\n\n${e}`);for(;o.length>n;)o=o.slice(0,o.lastIndexOf("%"));window.open(i+o,"_blank")}}))})).catch((t=>{alert("Failed to file report... try again another time:"+t)}))}}hashCode(t){let e=0;for(let s=0,a=t.length;s<a;s++){e=(e<<5)-e+t.charCodeAt(s),e|=0}return e}}const ga='\n<div class="sim-root">\n  <section class="sim-sidebar">\n    <div class="sim-sidebar-title"></div>\n    <div class="sim-sidebar-actions within-raid-sim-hide"></div>\n    <div class="sim-sidebar-results within-raid-sim-hide"></div>\n    <div class="sim-sidebar-footer"></div>\n  </section>\n  <section class="sim-main">\n\t\t<div class="sim-toolbar">\n\t\t\t<ul class="sim-tabs nav nav-tabs">\n\t\t\t\t<li class="sim-top-bar">\n\t\t\t\t\t<span class="notices fas fa-exclamation-circle"></span>\n\t\t\t\t\t<span class="warnings fa fa-exclamation-triangle"></span>\n\t\t\t\t\t<div class="known-issues">Known Issues</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n    </div>\n    <div class="tab-content">\n    </div>\n  </section>\n</div>\n';class fa extends pt{constructor(t,e,a){super(t.rootElem),this.simUI=t,this.statsType="ep",this.epStats=e,this.epReferenceStat=a,this.rootElem.classList.add("ep-weights-menu"),this.rootElem.innerHTML='\n\t\t\t<div class="ep-weights-header">\n\t\t\t\t<div class="ep-weights-actions">\n\t\t\t\t\t<button class="sim-button calc-weights">CALCULATE</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="ep-weights-results">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="stats-controls-row">\n\t\t\t\t<div class="ep-weights-options">\n\t\t\t\t\t<select class="ep-type-select">\n\t\t\t\t\t\t<option value="ep">EP</option>\n\t\t\t\t\t\t<option value="weight">Weights</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class="show-all-stats-container">\n\t\t\t\t</div>\n\t\t\t\t<button class="sim-button optimize-gems">OPTIMIZE GEMS</button>\n\t\t\t</div>\n\t\t\t<div class="ep-weights-table">\n\t\t\t\t<table class="results-ep-table">\n\t\t\t\t\t<tbody id="ep-tbody">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Stat</th>\n\t\t\t\t\t\t\t<th class="damage-metrics type-weight"><span>DPS Weight</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="damage-metrics type-ep"><span>DPS EP</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="healing-metrics type-weight"><span>HPS Weight</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="healing-metrics type-ep"><span>HPS EP</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="threat-metrics type-weight"><span>TPS Weight</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="threat-metrics type-ep"><span>TPS EP</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="threat-metrics type-weight"><span>DTPS Weight</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th class="threat-metrics type-ep"><span>DTPS EP</span><span class="col-action fa fa-copy"></span></th>\n\t\t\t\t\t\t\t<th><span>Current EP</span><span class="col-action fa fa-recycle"></span></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t',this.tableContainer=this.rootElem.getElementsByClassName("ep-weights-table")[0],this.tableBody=this.rootElem.querySelector("#ep-tbody"),this.tableHeader=this.rootElem.querySelector("#ep-tbody > tr");const n=this.rootElem.getElementsByClassName("ep-weights-results")[0];this.resultsViewer=new da(n);const l=()=>{"ep"==this.statsType?(this.tableContainer.classList.remove("stats-type-weight"),this.tableContainer.classList.add("stats-type-ep")):(this.tableContainer.classList.add("stats-type-weight"),this.tableContainer.classList.remove("stats-type-ep"))},r=this.rootElem.getElementsByClassName("ep-type-select")[0];r.addEventListener("input",(t=>{this.statsType=r.value,l()})),r.value=this.statsType,l();this.rootElem.getElementsByClassName("calc-weights")[0].addEventListener("click",(async t=>{this.resultsViewer.setPending();const e=this.simUI.sim.getIterations(),s=await this.simUI.player.computeStatWeights(i.nextEventID(),this.epStats,this.epReferenceStat,(t=>{this.setSimProgress(t)}));this.resultsViewer.hideAll(),this.simUI.prevEpIterations=e,this.simUI.prevEpSimResult=s,this.preprocessResults(s),this.updateTable(e,s)}));const d=Array.from(this.rootElem.getElementsByClassName("col-action")),c=(t,e,a,n)=>{tippy(t.previousSibling,{content:e,allowHTML:!0}),tippy(t,{content:a,allowHTML:!0}),t.addEventListener("click",(t=>{this.simUI.player.setEpWeights(i.nextEventID(),new s(n()))}))};c(d[0],"Per-point increase in DPS (Damage Per Second) for each stat.","Copy to Current EP",(()=>this.getPrevSimResult().dps.weights)),c(d[1],`EP (Equivalency Points) for DPS (Damage Per Second) for each stat. Normalized by ${j[this.epReferenceStat]}.`,"Copy to Current EP",(()=>this.getPrevSimResult().dps.epValues)),c(d[2],"Per-point increase in HPS (Healing Per Second) for each stat.","Copy to Current EP",(()=>this.getPrevSimResult().hps.weights)),c(d[3],`EP (Equivalency Points) for HPS (Healing Per Second) for each stat. Normalized by ${j[this.epReferenceStat]}.`,"Copy to Current EP",(()=>this.getPrevSimResult().hps.epValues)),c(d[4],"Per-point increase in TPS (Threat Per Second) for each stat.","Copy to Current EP",(()=>this.getPrevSimResult().tps.weights)),c(d[5],`EP (Equivalency Points) for TPS (Threat Per Second) for each stat. Normalized by ${j[this.epReferenceStat]}.`,"Copy to Current EP",(()=>this.getPrevSimResult().tps.epValues)),c(d[6],"Per-point increase in DTPS (Damage Taken Per Second) for each stat.","Copy to Current EP",(()=>this.getPrevSimResult().dtps.weights)),c(d[7],`EP (Equivalency Points) for DTPS (Damage Taken Per Second) for each stat. Normalized by ${j[o.StatArmor]}.`,"Copy to Current EP",(()=>this.getPrevSimResult().dtps.epValues)),c(d[8],"Current EP Weights. Used to sort the gear selector menus.","Restore Default EP",(()=>this.simUI.individualConfig.defaults.epWeights.asArray()));const m=this.rootElem.getElementsByClassName("show-all-stats-container")[0];new Ke(m,this,{label:"Show All Stats",changedEvent:()=>new i,getValue:()=>this.tableContainer.classList.contains("show-all-stats"),setValue:(t,e,s)=>{s?this.tableContainer.classList.add("show-all-stats"):this.tableContainer.classList.remove("show-all-stats"),this.applyAlternatingColors()}}),this.updateTable(this.simUI.prevEpIterations||1,this.getPrevSimResult());const h=this.rootElem.getElementsByClassName("optimize-gems")[0];tippy(h,{content:"\n\t\t\t\t<p>Optimizes equipped gems to maximize EP, based on the values in <b>Current EP</b>.</p>\n\t\t\t\t<p>Does not change the meta gem, but ensures that its condition is met. Uses JC gems if Jewelcrafting is a selected profession.</p>\n\t\t\t",allowHTML:!0}),h.addEventListener("click",(t=>this.optimizeGems(i.nextEventID()))),this.addCloseButton()}setSimProgress(t){this.resultsViewer.setContent(`\n  <div class="results-sim">\n  \t\t\t<div class=""> ${t.completedSims} / ${t.totalSims}<br>simulations complete</div>\n  \t\t\t<div class="">\n\t\t\t\t${t.completedIterations} / ${t.totalIterations}<br>iterations complete\n\t\t\t</div>\n  </div>\n`)}preprocessResults(t){t.dps.epValues.forEach(((e,s)=>{if((s==o.StatArcaneSpellPower||s==o.StatFireSpellPower||s==o.StatFrostSpellPower||s==o.StatHolySpellPower||s==o.StatNatureSpellPower||s==o.StatShadowSpellPower)&&e>t.dps.epValues[o.StatSpellPower]){const a=e-t.dps.epValues[o.StatSpellPower];t.dps.epValues[s]=t.dps.epValues[o.StatSpellPower],t.dps.epValuesStdev[s]-=a;const i=t.dps.weights[s]-t.dps.weights[o.StatSpellPower];t.dps.weights[s]=t.dps.weights[o.StatSpellPower],t.dps.weightsStdev[s]-=i}}))}updateTable(t,e){this.tableHeader.remove(),this.tableBody.innerHTML="",this.tableBody.appendChild(this.tableHeader);U.filter((t=>![o.StatMana,o.StatEnergy,o.StatRage].includes(t))).forEach((s=>{const a=this.makeTableRow(s,t,e);this.epStats.includes(s)||a.classList.add("non-ep-stat"),this.tableBody.appendChild(a)})),this.applyAlternatingColors()}makeTableRow(t,e,s){const a=document.createElement("tr");a.innerHTML=`\n\t\t\t<td>${j[t]}</td>\n\t\t\t<td class="stdev-cell damage-metrics type-weight"><span>${s.dps.weights[t].toFixed(2)}</span><span>${Gt(s.dps.weightsStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="stdev-cell damage-metrics type-ep"><span>${s.dps.epValues[t].toFixed(2)}</span><span>${Gt(s.dps.epValuesStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="stdev-cell threat-metrics type-weight"><span>${s.tps.weights[t].toFixed(2)}</span><span>${Gt(s.tps.weightsStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="stdev-cell threat-metrics type-ep"><span>${s.tps.epValues[t].toFixed(2)}</span><span>${Gt(s.tps.epValuesStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="stdev-cell threat-metrics type-weight"><span>${s.dtps.weights[t].toFixed(2)}</span><span>${Gt(s.dtps.weightsStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="stdev-cell threat-metrics type-ep"><span>${s.dtps.epValues[t].toFixed(2)}</span><span>${Gt(s.dtps.epValuesStdev[t],e).toFixed(2)}</span></td>\n\t\t\t<td class="current-ep"></td>\n\t\t`;const i=a.querySelector(".current-ep");return new ze(i,this.simUI.player,{float:!0,changedEvent:t=>t.epWeightsChangeEmitter,getValue:e=>e.getEpWeights().getStat(t),setValue:(e,s,a)=>{const i=s.getEpWeights().withStat(t,a);s.setEpWeights(e,i)}}),a}applyAlternatingColors(){Array.from(this.tableBody.childNodes).filter((t=>"none"!=window.getComputedStyle(t).getPropertyValue("display"))).forEach(((t,e)=>{e%2==0?t.classList.remove("odd"):t.classList.add("odd")}))}getPrevSimResult(){return this.simUI.prevEpSimResult||y.create({dps:{weights:(new s).asArray(),weightsStdev:(new s).asArray(),epValues:(new s).asArray(),epValuesStdev:(new s).asArray()},tps:{weights:(new s).asArray(),weightsStdev:(new s).asArray(),epValues:(new s).asArray(),epValuesStdev:(new s).asArray()},dtps:{weights:(new s).asArray(),weightsStdev:(new s).asArray(),epValues:(new s).asArray(),epValuesStdev:(new s).asArray()}})}optimizeGems(t){let e=this.simUI.player.getEpWeights();e=new s(e.asArray().map((t=>0==t?1e-8:t)));const a=this.simUI.player.getGear(),i=this.simUI.sim.getGems(),n=this.simUI.sim.getPhase(),o=this.simUI.player.isBlacksmithing(),l=this.simUI.player.hasProfession(T.Jewelcrafting),r=fa.optimizeGemsForWeights(e,a,i,n,o,l);this.simUI.player.setGear(t,r)}static optimizeGemsForWeights(t,e,a,i,n,o){const l=a.filter((t=>qt(t,i))),{bestGemForColor:r,bestGemForColorEP:d,bestGemForSocket:c,bestGemForSocketEP:h,bestGem:p,bestGemEP:u}=fa.findBestGems(l,t),g=e.asMap(),f=Object.values(g).map((e=>null!=e?new s(e.item.socketBonus).computeEP(t):0));Object.entries(g).forEach((([t,e],s)=>{if(null==e)return;e.item;const a=e.curSocketColors(n);m(a.map((t=>t==yt.GemColorMeta?0:u)))>f[s]+m(a.map((t=>t==yt.GemColorMeta?0:h[t])))?a.forEach(((t,s)=>{t!=yt.GemColorMeta&&(e=e.withGem(p,s))})):a.forEach(((t,s)=>{t!=yt.GemColorMeta&&(e=e.withGem(c[t],s))})),g[Number(t)]=e})),e=new A(g);const E=Object.keys(g).map((t=>{const e=parseInt(t),s=g[e];if(!s)return[];const a=s.numSockets(n);return[...Array(a).keys()].filter((t=>s.item.gemSockets[t]!=yt.GemColorMeta)).map((t=>({itemSlot:e,socketIdx:t})))})).flat(),S=$t(E,3),v=e=>e.statsFromGems(n).computeEP(t);return e=(e=>{if(!o)return e;const s=a.filter((t=>t.requiredProfession==T.Jewelcrafting)),{bestGemForColor:i,bestGemForColorEP:l,bestGemForSocket:r,bestGemForSocketEP:d,bestGem:c,bestGemEP:m}=fa.findBestGems(s,t);let h=e,p=v(e);return S.forEach((t=>{const s=e.asMap();for(let e=0;e<t.length;e++){const{itemSlot:a,socketIdx:n}=t[e],o=s[a],l=o.gems[n].color;s[a]=o.withGem(i[l],n)}const a=new A(s);if(a.hasActiveMetaGem(n)){const t=v(a);t>p&&(h=a,p=t)}})),h})(e=(t=>{const e=t.getMetaGem();if(!e)return t;const s=_t(e.id);if(!s||s.isCompareColorCondition())return t;if(t.getAllGems(n).length-1<3)return t;const a=fa.getColorCombosToSatisfyCondition(s);let i=t,o=v(t);return a.forEach((e=>{S.forEach((s=>{const a=t.asMap();for(let t=0;t<e.length;t++){const i=e[t],{itemSlot:n,socketIdx:o}=s[t];a[n]=a[n].withGem(r[i],o)}const l=new A(a);if(l.hasActiveMetaGem(n)){const t=v(l);t>o&&(i=l,o=t)}}))})),i})(e))}static getColorCombosToSatisfyCondition(t){if(t.isOneOfEach())return[zt,[yt.GemColorPrismatic]].concat(Jt.map(((t,e)=>{const s=zt[e];return Kt.get(s).map((e=>[e,t]))})).flat());if(t.isTwoAndOne()){const e=zt[[t.minRed,t.minYellow,t.minBlue].indexOf(1)],s=zt[[t.minRed,t.minYellow,t.minBlue].indexOf(2)],a=Jt.find((t=>Yt(t,e)&&Yt(t,s)));return[[yt.GemColorPrismatic],[a],[e,s]].map((t=>Kt.get(s).map((e=>t.concat([e]))))).flat()}if(t.isThreeOfAColor()){const e=zt[[t.minRed,t.minYellow,t.minBlue].indexOf(3)],s=Kt.get(e);return Xt(s,3)}return[]}static findBestGems(t,e){const a=Zt.map((t=>null)),i=Zt.map((t=>0)),n=a.slice(),o=i.slice();let l=t[0],r=0;return t.forEach((t=>{const d=new s(t.stats).computeEP(e);d>i[t.color]&&(i[t.color]=d,a[t.color]=t,t.color!=yt.GemColorMeta&&d>r&&(r=d,l=t)),Zt.forEach((e=>{N(t,e)&&d>o[e]&&(o[e]=d,n[e]=t)}))})),{bestGemForColor:a,bestGemForColorEP:i,bestGemForSocket:n,bestGemForSocketEP:o,bestGem:l,bestGemEP:r}}}class Ea extends pt{constructor(t,e,s){super(t),this.rootElem.classList.add("exporter"),this.rootElem.innerHTML=`\n\t\t\t<span class="exporter-title">${e}</span>\n\t\t\t<div class="export-content">\n\t\t\t\t<textarea class="exporter-textarea" readonly></textarea>\n\t\t\t</div>\n\t\t\t<div class="actions-row">\n\t\t\t\t<button class="exporter-button sim-button clipboard-button">COPY TO CLIPBOARD</button>\n\t\t\t\t<button class="exporter-button sim-button download-button">DOWNLOAD</button>\n\t\t\t</div>\n\t\t`,this.addCloseButton(),this.textElem=this.rootElem.getElementsByClassName("exporter-textarea")[0];this.rootElem.getElementsByClassName("clipboard-button")[0].addEventListener("click",(t=>{const e=this.textElem.textContent;null==navigator.clipboard?alert(e):navigator.clipboard.writeText(e)}));const a=this.rootElem.getElementsByClassName("download-button")[0];s?a.addEventListener("click",(t=>{const e=this.textElem.textContent;Qt(e,"wowsims.json")})):a.remove()}init(){this.textElem.textContent=this.getData()}}class Sa extends Ea{constructor(t,e){super(t,"Sharable Link",!1),this.simUI=e,this.init()}getData(){return this.simUI.toLink()}}class va extends Ea{constructor(t,e){super(t,"JSON Export",!0),this.simUI=e,this.init()}getData(){return JSON.stringify(te.toJson(this.simUI.toProto()),null,2)}}const wa=class extends Ea{constructor(t,e){super(t,"80Upgrades EP Export",!0),this.simUI=e,this.init()}getData(){const t=this.simUI.player.getEpWeights(),e=ee(o).filter((t=>![o.StatEnergy,o.StatRage].includes(t)));return`https://eightyupgrades.com/ep/import?name=${encodeURIComponent("WoWSims Weights")}`+e.filter((e=>0!=t.getStat(e))).map((e=>`&${wa.linkNames[e]}=${t.getStat(e).toFixed(3)}`)).join("")}};let Ia=wa;Ia.linkNames={[o.StatStrength]:"strength",[o.StatAgility]:"agility",[o.StatStamina]:"stamina",[o.StatIntellect]:"intellect",[o.StatSpirit]:"spirit",[o.StatSpellPower]:"spellDamage",[o.StatHealingPower]:"healing",[o.StatArcaneSpellPower]:"arcaneDamage",[o.StatFireSpellPower]:"fireDamage",[o.StatFrostSpellPower]:"frostDamage",[o.StatHolySpellPower]:"holyDamage",[o.StatNatureSpellPower]:"natureDamage",[o.StatShadowSpellPower]:"shadowDamage",[o.StatMP5]:"mp5",[o.StatSpellHit]:"spellHitRating",[o.StatSpellCrit]:"spellCritRating",[o.StatSpellHaste]:"spellHasteRating",[o.StatSpellPenetration]:"spellPen",[o.StatAttackPower]:"attackPower",[o.StatMeleeHit]:"hitRating",[o.StatMeleeCrit]:"critRating",[o.StatMeleeHaste]:"hasteRating",[o.StatArmorPenetration]:"armorPen",[o.StatExpertise]:"expertiseRating",[o.StatMana]:"mana",[o.StatEnergy]:"energy",[o.StatRage]:"rage",[o.StatArmor]:"armor",[o.StatRangedAttackPower]:"rangedAttackPower",[o.StatDefense]:"defenseRating",[o.StatBlock]:"blockRating",[o.StatBlockValue]:"blockValue",[o.StatDodge]:"dodgeRating",[o.StatParry]:"parryRating",[o.StatResilience]:"resilienceRating",[o.StatHealth]:"health",[o.StatArcaneResistance]:"arcaneResistance",[o.StatFireResistance]:"fireResistance",[o.StatFrostResistance]:"frostResistance",[o.StatNatureResistance]:"natureResistance",[o.StatShadowResistance]:"shadowResistance"};const ya=class extends Ea{constructor(t,e){super(t,"Pawn EP Export",!0),this.simUI=e,this.init()}getData(){const t=this.simUI.player.getEpWeights(),e=ee(o).filter((t=>![o.StatEnergy,o.StatRage].includes(t)));return`( Pawn: v1: "WoWSims Weights": Class=${se[this.simUI.player.getClass()]},`+e.filter((e=>0!=t.getStat(e))).map((e=>`${ya.statNames[e]}=${t.getStat(e).toFixed(3)}`)).join(",")+" )"}};let ba=ya;ba.statNames={[o.StatStrength]:"Strength",[o.StatAgility]:"Agility",[o.StatStamina]:"Stamina",[o.StatIntellect]:"Intellect",[o.StatSpirit]:"Spirit",[o.StatSpellPower]:"SpellDamage",[o.StatHealingPower]:"Healing",[o.StatArcaneSpellPower]:"ArcaneSpellDamage",[o.StatFireSpellPower]:"FireSpellDamage",[o.StatFrostSpellPower]:"FrostSpellDamage",[o.StatHolySpellPower]:"HolySpellDamage",[o.StatNatureSpellPower]:"NatureSpellDamage",[o.StatShadowSpellPower]:"ShadowSpellDamage",[o.StatMP5]:"Mp5",[o.StatSpellHit]:"SpellHitRating",[o.StatSpellCrit]:"SpellCritRating",[o.StatSpellHaste]:"SpellHasteRating",[o.StatSpellPenetration]:"SpellPen",[o.StatAttackPower]:"Ap",[o.StatMeleeHit]:"HitRating",[o.StatMeleeCrit]:"CritRating",[o.StatMeleeHaste]:"HasteRating",[o.StatArmorPenetration]:"ArmorPenetration",[o.StatExpertise]:"ExpertiseRating",[o.StatMana]:"Mana",[o.StatEnergy]:"Energy",[o.StatRage]:"Rage",[o.StatArmor]:"Armor",[o.StatRangedAttackPower]:"Rap",[o.StatDefense]:"DefenseRating",[o.StatBlock]:"BlockRating",[o.StatBlockValue]:"BlockValue",[o.StatDodge]:"DodgeRating",[o.StatParry]:"ParryRating",[o.StatResilience]:"ResilienceRating",[o.StatHealth]:"Health",[o.StatArcaneResistance]:"ArcaneResistance",[o.StatFireResistance]:"FireResistance",[o.StatFrostResistance]:"FrostResistance",[o.StatNatureResistance]:"NatureResistance",[o.StatShadowResistance]:"ShadowResistance"};class Ca extends pt{constructor(t,e,s){super(t),this.includeFile=s;const a="upload-input-"+e.toLowerCase().replaceAll(" ","-");this.rootElem.classList.add("importer");let i=`\n\t\t\t<span class="importer-title">${e}</span>\n\t\t\t<div class="import-description">\n\t\t\t</div>\n\t\t\t<div class="import-content">\n\t\t\t\t<textarea class="importer-textarea"></textarea>\n\t\t\t</div>\n\t\t\t<div class="actions-row">\n\t\t`;if(this.includeFile&&(i+=`<label for="${a}" class="importer-button sim-button upload-button">UPLOAD FROM FILE</label>\n\t\t\t\t<input type="file" id="${a}" class="importer-upload-input" hidden>\n\t\t\t`),i+='<button class="importer-button sim-button import-button">IMPORT</button>\n\t\t\t</div>\n\t\t',this.rootElem.innerHTML=i,this.addCloseButton(),this.textElem=this.rootElem.getElementsByClassName("importer-textarea")[0],this.descriptionElem=this.rootElem.getElementsByClassName("import-description")[0],this.includeFile){this.rootElem.getElementsByClassName("importer-upload-input")[0].addEventListener("change",(async t=>{const e=await t.target.files[0].text();this.textElem.textContent=e}))}this.importButton=this.rootElem.getElementsByClassName("import-button")[0],this.importButton.addEventListener("click",(t=>{try{this.onImport(this.textElem.value||"")}catch(e){alert("Import error: "+e)}}))}finishIndividualImport(t,e,s,a,n){const o=t.player.getClass();if(e!=o)throw new Error(`Wrong Class! Expected ${se[o]} but found ${se[e]}!`);a.items.forEach((e=>{if(e.enchant){const s=t.sim.getEnchantFlexible(e.enchant);e.enchant=s?s.id:0}}));const l=t.sim.lookupEquipmentSpec(a),r=a.items.map((t=>t.enchant)),d=l.asSpec().items.map((t=>t.enchant)),c=r.filter((t=>0!=t&&!d.includes(t))),m=a.items.map((t=>t.id)),h=l.asSpec().items.map((t=>t.id)),p=m.filter((t=>!h.includes(t))),u=i.nextEventID();i.freezeAllAndDo((()=>{t.player.setRace(u,s),t.player.setGear(u,l),n&&t.player.setTalentsString(u,n)})),this.close(),0==p.length&&0==c.length?alert("Import successful!"):alert("Import successful, but the following IDs were not found in the sim database:"+(0==p.length?"":"\n\nItems: "+p.join(", "))+(0==c.length?"":"\n\nEnchants: "+c.join(", ")))}}class Pa extends Ca{constructor(t,e){super(t,"JSON Import",!0),this.simUI=e,this.descriptionElem.innerHTML="\n\t\t\t<p>\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\n\t\t\t</p>\n\t\t"}onImport(t){const e=te.fromJsonString(t);this.simUI.isWithinRaidSim?e.player&&this.simUI.player.fromProto(i.nextEventID(),e.player):this.simUI.fromProto(i.nextEventID(),e),this.close()}}class xa extends Ca{constructor(t,e){super(t,"80 Upgrades Import",!0),this.simUI=e,this.descriptionElem.innerHTML='\n\t\t\t<p>\n\t\t\t\tImport settings from <a href="https://eightyupgrades.com" target="_blank">Eighty Upgrades</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the site\'s export option below and click, \'Import\'.\n\t\t\t</p>\n\t\t'}onImport(t){const e=JSON.parse(t),s=ae(e?.character?.gameClass||"");if(s==_.ClassUnknown)throw new Error("Could not parse Class!");const a=ie(e?.character?.race||"");if(a==ne.RaceUnknown)throw new Error("Could not parse Race!");let i="";if(e?.talents?.length>0){const t=e.talents.map((t=>t.spellId));i=oe(s,t)}let n=le.create();e.items.forEach((t=>{let e=re.create();e.id=t.id,t.enchant?.id&&(e.enchant=t.enchant.id),t.gems&&(e.gems=t.gems.filter((t=>t?.id)).map((t=>t.id))),n.items.push(e)})),this.simUI.sim.lookupEquipmentSpec(n),this.finishIndividualImport(this.simUI,s,a,n,i)}}class ka extends Ca{constructor(t,e){super(t,"Addon Import",!0),this.simUI=e,this.descriptionElem.innerHTML='\n\t\t\t<p>\n\t\t\t\tImport settings from the <a href="https://www.curseforge.com/wow/addons/wowsimsexporter" target="_blank">WoWSims Importer In-Game Addon</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the addon below and click, \'Import\'.\n\t\t\t</p>\n\t\t'}onImport(t){const e=JSON.parse(t),s=ae(e.class||"");if(s==_.ClassUnknown)throw new Error("Could not parse Class!");const a=ie(e.race||"");if(a==ne.RaceUnknown)throw new Error("Could not parse Race!");const i=e.talents||"",n=e.gear;n.items=n.items.filter((t=>null!=t));const o=le.fromJson(n);this.finishIndividualImport(this.simUI,s,a,o,i)}}const Ta=xs([Wi(it.fromSpellId(48470),it.fromSpellId(17051),"giftOfTheWild"),Li(it.fromItemId(49634),"drumsOfTheWild")],"Stats"),Da=xs([Vi(it.fromSpellId(25898),"blessingOfKings"),Li(it.fromItemId(49633),"drumsOfForgottenKings"),Vi(it.fromSpellId(25899),"blessingOfSanctuary")],"Stats %"),Ma=xs([Wi(it.fromSpellId(48942),it.fromSpellId(20140),"devotionAura"),Wi(it.fromSpellId(58753),it.fromSpellId(16293),"stoneskinTotem"),Li(it.fromItemId(43468),"scrollOfProtection")],"Armor"),Ra=xs([Wi(it.fromSpellId(48161),it.fromSpellId(14767),"powerWordFortitude"),Li(it.fromItemId(37094),"scrollOfStamina")],"Stam"),Ba=xs([Wi(it.fromSpellId(58643),it.fromSpellId(52456),"strengthOfEarthTotem"),Li(it.fromSpellId(57623),"hornOfWinter"),Li(it.fromItemId(43464),"scrollOfAgility"),Li(it.fromItemId(43466),"scrollOfStrength")],"Str/Agi"),La=xs([Li(it.fromSpellId(43002),"arcaneBrilliance"),Wi(it.fromSpellId(57567),it.fromSpellId(54038),"felIntelligence"),Li(it.fromItemId(37092),"scrollOfIntellect")],"Int"),Na=xs([Li(it.fromSpellId(48073),"divineSpirit"),Wi(it.fromSpellId(57567),it.fromSpellId(54038),"felIntelligence"),Li(it.fromItemId(37098),"scrollOfSpirit")],"Spi"),Va=xs([Hi(it.fromSpellId(48934),it.fromSpellId(20045),"blessingOfMight"),Wi(it.fromSpellId(47436),it.fromSpellId(12861),"battleShout")],"AP"),Oa=xs([Li(it.fromSpellId(53138),"abominationsMight"),Li(it.fromSpellId(30809),"unleashedRage"),Li(it.fromSpellId(19506),"trueshotAura")],"AP %"),Aa=xs([Li(it.fromSpellId(31869),"sanctifiedRetribution"),Li(it.fromSpellId(31583),"arcaneEmpowerment"),Li(it.fromSpellId(34460),"ferociousInspiration")],"Dmg %"),Wa=xs([Vi(it.fromSpellId(57472),"renewedHope"),Vi(it.fromSpellId(25899),"blessingOfSanctuary"),Vi(it.fromSpellId(50720),"vigilance")],"Mit %"),Ha=xs([Li(it.fromSpellId(53648),"swiftRetribution"),Li(it.fromSpellId(48396),"moonkinAura",et.TristateEffectImproved)],"Haste %"),Fa=xs([Wi(it.fromSpellId(47440),it.fromSpellId(12861),"commandingShout"),Wi(it.fromSpellId(47982),it.fromSpellId(18696),"bloodPact")],"Health"),Ua=xs([Hi(it.fromSpellId(48938),it.fromSpellId(20245),"blessingOfWisdom"),Wi(it.fromSpellId(58774),it.fromSpellId(16206),"manaSpringTotem")],"MP5"),ja=xs([Wi(it.fromSpellId(17007),it.fromSpellId(34300),"leaderOfThePack"),Li(it.fromSpellId(29801),"rampage")],"Melee Crit"),Ga=xs([Li(it.fromSpellId(55610),"icyTalons"),Wi(it.fromSpellId(65990),it.fromSpellId(29193),"windfuryTotem")],"Melee Haste"),qa=xs([Vi(it.fromSpellId(48160),"vampiricTouch"),Vi(it.fromSpellId(31878),"judgementsOfTheWise"),Vi(it.fromSpellId(53292),"huntingParty"),Vi(it.fromSpellId(54118),"improvedSoulLeech"),Vi(it.fromSpellId(44561),"enduringWinter")],"Repl",2),$a=xs([Wi(it.fromSpellId(24907),it.fromSpellId(48396),"moonkinAura"),Li(it.fromSpellId(51470),"elementalOath")],"Spell Crit"),_a=Bi(Li(it.fromSpellId(3738),"wrathOfAirTotem"),"Spell Haste"),za=xs([(Ja=it.fromSpellId(47240),Ka=5e3,Ya="demonicPact",Xa=500,Us({getModObject:t=>t.getRaid(),getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},Ja,Ka,Ya,Xa)),Li(it.fromSpellId(57722),"totemOfWrath"),Li(it.fromSpellId(58656),"flametongueTotem")],"SP");var Ja,Ka,Ya,Xa;const Za=Bi(Li(it.fromSpellId(2825),"bloodlust"),"Lust"),Qa=Li(it.fromSpellId(54043),"retributionAura"),ti=Li(it.fromSpellId(48170),"shadowProtection"),ei=Ni(it.fromSpellId(31025),"braidedEterniumChain"),si=Ni(it.fromSpellId(31035),"chainOfTheTwilightOwl"),ai=Ni(it.fromSpellId(6562),"heroicPresence"),ii=Ni(it.fromSpellId(31033),"eyeOfTheNight"),ni=Wi(it.fromSpellId(53307),it.fromSpellId(16840),"thorns"),oi=function(t,e,s){return Us({getModObject:t=>t.getParty(),getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}(it.fromSpellId(16190),5,"manaTideTotems"),li=Ui(it.fromSpellId(29166),11,"innervates"),ri=Ui(it.fromSpellId(10060),11,"powerInfusions"),di=Ui(it.fromSpellId(57933),20,"tricksOfTheTrades"),ci=Ui(it.fromSpellId(49016),11,"unholyFrenzy"),mi=ji(it.fromSpellId(26982),101,10,"revitalizeRejuvination"),hi=ji(it.fromSpellId(53251),101,10,"revitalizeWildGrowth"),pi=xs([Ai(it.fromSpellId(7386),"sunderArmor"),Ai(it.fromSpellId(8647),"exposeArmor"),Ai(it.fromSpellId(55754),"acidSpit")],"Major Ar"),ui=xs([Fi(it.fromSpellId(770),it.fromSpellId(33602),"faerieFire"),Fi(it.fromSpellId(50511),it.fromSpellId(18180),"curseOfWeakness"),Ai(it.fromSpellId(56631),"sting"),Ai(it.fromSpellId(53598),"sporeCloud")],"Minor Ar"),gi=xs([Ai(it.fromSpellId(26016),"vindication"),Fi(it.fromSpellId(47437),it.fromSpellId(12879),"demoralizingShout"),Fi(it.fromSpellId(48560),it.fromSpellId(16862),"demoralizingRoar"),Fi(it.fromSpellId(50511),it.fromSpellId(18180),"curseOfWeakness")],"AP"),fi=xs([Ai(it.fromSpellId(33876),"mangle"),Ai(it.fromSpellId(46855),"trauma"),Ai(it.fromSpellId(57393),"stampede")],"Bleed"),Ei=xs([Ai(it.fromSpellId(30706),"totemOfWrath"),Ai(it.fromSpellId(20337),"heartOfTheCrusader"),Ai(it.fromSpellId(58410),"masterPoisoner")],"Crit"),Si=xs([Fi(it.fromSpellId(47502),it.fromSpellId(12666),"thunderClap"),Fi(it.fromSpellId(55095),it.fromSpellId(51456),"frostFever"),Ai(it.fromSpellId(53696),"judgementsOfTheJust"),Ai(it.fromSpellId(48485),"infectedWounds")],"Atk Spd"),vi=xs([Ai(it.fromSpellId(65855),"insectSwarm"),Ai(it.fromSpellId(3043),"scorpidSting")],"Miss"),wi=xs([Ai(it.fromSpellId(29859),"bloodFrenzy"),Ai(it.fromSpellId(58413),"savageCombat")],"Phys Vuln"),Ii=xs([Ai(it.fromSpellId(17800),"shadowMastery"),Ai(it.fromSpellId(12873),"improvedScorch"),Ai(it.fromSpellId(28593),"wintersChill")],"Spell Crit"),yi=xs([Ai(it.fromSpellId(33198),"misery"),Ai(it.fromSpellId(33602),"faerieFire",et.TristateEffectImproved)],"Spell Hit"),bi=xs([Ai(it.fromSpellId(51161),"ebonPlaguebringer"),Ai(it.fromSpellId(48511),"earthAndMoon"),Ai(it.fromSpellId(47865),"curseOfElements")],"Spell Dmg"),Ci=Bi(function(t,e,s,a){return function(t,e,s,a,i){const n=Hs(t,e,i);return n.states=4,n.improvedId=s,n.improvedId2=a,n}({getModObject:t=>t.getRaid(),getValue:t=>t.getDebuffs(),setValue:(t,e,s)=>e.setDebuffs(t,s),changeEmitter:t=>t.debuffsChangeEmitter},t,e,s,a)}(it.fromSpellId(53338),it.fromSpellId(19423),it.fromItemId(42907),"huntersMark"),"Mark"),Pi=Bi(Ai(it.fromSpellId(53408),"judgementOfWisdom"),"JoW"),xi=Ai(it.fromSpellId(20271),"judgementOfLight"),ki=Ui(it.fromSpellId(64382),20,"shatteringThrows"),Ti=Ai(it.fromSpellId(11374),"giftOfArthas"),Di=Oi(it.fromItemId(42641),"thermalSapper"),Mi=Oi(it.fromItemId(40536),"explosiveDecoy"),Ri=Oi(it.fromItemId(43005),"petFood",de.PetFoodSpicedMammothTreats);function Bi(t,e){return t.label=e,t}function Li(t,e,s){return As({getModObject:t=>t.getRaid(),getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function Ni(t,e,s){return As({getModObject:t=>t.getParty(),getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function Vi(t,e,s){return As({getModObject:t=>t,getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function Oi(t,e,s){return As({getModObject:t=>t,getValue:t=>t.getConsumes(),setValue:(t,e,s)=>e.setConsumes(t,s),changeEmitter:t=>t.consumesChangeEmitter},t,e,s)}function Ai(t,e,s){return As({getModObject:t=>t.getRaid(),getValue:t=>t.getDebuffs(),setValue:(t,e,s)=>e.setDebuffs(t,s),changeEmitter:t=>t.debuffsChangeEmitter},t,e,s)}function Wi(t,e,s){return Fs({getModObject:t=>t.getRaid(),getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function Hi(t,e,s){return Fs({getModObject:t=>t,getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function Fi(t,e,s){return Fs({getModObject:t=>t.getRaid(),getValue:t=>t.getDebuffs(),setValue:(t,e,s)=>e.setDebuffs(t,s),changeEmitter:t=>t.debuffsChangeEmitter},t,e,s)}function Ui(t,e,s){return Us({getModObject:t=>t,getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,s)}function ji(t,e,s,a){return Us({getModObject:t=>t,getValue:t=>t.getBuffs(),setValue:(t,e,s)=>e.setBuffs(t,s),changeEmitter:t=>t.buffsChangeEmitter},t,e,a,s)}function Gi(t){return en(t,[{actionId:it.fromItemId(33447),value:ge.RunicHealingPotion},{actionId:it.fromItemId(33448),value:ge.RunicManaPotion},{actionId:it.fromItemId(40093),value:ge.IndestructiblePotion},{actionId:it.fromItemId(40211),value:ge.PotionOfSpeed},{actionId:it.fromItemId(40212),value:ge.PotionOfWildMagic},{actionId:it.fromItemId(22839),value:ge.DestructionPotion},{actionId:it.fromItemId(22838),value:ge.HastePotion},{actionId:it.fromItemId(13442),value:ge.MightyRagePotion},{actionId:it.fromItemId(22832),value:ge.SuperManaPotion},{actionId:it.fromItemId(31677),value:ge.FelManaPotion},{actionId:it.fromItemId(22828),value:ge.InsaneStrengthPotion},{actionId:it.fromItemId(22849),value:ge.IronshieldPotion},{actionId:it.fromItemId(22837),value:ge.HeroicPotion}])}Oi(it.fromItemId(27498),"petScrollOfAgility",5),Oi(it.fromItemId(27503),"petScrollOfStrength",5);const qi=Gi("defaultPotion"),$i=Gi("prepopPotion"),_i=en("defaultConjured",[{actionId:it.fromItemId(12662),value:ut.ConjuredDarkRune},{actionId:it.fromItemId(22788),value:ut.ConjuredFlameCap},{actionId:it.fromItemId(22105),value:ut.ConjuredHealthstone},{actionId:it.fromItemId(7676),value:ut.ConjuredRogueThistleTea}]),zi=en("flask",[{actionId:it.fromItemId(46376),value:ce.FlaskOfTheFrostWyrm},{actionId:it.fromItemId(46377),value:ce.FlaskOfEndlessRage},{actionId:it.fromItemId(46378),value:ce.FlaskOfPureMojo},{actionId:it.fromItemId(46379),value:ce.FlaskOfStoneblood},{actionId:it.fromItemId(40079),value:ce.LesserFlaskOfToughness},{actionId:it.fromItemId(44939),value:ce.LesserFlaskOfResistance},{actionId:it.fromItemId(22861),value:ce.FlaskOfBlindingLight},{actionId:it.fromItemId(22853),value:ce.FlaskOfMightyRestoration},{actionId:it.fromItemId(22866),value:ce.FlaskOfPureDeath},{actionId:it.fromItemId(22854),value:ce.FlaskOfRelentlessAssault},{actionId:it.fromItemId(13512),value:ce.FlaskOfSupremePower},{actionId:it.fromItemId(22851),value:ce.FlaskOfFortification},{actionId:it.fromItemId(33208),value:ce.FlaskOfChromaticWonder}],((t,e,s)=>{if(s){const s=e.getConsumes();s.battleElixir=me.BattleElixirUnknown,s.guardianElixir=he.GuardianElixirUnknown,e.setConsumes(t,s)}})),Ji=en("battleElixir",[{actionId:it.fromItemId(44325),value:me.ElixirOfAccuracy},{actionId:it.fromItemId(44330),value:me.ElixirOfArmorPiercing},{actionId:it.fromItemId(44327),value:me.ElixirOfDeadlyStrikes},{actionId:it.fromItemId(44329),value:me.ElixirOfExpertise},{actionId:it.fromItemId(44331),value:me.ElixirOfLightningSpeed},{actionId:it.fromItemId(39666),value:me.ElixirOfMightyAgility},{actionId:it.fromItemId(40073),value:me.ElixirOfMightyStrength},{actionId:it.fromItemId(40076),value:me.GurusElixir},{actionId:it.fromItemId(40070),value:me.SpellpowerElixir},{actionId:it.fromItemId(40068),value:me.WrathElixir},{actionId:it.fromItemId(28103),value:me.AdeptsElixir},{actionId:it.fromItemId(9224),value:me.ElixirOfDemonslaying},{actionId:it.fromItemId(22831),value:me.ElixirOfMajorAgility},{actionId:it.fromItemId(22833),value:me.ElixirOfMajorFirePower},{actionId:it.fromItemId(22827),value:me.ElixirOfMajorFrostPower},{actionId:it.fromItemId(22835),value:me.ElixirOfMajorShadowPower},{actionId:it.fromItemId(22824),value:me.ElixirOfMajorStrength},{actionId:it.fromItemId(28104),value:me.ElixirOfMastery},{actionId:it.fromItemId(13452),value:me.ElixirOfTheMongoose},{actionId:it.fromItemId(31679),value:me.FelStrengthElixir},{actionId:it.fromItemId(13454),value:me.GreaterArcaneElixir}],((t,e,s)=>{if(s){const s=e.getConsumes();s.flask=ce.FlaskUnknown,e.setConsumes(t,s)}})),Ki=en("guardianElixir",[{actionId:it.fromItemId(44328),value:he.ElixirOfMightyDefense},{actionId:it.fromItemId(40078),value:he.ElixirOfMightyFortitude},{actionId:it.fromItemId(40109),value:he.ElixirOfMightyMageblood},{actionId:it.fromItemId(44332),value:he.ElixirOfMightyThoughts},{actionId:it.fromItemId(40097),value:he.ElixirOfProtection},{actionId:it.fromItemId(40072),value:he.ElixirOfSpirit},{actionId:it.fromItemId(9088),value:he.GiftOfArthas},{actionId:it.fromItemId(32067),value:he.ElixirOfDraenicWisdom},{actionId:it.fromItemId(32068),value:he.ElixirOfIronskin},{actionId:it.fromItemId(22834),value:he.ElixirOfMajorDefense},{actionId:it.fromItemId(32062),value:he.ElixirOfMajorFortitude},{actionId:it.fromItemId(22840),value:he.ElixirOfMajorMageblood}],((t,e,s)=>{if(s){const s=e.getConsumes();s.flask=ce.FlaskUnknown,e.setConsumes(t,s)}})),Yi=en("food",[{actionId:it.fromItemId(43015),value:pe.FoodFishFeast},{actionId:it.fromItemId(34753),value:pe.FoodGreatFeast},{actionId:it.fromItemId(42999),value:pe.FoodBlackenedDragonfin},{actionId:it.fromItemId(42995),value:pe.FoodHeartyRhino},{actionId:it.fromItemId(34754),value:pe.FoodMegaMammothMeal},{actionId:it.fromItemId(34756),value:pe.FoodSpicedWormBurger},{actionId:it.fromItemId(42994),value:pe.FoodRhinoliciousWormsteak},{actionId:it.fromItemId(34769),value:pe.FoodImperialMantaSteak},{actionId:it.fromItemId(42996),value:pe.FoodSnapperExtreme},{actionId:it.fromItemId(34758),value:pe.FoodMightyRhinoDogs},{actionId:it.fromItemId(34767),value:pe.FoodFirecrackerSalmon},{actionId:it.fromItemId(42998),value:pe.FoodCuttlesteak},{actionId:it.fromItemId(43e3),value:pe.FoodDragonfinFilet},{actionId:it.fromItemId(27657),value:pe.FoodBlackenedBasilisk},{actionId:it.fromItemId(27664),value:pe.FoodGrilledMudfish},{actionId:it.fromItemId(27655),value:pe.FoodRavagerDog},{actionId:it.fromItemId(27658),value:pe.FoodRoastedClefthoof},{actionId:it.fromItemId(33872),value:pe.FoodSpicyHotTalbuk},{actionId:it.fromItemId(33825),value:pe.FoodSkullfishSoup},{actionId:it.fromItemId(33052),value:pe.FoodFishermansFeast}]),Xi=(Zi="fillerExplosive",Qi=[{actionId:it.fromItemId(41119),value:ue.ExplosiveSaroniteBomb},{actionId:it.fromItemId(40771),value:ue.ExplosiveCobaltFragBomb}],en(Zi,Qi,tn)(Qi.map((t=>t.value))));var Zi,Qi,tn;function en(t,e,s){return a=>({type:"iconEnum",numColumns:a.length>5?2:1,values:[{color:"grey",value:0}].concat(a.map((t=>e.find((e=>e.value==t))))),equals:(t,e)=>t==e,zeroValue:0,changedEvent:t=>t.consumesChangeEmitter,getValue:e=>e.getConsumes()[t],setValue:(e,a,n)=>{const o=a.getConsumes();o[t]=n,i.freezeAllAndDo((()=>{a.setConsumes(e,o),s&&s(e,a,n)}))}})}const sn="Specify Paladin Blessings for each role, in order of priority. Blessings in the 1st column will be used if there is at least 1 Paladin in the raid, 2nd column if at least 2, etc.",an="<p>Preset gear lists are intended as rough approximations of BIS, and will often not be the absolute highest-DPS setup for you. Your optimal gear setup will depend on many factors; that's why we have a sim!</p><p>Items may also be omitted from the presets if they are highly contested and clearly better utilized on other classes, to encourage equitable gearing for the raid as a whole.</p>";class nn extends ua{constructor(t,e,s){super(t,e.sim,{spec:e.spec,knownIssues:s.knownIssues,launchStatus:ma[e.spec]}),this.rootElem.classList.add("individual-sim-ui",s.cssClass),this.player=e,this.individualConfig=s,this.raidSimResultsManager=null,this.settingsMuuri=null,this.prevEpIterations=0,this.prevEpSimResult=null,this.addWarning({updateOn:this.player.gearChangeEmitter,getContent:()=>{if(!this.player.getGear().hasInactiveMetaGem(this.player.isBlacksmithing()))return"";const t=this.player.getGear().getMetaGem();return`Meta gem disabled (${t.name}): ${fe(t)}`}}),this.addWarning({updateOn:i.onAny([this.player.gearChangeEmitter,this.player.professionChangeEmitter]),getContent:()=>{const t=this.player.getGear().getFailedProfessionRequirements(this.player.getProfessions());return 0==t.length?"":t.map((t=>`${t.name} requires ${Ee[t.requiredProfession]}, but it is not selected.`))}}),this.addWarning({updateOn:this.player.gearChangeEmitter,getContent:()=>{const t=this.player.getGear().getJCGems(this.player.isBlacksmithing());return t.length<=3?"":`Only 3 Jewelcrafting Gems are allowed, but ${t.length} are equipped.`}}),this.addWarning({updateOn:this.player.talentsChangeEmitter,getContent:()=>{const t=Se(this.player.getTalentsString());return 0==t?"":t<ve?"Unspent talent points.":t>ve?"More than maximum talent points spent.":""}}),this.addWarning({updateOn:i.onAny([this.player.gearChangeEmitter,this.player.talentsChangeEmitter]),getContent:()=>this.player.canDualWield2H()||(this.player.getEquippedItem(ft.ItemSlotMainHand)?.item.handType!=Pt.HandTypeTwoHand||null==this.player.getEquippedItem(ft.ItemSlotOffHand))&&this.player.getEquippedItem(ft.ItemSlotOffHand)?.item.handType!=Pt.HandTypeTwoHand?"":"Dual wielding two-handed weapon(s) without Titan's Grip spec."}),(s.warnings||[]).forEach((t=>this.addWarning(t(this)))),this.isWithinRaidSim||this.sim.waitForInit().then((()=>this.loadSettings())),this.addSidebarComponents(),this.addTopbarComponents(),this.addGearTab(),this.addSettingsTab(),this.addTalentsTab(),this.isWithinRaidSim||(this.addDetailedResultsTab(),this.addLogTab()),this.player.changeEmitter.on((()=>this.recomputeSettingsLayout()))}loadSettings(){const t=i.nextEventID();i.freezeAllAndDo((()=>{let e=!1,s=window.location.hash;if(s.length>1){s=s.substring(1);try{const a=atob(s),i=new Uint8Array(a.length);for(let t=0;t<i.length;t++)i[t]=a.charCodeAt(t);const n=pako.inflate(i),o=te.fromBinary(n);this.fromProto(t,o),e=!0}catch(i){console.warn("Failed to parse settings from window hash: "+i)}}window.location.hash="";const a=window.localStorage.getItem(this.getSettingsStorageKey());if(!e&&null!=a)try{const s=te.fromJsonString(a);this.fromProto(t,s),e=!0}catch(i){console.warn("Failed to parse saved settings: "+i)}e||this.applyDefaults(t),this.player.setName(t,"Player"),this.changeEmitter.on((t=>{const e=te.toJsonString(this.toProto());window.localStorage.setItem(this.getSettingsStorageKey(),e)}))}))}addSidebarComponents(){var t,e,s;this.raidSimResultsManager=we(this),t=this,e=this.individualConfig.epStats,s=this.individualConfig.epReferenceStat,t.addAction("STAT WEIGHTS","ep-weights-action",(()=>{new fa(t,e,s)})),new Xe(this.rootElem.getElementsByClassName("sim-sidebar-footer")[0],this.player,this.individualConfig.displayStats,this.individualConfig.modifyDisplayStats)}addTopbarComponents(){this.addToolbarItem(function(t){const e=document.createElement("div");e.classList.add("import-settings","sim-dropdown-menu"),e.innerHTML='\n\t\t<span id="importMenuLink" class="dropdown-toggle fas fa-file-import" role="button" data-toggle="dropdown" aria-haspopup="true" arai-expanded="false"></span>\n\t\t<div class="dropdown-menu dropdown-menu-right" aria-labelledby="importMenuLink">\n\t\t</div>\n\t';const s=e.getElementsByClassName("dropdown-toggle")[0];tippy(s,{content:"Import",allowHTML:!0});const a=e.getElementsByClassName("dropdown-menu")[0],i=(t,e,s)=>{const i=document.createElement("span");i.classList.add("dropdown-item"),s||i.classList.add("within-raid-sim-hide"),"Addon"==t&&i.classList.add("experimental"),i.textContent=t,i.addEventListener("click",e),a.appendChild(i)};return i("Json",(()=>new Pa(a,t)),!0),i("80U",(()=>new xa(a,t)),!0),i("Addon",(()=>new ka(a,t)),!0),e}(this)),this.addToolbarItem(function(t){const e=document.createElement("div");e.classList.add("export-settings","sim-dropdown-menu"),e.innerHTML='\n\t\t<span id="exportMenuLink" class="dropdown-toggle fas fa-file-export" role="button" data-toggle="dropdown" aria-haspopup="true" arai-expanded="false"></span>\n\t\t<div class="dropdown-menu dropdown-menu-right" aria-labelledby="exportMenuLink">\n\t\t</div>\n\t';const s=e.getElementsByClassName("dropdown-toggle")[0];tippy(s,{content:"Export",allowHTML:!0});const a=e.getElementsByClassName("dropdown-menu")[0],i=(t,e,s)=>{const i=document.createElement("span");i.classList.add("dropdown-item"),s||i.classList.add("within-raid-sim-hide"),i.textContent=t,i.addEventListener("click",e),a.appendChild(i)};return i("Link",(()=>new Sa(a,t)),!1),i("Json",(()=>new va(a,t)),!0),i("80U EP",(()=>new Ia(a,t)),!1),i("Pawn EP",(()=>new ba(a,t)),!1),e}(this));const t=document.createElement("span");t.classList.add("fas","fa-cog"),tippy(t,{content:"Options",allowHTML:!0}),t.addEventListener("click",(t=>{new ra(this.rootElem,this)})),this.addToolbarItem(t)}addGearTab(){this.addTab("GEAR","gear-tab",'\n\t\t\t<div class="gear-tab-columns">\n\t\t\t\t<div class="left-gear-panel">\n\t\t\t\t\t<div class="gear-picker">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="right-gear-panel">\n\t\t\t\t\t<div class="bonus-stats-picker">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="saved-gear-manager">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t'),new Is(this.rootElem.getElementsByClassName("gear-picker")[0],this.player),new Je(this.rootElem.getElementsByClassName("bonus-stats-picker")[0],this.player,this.individualConfig.epStats);const t=new Ps(this.rootElem.getElementsByClassName("saved-gear-manager")[0],this.player,{label:"Gear",storageKey:this.getSavedGearStorageKey(),getData:t=>Ie.create({gear:t.getGear().asSpec(),bonusStats:t.getBonusStats().asArray()}),setData:(t,e,a)=>{i.freezeAllAndDo((()=>{e.setGear(t,this.sim.lookupEquipmentSpec(a.gear||le.create())),e.setBonusStats(t,new s(a.bonusStats||[]))}))},changeEmitters:[this.player.changeEmitter],equals:(t,e)=>Ie.equals(t,e),toJson:t=>Ie.toJson(t),fromJson:t=>Ie.fromJson(t)});this.sim.waitForInit().then((()=>{t.loadUserData(),this.individualConfig.presets.gear.forEach((e=>{t.addSavedData({name:e.name,tooltip:e.tooltip,isPreset:!0,data:Ie.create({gear:this.sim.lookupEquipmentSpec(e.gear).asSpec(),bonusStats:(new s).asArray()}),enableWhen:e.enableWhen})}))}))}addSettingsTab(){this.addTab("SETTINGS","settings-tab",'\n\t\t\t<div class="settings-inputs">\n\t\t\t\t<div class="settings-section-container">\n\t\t\t\t\t<fieldset class="settings-section encounter-section within-raid-sim-hide">\n\t\t\t\t\t\t<legend>Encounter</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class="settings-section race-section">\n\t\t\t\t\t\t<legend>Player</legend>\n\t\t\t\t\t\t<div class="settings-section-iconrow player-iconrow"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class="settings-section rotation-section">\n\t\t\t\t\t\t<legend>Rotation</legend>\n\t\t\t\t\t\t<div class="settings-section-iconrow rotation-iconrow"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class="settings-section-container custom-sections-container">\n\t\t\t\t</div>\n\t\t\t\t<div class="settings-section-container labeled-icon-section within-raid-sim-hide">\n\t\t\t\t\t<fieldset class="settings-section buffs-section">\n\t\t\t\t\t\t<legend>Raid Buffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class="settings-section debuffs-section damage-metrics">\n\t\t\t\t\t\t<legend>Debuffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class="settings-section-container">\n\t\t\t\t\t<fieldset class="settings-section new-consumes-section">\n\t\t\t\t\t\t<legend>Consumes</legend>\n\t\t\t\t\t\t<div class="consumes-row">\n\t\t\t\t\t\t\t<span>Potions</span>\n\t\t\t\t\t\t\t<div class="consumes-row-inputs">\n\t\t\t\t\t\t\t\t<div class="consumes-prepot"></div>\n\t\t\t\t\t\t\t\t<div class="consumes-potions"></div>\n\t\t\t\t\t\t\t\t<div class="consumes-conjured"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="consumes-row">\n\t\t\t\t\t\t\t<span>Elixirs</span>\n\t\t\t\t\t\t\t<div class="consumes-row-inputs">\n\t\t\t\t\t\t\t\t<div class="consumes-flasks"></div>\n\t\t\t\t\t\t\t\t<span>OR</span>\n\t\t\t\t\t\t\t\t<div class="consumes-battle-elixirs"></div>\n\t\t\t\t\t\t\t\t<div class="consumes-guardian-elixirs"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="consumes-row">\n\t\t\t\t\t\t\t<span>Food</span>\n\t\t\t\t\t\t\t<div class="consumes-row-inputs">\n\t\t\t\t\t\t\t\t<div class="consumes-food"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="consumes-row damage-metrics">\n\t\t\t\t\t\t\t<span>Eng</span>\n\t\t\t\t\t\t\t<div class="consumes-row-inputs consumes-trade">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="consumes-row consumes-row-pet">\n\t\t\t\t\t\t\t<span>Pet</span>\n\t\t\t\t\t\t\t<div class="consumes-row-inputs consumes-pet">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="consumes-row">\n\t\t\t\t\t\t\t<div class="consumes-row-inputs consumes-other">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class="settings-section-container cooldowns-section-container">\n\t\t\t\t\t<fieldset class="settings-section cooldowns-section">\n\t\t\t\t\t\t<legend>Cooldowns</legend>\n\t\t\t\t\t\t<div class="cooldowns-section-content">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class="settings-section other-settings-section">\n\t\t\t\t\t\t<legend>Other</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="settings-bottom-bar">\n\t\t\t\t<div class="saved-encounter-manager within-raid-sim-hide">\n\t\t\t\t</div>\n\t\t\t\t<div class="saved-settings-manager within-raid-sim-hide">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');const t=this.rootElem.getElementsByClassName("settings-inputs")[0],e=(t,e,s,a)=>{s&&tippy(t,{content:s,allowHTML:!0}),0==e.length?t.style.display="none":a&&(e.length<4?t.style.gridTemplateColumns=`repeat(${e.length}, 1fr)`:e.length>4&&e.length<8&&(t.style.gridTemplateColumns=`repeat(${Math.ceil(e.length/2)}, 1fr)`))},s=(t,e)=>"icon"==e.type?new na(t,this.player,e):"iconEnum"==e.type?new Ze(t,this.player,e):void 0,a=this.rootElem.getElementsByClassName("player-iconrow")[0];e(a,this.individualConfig.playerIconInputs.map((t=>s(a,t))),"",!0);const n=this.splitRelevantOptions([{item:Ta,stats:[]},{item:Da,stats:[]},{item:Fa,stats:[o.StatHealth]},{item:Ma,stats:[o.StatArmor]},{item:Ra,stats:[o.StatStamina]},{item:Ba,stats:[o.StatStrength,o.StatAgility]},{item:La,stats:[o.StatIntellect]},{item:Na,stats:[o.StatSpirit]},{item:Va,stats:[o.StatAttackPower]},{item:Oa,stats:[o.StatAttackPower]},{item:ja,stats:[o.StatMeleeCrit]},{item:Ga,stats:[o.StatMeleeHaste]},{item:za,stats:[o.StatSpellPower]},{item:$a,stats:[o.StatSpellCrit]},{item:Ha,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:Aa,stats:[o.StatAttackPower,o.StatSpellPower]},{item:Wa,stats:[o.StatArmor]},{item:Ua,stats:[o.StatMP5]},{item:qa,stats:[o.StatMP5]}]),l=this.rootElem.getElementsByClassName("buffs-section")[0];e(l,n.map((t=>new la(l,this.player,t,this))),"Buffs provided by other party/raid members.");this.splitRelevantOptions([{item:Za,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:_a,stats:[o.StatSpellHaste]}]).forEach((t=>s(l,t)));const c=this.splitRelevantOptions([{item:mi,stats:[]},{item:hi,stats:[]}]);c.length>0&&new la(l,this.player,{inputs:c,numColumns:1,emptyColor:"grey",label:"Revitalize",categoryId:it.fromSpellId(48545)},this);const m=this.splitRelevantOptions([{item:ai,stats:[o.StatMeleeHit,o.StatSpellHit]},{item:ei,stats:[o.StatMeleeCrit]},{item:si,stats:[o.StatSpellCrit]},{item:ii,stats:[o.StatSpellPower]},{item:ni,stats:[o.StatArmor]},{item:Qa,stats:[o.StatArmor]},{item:ti,stats:[o.StatStamina]},{item:oi,stats:[o.StatMP5]},{item:li,stats:[o.StatMP5]},{item:ri,stats:[o.StatMP5,o.StatSpellPower]},{item:di,stats:[o.StatAttackPower,o.StatSpellPower]},{item:ci,stats:[o.StatAttackPower]}]);m.length>0&&new la(l,this.player,{inputs:m,numColumns:3,emptyColor:"grey",label:"Misc"},this);const h=this.splitRelevantOptions([{item:pi,stats:[o.StatArmorPenetration]},{item:ui,stats:[o.StatArmorPenetration]},{item:wi,stats:[o.StatAttackPower]},{item:fi,stats:[o.StatAttackPower]},{item:bi,stats:[o.StatSpellPower]},{item:yi,stats:[o.StatSpellHit]},{item:Ii,stats:[o.StatSpellCrit]},{item:Ei,stats:[o.StatMeleeCrit,o.StatSpellCrit]},{item:gi,stats:[o.StatArmor]},{item:Si,stats:[o.StatArmor]},{item:vi,stats:[o.StatDodge]}]),p=this.rootElem.getElementsByClassName("debuffs-section")[0];e(p,h.map((t=>new la(p,this.player,t,this))),"Debuffs applied by other raid members.");this.splitRelevantOptions([{item:Pi,stats:[o.StatMP5,o.StatIntellect]},{item:Ci,stats:[o.StatRangedAttackPower]}]).forEach((t=>s(p,t)));const u=this.splitRelevantOptions([{item:xi,stats:[o.StatStamina]},{item:ki,stats:[o.StatArmorPenetration]},{item:Ti,stats:[o.StatAttackPower]}]);u.length>0&&new la(p,this.player,{inputs:u,numColumns:3,emptyColor:"grey",label:"Misc"},this);const g=this.splitRelevantOptions([{item:ge.IndestructiblePotion,stats:[o.StatArmor]},{item:ge.PotionOfSpeed,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:ge.PotionOfWildMagic,stats:[o.StatMeleeCrit,o.StatSpellCrit,o.StatSpellPower]}]);if(g.length){const t=this.rootElem.getElementsByClassName("consumes-prepot")[0];new Ze(t,this.player,$i(g)),tippy(t,{content:"Prepop Potion (1s before combat)",allowHTML:!0})}const f=this.splitRelevantOptions([{item:ge.RunicHealingPotion,stats:[o.StatStamina]},{item:ge.RunicManaPotion,stats:[o.StatIntellect]},{item:ge.IndestructiblePotion,stats:[o.StatArmor]},{item:ge.PotionOfSpeed,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:ge.PotionOfWildMagic,stats:[o.StatMeleeCrit,o.StatSpellCrit,o.StatSpellPower]}]);if(f.length){const t=this.rootElem.getElementsByClassName("consumes-potions")[0];new Ze(t,this.player,qi(f)),tippy(t,{content:"Combat Potion",allowHTML:!0})}const E=this.splitRelevantOptions([this.player.getClass()==_.ClassRogue?{item:ut.ConjuredRogueThistleTea,stats:[]}:null,{item:ut.ConjuredHealthstone,stats:[o.StatStamina]},{item:ut.ConjuredDarkRune,stats:[o.StatIntellect]},{item:ut.ConjuredFlameCap,stats:[o.StatStrength,o.StatAgility,o.StatFireSpellPower]}]);if(E.length){const t=this.rootElem.getElementsByClassName("consumes-conjured")[0];new Ze(t,this.player,_i(E))}const S=this.splitRelevantOptions([{item:ce.FlaskOfTheFrostWyrm,stats:[o.StatSpellPower]},{item:ce.FlaskOfEndlessRage,stats:[o.StatAttackPower,o.StatRangedAttackPower]},{item:ce.FlaskOfPureMojo,stats:[o.StatMP5]},{item:ce.FlaskOfStoneblood,stats:[o.StatStamina]},{item:ce.LesserFlaskOfToughness,stats:[o.StatResilience]},{item:ce.LesserFlaskOfResistance,stats:[o.StatArcaneResistance,o.StatFireResistance,o.StatFrostResistance,o.StatNatureResistance,o.StatShadowResistance]}]);if(S.length){const t=this.rootElem.getElementsByClassName("consumes-flasks")[0];new Ze(t,this.player,zi(S))}const v=this.splitRelevantOptions([{item:me.ElixirOfAccuracy,stats:[o.StatMeleeHit,o.StatSpellHit]},{item:me.ElixirOfArmorPiercing,stats:[o.StatArmorPenetration]},{item:me.ElixirOfDeadlyStrikes,stats:[o.StatMeleeCrit,o.StatSpellCrit]},{item:me.ElixirOfExpertise,stats:[o.StatExpertise]},{item:me.ElixirOfLightningSpeed,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:me.ElixirOfMightyAgility,stats:[o.StatAgility]},{item:me.ElixirOfMightyStrength,stats:[o.StatStrength]},{item:me.GurusElixir,stats:[o.StatStamina,o.StatAgility,o.StatStrength,o.StatSpirit,o.StatIntellect]},{item:me.SpellpowerElixir,stats:[o.StatSpellPower]},{item:me.WrathElixir,stats:[o.StatAttackPower,o.StatRangedAttackPower]}]);if(v.length){const t=this.rootElem.getElementsByClassName("consumes-battle-elixirs")[0];new Ze(t,this.player,Ji(v))}const w=this.splitRelevantOptions([{item:he.ElixirOfMightyDefense,stats:[o.StatDefense]},{item:he.ElixirOfMightyFortitude,stats:[o.StatStamina]},{item:he.ElixirOfMightyMageblood,stats:[o.StatMP5]},{item:he.ElixirOfMightyThoughts,stats:[o.StatIntellect]},{item:he.ElixirOfProtection,stats:[o.StatArmor]},{item:he.ElixirOfSpirit,stats:[o.StatSpirit]},{item:he.GiftOfArthas,stats:[o.StatStamina]}]);if(w.length){const t=this.rootElem.getElementsByClassName("consumes-guardian-elixirs")[0];new Ze(t,this.player,Ki(w))}const I=this.splitRelevantOptions([{item:pe.FoodFishFeast,stats:[o.StatStamina,o.StatAttackPower,o.StatSpellPower]},{item:pe.FoodGreatFeast,stats:[o.StatStamina,o.StatAttackPower,o.StatSpellPower]},{item:pe.FoodBlackenedDragonfin,stats:[o.StatAgility]},{item:pe.FoodDragonfinFilet,stats:[o.StatStrength]},{item:pe.FoodCuttlesteak,stats:[o.StatSpirit]},{item:pe.FoodMegaMammothMeal,stats:[o.StatAttackPower]},{item:pe.FoodHeartyRhino,stats:[o.StatArmorPenetration]},{item:pe.FoodRhinoliciousWormsteak,stats:[o.StatExpertise]},{item:pe.FoodFirecrackerSalmon,stats:[o.StatSpellPower]},{item:pe.FoodSnapperExtreme,stats:[o.StatMeleeHit,o.StatSpellHit]},{item:pe.FoodSpicedWormBurger,stats:[o.StatMeleeCrit,o.StatSpellCrit]},{item:pe.FoodImperialMantaSteak,stats:[o.StatMeleeHaste,o.StatSpellHaste]},{item:pe.FoodMightyRhinoDogs,stats:[o.StatMP5]}]);if(I.length){const t=this.rootElem.getElementsByClassName("consumes-food")[0];new Ze(t,this.player,Yi(I))}const y=this.rootElem.getElementsByClassName("consumes-trade")[0];s(y,Di),s(y,Mi),s(y,Xi);const b=()=>{this.player.hasProfession(T.Engineering)?y.parentElement.style.removeProperty("display"):y.parentElement.style.display="none"};if(this.player.professionChangeEmitter.on(b),b(),this.individualConfig.petConsumeInputs?.length){const t=this.rootElem.getElementsByClassName("consumes-pet")[0];this.individualConfig.petConsumeInputs.map((e=>s(t,e)))}else{this.rootElem.getElementsByClassName("consumes-row-pet")[0].style.display="none"}const C=(t,e)=>{e.tooltip&&tippy(t,{content:e.tooltip,allowHTML:!0}),e.inputs.forEach((e=>{"number"==e.type?new ze(t,this.player,e):"boolean"==e.type?new Ke(t,this.player,e):"enum"==e.type?new ns(t,this.player,e):"customRotation"==e.type&&new as(t,this.player,e)}))};if(this.individualConfig.rotationIconInputs?.length){const t=this.rootElem.getElementsByClassName("rotation-iconrow")[0];e(t,this.individualConfig.rotationIconInputs.map((e=>s(t,e))),"",!0)}C(this.rootElem.getElementsByClassName("rotation-section")[0],this.individualConfig.rotationInputs),this.individualConfig.otherInputs?.inputs.length&&C(this.rootElem.getElementsByClassName("other-settings-section")[0],this.individualConfig.otherInputs);const P=ye[this.player.spec];new ns(this.rootElem.getElementsByClassName("race-section")[0],this.player,{label:"Race",values:P.map((t=>({name:be[t],value:t}))),changedEvent:t=>t.raceChangeEmitter,getValue:t=>t.getRace(),setValue:(t,e,s)=>e.setRace(t,s)});const x=ee(T);new ns(this.rootElem.getElementsByClassName("race-section")[0],this.player,{label:"Profession 1",values:x.map((t=>({name:Ee[t],value:t}))),changedEvent:t=>t.professionChangeEmitter,getValue:t=>t.getProfession1(),setValue:(t,e,s)=>e.setProfession1(t,s)}),new ns(this.rootElem.getElementsByClassName("race-section")[0],this.player,{label:"Profession 2",values:x.map((t=>({name:Ee[t],value:t}))),changedEvent:t=>t.professionChangeEmitter,getValue:t=>t.getProfession2(),setValue:(t,e,s)=>e.setProfession2(t,s)}),new ns(this.rootElem.getElementsByClassName("race-section")[0],this.player,{label:"Shatt Faction",values:[Ce.ShattrathFactionAldor,Ce.ShattrathFactionScryer].map((t=>({name:Pe[t],value:t}))),changedEvent:t=>t.gearChangeEmitter,getValue:t=>t.getShattFaction(),setValue:(t,e,s)=>e.setShattFaction(t,s),showWhen:t=>34678==this.player.getEquippedItem(ft.ItemSlotNeck)?.item.id||34679==this.player.getEquippedItem(ft.ItemSlotNeck)?.item.id});const k=t.getElementsByClassName("encounter-section")[0];new os(k,this.sim.encounter,this.individualConfig.encounterPicker,this);const D=new Ps(this.rootElem.getElementsByClassName("saved-encounter-manager")[0],this.sim.encounter,{label:"Encounter",storageKey:this.getSavedEncounterStorageKey(),getData:t=>xe.create({encounter:t.toProto()}),setData:(t,e,s)=>e.fromProto(t,s.encounter),changeEmitters:[this.sim.encounter.changeEmitter],equals:(t,e)=>xe.equals(t,e),toJson:t=>xe.toJson(t),fromJson:t=>xe.fromJson(t)}),M=t.getElementsByClassName("cooldowns-section")[0],R=t.getElementsByClassName("cooldowns-section-content")[0];new ts(R,this.player),tippy(M,{content:"Specify cooldown timings, in seconds. Cooldowns will be used as soon as possible after their specified timings. When not specified, cooldowns will be used when ready and it is sensible to do so.<br><br>Multiple timings can be provided by separating with commas. Any cooldown usages after the last provided timing will use the default logic.",allowHTML:!0,placement:"left"}),this.rootElem.getElementsByClassName("settings-tab-tab")[0].addEventListener("click",(t=>{null==this.settingsMuuri&&setTimeout((()=>{this.settingsMuuri=new Muuri(".settings-inputs")}),200),setTimeout((()=>{this.recomputeSettingsLayout()}),200)}));const B=new Ps(this.rootElem.getElementsByClassName("saved-settings-manager")[0],this,{label:"Settings",storageKey:this.getSavedSettingsStorageKey(),getData:t=>ke.create({raidBuffs:t.sim.raid.getBuffs(),partyBuffs:t.player.getParty()?.getBuffs()||Te.create(),playerBuffs:t.player.getBuffs(),debuffs:t.sim.raid.getDebuffs(),consumes:t.player.getConsumes(),race:t.player.getRace(),cooldowns:t.player.getCooldowns()}),setData:(t,e,s)=>{i.freezeAllAndDo((()=>{e.sim.raid.setBuffs(t,s.raidBuffs||r.create()),e.sim.raid.setDebuffs(t,s.debuffs||d.create());const a=e.player.getParty();a&&a.setBuffs(t,s.partyBuffs||Te.create()),e.player.setBuffs(t,s.playerBuffs||De.create()),e.player.setConsumes(t,s.consumes||Me.create()),e.player.setRace(t,s.race),e.player.setCooldowns(t,s.cooldowns||Re.create())}))},changeEmitters:[this.sim.raid.buffsChangeEmitter,this.sim.raid.debuffsChangeEmitter,this.player.getParty().buffsChangeEmitter,this.player.buffsChangeEmitter,this.player.consumesChangeEmitter,this.player.raceChangeEmitter,this.player.cooldownsChangeEmitter],equals:(t,e)=>ke.equals(t,e),toJson:t=>ke.toJson(t),fromJson:t=>ke.fromJson(t)}),L=this.rootElem.getElementsByClassName("custom-sections-container")[0];let N=!1;for(const[i,o]of Object.entries(this.individualConfig.additionalSections||{})){const t=i.replace(/\s+/g,""),e=document.createElement("fieldset");e.classList.add("settings-section",t+"-section"),e.innerHTML=`<legend>${i}</legend>`,L.appendChild(e),C(e,o),N=!0}for(const[i,o]of Object.entries(this.individualConfig.additionalIconSections||{})){const t=i.replace(/\s+/g,""),a=document.createElement("fieldset");a.classList.add("settings-section",t+"-section"),a.innerHTML=`<legend>${i}</legend>`,L.appendChild(a),e(a,o.map((t=>s(a,t)))),N=!0}(this.individualConfig.customSections||[]).forEach((t=>{const e=document.createElement("fieldset");L.appendChild(e);const s=t(this,e),a=s.replace(/\s+/g,"");e.classList.add("settings-section",a+"-section");const i=document.createElement("legend");i.textContent=s,e.prepend(i),N=!0})),N||L.remove(),this.sim.waitForInit().then((()=>{D.loadUserData(),B.loadUserData()})),Array.from(this.rootElem.getElementsByClassName("settings-section-container")).forEach(((t,e)=>{t.style.zIndex=String(1e3-e)}))}addTalentsTab(){this.addTab("TALENTS","talents-tab",'\n\t\t\t<div class="player-pet-toggle">\n\t\t\t</div>\n\t\t\t<div class="talents-content">\n\t\t\t\t<div class="talents-tab-content">\n\t\t\t\t\t<div class="talents-picker">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="glyphs-picker">\n\t\t\t\t\t<span>Glyphs</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="saved-talents-manager">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="talents-content">\n\t\t\t\t<div class="talents-tab-content">\n\t\t\t\t\t<div class="pet-talents-picker">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t'),Be(this.rootElem.getElementsByClassName("talents-picker")[0],this.player),Le(this.rootElem.getElementsByClassName("glyphs-picker")[0],this.player);const t=new Ps(this.rootElem.getElementsByClassName("saved-talents-manager")[0],this.player,{label:"Talents",storageKey:this.getSavedTalentsStorageKey(),getData:t=>Ne.create({talentsString:t.getTalentsString(),glyphs:t.getGlyphs()}),setData:(t,e,s)=>{i.freezeAllAndDo((()=>{e.setTalentsString(t,s.talentsString),e.setGlyphs(t,s.glyphs||Ve.create())}))},changeEmitters:[this.player.talentsChangeEmitter,this.player.glyphsChangeEmitter],equals:(t,e)=>Ne.equals(t,e),toJson:t=>Ne.toJson(t),fromJson:t=>Ne.fromJson(t)});this.sim.waitForInit().then((()=>{if(t.loadUserData(),this.individualConfig.presets.talents.forEach((e=>{e.isPreset=!0,t.addSavedData({name:e.name,isPreset:!0,data:e.data})})),this.player.getClass()==_.ClassHunter){new Ys(this.rootElem.getElementsByClassName("pet-talents-picker")[0],this.player);let t=0;const e=Array.from(this.rootElem.getElementsByClassName("talents-content")),s=()=>{e[1-t].style.display="none",e[t].style.removeProperty("display"),0==t?n.rootElem.style.display="none":n.rootElem.style.removeProperty("display")},a=this.rootElem.getElementsByClassName("player-pet-toggle")[0];new ns(a,this,{values:[{name:"Player",value:0},{name:"Pet",value:1}],changedEvent:t=>new i,getValue:e=>t,setValue:(e,a,i)=>{t=i,s()}});const n=new Ze(a,this.player,_s());s()}}))}addDetailedResultsTab(){this.addTab("DETAILED RESULTS","detailed-results-tab",'\n\t\t\t<div class="detailed-results">\n\t\t\t</div>\n\t\t'),new es(this.rootElem.getElementsByClassName("detailed-results")[0],this,this.raidSimResultsManager)}addLogTab(){this.addTab("LOG","log-tab",'\n\t\t\t<div class="log-runner">\n\t\t\t</div>\n\t\t'),new oa(this.rootElem.getElementsByClassName("log-runner")[0],this)}applyDefaults(t){i.freezeAllAndDo((()=>{const e=ht(this.player.spec),s=mt(this.player.spec);this.player.applySharedDefaults(t),this.player.setRace(t,ye[this.player.spec][0]),this.player.setGear(t,this.sim.lookupEquipmentSpec(this.individualConfig.defaults.gear)),this.player.setConsumes(t,this.individualConfig.defaults.consumes),this.player.setRotation(t,this.individualConfig.defaults.rotation),this.player.setTalentsString(t,this.individualConfig.defaults.talents.talentsString),this.player.setGlyphs(t,this.individualConfig.defaults.talents.glyphs||Ve.create()),this.player.setSpecOptions(t,this.individualConfig.defaults.specOptions),this.player.setBuffs(t,this.individualConfig.defaults.individualBuffs),this.player.getParty().setBuffs(t,this.individualConfig.defaults.partyBuffs),this.player.getRaid().setBuffs(t,this.individualConfig.defaults.raidBuffs),this.player.setEpWeights(t,this.individualConfig.defaults.epWeights),this.player.setProfession1(t,this.individualConfig.defaults.other?.profession1||T.Engineering),this.player.setProfession2(t,this.individualConfig.defaults.other?.profession2||T.Jewelcrafting),this.player.setDistanceFromTarget(t,this.individualConfig.defaults.other?.distanceFromTarget||0),this.isWithinRaidSim?this.sim.raid.setTargetDummies(t,0):(this.sim.raid.setTargetDummies(t,s?9:0),this.sim.encounter.applyDefaults(t),this.sim.raid.setDebuffs(t,this.individualConfig.defaults.debuffs),this.sim.applyDefaults(t,e,s),e?this.sim.raid.setTanks(t,[this.player.makeRaidTarget()]):this.sim.raid.setTanks(t,[]))}))}getSavedGearStorageKey(){return this.getStorageKey("__savedGear__")}getSavedRotationStorageKey(){return this.getStorageKey("__savedRotation__")}getSavedSettingsStorageKey(){return this.getStorageKey("__savedSettings__")}getSavedTalentsStorageKey(){return this.getStorageKey("__savedTalents__")}recomputeSettingsLayout(){this.settingsMuuri,window.dispatchEvent(new Event("resize"))}getStorageKey(t){return Oe[this.player.spec]+t}toProto(){return te.create({settings:this.sim.toProto(),player:this.player.toProto(!0),raidBuffs:this.sim.raid.getBuffs(),debuffs:this.sim.raid.getDebuffs(),tanks:this.sim.raid.getTanks(),partyBuffs:this.player.getParty()?.getBuffs()||Te.create(),encounter:this.sim.encounter.toProto(),epWeights:this.player.getEpWeights().asArray(),targetDummies:this.sim.raid.getTargetDummies()})}toLink(){const t=this.toProto();t.settings=void 0,t.epWeights=[];const e=te.toBinary(t),s=pako.deflate(e,{to:"string"}),a=btoa(String.fromCharCode(...s)),i=new URL(window.location.href);return i.hash=a,i.toString()}fromProto(t,e){i.freezeAllAndDo((()=>{if(!e.player)return;e.settings&&this.sim.fromProto(t,e.settings),this.player.fromProto(t,e.player),e.epWeights?.length>0?this.player.setEpWeights(t,new s(e.epWeights)):this.player.setEpWeights(t,this.individualConfig.defaults.epWeights),this.sim.raid.setBuffs(t,e.raidBuffs||r.create()),this.sim.raid.setDebuffs(t,e.debuffs||d.create()),this.sim.raid.setTanks(t,e.tanks||[]),this.sim.raid.setTargetDummies(t,e.targetDummies);const a=this.player.getParty();a&&a.setBuffs(t,e.partyBuffs||Te.create()),this.sim.encounter.fromProto(t,e.encounter||l.create()),mt(this.player.spec)||this.sim.setShowDamageMetrics(t,!0)}))}splitRelevantOptions(t){return t.filter((t=>null!=t)).filter((t=>this.individualConfig.includeBuffDebuffInputs.includes(t.item)||0==t.stats.length||t.stats.some((t=>this.individualConfig.epStats.includes(t))))).filter((t=>!this.individualConfig.excludeBuffDebuffInputs.includes(t.item))).map((t=>t.item))}}export{ra as $,Oa as A,an as B,Ss as C,Wa as D,ws as E,_s as F,$s as G,vs as H,nn as I,Pi as J,Qs as K,sa as L,Ga as M,Xs as N,fs as O,wi as P,ha as Q,qa as R,$e as S,Es as T,Ca as U,Ea as V,Ae as W,He as X,ns as Y,ua as Z,ca as _,Vs as a,Ps as a0,os as a1,sn as a2,es as a3,oa as a4,$a as a5,Ii as a6,yi as a7,us as a8,qs as a9,Ba as aa,Ds as b,Bs as c,ja as d,Va as e,pi as f,ui as g,Ts as h,Rs as i,Ri as j,bi as k,Ra as l,Ws as m,gi as n,Si as o,gs as p,Gs as q,Ze as r,As as s,na as t,Ns as u,Ua as v,_a as w,Na as x,fi as y,La as z};
//# sourceMappingURL=individual_sim_ui-f17c4a89.chunk.js.map
