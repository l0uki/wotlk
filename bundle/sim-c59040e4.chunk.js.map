{"version":3,"file":"sim-c59040e4.chunk.js","sources":["../../../ui/feral_druid/inputs.ts","../../../ui/feral_druid/presets.ts","../../../ui/feral_druid/sim.ts"],"sourcesContent":["import { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nimport {\n\tFeralDruid,\n\tFeralDruid_Rotation as DruidRotation,\n\tFeralDruid_Rotation_BearweaveType as BearweaveType,\n\tFeralDruid_Rotation_BiteModeType as BiteModeType,\n\tFeralDruid_Options as DruidOptions,\n\tFeralDruid_Rotation_BiteModeType\n} from '../core/proto/druid.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfInnervate = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecFeralDruid>({\n\tfieldName: 'innervateTarget',\n\tid: ActionId.fromSpellId(29166),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecFeralDruid>) => player.getSpecOptions().innervateTarget?.targetIndex != NO_TARGET,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecFeralDruid>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.innervateTarget = RaidTarget.create({\n\t\t\ttargetIndex: newValue ? 0 : NO_TARGET,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const LatencyMs = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecFeralDruid>({\n\tfieldName: 'latencyMs',\n\tlabel: 'Latency',\n\tlabelTooltip: 'Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued.',\n});\n\nexport const FeralDruidRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecFeralDruid>({\n\t\t\tfieldName: 'maintainFaerieFire',\n\t\t\tlabel: 'Maintain Faerie Fire',\n\t\t\tlabelTooltip: 'Use Faerie Fire whenever it is not active on the target.',\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecFeralDruid, BearweaveType>({\n\t\t\tfieldName: 'bearWeaveType',\n\t\t\tlabel: 'Bearweaving',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: BearweaveType.None },\n\t\t\t\t{ name: 'Mangle', value: BearweaveType.Mangle },\n\t\t\t\t{ name: 'Lacerate', value: BearweaveType.Lacerate },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecFeralDruid>({\n\t\t\tfieldName: 'hotUptime',\n\t\t\tlabel: 'Revitalize Hot Uptime',\n\t\t\tlabelTooltip: 'Hot uptime percentage to assume when theorizing energy gains',\n\t\t\tpercent: true\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecFeralDruid>({\n\t\t\tfieldName: 'maxRoarClip',\n\t\t\tlabel: 'Roar Clip',\n\t\t\tlabelTooltip: 'Max seconds to clip roar',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecFeralDruid>({\n\t\t\tfieldName: 'useBite',\n\t\t\tlabel: 'Bite during rotation',\n\t\t\tlabelTooltip: 'Use bite during rotation rather than just at end',\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecFeralDruid, BiteModeType>({\n\t\t\tfieldName: 'biteModeType',\n\t\t\tlabel: 'Bite Mode',\n\t\t\tlabelTooltip: 'Underlying \"Bite logic\" to use',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Emperical', value: BiteModeType.Emperical },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecFeralDruid>) => player.getRotation().useBite == true\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecFeralDruid>({\n\t\t\tfieldName: 'biteTime',\n\t\t\tlabel: 'Bite Time',\n\t\t\tlabelTooltip: 'Min seconds on Rip/Roar to bite',\n\t\t\tshowWhen: (player: Player<Spec.SpecFeralDruid>) => player.getRotation().useBite == true && player.getRotation().biteModeType == BiteModeType.Emperical,\n\t\t})\n\t],\n};\n","import { Consumes } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport { \n\tFeralDruid_Rotation as FeralDruidRotation,\n\tFeralDruid_Options as FeralDruidOptions,\n\tDruidMajorGlyph,\n\tDruidMinorGlyph,\n    FeralDruid_Rotation_BearweaveType,\n    FeralDruid_Rotation_BiteModeType,\n } from '../core/proto/druid.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-503202132322010053120230310511-205503012',\n        glyphs: Glyphs.create({\n            major1: DruidMajorGlyph.GlyphOfRip,\n            major2: DruidMajorGlyph.GlyphOfSavageRoar,\n            major3: DruidMajorGlyph.GlyphOfShred,\n            minor1: DruidMinorGlyph.GlyphOfDash,\n            minor2: DruidMinorGlyph.GlyphOfTheWild,\n            minor3: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n        }),\n\t}),\n};\n\nexport const DefaultRotation = FeralDruidRotation.create({\n  bearWeaveType: FeralDruid_Rotation_BearweaveType.Lacerate,\n  minCombosForRip: 5,\n  minCombosForBite: 5,\n\n  useRake: true,\n  useBite: false,\n  mangleSpam: false,\n  biteModeType: FeralDruid_Rotation_BiteModeType.Emperical,\n  biteTime: 10.0,\n  berserkBiteThresh: 30.0,\n  powerbear: false,\n  maxRoarClip: 10.0,\n  maintainFaerieFire: true,\n  hotUptime: 0.0\n});\n\nexport const DefaultOptions = FeralDruidOptions.create({\n  latencyMs: 100\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodFishFeast,\n\tdefaultPotion: Potions.PotionOfSpeed,\n});\n\nexport const PreRaid_PRESET = {\n\tname: 'PreRaid',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n    {\n      \"id\": 42550,\n      \"enchant\": 44879,\n      \"gems\": [\n        41398,\n        39996\n      ]\n    },\n    {\n      \"id\": 40678\n    },\n    {\n      \"id\": 37139,\n      \"enchant\": 44871,\n      \"gems\": [\n        39996\n      ]\n    },\n    {\n      \"id\": 37840,\n      \"enchant\": 55002\n    },\n    {\n      \"id\": 37219,\n      \"enchant\": 44489\n    },\n    {\n      \"id\": 44203,\n      \"enchant\": 44484,\n      \"gems\": [\n        0\n      ]\n    },\n    {\n      \"id\": 37409,\n      \"enchant\": 54999,\n      \"gems\": [\n        0\n      ]\n    },\n    {\n      \"id\": 40694,\n      \"gems\": [\n        49110,\n        39996\n      ]\n    },\n    {\n      \"id\": 37644,\n      \"enchant\": 38374\n    },\n    {\n      \"id\": 44297,\n      \"enchant\": 55016\n    },\n    {\n      \"id\": 37642\n    },\n    {\n      \"id\": 37624\n    },\n    {\n      \"id\": 40684\n    },\n    {\n      \"id\": 37166\n    },\n    {\n      \"id\": 37883,\n      \"enchant\": 44483\n    },\n    {},\n    {\n      \"id\": 40713\n    }\n  ]}`),\n};\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\n          \"id\": 40473,\n          \"enchant\": 44879,\n          \"gems\": [\n            41398,\n            39996\n          ]\n        },\n        {\n          \"id\": 44664,\n          \"gems\": [\n            39996\n          ]\n        },\n        {\n          \"id\": 40494,\n          \"enchant\": 44871,\n          \"gems\": [\n            39996\n          ]\n        },\n        {\n          \"id\": 40403,\n          \"enchant\": 55002\n        },\n        {\n          \"id\": 40539,\n          \"enchant\": 44489,\n          \"gems\": [\n            39996\n          ]\n        },\n        {\n          \"id\": 39765,\n          \"enchant\": 44484,\n          \"gems\": [\n            39996,\n            0\n          ]\n        },\n        {\n          \"id\": 40541,\n          \"enchant\": 54999,\n          \"gems\": [\n            0\n          ]\n        },\n        {\n          \"id\": 40205,\n          \"gems\": [\n            39996\n          ]\n        },\n        {\n          \"id\": 44011,\n          \"enchant\": 38374,\n          \"gems\": [\n            39996,\n            49110\n          ]\n        },\n        {\n          \"id\": 40243,\n          \"enchant\": 55016,\n          \"gems\": [\n            40014\n          ]\n        },\n        {\n          \"id\": 40474\n        },\n        {\n          \"id\": 40717\n        },\n        {\n          \"id\": 42987\n        },\n        {\n          \"id\": 40256\n        },\n        {\n          \"id\": 40388,\n          \"enchant\": 44492\n        },\n        {},\n        {\n          \"id\": 39757\n        }\n      ]}`),\n};","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\nimport { Encounter } from '../core/proto/common.js';\nimport { ItemSlot } from '../core/proto/common.js';\nimport { MobType } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { Sim } from '../core/sim.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { TypedEvent } from '../core/typed_event.js';\n\nimport { FeralDruid, FeralDruid_Rotation as FeralDruidRotation, DruidTalents as DruidTalents, FeralDruid_Options as FeralDruidOptions } from '../core/proto/druid.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Tooltips from '../core/constants/tooltips.js';\n\nimport * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class FeralDruidSimUI extends IndividualSimUI<Spec.SpecFeralDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFeralDruid>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'feral-druid-sim-ui',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"Stats display only humanoid form\",\n\t\t\t\t\"ilotp mana regen not implemented\"\n\t\t\t],\n\t\t\twarnings: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatExpertise,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatExpertise,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatStrength]: 2.379,\n\t\t\t\t\t[Stat.StatAgility]: 2.15,\n\t\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t\t[Stat.StatMeleeHit]: 2.51,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 2,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.67,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 1.66,\n\t\t\t\t\t[Stat.StatExpertise]: 2.28,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: FeralDruidOptions.create({\n\t\t\t\t\tinnervateTarget: RaidTarget.create({\n\t\t\t\t\t\ttargetIndex: NO_TARGET, // In an individual sim the 0-indexed player is ourself.\n\t\t\t\t\t}),\n\t\t\t\t\tlatencyMs: 100,\n\t\t\t\t}),\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbattleShout: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tunleashedRage: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t\tbraidedEterniumChain: true,\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tbloodFrenzy: true,\n\t\t\t\t\tgiftOfArthas: true,\n\t\t\t\t\texposeArmor: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tcurseOfWeakness: TristateEffect.TristateEffectRegular,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tDruidInputs.SelfInnervate,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: DruidInputs.FeralDruidRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.IntellectBuff,\n\t\t\t\tIconInputs.MP5Buff,\n\t\t\t\tIconInputs.JudgementOfWisdom,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tDruidInputs.LatencyMs,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PreRaid_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["SelfInnervate","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","innervateTarget","targetIndex","NO_TARGET","setValue","eventID","newValue","newOptions","RaidTarget","create","setSpecOptions","LatencyMs","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","FeralDruidRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationEnumInput","values","name","value","BearweaveType","None","Mangle","Lacerate","InputHelpers.makeRotationNumberInput","percent","BiteModeType","Emperical","showWhen","getRotation","useBite","biteModeType","StandardTalents","data","SavedTalents","talentsString","glyphs","Glyphs","major1","DruidMajorGlyph","GlyphOfRip","major2","GlyphOfSavageRoar","major3","GlyphOfShred","minor1","DruidMinorGlyph","GlyphOfDash","minor2","GlyphOfTheWild","minor3","GlyphOfUnburdenedRebirth","DefaultRotation","FeralDruidRotation","bearWeaveType","FeralDruid_Rotation_BearweaveType","minCombosForRip","minCombosForBite","useRake","mangleSpam","FeralDruid_Rotation_BiteModeType","biteTime","berserkBiteThresh","powerbear","maxRoarClip","maintainFaerieFire","hotUptime","DefaultOptions","FeralDruidOptions","latencyMs","DefaultConsumes","Consumes","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","defaultPotion","Potions","PotionOfSpeed","PreRaid_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","FeralDruidSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","knownIssues","warnings","epStats","Stat","StatStrength","StatAgility","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","epReferenceStat","displayStats","StatHealth","StatIntellect","StatSpirit","StatMana","StatMP5","defaults","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.StandardTalents","specOptions","raidBuffs","RaidBuffs","arcaneBrilliance","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","manaSpringTotem","TristateEffectRegular","strengthOfEarthTotem","battleShout","unleashedRage","partyBuffs","PartyBuffs","braidedEterniumChain","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","bloodFrenzy","giftOfArthas","exposeArmor","faerieFire","sunderArmor","curseOfWeakness","playerIconInputs","DruidInputs.SelfInnervate","rotationInputs","DruidInputs.FeralDruidRotationConfig","includeBuffDebuffInputs","IconInputs.IntellectBuff","IconInputs.MP5Buff","IconInputs.JudgementOfWisdom","excludeBuffDebuffInputs","otherInputs","DruidInputs.LatencyMs","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.PreRaid_PRESET"],"mappings":"0WAqBa,MAAAA,EAAgBC,EAAkE,CAC9FC,UAAW,kBACXC,GAAIC,EAASC,YAAY,OACzBC,gBAAiB,CAChB,wBAEDC,SAAWC,GAAwCA,EAAOC,iBAAiBC,iBAAiBC,aAAeC,EAC3GC,SAAU,CAACC,EAAkBN,EAAqCO,KAC3D,MAAAC,EAAaR,EAAOC,iBACfO,EAAAN,gBAAkBO,EAAWC,OAAO,CAC9CP,YAAaI,EAAW,EAAIH,IAEtBJ,EAAAW,eAAeL,EAASE,EAAU,IAI9BI,EAAYC,EAA6D,CACrFnB,UAAW,YACXoB,MAAO,UACPC,aAAc,0FAGFC,EAA2B,CACvCC,OAAQ,CACPC,EAA2D,CAC1DxB,UAAW,qBACXoB,MAAO,uBACPC,aAAc,6DAEfI,EAAuE,CACtEzB,UAAW,gBACXoB,MAAO,cACPM,OAAQ,CACP,CAAEC,KAAM,OAAQC,MAAOC,EAAcC,MACrC,CAAEH,KAAM,SAAUC,MAAOC,EAAcE,QACvC,CAAEJ,KAAM,WAAYC,MAAOC,EAAcG,aAG3CC,EAA0D,CACzDjC,UAAW,YACXoB,MAAO,wBACPC,aAAc,+DACda,SAAS,IAEVD,EAA0D,CACzDjC,UAAW,cACXoB,MAAO,YACPC,aAAc,6BAEfG,EAA2D,CAC1DxB,UAAW,UACXoB,MAAO,uBACPC,aAAc,qDAEfI,EAAsE,CACrEzB,UAAW,eACXoB,MAAO,YACPC,aAAc,iCACdK,OAAQ,CACP,CAAEC,KAAM,YAAaC,MAAOO,EAAaC,YAE1CC,SAAW/B,GAAwE,GAAhCA,EAAOgC,cAAcC,UAEzEN,EAA0D,CACzDjC,UAAW,WACXoB,MAAO,YACPC,aAAc,kCACdgB,SAAW/B,GAAwE,GAAhCA,EAAOgC,cAAcC,SAAmBjC,EAAOgC,cAAcE,cAAgBL,EAAaC,cC/DnIK,EAAkB,CAC9Bd,KAAM,WACNe,KAAMC,EAAa3B,OAAO,CACzB4B,cAAe,4CACTC,OAAQC,EAAO9B,OAAO,CAClB+B,OAAQC,EAAgBC,WACxBC,OAAQF,EAAgBG,kBACxBC,OAAQJ,EAAgBK,aACxBC,OAAQC,EAAgBC,YACxBC,OAAQF,EAAgBG,eACxBC,OAAQJ,EAAgBK,8BAKvBC,EAAkBC,EAAmB9C,OAAO,CACvD+C,cAAeC,EAAkChC,SACjDiC,gBAAiB,EACjBC,iBAAkB,EAElBC,SAAS,EACT5B,SAAS,EACT6B,YAAY,EACZ5B,aAAc6B,EAAiCjC,UAC/CkC,SAAU,GACVC,kBAAmB,GACnBC,WAAW,EACXC,YAAa,GACbC,oBAAoB,EACpBC,UAAW,IAGAC,EAAiBC,EAAkB7D,OAAO,CACrD8D,UAAW,MAGAC,EAAkBC,EAAShE,OAAO,CAC9CiE,MAAOC,EAAMC,mBACbC,KAAMC,EAAKC,cACXC,cAAeC,EAAQC,gBAGXC,EAAiB,CAC7B/D,KAAM,UACNgE,QAASC,EACTC,KAAMC,EAAcC,eAAe,ygCA+EvBC,EAAY,CACxBrE,KAAM,YACNgE,QAASC,EACTC,KAAMC,EAAcC,eAAe,qiDC3H7B,MAAME,UAAwBC,EACpCC,YAAYC,EAAyB9F,GACpC+F,MAAMD,EAAY9F,EAAQ,CACzBgG,SAAU,qBAEVC,YAAa,CACZ,mCACA,oCAEDC,SAAU,GAIVC,QAAS,CACRC,EAAKC,aACLD,EAAKE,YACLF,EAAKG,gBACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,qBACLP,EAAKQ,eAGNC,gBAAiBT,EAAKG,gBAEtBO,aAAc,CACbV,EAAKW,WACLX,EAAKC,aACLD,EAAKE,YACLF,EAAKY,cACLZ,EAAKa,WACLb,EAAKG,gBACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,qBACLP,EAAKQ,cACLR,EAAKc,SACLd,EAAKe,SAGNC,SAAU,CAET7B,KAAM8B,EAAkB9B,KAExB+B,UAAWC,EAAMC,QAAQ,CACxB,CAACpB,EAAKC,cAAe,MACrB,CAACD,EAAKE,aAAc,KACpB,CAACF,EAAKG,iBAAkB,EACxB,CAACH,EAAKI,cAAe,KACrB,CAACJ,EAAKK,eAAgB,EACtB,CAACL,EAAKM,gBAAiB,KACvB,CAACN,EAAKO,sBAAuB,KAC7B,CAACP,EAAKQ,eAAgB,OAGvBa,SAAUC,EAEVC,SAAUC,EAEVC,QAASC,EAAwB1F,KAEjC2F,YAAaxD,EAAkB7D,OAAO,CACrCR,gBAAiBO,EAAWC,OAAO,CAClCP,YAAaC,IAEdoE,UAAW,MAGZwD,UAAWC,EAAUvH,OAAO,CAC3BwH,kBAAkB,EAClBC,cAAeC,EAAeC,uBAC9BC,WAAW,EACXC,gBAAiBH,EAAeI,sBAChCC,qBAAsBL,EAAeC,uBACrCK,YAAaN,EAAeC,uBAC5BM,eAAe,IAEhBC,WAAYC,EAAWnI,OAAO,CAC7BoI,sBAAsB,IAEvBC,gBAAiBC,EAAgBtI,OAAO,CACvCuI,iBAAiB,EACjBC,gBAAiBd,EAAeC,yBAEjCc,QAASC,EAAQ1I,OAAO,CACvB2I,mBAAmB,EACnBC,aAAa,EACbC,cAAc,EACdC,aAAa,EACbC,WAAYrB,EAAeC,uBAC3BqB,aAAa,EACbC,gBAAiBvB,EAAeI,yBAKlCoB,iBAAkB,CACjBC,GAGDC,eAAgBC,EAEhBC,wBAAyB,CACxBC,EACAC,EACAC,GAEDC,wBAAyB,GAGzBC,YAAa,CACZpJ,OAAQ,CACPqJ,EACAC,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAER9C,QAAS,CACRC,GAGDvC,KAAM,CACLqF,EACAvD,KAIJ"}