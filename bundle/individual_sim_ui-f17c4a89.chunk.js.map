{"version":3,"file":"individual_sim_ui-f17c4a89.chunk.js","sources":["../../../ui/core/target.ts","../../../ui/core/encounter.ts","../../../ui/core/raid.ts","../../../ui/core/worker_pool.ts","../../../ui/core/sim.ts","../../../ui/core/components/number_picker.ts","../../../ui/core/components/bonus_stats_picker.ts","../../../ui/core/components/boolean_picker.ts","../../../ui/core/components/character_stats.ts","../../../ui/core/components/icon_enum_picker.ts","../../../ui/core/components/number_list_picker.ts","../../../ui/core/components/cooldowns_picker.ts","../../../ui/core/components/detailed_results.ts","../../../ui/core/components/list_picker.ts","../../../ui/core/components/custom_rotation_picker.ts","../../../ui/core/components/enum_picker.ts","../../../ui/core/components/encounter_picker.ts","../../../ui/core/proto_utils/enchants.ts","../../../ui/core/components/other_inputs.ts","../../../ui/core/components/gear_picker.ts","../../../ui/core/components/saved_data_manager.ts","../../../ui/core/components/input_helpers.ts","../../../ui/core/talents/hunter_pet.ts","../../../ui/core/components/icon_picker.ts","../../../ui/core/components/log_runner.ts","../../../ui/core/components/multi_icon_picker.ts","../../../ui/core/components/settings_menu.ts","../../../ui/core/components/results_viewer.ts","../../../ui/core/launched_sims.ts","../../../ui/core/components/title.ts","../../../ui/core/sim_ui.ts","../../../ui/core/components/stat_weights_action.ts","../../../ui/core/components/exporters.ts","../../../ui/core/components/importers.ts","../../../ui/core/components/icon_inputs.ts","../../../ui/core/constants/tooltips.ts","../../../ui/core/individual_sim_ui.ts"],"sourcesContent":["import { MobType } from './proto/common.js';\nimport { SpellSchool } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { PresetTarget } from './proto/api.js';\nimport { Stats } from './proto_utils/stats.js';\n\nimport * as Mechanics from './constants/mechanics.js';\n\nimport { Listener } from './typed_event.js';\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { sum } from './utils.js';\nimport { wait } from './utils.js';\n\n// Manages all the settings for a single Target.\nexport class Target {\n    readonly sim: Sim;\n\n    private id: number = 0;\n    private name: string = '';\n    private level: number = Mechanics.BOSS_LEVEL;\n    private mobType: MobType = MobType.MobTypeDemon;\n    private tankIndex: number = 0;\n    private stats: Stats = new Stats();\n\n    private swingSpeed: number = 0;\n    private minBaseDamage: number = 0;\n    private dualWield: boolean = false;\n    private dualWieldPenalty: boolean = false;\n    private suppressDodge: boolean = false;\n    private parryHaste: boolean = true;\n    private spellSchool: SpellSchool = SpellSchool.SpellSchoolPhysical;\n\n    readonly idChangeEmitter = new TypedEvent<void>();\n    readonly nameChangeEmitter = new TypedEvent<void>();\n    readonly levelChangeEmitter = new TypedEvent<void>();\n    readonly mobTypeChangeEmitter = new TypedEvent<void>();\n    readonly propChangeEmitter = new TypedEvent<void>();\n    readonly statsChangeEmitter = new TypedEvent<void>();\n\n    // Emits when any of the above emitters emit.\n    readonly changeEmitter = new TypedEvent<void>();\n\n    constructor(sim: Sim) {\n        this.sim = sim;\n\n        [\n            this.idChangeEmitter,\n            this.nameChangeEmitter,\n            this.levelChangeEmitter,\n            this.mobTypeChangeEmitter,\n            this.propChangeEmitter,\n            this.statsChangeEmitter,\n        ].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\n        this.changeEmitter.on(eventID => this.sim.encounter?.changeEmitter.emit(eventID));\n    }\n\n    getId(): number {\n        return this.id;\n    }\n\n    setId(eventID: EventID, newId: number) {\n        if (newId == this.id)\n            return;\n\n        this.id = newId;\n        this.idChangeEmitter.emit(eventID);\n    }\n\n    getName(): string {\n        return this.name;\n    }\n\n    setName(eventID: EventID, newName: string) {\n        if (newName == this.name)\n            return;\n\n        this.name = newName;\n        this.nameChangeEmitter.emit(eventID);\n    }\n\n    getLevel(): number {\n        return this.level;\n    }\n\n    setLevel(eventID: EventID, newLevel: number) {\n        if (newLevel == this.level)\n            return;\n\n        this.level = newLevel;\n        this.levelChangeEmitter.emit(eventID);\n    }\n\n    getMobType(): MobType {\n        return this.mobType;\n    }\n\n    setMobType(eventID: EventID, newMobType: MobType) {\n        if (newMobType == this.mobType)\n            return;\n\n        this.mobType = newMobType;\n        this.mobTypeChangeEmitter.emit(eventID);\n    }\n\n    getTankIndex(): number {\n        return this.tankIndex;\n    }\n\n    setTankIndex(eventID: EventID, newTankIndex: number) {\n        if (newTankIndex == this.tankIndex)\n            return;\n\n        this.tankIndex = newTankIndex;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getSwingSpeed(): number {\n        return this.swingSpeed;\n    }\n\n    setSwingSpeed(eventID: EventID, newSwingSpeed: number) {\n        if (newSwingSpeed == this.swingSpeed)\n            return;\n\n        this.swingSpeed = newSwingSpeed;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getMinBaseDamage(): number {\n        return this.minBaseDamage;\n    }\n\n    setMinBaseDamage(eventID: EventID, newMinBaseDamage: number) {\n        if (newMinBaseDamage == this.minBaseDamage)\n            return;\n\n        this.minBaseDamage = newMinBaseDamage;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getDualWield(): boolean {\n        return this.dualWield;\n    }\n\n    setDualWield(eventID: EventID, newDualWield: boolean) {\n        if (newDualWield == this.dualWield)\n            return;\n\n        this.dualWield = newDualWield;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getDualWieldPenalty(): boolean {\n        return this.dualWieldPenalty;\n    }\n\n    setDualWieldPenalty(eventID: EventID, newDualWieldPenalty: boolean) {\n        if (newDualWieldPenalty == this.dualWieldPenalty)\n            return;\n\n        this.dualWieldPenalty = newDualWieldPenalty;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getSuppressDodge(): boolean {\n        return this.suppressDodge;\n    }\n\n    setSuppressDodge(eventID: EventID, newSuppressDodge: boolean) {\n        if (newSuppressDodge == this.suppressDodge)\n            return;\n\n        this.suppressDodge = newSuppressDodge;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getParryHaste(): boolean {\n        return this.parryHaste;\n    }\n\n    setParryHaste(eventID: EventID, newParryHaste: boolean) {\n        if (newParryHaste == this.parryHaste)\n            return;\n\n        this.parryHaste = newParryHaste;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getSpellSchool(): SpellSchool {\n        return this.spellSchool;\n    }\n\n    setSpellSchool(eventID: EventID, newSpellSchool: SpellSchool) {\n        if (newSpellSchool == this.spellSchool)\n            return;\n\n        this.spellSchool = newSpellSchool;\n        this.propChangeEmitter.emit(eventID);\n    }\n\n    getStats(): Stats {\n        return this.stats;\n    }\n\n    setStats(eventID: EventID, newStats: Stats) {\n        if (newStats.equals(this.stats))\n            return;\n\n        this.stats = newStats;\n        this.statsChangeEmitter.emit(eventID);\n    }\n\n    matchesPreset(preset: PresetTarget): boolean {\n        return TargetProto.equals(this.toProto(), preset.target);\n    }\n\n    applyPreset(eventID: EventID, preset: PresetTarget) {\n        this.fromProto(eventID, preset.target || TargetProto.create());\n    }\n\n    toProto(): TargetProto {\n        return TargetProto.create({\n            id: this.getId(),\n            name: this.getName(),\n            level: this.getLevel(),\n            mobType: this.getMobType(),\n            tankIndex: this.getTankIndex(),\n            swingSpeed: this.getSwingSpeed(),\n            minBaseDamage: this.getMinBaseDamage(),\n            dualWield: this.getDualWield(),\n            dualWieldPenalty: this.getDualWieldPenalty(),\n            suppressDodge: this.getSuppressDodge(),\n            parryHaste: this.getParryHaste(),\n            spellSchool: this.getSpellSchool(),\n            stats: this.stats.asArray(),\n        });\n    }\n\n    fromProto(eventID: EventID, proto: TargetProto) {\n        TypedEvent.freezeAllAndDo(() => {\n            this.setId(eventID, proto.id);\n            this.setName(eventID, proto.name);\n            this.setLevel(eventID, proto.level);\n            this.setMobType(eventID, proto.mobType);\n            this.setTankIndex(eventID, proto.tankIndex);\n            this.setSwingSpeed(eventID, proto.swingSpeed);\n            this.setMinBaseDamage(eventID, proto.minBaseDamage);\n            this.setDualWield(eventID, proto.dualWield);\n            this.setDualWieldPenalty(eventID, proto.dualWieldPenalty);\n            this.setSuppressDodge(eventID, proto.suppressDodge);\n            this.setParryHaste(eventID, proto.parryHaste);\n            this.setSpellSchool(eventID, proto.spellSchool);\n            this.setStats(eventID, new Stats(proto.stats));\n        });\n    }\n\n    clone(eventID: EventID): Target {\n        const newTarget = new Target(this.sim);\n        newTarget.fromProto(eventID, this.toProto());\n        return newTarget;\n    }\n\n    static defaultProto(): TargetProto {\n        return TargetProto.create({\n            level: Mechanics.BOSS_LEVEL,\n            mobType: MobType.MobTypeUndead,\n            tankIndex: 0,\n            swingSpeed: 1.5,\n            minBaseDamage: 30000,\n            dualWield: true,\n            dualWieldPenalty: false,\n            suppressDodge: false,\n            parryHaste: true,\n            spellSchool: SpellSchool.SpellSchoolPhysical,\n            stats: Stats.fromMap({\n                [Stat.StatArmor]: 10643,\n                [Stat.StatAttackPower]: 640,\n            }).asArray(),\n        });\n    }\n\n    static fromDefaults(eventID: EventID, sim: Sim): Target {\n        const target = new Target(sim);\n        target.fromProto(eventID, Target.defaultProto());\n        return target;\n    }\n}\n","import { Encounter as EncounterProto } from './proto/common.js';\nimport { MobType } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { PresetEncounter } from './proto/api.js';\nimport { PresetTarget } from './proto/api.js';\nimport { Target } from './target.js';\nimport { Stats } from './proto_utils/stats.js';\n\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\n// Manages all the settings for an Encounter.\nexport class Encounter {\n    readonly sim: Sim;\n\n\tprivate duration: number = 180;\n\tprivate durationVariation: number = 5;\n\tprivate executeProportion20: number = 0.2;\n\tprivate executeProportion25: number = 0.25;\n\tprivate executeProportion35: number = 0.35;\n\tprivate useHealth: boolean = false;\n\tprivate targets: Array<Target>;\n\n    readonly targetsChangeEmitter = new TypedEvent<void>();\n    readonly durationChangeEmitter = new TypedEvent<void>();\n    readonly executeProportionChangeEmitter = new TypedEvent<void>();\n\n    // Emits when any of the above emitters emit.\n    readonly changeEmitter = new TypedEvent<void>();\n\n    constructor(sim: Sim) {\n        this.sim = sim;\n        this.targets = [Target.fromDefaults(TypedEvent.nextEventID(), sim)];\n\n        [\n            this.targetsChangeEmitter,\n            this.durationChangeEmitter,\n            this.executeProportionChangeEmitter,\n        ].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n    }\n\n    get primaryTarget(): Target {\n        return this.targets[0];\n    }\n\n    getDurationVariation(): number {\n        return this.durationVariation;\n    }\n    setDurationVariation(eventID: EventID, newDuration: number) {\n        if (newDuration == this.durationVariation)\n            return;\n\n        this.durationVariation = newDuration;\n        this.durationChangeEmitter.emit(eventID);\n    }\n\n    getDuration(): number {\n        return this.duration;\n    }\n    setDuration(eventID: EventID, newDuration: number) {\n        if (newDuration == this.duration)\n            return;\n\n        this.duration = newDuration;\n        this.durationChangeEmitter.emit(eventID);\n    }\n\n    getExecuteProportion20(): number {\n        return this.executeProportion20;\n    }\n    setExecuteProportion20(eventID: EventID, newExecuteProportion20: number) {\n        if (newExecuteProportion20 == this.executeProportion20)\n            return;\n\n\t\tthis.executeProportion20 = newExecuteProportion20;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion25(): number {\n\t\treturn this.executeProportion25;\n\t}\n\tsetExecuteProportion25(eventID: EventID, newExecuteProportion25: number) {\n\t\tif (newExecuteProportion25 == this.executeProportion25)\n\t\t\treturn;\n\n\t\tthis.executeProportion25 = newExecuteProportion25;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion35(): number {\n\t\treturn this.executeProportion35;\n\t}\n\tsetExecuteProportion35(eventID: EventID, newExecuteProportion35: number) {\n\t\tif (newExecuteProportion35 == this.executeProportion35)\n\t\t\treturn;\n\n        this.executeProportion35 = newExecuteProportion35;\n        this.executeProportionChangeEmitter.emit(eventID);\n    }\n\n    getUseHealth(): boolean {\n        return this.useHealth;\n    }\n    setUseHealth(eventID: EventID, newUseHealth: boolean) {\n        if (newUseHealth == this.useHealth)\n            return;\n\n        this.useHealth = newUseHealth;\n        this.durationChangeEmitter.emit(eventID);\n        this.executeProportionChangeEmitter.emit(eventID);\n    }\n\n    getNumTargets(): number {\n        return this.targets.length;\n    }\n\n    getTargets(): Array<Target> {\n        return this.targets.slice();\n    }\n    setTargets(eventID: EventID, newTargets: Array<Target>) {\n        TypedEvent.freezeAllAndDo(() => {\n            if (newTargets.length == 0) {\n                newTargets = [Target.fromDefaults(eventID, this.sim)];\n            }\n            if (newTargets.length == this.targets.length && newTargets.every((target, i) => TargetProto.equals(target.toProto(), this.targets[i].toProto()))) {\n                return;\n            }\n\n            this.targets = newTargets;\n            this.targetsChangeEmitter.emit(eventID);\n        });\n    }\n\n    matchesPreset(preset: PresetEncounter): boolean {\n        return preset.targets.length == this.targets.length && this.targets.every((t, i) => t.matchesPreset(preset.targets[i]));\n    }\n\n    applyPreset(eventID: EventID, preset: PresetEncounter) {\n        TypedEvent.freezeAllAndDo(() => {\n            let newTargets = this.targets.slice(0, preset.targets.length);\n            while (newTargets.length < preset.targets.length) {\n                newTargets.push(new Target(this.sim));\n            }\n\n            newTargets.forEach((nt, i) => nt.applyPreset(eventID, preset.targets[i]));\n            this.setTargets(eventID, newTargets);\n        });\n    }\n\n\ttoProto(): EncounterProto {\n\t\treturn EncounterProto.create({\n\t\t\tduration: this.duration,\n\t\t\tdurationVariation: this.durationVariation,\n\t\t\texecuteProportion20: this.executeProportion20,\n\t\t\texecuteProportion25: this.executeProportion25,\n\t\t\texecuteProportion35: this.executeProportion35,\n\t\t\tuseHealth: this.useHealth,\n\t\t\ttargets: this.targets.map(target => target.toProto()),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: EncounterProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setDuration(eventID, proto.duration);\n\t\t\tthis.setDurationVariation(eventID, proto.durationVariation);\n\t\t\tthis.setExecuteProportion20(eventID, proto.executeProportion20);\n\t\t\tthis.setExecuteProportion25(eventID, proto.executeProportion25);\n\t\t\tthis.setExecuteProportion35(eventID, proto.executeProportion35);\n\t\t\tthis.setUseHealth(eventID, proto.useHealth);\n\n            if (proto.targets.length > 0) {\n                this.setTargets(eventID, proto.targets.map(targetProto => {\n                    const target = new Target(this.sim);\n                    target.fromProto(eventID, targetProto);\n                    return target;\n                }));\n            } else {\n                this.setTargets(eventID, [Target.fromDefaults(eventID, this.sim)]);\n            }\n        });\n    }\n\n\tapplyDefaults(eventID: EventID) {\n\t\tthis.fromProto(eventID, EncounterProto.create({\n\t\t\tduration: 180,\n\t\t\tdurationVariation: 5,\n\t\t\texecuteProportion20: 0.2,\n\t\t\texecuteProportion25: 0.25,\n\t\t\texecuteProportion35: 0.35,\n\t\t\ttargets: [Target.defaultProto()],\n\t\t}));\n\t}\n}\n","import { Class } from './proto/common.js';\nimport { Debuffs } from './proto/common.js';\nimport { RaidTarget } from './proto/common.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport { RaidStats as RaidStatsProto } from './proto/api.js';\nimport { RaidBuffs } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { NO_TARGET } from './proto_utils/utils.js';\n\nimport { Party, MAX_PARTY_SIZE } from './party.js';\nimport { Player } from './player.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Sim } from './sim.js';\nimport { sum } from './utils.js';\n\nexport const MAX_NUM_PARTIES = 5;\n\n// Manages all the settings for a single Raid.\nexport class Raid {\n    private buffs: RaidBuffs = RaidBuffs.create();\n    private debuffs: Debuffs = Debuffs.create();\n    private tanks: Array<RaidTarget> = [];\n\t\tprivate targetDummies: number = 0;\n\n    // Emits when a raid member is added/removed/moved.\n    readonly compChangeEmitter = new TypedEvent<void>();\n\n    readonly buffsChangeEmitter = new TypedEvent<void>();\n    readonly debuffsChangeEmitter = new TypedEvent<void>();\n    readonly tanksChangeEmitter = new TypedEvent<void>();\n    readonly targetDummiesChangeEmitter = new TypedEvent<void>();\n\n    // Emits when anything in the raid changes.\n    readonly changeEmitter: TypedEvent<void>;\n\n    // Should always hold exactly MAX_NUM_PARTIES elements.\n    private parties: Array<Party>;\n\n    readonly sim: Sim;\n\n    constructor(sim: Sim) {\n        this.sim = sim;\n\n        this.parties = [...Array(MAX_NUM_PARTIES).keys()].map(i => {\n            const newParty = new Party(this, sim);\n            newParty.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n            newParty.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n            return newParty;\n        });\n\n        this.changeEmitter = TypedEvent.onAny([\n            this.compChangeEmitter,\n            this.buffsChangeEmitter,\n            this.debuffsChangeEmitter,\n            this.tanksChangeEmitter,\n            this.targetDummiesChangeEmitter,\n        ], 'RaidChange');\n    }\n\n    size(): number {\n        return sum(this.parties.map(party => party.size()));\n    }\n\n    isEmpty(): boolean {\n        return this.size() == 0;\n    }\n\n    getParties(): Array<Party> {\n        // Make defensive copy.\n        return this.parties.slice();\n    }\n\n    getParty(index: number): Party {\n        return this.parties[index];\n    }\n\n    getPlayers(): Array<Player<any> | null> {\n        return this.parties.map(party => party.getPlayers()).flat();\n    }\n\n    getPlayer(index: number): Player<any> | null {\n        const party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n        return party.getPlayer(index % MAX_PARTY_SIZE);\n    }\n\n    getPlayerFromRaidTarget(raidTarget: RaidTarget): Player<any> | null {\n        if (raidTarget.targetIndex == NO_TARGET) {\n            return null;\n        } else {\n            return this.getPlayer(raidTarget.targetIndex);\n        }\n    }\n\n    setPlayer(eventID: EventID, index: number, newPlayer: Player<any> | null) {\n        const party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n        party.setPlayer(eventID, index % MAX_PARTY_SIZE, newPlayer);\n    }\n\n    getClassCount(playerClass: Class) {\n        return this.getPlayers().filter(player => player != null && player.getClass() == playerClass).length;\n    }\n\n    getBuffs(): RaidBuffs {\n        // Make a defensive copy\n        return RaidBuffs.clone(this.buffs);\n    }\n\n    setBuffs(eventID: EventID, newBuffs: RaidBuffs) {\n        if (RaidBuffs.equals(this.buffs, newBuffs))\n            return;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = RaidBuffs.clone(newBuffs);\n\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (!this.debuffs.totemOfWrath && this.buffs.totemOfWrath) {\n\t\t\tvar newDebuff = Debuffs.clone(this.debuffs);\n\t\t\tnewDebuff.totemOfWrath = this.buffs.totemOfWrath;\n\t\t\tthis.setDebuffs(eventID, newDebuff);\n\t\t}\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n    getDebuffs(): Debuffs {\n        // Make a defensive copy\n        return Debuffs.clone(this.debuffs);\n    }\n\n    setDebuffs(eventID: EventID, newDebuffs: Debuffs) {\n        if (Debuffs.equals(this.debuffs, newDebuffs))\n            return;\n\n\t\t// Make a defensive copy\n\t\tthis.debuffs = Debuffs.clone(newDebuffs);\n\t\t\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (this.debuffs.totemOfWrath && !this.buffs.totemOfWrath) {\n\t\t\tvar newBuffs = RaidBuffs.clone(this.buffs);\n\t\t\tnewBuffs.totemOfWrath = this.debuffs.totemOfWrath;\n\t\t\tthis.setBuffs(eventID, newBuffs);\n\t\t}\n\t\tthis.debuffsChangeEmitter.emit(eventID);\n\t}\n\n    getTanks(): Array<RaidTarget> {\n        // Make a defensive copy\n        return this.tanks.map(tank => RaidTarget.clone(tank));\n    }\n\n    setTanks(eventID: EventID, newTanks: Array<RaidTarget>) {\n        if (this.tanks.length == newTanks.length && this.tanks.every((tank, i) => RaidTarget.equals(tank, newTanks[i])))\n            return;\n\n        // Make a defensive copy\n        this.tanks = newTanks.map(tank => RaidTarget.clone(tank));\n        this.tanksChangeEmitter.emit(eventID);\n    }\n\n    getTargetDummies(): number {\n        return this.targetDummies;\n    }\n\n    setTargetDummies(eventID: EventID, newTargetDummies: number) {\n        if (this.targetDummies == newTargetDummies)\n            return;\n\n        this.targetDummies = newTargetDummies;\n        this.targetDummiesChangeEmitter.emit(eventID);\n    }\n\n    toProto(forExport?: boolean): RaidProto {\n        return RaidProto.create({\n            parties: this.parties.map(party => party.toProto(forExport)),\n            buffs: this.getBuffs(),\n            debuffs: this.getDebuffs(),\n            tanks: this.getTanks(),\n\t\t\t\t\t\ttargetDummies: this.getTargetDummies(),\n        });\n    }\n\n    fromProto(eventID: EventID, proto: RaidProto) {\n        TypedEvent.freezeAllAndDo(() => {\n            this.setBuffs(eventID, proto.buffs || RaidBuffs.create());\n            this.setDebuffs(eventID, proto.debuffs || Debuffs.create());\n            this.setTanks(eventID, proto.tanks);\n\t\t\t\t\t\tthis.setTargetDummies(eventID, proto.targetDummies);\n\n            for (let i = 0; i < MAX_NUM_PARTIES; i++) {\n                if (proto.parties[i]) {\n                    this.parties[i].fromProto(eventID, proto.parties[i]);\n                } else {\n                    this.parties[i].clear(eventID);\n                }\n            }\n        });\n    }\n\n    clear(eventID: EventID) {\n        TypedEvent.freezeAllAndDo(() => {\n            for (let i = 0; i < MAX_NUM_PARTIES; i++) {\n                this.parties[i].clear(eventID);\n            }\n        });\n    }\n}\n","import { REPO_NAME } from './constants/other.js'\nimport { Enchant } from './proto/common.js';\nimport { Gem } from './proto/common.js';\nimport { GemColor } from './proto/common.js';\nimport { Item } from './proto/common.js';\nimport { ItemQuality } from './proto/common.js';\nimport { ItemSlot } from './proto/common.js';\nimport { ItemSpec } from './proto/common.js';\nimport { ItemType } from './proto/common.js';\nimport { Stat } from './proto/common.js';\n\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { GearListRequest, GearListResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult, ProgressMetrics } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\n\nimport { wait } from './utils.js';\n\nconst SIM_WORKER_URL = `/${REPO_NAME}/sim_worker.js`;\n\nexport class WorkerPool {\n    private workers: Array<SimWorker>;\n\n    constructor(numWorkers: number) {\n        this.workers = [];\n        for (let i = 0; i < numWorkers; i++) {\n            this.workers.push(new SimWorker());\n        }\n    }\n\n    private getLeastBusyWorker(): SimWorker {\n        return this.workers.reduce(\n            (curMinWorker, nextWorker) => curMinWorker.numTasksRunning < nextWorker.numTasksRunning ?\n                curMinWorker : nextWorker);\n    }\n\n    async makeApiCall(requestName: string, request: Uint8Array): Promise<Uint8Array> {\n        return await this.getLeastBusyWorker().doApiCall(requestName, request, \"\");\n    }\n\n    async getGearList(request: GearListRequest): Promise<GearListResult> {\n        const result = await this.makeApiCall('gearList', GearListRequest.toBinary(request));\n        return GearListResult.fromBinary(result);\n    }\n\n    async computeStats(request: ComputeStatsRequest): Promise<ComputeStatsResult> {\n        const result = await this.makeApiCall('computeStats', ComputeStatsRequest.toBinary(request));\n        return ComputeStatsResult.fromBinary(result);\n    }\n\n    async statWeightsAsync(request: StatWeightsRequest, onProgress: Function): Promise<StatWeightsResult> {\n        console.log('Stat weights request: ' + StatWeightsRequest.toJsonString(request));\n        const worker = this.getLeastBusyWorker();\n        const id = worker.makeTaskId();\n        // Add handler for the progress events\n        worker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n        // Now start the async sim\n        const resultData = await worker.doApiCall('statWeightsAsync', StatWeightsRequest.toBinary(request), id);\n        const result = ProgressMetrics.fromBinary(resultData)\n        console.log('Stat weights result: ' + StatWeightsResult.toJsonString(result.finalWeightResult!));\n        return result.finalWeightResult!;\n    }\n\n    async raidSimAsync(request: RaidSimRequest, onProgress: Function): Promise<RaidSimResult> {\n        console.log('Raid sim request: ' + RaidSimRequest.toJsonString(request));\n        const worker = this.getLeastBusyWorker();\n        const id = worker.makeTaskId();\n        // Add handler for the progress events\n        worker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n        // Now start the async sim\n        const resultData = await worker.doApiCall('raidSimAsync', RaidSimRequest.toBinary(request), id);\n        const result = ProgressMetrics.fromBinary(resultData)\n\n        // Don't print the logs because it just clogs the console.\n        const resultJson = RaidSimResult.toJson(result.finalRaidResult!) as any;\n        delete resultJson!['logs'];\n        console.log('Raid sim result: ' + JSON.stringify(resultJson));\n        return result.finalRaidResult!;\n    }\n\n    newProgressHandler(id: string, worker: SimWorker, onProgress: Function): (progressData: any) => void {\n        return (progressData: any) => {\n            var progress = ProgressMetrics.fromBinary(progressData);\n            onProgress(progress);\n            // If we are done, stop adding the handler.\n            if (progress.finalRaidResult != null || progress.finalWeightResult != null) {\n                return;\n            }\n\n            worker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { });\n        };\n    }\n}\n\nclass SimWorker {\n    numTasksRunning: number;\n    private taskIdsToPromiseFuncs: Record<string, [(result: any) => void, (error: any) => void]>;\n    private worker: Worker;\n    private onReady: Promise<void>;\n\n    constructor() {\n        this.numTasksRunning = 0;\n        this.taskIdsToPromiseFuncs = {};\n        this.worker = new window.Worker(SIM_WORKER_URL);\n\n        let resolveReady: (() => void) | null = null;\n        this.onReady = new Promise((_resolve, _reject) => {\n            resolveReady = _resolve;\n        });\n\n        this.worker.onmessage = event => {\n            if (event.data.msg == 'ready') {\n                this.worker.postMessage({ msg: 'setID', id: '1' });\n                resolveReady!();\n            } else if (event.data.msg == 'idconfirm') {\n                // Do nothing\n            } else {\n                const id = event.data.id;\n                if (!this.taskIdsToPromiseFuncs[id]) {\n                    console.warn('Unrecognized result id: ' + id);\n                    return;\n                }\n\n                const promiseFuncs = this.taskIdsToPromiseFuncs[id];\n                delete this.taskIdsToPromiseFuncs[id];\n                this.numTasksRunning--;\n\n                promiseFuncs[0](event.data.outputData);\n            }\n        };\n    }\n\n    addPromiseFunc(id: string, callback: (result: any) => void, onError: (error: any) => void) {\n        this.taskIdsToPromiseFuncs[id] = [callback, onError];\n    }\n\n    makeTaskId(): string {\n        let id = '';\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 16; i++) {\n            id += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return id;\n    }\n\n    async doApiCall(requestName: string, request: Uint8Array, id: string): Promise<Uint8Array> {\n        this.numTasksRunning++;\n        await this.onReady;\n\n        const taskPromise = new Promise<Uint8Array>((resolve, reject) => {\n            if (!id) {\n                id = this.makeTaskId();\n            }\n            this.taskIdsToPromiseFuncs[id] = [resolve, reject];\n\n            this.worker.postMessage({\n                msg: requestName,\n                id: id,\n                inputData: request,\n            });\n        });\n        return await taskPromise;\n    }\n}\n","import { Class, Faction } from './proto/common.js';\nimport { Consumes } from './proto/common.js';\nimport { Enchant } from './proto/common.js';\nimport { Encounter as EncounterProto } from './proto/common.js';\nimport { EquipmentSpec } from './proto/common.js';\nimport { Gem } from './proto/common.js';\nimport { GemColor } from './proto/common.js';\nimport { ItemQuality } from './proto/common.js';\nimport { ItemSlot } from './proto/common.js';\nimport { ItemSpec } from './proto/common.js';\nimport { ItemType } from './proto/common.js';\nimport { Item } from './proto/common.js';\nimport { Profession } from './proto/common.js';\nimport { Race } from './proto/common.js';\nimport { RaidTarget } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport { PresetEncounter, PresetTarget } from './proto/api.js';\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { GearListRequest, GearListResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult } from './proto/api.js';\nimport { SimOptions } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport { SimSettings as SimSettingsProto } from './proto/ui.js';\n\nimport { EquippedItem } from './proto_utils/equipped_item.js';\nimport { Gear } from './proto_utils/gear.js';\nimport { SimResult } from './proto_utils/sim_result.js';\nimport { Stats } from './proto_utils/stats.js';\nimport { gemEligibleForSocket } from './proto_utils/gems.js';\nimport { gemMatchesSocket } from './proto_utils/gems.js';\nimport { SpecRotation } from './proto_utils/utils.js';\nimport { SpecTalents } from './proto_utils/utils.js';\nimport { SpecTypeFunctions } from './proto_utils/utils.js';\nimport { specTypeFunctions } from './proto_utils/utils.js';\nimport { SpecOptions } from './proto_utils/utils.js';\nimport { specToClass } from './proto_utils/utils.js';\nimport { specToEligibleRaces } from './proto_utils/utils.js';\nimport { getEligibleItemSlots } from './proto_utils/utils.js';\nimport { getEligibleEnchantSlots } from './proto_utils/utils.js';\nimport { playerToSpec } from './proto_utils/utils.js';\n\nimport { Encounter } from './encounter.js';\nimport { Player } from './player.js';\nimport { Raid } from './raid.js';\nimport { Listener } from './typed_event.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { sum } from './utils.js';\nimport { wait } from './utils.js';\nimport { WorkerPool } from './worker_pool.js';\n\nimport * as OtherConstants from './constants/other.js';\n\nexport type RaidSimData = {\n    request: RaidSimRequest,\n    result: RaidSimResult,\n};\n\nexport type StatWeightsData = {\n    request: StatWeightsRequest,\n    result: StatWeightsResult,\n};\n\n// Core Sim module which deals only with api types, no UI-related stuff.\nexport class Sim {\n\tprivate readonly workerPool: WorkerPool;\n\n\tprivate iterations: number = 3000;\n\tprivate phase: number = OtherConstants.CURRENT_PHASE;\n\tprivate faction: Faction = Faction.Alliance;\n\tprivate fixedRngSeed: number = 0;\n\tprivate show1hWeapons: boolean = true;\n\tprivate show2hWeapons: boolean = true;\n\tprivate showMatchingGems: boolean = true;\n\tprivate showDamageMetrics: boolean = true;\n\tprivate showThreatMetrics: boolean = false;\n\tprivate showHealingMetrics: boolean = false;\n\tprivate showExperimental: boolean = false;\n\n\treadonly raid: Raid;\n\treadonly encounter: Encounter;\n\n\t// Database\n\tprivate items: Record<number, Item> = {};\n\tprivate enchants: Enchant[] = [];\n\tprivate gems: Record<number, Gem> = {};\n\tprivate presetEncounters: Record<string, PresetEncounter> = {};\n\tprivate presetTargets: Record<string, PresetTarget> = {};\n\n\treadonly iterationsChangeEmitter = new TypedEvent<void>();\n\treadonly phaseChangeEmitter = new TypedEvent<void>();\n\treadonly factionChangeEmitter = new TypedEvent<void>();\n\treadonly fixedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly lastUsedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly show1hWeaponsChangeEmitter = new TypedEvent<void>();\n\treadonly show2hWeaponsChangeEmitter = new TypedEvent<void>();\n\treadonly showMatchingGemsChangeEmitter = new TypedEvent<void>();\n\treadonly showDamageMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showThreatMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showHealingMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showExperimentalChangeEmitter = new TypedEvent<void>();\n\treadonly crashEmitter = new TypedEvent<SimError>();\n\n\t// Emits when any of the settings change (but not the raid / encounter).\n\treadonly settingsChangeEmitter: TypedEvent<void>;\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Fires when a raid sim API call completes.\n\treadonly simResultEmitter = new TypedEvent<SimResult>();\n\n\tprivate readonly _initPromise: Promise<void>;\n\tprivate lastUsedRngSeed: number = 0;\n\n\t// These callbacks are needed so we can apply BuffBot modifications automatically before sending requests.\n\tprivate modifyRaidProto: ((raidProto: RaidProto) => void) = () => { };\n\n\tconstructor() {\n\t\tthis.workerPool = new WorkerPool(3);\n\n\t\tthis._initPromise = this.workerPool.getGearList(GearListRequest.create()).then(result => {\n\t\t\tresult.items.forEach(item => this.items[item.id] = item);\n\t\t\t// result.enchants.forEach(enchant => this.enchants[enchant.id] = enchant);\n\t\t\tthis.enchants = result.enchants;\n\t\t\tresult.gems.forEach(gem => this.gems[gem.id] = gem);\n\t\t\tresult.encounters.forEach(encounter => this.presetEncounters[encounter.path] = encounter);\n\t\t\tresult.encounters.map(e => e.targets).flat().forEach(target => this.presetTargets[target.path] = target);\n\t\t});\n\n\t\tthis.raid = new Raid(this);\n\t\tthis.encounter = new Encounter(this);\n\n\t\tthis.settingsChangeEmitter = TypedEvent.onAny([\n\t\t\tthis.iterationsChangeEmitter,\n\t\t\tthis.phaseChangeEmitter,\n\t\t\tthis.fixedRngSeedChangeEmitter,\n\t\t\tthis.show1hWeaponsChangeEmitter,\n\t\t\tthis.show2hWeaponsChangeEmitter,\n\t\t\tthis.showMatchingGemsChangeEmitter,\n\t\t\tthis.showDamageMetricsChangeEmitter,\n\t\t\tthis.showThreatMetricsChangeEmitter,\n\t\t\tthis.showHealingMetricsChangeEmitter,\n\t\t\tthis.showExperimentalChangeEmitter,\n\t\t]);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.settingsChangeEmitter,\n\t\t\tthis.raid.changeEmitter,\n\t\t\tthis.encounter.changeEmitter,\n\t\t]);\n\n\t\tthis.raid.changeEmitter.on(eventID => this.updateCharacterStats(eventID));\n\t}\n\n\twaitForInit(): Promise<void> {\n\t\treturn this._initPromise;\n\t}\n\n\tsetModifyRaidProto(newModFn: (raidProto: RaidProto) => void) {\n\t\tthis.modifyRaidProto = newModFn;\n\t}\n\tgetModifiedRaidProto(): RaidProto {\n\t\tconst raidProto = this.raid.toProto();\n\t\tthis.modifyRaidProto(raidProto);\n\n\t\t// Remove any inactive meta gems, since the backend doesn't have its own validation.\n\t\traidProto.parties.forEach(party => {\n\t\t\tparty.players.forEach(player => {\n\t\t\t\tif (!player.equipment) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet gear = this.lookupEquipmentSpec(player.equipment);\n\t\t\t\tlet gearChanged = false;\n\n\t\t\t\tconst isBlacksmith = [player.profession1, player.profession2].includes(Profession.Blacksmithing);\n\n\t\t\t\t// Disable meta gem if inactive.\n\t\t\t\tif (gear.hasInactiveMetaGem(isBlacksmith)) {\n\t\t\t\t\tgear = gear.withoutMetaGem();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\t// Remove bonus sockets if not blacksmith.\n\t\t\t\tif (!isBlacksmith) {\n\t\t\t\t\tgear = gear.withoutBlacksmithSockets();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (gearChanged) {\n\t\t\t\t\tplayer.equipment = gear.asSpec();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn raidProto;\n\t}\n\n\tprivate makeRaidSimRequest(debug: boolean): RaidSimRequest {\n\t\tconst raid = this.getModifiedRaidProto();\n\t\tconst encounter = this.encounter.toProto();\n\n\t\t// TODO: remove any replenishment from sim request here? probably makes more sense to do it inside the sim to protect against accidents\n\n\t\treturn RaidSimRequest.create({\n\t\t\traid: raid,\n\t\t\tencounter: encounter,\n\t\t\tsimOptions: SimOptions.create({\n\t\t\t\titerations: debug ? 1 : this.getIterations(),\n\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\tdebugFirstIteration: true,\n\t\t\t}),\n\t\t});\n\t}\n\n\tasync runRaidSim(eventID: EventID, onProgress: Function) {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(false);\n\n\t\tvar result = await this.workerPool.raidSimAsync(request, onProgress);\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t}\n\n\tasync runRaidSimWithLogs(eventID: EventID): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(true);\n\t\tconst result = await this.workerPool.raidSimAsync(request, () => { });\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\t// This should be invoked internally whenever stats might have changed.\n\tprivate async updateCharacterStats(eventID: EventID) {\n\t\tif (eventID == 0) {\n\t\t\t// Skip the first event ID because it interferes with the loaded stats.\n\t\t\treturn;\n\t\t}\n\t\teventID = TypedEvent.nextEventID();\n\n\t\tawait this.waitForInit();\n\n\t\t// Capture the current players so we avoid issues if something changes while\n\t\t// request is in-flight.\n\t\tconst players = this.raid.getPlayers();\n\n\t\tconst req = ComputeStatsRequest.create({ raid: this.getModifiedRaidProto() });\n\t\tconst result = await this.workerPool.computeStats(req);\n\n\t\tif (result.errorResult != \"\") {\n\t\t\tthis.crashEmitter.emit(eventID, new SimError(result.errorResult));\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tresult.raidStats!.parties\n\t\t\t\t.forEach((partyStats, partyIndex) =>\n\t\t\t\t\tpartyStats.players.forEach((playerStats, playerIndex) =>\n\t\t\t\t\t\tplayers[partyIndex * 5 + playerIndex]?.setCurrentStats(eventID, playerStats)));\n\t\t});\n\t}\n\n\tasync statWeights(player: Player<any>, epStats: Array<Stat>, epReferenceStat: Stat, onProgress: Function): Promise<StatWeightsResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tif (player.getParty() == null) {\n\t\t\tconsole.warn('Trying to get stat weights without a party!');\n\t\t\treturn StatWeightsResult.create();\n\t\t} else {\n\t\t\tconst tanks = this.raid.getTanks().map(tank => tank.targetIndex).includes(player.getRaidIndex())\n\t\t\t\t? [RaidTarget.create({ targetIndex: 0 })]\n\t\t\t\t: [];\n\t\t\tconst request = StatWeightsRequest.create({\n\t\t\t\tplayer: player.toProto(),\n\t\t\t\traidBuffs: this.raid.getBuffs(),\n\t\t\t\tpartyBuffs: player.getParty()!.getBuffs(),\n\t\t\t\tdebuffs: this.raid.getDebuffs(),\n\t\t\t\tencounter: this.encounter.toProto(),\n\t\t\t\tsimOptions: SimOptions.create({\n\t\t\t\t\titerations: this.getIterations(),\n\t\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\t\tdebug: false,\n\t\t\t\t}),\n\t\t\t\ttanks: tanks,\n\n\t\t\t\tstatsToWeigh: epStats,\n\t\t\t\tepReferenceStat: epReferenceStat,\n\t\t\t});\n\t\t\tvar result = await this.workerPool.statWeightsAsync(request, onProgress);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tgetItems(slot: ItemSlot | undefined): Array<Item> {\n\t\tlet items = Object.values(this.items);\n\t\tif (slot != undefined) {\n\t\t\titems = items.filter(item => getEligibleItemSlots(item).includes(slot));\n\t\t}\n\t\treturn items;\n\t}\n\n\tgetEnchants(slot: ItemSlot | undefined): Array<Enchant> {\n\t\tlet enchants = Object.values(this.enchants);\n\t\tif (slot != undefined) {\n\t\t\tenchants = enchants.filter(enchant => getEligibleEnchantSlots(enchant).includes(slot));\n\t\t}\n\t\treturn enchants;\n\t}\n\n\t// ID can be the formula ID OR the effect ID.\n\tgetEnchantFlexible(id: number): Enchant | null {\n\t\treturn Object.values(this.enchants).find(enchant => enchant.id == id || enchant.effectId == id) || null;\n\t}\n\n\tgetGems(socketColor?: GemColor): Array<Gem> {\n\t\tlet gems = Object.values(this.gems);\n\t\tif (socketColor) {\n\t\t\tgems = gems.filter(gem => gemEligibleForSocket(gem, socketColor));\n\t\t}\n\t\treturn gems;\n\t}\n\n\tgetMatchingGems(socketColor: GemColor): Array<Gem> {\n\t\treturn Object.values(this.gems).filter(gem => gemMatchesSocket(gem, socketColor));\n\t}\n\n\tgetPresetEncounter(path: string): PresetEncounter | null {\n\t\treturn this.presetEncounters[path] || null;\n\t}\n\tgetPresetTarget(path: string): PresetTarget | null {\n\t\treturn this.presetTargets[path] || null;\n\t}\n\tgetAllPresetEncounters(): Array<PresetEncounter> {\n\t\treturn Object.values(this.presetEncounters);\n\t}\n\tgetAllPresetTargets(): Array<PresetTarget> {\n\t\treturn Object.values(this.presetTargets);\n\t}\n\n\tgetPhase(): number {\n\t\treturn this.phase;\n\t}\n\tsetPhase(eventID: EventID, newPhase: number) {\n\t\tif (newPhase != this.phase && newPhase > 0) {\n\t\t\tthis.phase = newPhase;\n\t\t\tthis.phaseChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn this.faction;\n\t}\n\tsetFaction(eventID: EventID, newFaction: Faction) {\n\t\tif (newFaction != this.faction && !!newFaction) {\n\t\t\tthis.faction = newFaction;\n\t\t\tthis.factionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFixedRngSeed(): number {\n\t\treturn this.fixedRngSeed;\n\t}\n\tsetFixedRngSeed(eventID: EventID, newFixedRngSeed: number) {\n\t\tif (newFixedRngSeed != this.fixedRngSeed) {\n\t\t\tthis.fixedRngSeed = newFixedRngSeed;\n\t\t\tthis.fixedRngSeedChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic MAX_RNG_SEED = Math.pow(2, 32) - 1;\n\tprivate nextRngSeed(): number {\n\t\tlet rngSeed = 0;\n\t\tif (this.fixedRngSeed) {\n\t\t\trngSeed = this.fixedRngSeed;\n\t\t} else {\n\t\t\trngSeed = Math.floor(Math.random() * Sim.MAX_RNG_SEED);\n\t\t}\n\n\t\tthis.lastUsedRngSeed = rngSeed;\n\t\tthis.lastUsedRngSeedChangeEmitter.emit(TypedEvent.nextEventID());\n\t\treturn rngSeed;\n\t}\n\tgetLastUsedRngSeed(): number {\n\t\treturn this.lastUsedRngSeed;\n\t}\n\n\n\tgetShow1hWeapons(): boolean {\n\t\treturn this.show1hWeapons;\n\t}\n\tsetShow1hWeapons(eventID: EventID, newShow1hWeapons: boolean) {\n\t\tif (newShow1hWeapons != this.show1hWeapons) {\n\t\t\tthis.show1hWeapons = newShow1hWeapons;\n\t\t\tthis.show1hWeaponsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShow2hWeapons(): boolean {\n\t\treturn this.show2hWeapons;\n\t}\n\tsetShow2hWeapons(eventID: EventID, newShow2hWeapons: boolean) {\n\t\tif (newShow2hWeapons != this.show2hWeapons) {\n\t\t\tthis.show2hWeapons = newShow2hWeapons;\n\t\t\tthis.show2hWeaponsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowMatchingGems(): boolean {\n\t\treturn this.showMatchingGems;\n\t}\n\tsetShowMatchingGems(eventID: EventID, newShowMatchingGems: boolean) {\n\t\tif (newShowMatchingGems != this.showMatchingGems) {\n\t\t\tthis.showMatchingGems = newShowMatchingGems;\n\t\t\tthis.showMatchingGemsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowDamageMetrics(): boolean {\n\t\treturn this.showDamageMetrics;\n\t}\n\tsetShowDamageMetrics(eventID: EventID, newShowDamageMetrics: boolean) {\n\t\tif (newShowDamageMetrics != this.showDamageMetrics) {\n\t\t\tthis.showDamageMetrics = newShowDamageMetrics;\n\t\t\tthis.showDamageMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowThreatMetrics(): boolean {\n\t\treturn this.showThreatMetrics;\n\t}\n\tsetShowThreatMetrics(eventID: EventID, newShowThreatMetrics: boolean) {\n\t\tif (newShowThreatMetrics != this.showThreatMetrics) {\n\t\t\tthis.showThreatMetrics = newShowThreatMetrics;\n\t\t\tthis.showThreatMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowHealingMetrics(): boolean {\n\t\treturn this.showHealingMetrics;\n\t}\n\tsetShowHealingMetrics(eventID: EventID, newShowHealingMetrics: boolean) {\n\t\tif (newShowHealingMetrics != this.showHealingMetrics) {\n\t\t\tthis.showHealingMetrics = newShowHealingMetrics;\n\t\t\tthis.showHealingMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowExperimental(): boolean {\n\t\treturn this.showExperimental;\n\t}\n\tsetShowExperimental(eventID: EventID, newShowExperimental: boolean) {\n\t\tif (newShowExperimental != this.showExperimental) {\n\t\t\tthis.showExperimental = newShowExperimental;\n\t\t\tthis.showExperimentalChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetIterations(): number {\n\t\treturn this.iterations;\n\t}\n\tsetIterations(eventID: EventID, newIterations: number) {\n\t\tif (newIterations != this.iterations) {\n\t\t\tthis.iterations = newIterations;\n\t\t\tthis.iterationsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tlookupItemSpec(itemSpec: ItemSpec): EquippedItem | null {\n\t\tconst item = this.items[itemSpec.id];\n\t\tif (!item)\n\t\t\treturn null;\n\t\t\n\t\tconst enchant = itemSpec.enchant > 0 ? this.enchants.find(e => (e.id == itemSpec.enchant && e.type == item.type)) : null;\n\t\tconst gems = itemSpec.gems.map(gemId => this.gems[gemId] || null);\n\n\t\treturn new EquippedItem(item, enchant, gems);\n\t}\n\n\tlookupEquipmentSpec(equipSpec: EquipmentSpec): Gear {\n\t\t// EquipmentSpec is supposed to be indexed by slot, but here we assume\n\t\t// it isn't just in case.\n\t\tconst gearMap: Partial<Record<ItemSlot, EquippedItem | null>> = {};\n\n\t\tequipSpec.items.forEach(itemSpec => {\n\t\t\tconst item = this.lookupItemSpec(itemSpec);\n\t\t\tif (!item)\n\t\t\t\treturn;\n\n\t\t\tconst itemSlots = getEligibleItemSlots(item.item);\n\n\t\t\tconst assignedSlot = itemSlots.find(slot => !gearMap[slot]);\n\t\t\tif (assignedSlot == null)\n\t\t\t\tthrow new Error('No slots left to equip ' + Item.toJsonString(item.item));\n\n\t\t\tgearMap[assignedSlot] = item;\n\t\t});\n\n\t\treturn new Gear(gearMap);\n\t}\n\n\ttoProto(): SimSettingsProto {\n\t\treturn SimSettingsProto.create({\n\t\t\titerations: this.getIterations(),\n\t\t\tphase: this.getPhase(),\n\t\t\tfixedRngSeed: BigInt(this.getFixedRngSeed()),\n\t\t\tshowDamageMetrics: this.getShowDamageMetrics(),\n\t\t\tshowThreatMetrics: this.getShowThreatMetrics(),\n\t\t\tshowHealingMetrics: this.getShowHealingMetrics(),\n\t\t\tshowExperimental: this.getShowExperimental(),\n\t\t\tfaction: this.getFaction(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: SimSettingsProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setIterations(eventID, proto.iterations || 3000);\n\t\t\tthis.setPhase(eventID, proto.phase || OtherConstants.CURRENT_PHASE);\n\t\t\tthis.setFixedRngSeed(eventID, Number(proto.fixedRngSeed));\n\t\t\tthis.setShowDamageMetrics(eventID, proto.showDamageMetrics);\n\t\t\tthis.setShowThreatMetrics(eventID, proto.showThreatMetrics);\n\t\t\tthis.setShowHealingMetrics(eventID, proto.showHealingMetrics);\n\t\t\tthis.setShowExperimental(eventID, proto.showExperimental);\n\t\t\tthis.setFaction(eventID, proto.faction || Faction.Alliance)\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID, isTankSim: boolean, isHealingSim: boolean) {\n\t\tthis.fromProto(eventID, SimSettingsProto.create({\n\t\t\titerations: 3000,\n\t\t\tphase: OtherConstants.CURRENT_PHASE,\n\t\t\tfaction: Faction.Alliance,\n\t\t\tshowDamageMetrics: !isHealingSim,\n\t\t\tshowThreatMetrics: isTankSim,\n\t\t\tshowHealingMetrics: isHealingSim,\n\t\t}));\n\t}\n}\n\nexport class SimError extends Error {\n    readonly errorStr: string;\n\n    constructor(errorStr: string) {\n        super(errorStr);\n        this.errorStr = errorStr;\n    }\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number picker.\n */\nexport interface NumberPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tfloat?: boolean,\n\tpositive?: boolean,\n}\n\n// UI element for picking an arbitrary number field.\nexport class NumberPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly inputElem: HTMLInputElement;\n\tprivate float: boolean;\n\tprivate positive: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-picker-root', modObject, config);\n\t\tthis.float = config.float || false;\n\t\tthis.positive = config.positive || false;\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tif (this.float) {\n\t\t\tthis.inputElem.type = 'text';\n\t\t\tthis.inputElem.inputMode = 'numeric';\n\t\t} else {\n\t\t\tthis.inputElem.type = 'number';\n\t\t\tif (this.positive) {\n\t\t\t\tthis.inputElem.min = \"0\"\n\t\t\t\tthis.inputElem.onchange = e => {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseInt(this.inputElem.value)).toString()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.inputElem.classList.add('number-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): number {\n\t\tif (this.float) {\n\t\t\treturn parseFloat(this.inputElem.value || '') || 0;\n\t\t} else {\n\t\t\treturn parseInt(this.inputElem.value || '') || 0;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.inputElem.value = String(newValue);\n\t}\n}\n","import { Stat } from '../proto/common.js';\nimport { statNames, statOrder } from '../proto_utils/names.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\nimport { NumberPicker } from './number_picker.js';\n\ndeclare var tippy: any;\n\nexport class BonusStatsPicker extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly statPickers: Array<NumberPicker<Player<any>>>;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>) {\n\t\tsuper(parent, 'bonus-stats-root');\n\t\tthis.stats = stats;\n\n\t\tconst label = document.createElement('span');\n\t\tlabel.classList.add('bonus-stats-label');\n\t\tlabel.textContent = 'Bonus Stats';\n\t\ttippy(label, {\n\t\t\t'content': 'Extra stats to add on top of gear, buffs, etc.',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\tthis.rootElem.appendChild(label);\n\n\t\tthis.statPickers = statOrder.filter(stat => this.stats.includes(stat)).map(stat => new NumberPicker(this.rootElem, player, {\n\t\t\tlabel: statNames[stat],\n\t\t\tchangedEvent: (player: Player<any>) => player.bonusStatsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getBonusStats().getStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst bonusStats = player.getBonusStats().withStat(stat, newValue);\n\t\t\t\tplayer.setBonusStats(eventID, bonusStats);\n\t\t\t},\n\t\t}));\n\n\t\tplayer.bonusStatsChangeEmitter.on(() => {\n\t\t\tthis.statPickers.forEach(statPicker => {\n\t\t\t\tif (statPicker.getInputValue() > 0) {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('negative');\n\t\t\t\t\tstatPicker.rootElem.classList.add('positive');\n\t\t\t\t} else if (statPicker.getInputValue() < 0) {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('positive');\n\t\t\t\t\tstatPicker.rootElem.classList.add('negative');\n\t\t\t\t} else {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('negative');\n\t\t\t\t\tstatPicker.rootElem.classList.remove('positive');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a boolean picker (checkbox).\n */\nexport interface BooleanPickerConfig<ModObject> extends InputConfig<ModObject, boolean> {\n}\n\n// UI element for picking an arbitrary number field.\nexport class BooleanPicker<ModObject> extends Input<ModObject, boolean> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: BooleanPickerConfig<ModObject>) {\n\t\tsuper(parent, 'boolean-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'checkbox';\n\t\tthis.inputElem.classList.add('boolean-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): boolean {\n\t\treturn Boolean(this.inputElem.checked);\n\t}\n\n\tsetInputValue(newValue: boolean) {\n\t\tthis.inputElem.checked = newValue;\n\t}\n}\n","import { PlayerStats } from '..//proto/api.js';\nimport { Stat, \tClass } from '..//proto/common.js';\nimport { TristateEffect } from '..//proto/common.js'\nimport { statNames, statOrder } from '..//proto_utils/names.js';\nimport { Stats } from '..//proto_utils/stats.js';\nimport { Player } from '..//player.js';\nimport { EventID, TypedEvent } from '..//typed_event.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\n\nimport { Component } from './component.js';\n\ndeclare var tippy: any;\n\nconst spellPowerTypeStats = [\n\tStat.StatArcaneSpellPower,\n\tStat.StatFireSpellPower,\n\tStat.StatFrostSpellPower,\n\tStat.StatHolySpellPower,\n\tStat.StatNatureSpellPower,\n\tStat.StatShadowSpellPower,\n];\n\nexport type StatMods = { talents: Stats };\n\nexport class CharacterStats extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly valueElems: Array<HTMLTableCellElement>;\n\treadonly tooltipElems: Array<HTMLElement>;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly modifyDisplayStats?: (player: Player<any>) => StatMods;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>, modifyDisplayStats?: (player: Player<any>) => StatMods) {\n\t\tsuper(parent, 'character-stats-root');\n\t\tthis.stats = statOrder.filter(stat => stats.includes(stat));\n\t\tthis.player = player;\n\t\tthis.modifyDisplayStats = modifyDisplayStats;\n\n\t\tconst table = document.createElement('table');\n\t\ttable.classList.add('character-stats-table');\n\t\tthis.rootElem.appendChild(table);\n\n\t\tthis.valueElems = [];\n\t\tthis.tooltipElems = [];\n\t\tthis.stats.forEach(stat => {\n\t\t\tconst row = document.createElement('tr');\n\t\t\trow.classList.add('character-stats-table-row');\n\t\t\trow.innerHTML = `\n\t\t\t\t<td class=\"character-stats-table-label\">\n\t\t\t\t\t<span>${statNames[stat].toUpperCase()}<span>\n\t\t\t\t\t<span class=\"character-stats-table-tooltip fas fa-search\"></span>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"character-stats-table-value\"></td>\n\t\t\t`;\n\t\t\ttable.appendChild(row);\n\n\t\t\tconst valueElem = row.getElementsByClassName('character-stats-table-value')[0] as HTMLTableCellElement;\n\t\t\tthis.valueElems.push(valueElem);\n\n\t\t\tconst tooltipElem = row.getElementsByClassName('character-stats-table-tooltip')[0] as HTMLElement;\n\t\t\tthis.tooltipElems.push(tooltipElem);\n\t\t});\n\n\t\tthis.updateStats(player);\n\t\tTypedEvent.onAny([player.currentStatsEmitter, player.sim.changeEmitter]).on(() => {\n\t\t\tthis.updateStats(player);\n\t\t});\n\t}\n\n\tprivate updateStats(player: Player<any>) {\n\t\tconst playerStats = player.getCurrentStats();\n\n\t\tconst statMods = this.modifyDisplayStats ? this.modifyDisplayStats(this.player) : {\n\t\t\ttalents: new Stats(),\n\t\t};\n\n\t\tconst baseStats = new Stats(playerStats.baseStats);\n\t\tconst gearStats = new Stats(playerStats.gearStats);\n\t\tconst talentsStats = new Stats(playerStats.talentsStats);\n\t\tconst buffsStats = new Stats(playerStats.buffsStats);\n\t\tconst consumesStats = new Stats(playerStats.consumesStats);\n\t\tconst debuffStats = CharacterStats.getDebuffStats(player);\n\t\tconst finalStats = new Stats(playerStats.finalStats).add(statMods.talents).add(debuffStats);\n\n\t\tconst gearDelta = gearStats.subtract(baseStats);\n\t\tconst talentsDelta = talentsStats.subtract(gearStats).add(statMods.talents);\n\t\tconst buffsDelta = buffsStats.subtract(talentsStats);\n\t\tconst consumesDelta = consumesStats.subtract(buffsStats);\n\n\t\tthis.stats.forEach((stat, idx) => {\n\t\t\tthis.valueElems[idx].textContent = CharacterStats.statDisplayString(player, finalStats, stat);\n\n\t\t\ttippy(this.tooltipElems[idx], {\n\t\t\t\t'content': `\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Base:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, baseStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Gear:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, gearDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Talents:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, talentsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Buffs:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, buffsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Consumes:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, consumesDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${debuffStats.getStat(stat) == 0 ? '' : `\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, debuffStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Total:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, finalStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic statDisplayString(player: Player<any>, stats: Stats, stat: Stat): string {\n\t\tlet rawValue = stats.getStat(stat);\n\t\tif (spellPowerTypeStats.includes(stat)) {\n\t\t\trawValue = rawValue + stats.getStat(Stat.StatSpellPower);\n\t\t}\n\t\tlet displayStr = String(Math.round(rawValue));\n\n\t\tif (stat == Stat.StatMeleeHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatSpellHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeCrit || stat == Stat.StatSpellCrit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeHaste) {\n\t\t\tif ([Class.ClassDruid, Class.ClassShaman, Class.ClassPaladin, Class.ClassDeathknight].includes(player.getClass())) {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t} else {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t}\n\t\t} else if (stat == Stat.StatSpellHaste) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatExpertise) {\n\t\t\tdisplayStr += ` (${(Math.floor(rawValue / Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION)).toFixed(0)})`;\n\t\t} else if (stat == Stat.StatDefense) {\n\t\t\tdisplayStr += ` (${(Mechanics.CHARACTER_LEVEL * 5 + rawValue / Mechanics.DEFENSE_RATING_PER_DEFENSE).toFixed(1)})`;\n\t\t} else if (stat == Stat.StatBlock) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDodge) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.DODGE_RATING_PER_DODGE_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatParry) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.PARRY_RATING_PER_PARRY_CHANCE).toFixed(2)}%)`;\n\t\t}\n\n\t\treturn displayStr;\n\t}\n\n\tstatic getDebuffStats(player: Player<any>): Stats {\n\t\tlet debuffStats = new Stats();\n\n\t\tconst debuffs = player.sim.raid.getDebuffs();\n\t\tif (debuffs.misery || debuffs.faerieFire == TristateEffect.TristateEffectImproved) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellHit, 3 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t}\n\t\tif (debuffs.totemOfWrath || debuffs.heartOfTheCrusader || debuffs.masterPoisoner) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 3 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatMeleeCrit, 3 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\t\tif (debuffs.improvedScorch || debuffs.wintersChill || debuffs.shadowMastery) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 5 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\n\t\treturn debuffStats;\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\nimport { Input, InputConfig } from './input.js';\n\ndeclare var tippy: any;\n\nexport interface IconEnumValueConfig<ModObject, T> {\n\t// One of these should be set. If actionId is set, shows the icon for that id. If\n\t// color is set, shows that color.\n\tactionId?: ActionId,\n\tcolor?: string,\n\n\tvalue: T,\n\n\t// Hover tooltip.\n\ttooltip?: string,\n\n\tshowWhen?: (obj: ModObject) => boolean,\n}\n\nexport interface IconEnumPickerConfig<ModObject, T> extends InputConfig<ModObject, T> {\n\tnumColumns: number,\n\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>;\n\n\t// Function for comparing two values.\n\tequals: (a: T, b: T) => boolean,\n\n\t// Value that will be considered inactive.\n\tzeroValue: T,\n\n\tbackupIconUrl?: (value: T) => ActionId,\n}\n\n// Icon-based UI for picking enum values.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconEnumPicker<ModObject, T> extends Input<ModObject, T> {\n\tprivate readonly config: IconEnumPickerConfig<ModObject, T>;\n\n\tprivate currentValue: T;\n\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconEnumPickerConfig<ModObject, T>) {\n\t\tsuper(parent, 'icon-enum-picker-root', modObj, config);\n\t\tthis.config = config;\n\t\tthis.currentValue = this.config.zeroValue;\n\t\tthis.rootElem.classList.add('dropdown-root');\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a class=\"dropdown-button icon-enum-picker-button\"></a>\n\t\t\t<div class=\"dropdown-panel icon-enum-picker-dropdown\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('icon-enum-picker-button')[0] as HTMLAnchorElement;\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName('icon-enum-picker-dropdown')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchstart', event => {\n\t\t\tif (dropdownElem.style.display == \"block\") {\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tdropdownElem.style.display = \"block\";\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tdropdownElem.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\n\t\tconfig.values.forEach((valueConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('div');\n\t\t\toptionContainer.classList.add('dropdown-option-container');\n\t\t\tdropdownElem.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('dropdown-option', 'icon-enum-picker-option');\n\t\t\toptionContainer.appendChild(option);\n\t\t\tthis.setImage(option, valueConfig);\n\n\t\t\tif (valueConfig.tooltip) {\n\t\t\t\ttippy(option, {\n\t\t\t\t\t'content': valueConfig.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (valueConfig.showWhen) {\n\t\t\t\tconfig.changedEvent(this.modObject).on(eventID => {\n\t\t\t\t\tconst show = valueConfig.showWhen && valueConfig.showWhen(this.modObject);\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\toptionContainer.classList.remove('hide');\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptionContainer.classList.add('hide');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toption.addEventListener('click', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\n\t\t\t\t// Wowhead tooltips can't seem to detect when an element is hidden while\n\t\t\t\t// being moused over, and the tooltip doesn't disappear. Patch this by\n\t\t\t\t// dispatching our own mouseout event.\n\t\t\t\toption.dispatchEvent(new Event('mouseout'));\n\t\t\t});\n\t\t\toption.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\toption.addEventListener('touchend', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t});\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tprivate setActionImage(elem: HTMLAnchorElement, actionId: ActionId) {\n\t\tactionId.fillAndSet(elem, true, true);\n\t}\n\n\tprivate setImage(elem: HTMLAnchorElement, valueConfig: IconEnumValueConfig<ModObject, T>) {\n\t\tif (valueConfig.actionId) {\n\t\t\tthis.setActionImage(elem, valueConfig.actionId);\n\t\t} else {\n\t\t\telem.style.backgroundImage = '';\n\t\t\telem.style.backgroundColor = valueConfig.color!;\n\t\t}\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): T {\n\t\treturn this.currentValue;\n\t}\n\n\tsetInputValue(newValue: T) {\n\t\tthis.currentValue = newValue;\n\n\t\tif (!this.config.equals(this.currentValue, this.config.zeroValue)) {\n\t\t\tthis.rootElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('active');\n\t\t}\n\n\t\tconst valueConfig = this.config.values.find(valueConfig => this.config.equals(valueConfig.value, this.currentValue))!;\n\t\tif (valueConfig) {\n\t\t\tthis.setImage(this.buttonElem, valueConfig);\n\t\t} else if (this.config.backupIconUrl) {\n\t\t\tconst backupId = this.config.backupIconUrl(this.currentValue);\n\t\t\tthis.setActionImage(this.buttonElem, backupId);\n\t\t\tthis.rootElem.classList.remove('active');\n\t\t}\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number list picker.\n */\nexport interface NumberListPickerConfig<ModObject> extends InputConfig<ModObject, Array<number>> {\n\tplaceholder?: string,\n}\n\n// UI element for picking an arbitrary number list field.\nexport class NumberListPicker<ModObject> extends Input<ModObject, Array<number>> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberListPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-list-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.placeholder = config.placeholder || '';\n\t\tthis.inputElem.classList.add('number-list-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): Array<number> {\n\t\tconst str = this.inputElem.value;\n\t\tif (!str) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn str.split(',').map(parseFloat).filter(val => !isNaN(val));\n\t}\n\n\tsetInputValue(newValue: Array<number>) {\n\t\tif (arrayEquals(this.getInputValue(), newValue)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputElem.value = newValue.map(v => String(v)).join(',');\n\t}\n}\n","import { Component } from '../components/component.js';\nimport { IconEnumPicker, IconEnumValueConfig } from '../components/icon_enum_picker.js';\nimport { Input, InputConfig } from '../components/input.js';\nimport { NumberListPicker } from '../components/number_list_picker.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ActionID as ActionIdProto } from '../proto/common.js';\nimport { Cooldowns } from '../proto/common.js';\nimport { Cooldown } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { Class } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { getEnumValues } from '../utils.js';\nimport { wait } from '../utils.js';\n\ndeclare var tippy: any;\n\nexport class CooldownsPicker extends Component {\n\treadonly player: Player<any>;\n\n\tprivate cooldownPickers: Array<HTMLElement>;\n\n\tconstructor(parentElem: HTMLElement, player: Player<any>) {\n\t\tsuper(parentElem, 'cooldowns-picker-root');\n\t\tthis.player = player;\n\t\tthis.cooldownPickers = [];\n\n\t\tTypedEvent.onAny([this.player.currentStatsEmitter]).on(eventID => {\n\t\t\tthis.update();\n\t\t});\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tthis.rootElem.innerHTML = '';\n\t\tconst cooldowns = this.player.getCooldowns().cooldowns;\n\n\t\tthis.cooldownPickers = [];\n\t\tfor (let i = 0; i < cooldowns.length + 1; i++) {\n\t\t\tconst cooldown = cooldowns[i];\n\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('cooldown-picker');\n\t\t\tif (i == cooldowns.length) {\n\t\t\t\trow.classList.add('add-cooldown-picker');\n\t\t\t}\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\tconst deleteButton = document.createElement('span');\n\t\t\tdeleteButton.classList.add('delete-cooldown', 'fa', 'fa-times');\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tconst newCooldowns = this.player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns.splice(i, 1);\n\t\t\t\tthis.player.setCooldowns(TypedEvent.nextEventID(), newCooldowns);\n\t\t\t});\n\t\t\trow.appendChild(deleteButton);\n\n\t\t\tconst actionPicker = this.makeActionPicker(row, i);\n\n\t\t\tconst label = document.createElement('span');\n\t\t\tlabel.classList.add('cooldown-picker-label');\n\t\t\tif (cooldown && cooldown.id) {\n\t\t\t\tActionId.fromProto(cooldown.id).fill(this.player.getRaidIndex()).then(filledId => label.textContent = filledId.name);\n\t\t\t}\n\t\t\trow.appendChild(label);\n\n\t\t\tconst timingsPicker = this.makeTimingsPicker(row, i);\n\n\t\t\tthis.cooldownPickers.push(row);\n\t\t}\n\t}\n\n\tprivate makeActionPicker(parentElem: HTMLElement, cooldownIndex: number): IconEnumPicker<Player<any>, ActionIdProto> {\n\t\tconst availableCooldowns = this.player.getCurrentStats().cooldowns;\n\n\t\tconst actionPicker = new IconEnumPicker<Player<any>, ActionIdProto>(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-action-picker',\n\t\t\t],\n\t\t\tnumColumns: 3,\n\t\t\tvalues: ([\n\t\t\t\t{ color: '#grey', value: ActionIdProto.create() },\n\t\t\t] as Array<IconEnumValueConfig<Player<any>, ActionIdProto>>).concat(availableCooldowns.map(cooldownAction => {\n\t\t\t\treturn { actionId: ActionId.fromProto(cooldownAction), value: cooldownAction };\n\t\t\t})),\n\t\t\tequals: (a: ActionIdProto, b: ActionIdProto) => ActionIdProto.equals(a, b),\n\t\t\tzeroValue: ActionIdProto.create(),\n\t\t\tbackupIconUrl: (value: ActionIdProto) => ActionId.fromProto(value),\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getCooldowns().cooldowns[cooldownIndex]?.id || ActionIdProto.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: ActionIdProto) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\n\t\t\t\twhile (newCooldowns.cooldowns.length < cooldownIndex) {\n\t\t\t\t\tnewCooldowns.cooldowns.push(Cooldown.create());\n\t\t\t\t}\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex] = Cooldown.create({\n\t\t\t\t\tid: newValue,\n\t\t\t\t\ttimings: [],\n\t\t\t\t});\n\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n\n\tprivate makeTimingsPicker(parentElem: HTMLElement, cooldownIndex: number): NumberListPicker<Player<any>> {\n\t\tconst actionPicker = new NumberListPicker(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-timings-picker',\n\t\t\t],\n\t\t\tplaceholder: '20, 40, ...',\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => {\n\t\t\t\treturn player.getCooldowns().cooldowns[cooldownIndex]?.timings || [];\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<number>) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex].timings = newValue;\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t\tenableWhen: (player: Player<any>) => {\n\t\t\t\tconst curCooldown = player.getCooldowns().cooldowns[cooldownIndex];\n\t\t\t\treturn curCooldown && !ActionIdProto.equals(curCooldown.id, ActionIdProto.create());\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n}\n","import { REPO_NAME } from '../constants/other.js'\nimport { RaidSimRequest, RaidSimResult } from '../proto/api.js';\nimport { DetailedResultsUpdate, SimRun, SimRunData } from '../proto/ui.js';\nimport { SimResult } from '../proto_utils/sim_result.js';\nimport { SimUI } from '../sim_ui.js';\n\nimport { Component } from './component.js';\nimport { RaidSimResultsManager } from './raid_sim_action.js';\n\nexport class DetailedResults extends Component {\n\tprivate readonly simUI: SimUI;\n\tprivate readonly iframeElem: HTMLIFrameElement;\n\tprivate tabWindow: Window | null;\n\tprivate latestRun: SimRunData | null;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, simResultsManager: RaidSimResultsManager) {\n\t\tsuper(parent, 'detailed-results-manager-root');\n\t\tthis.simUI = simUI;\n\t\tthis.tabWindow = null;\n\t\tthis.latestRun = null;\n\n\t\tthis.simUI.sim.settingsChangeEmitter.on(() => this.updateSettings());\n\n\t\tconst computedStyles = window.getComputedStyle(this.rootElem);\n\n\t\tconst url = new URL(`${window.location.protocol}//${window.location.host}/${REPO_NAME}/detailed_results/index.html`);\n\t\turl.searchParams.append('mainTextColor', computedStyles.getPropertyValue('--main-text-color').trim());\n\t\turl.searchParams.append('themeColorPrimary', computedStyles.getPropertyValue('--theme-color-primary').trim());\n\t\turl.searchParams.append('themeColorBackground', computedStyles.getPropertyValue('--theme-color-background').trim());\n\t\turl.searchParams.append('themeColorBackgroundRaw', computedStyles.getPropertyValue('--theme-color-background-raw').trim());\n\t\turl.searchParams.append('themeBackgroundImage', computedStyles.getPropertyValue('--theme-background-image').trim());\n\t\turl.searchParams.append('themeBackgroundOpacity', computedStyles.getPropertyValue('--theme-background-opacity').trim());\n\t\tif (simUI.isIndividualSim()) {\n\t\t\turl.searchParams.append('isIndividualSim', '');\n\t\t}\n\n\t\tthis.rootElem.innerHTML = `\n\t\t<div class=\"detailed-results-controls-div\">\n\t\t\t<button class=\"detailed-results-new-tab-button sim-button\">VIEW IN SEPARATE TAB</button>\n\t\t</div>\n\t\t<iframe class=\"detailed-results-iframe\" src=\"${url.href}\" allowtransparency=\"true\"></iframe>\n\t\t`;\n\n\t\tthis.iframeElem = this.rootElem.getElementsByClassName('detailed-results-iframe')[0] as HTMLIFrameElement;\n\n\t\tconst newTabButton = this.rootElem.getElementsByClassName('detailed-results-new-tab-button')[0] as HTMLButtonElement;\n\t\tnewTabButton.addEventListener('click', event => {\n\t\t\tif (this.tabWindow == null || this.tabWindow.closed) {\n\t\t\t\tthis.tabWindow = window.open(url.href, 'Detailed Results');\n\t\t\t\tthis.tabWindow!.addEventListener('load', event => {\n\t\t\t\t\tif (this.latestRun) {\n\t\t\t\t\t\tthis.updateSettings();\n\t\t\t\t\t\tthis.setSimRunData(this.latestRun);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.tabWindow.focus();\n\t\t\t}\n\t\t});\n\n\t\tsimResultsManager.currentChangeEmitter.on(() => {\n\t\t\tconst runData = simResultsManager.getRunData();\n\t\t\tif (runData) {\n\t\t\t\tthis.setSimRunData(runData);\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO: Decide whether to continue using this or just remove it.\n\t//setPending() {\n\t//\tthis.latestRun = null;\n\t//\tthis.iframeElem.contentWindow!.postMessage(null, '*');\n\t//\tif (this.tabWindow) {\n\t//\t\tthis.tabWindow.postMessage(null, '*');\n\t//\t}\n\t//}\n\n\tprivate setSimRunData(simRunData: SimRunData) {\n\t\tthis.latestRun = simRunData;\n\t\tthis.postMessage(DetailedResultsUpdate.create({\n\t\t\tdata: {\n\t\t\t\toneofKind: 'runData',\n\t\t\t\trunData: simRunData,\n\t\t\t},\n\t\t}));\n\t}\n\n\tprivate updateSettings() {\n\t\tthis.postMessage(DetailedResultsUpdate.create({\n\t\t\tdata: {\n\t\t\t\toneofKind: 'settings',\n\t\t\t\tsettings: this.simUI.sim.toProto(),\n\t\t\t},\n\t\t}));\n\t}\n\n\tprivate postMessage(update: DetailedResultsUpdate) {\n\t\tthis.iframeElem.contentWindow!.postMessage(DetailedResultsUpdate.toJson(update), '*');\n\t\tif (this.tabWindow) {\n\t\t\tthis.tabWindow.postMessage(DetailedResultsUpdate.toJson(update), '*');\n\t\t}\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals, swap } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\ndeclare var tippy: any;\n\nexport interface ListPickerConfig<ModObject, ItemType, ItemPicker> extends InputConfig<ModObject, Array<ItemType>> {\n\ttitle?: string,\n\ttitleTooltip?: string,\n\titemLabel: string,\n\tnewItem: () => ItemType,\n\tcopyItem: (oldItem: ItemType) => ItemType,\n\tnewItemPicker: (parent: HTMLElement, item: ItemType, listPicker: ListPicker<ModObject, ItemType, ItemPicker>) => ItemPicker,\n\tinlineMenuBar?: boolean,\n}\n\ninterface ItemPickerPair<ItemType, ItemPicker> {\n\titem: ItemType,\n\telem: HTMLElement,\n\tpicker: ItemPicker,\n}\n\nexport class ListPicker<ModObject, ItemType, ItemPicker> extends Input<ModObject, Array<ItemType>> {\n\tprivate readonly config: ListPickerConfig<ModObject, ItemType, ItemPicker>;\n\tprivate readonly itemsDiv: HTMLElement;\n\n\tprivate itemPickerPairs: Array<ItemPickerPair<ItemType, ItemPicker>>;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: ListPickerConfig<ModObject, ItemType, ItemPicker>) {\n\t\tsuper(parent, 'list-picker-root', modObject, config);\n\t\tthis.config = config;\n\t\tthis.itemPickerPairs = [];\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t${this.config.title ? `<span class=\"list-picker-title\">${this.config.title}</span>` : ''}\n\t\t\t<div class=\"list-picker-items\"></div>\n\t\t\t<button class=\"list-picker-new-button sim-button\">NEW ${config.itemLabel.toUpperCase()}</button>\n\t\t`;\n\n\t\tif (this.config.title && this.config.titleTooltip) {\n\t\t\tconst title = this.rootElem.getElementsByClassName('list-picker-title')[0] as HTMLElement;\n\t\t\ttippy(title, {\n\t\t\t\t'content': this.config.titleTooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tthis.itemsDiv = this.rootElem.getElementsByClassName('list-picker-items')[0] as HTMLElement;\n\n\t\tconst newItemButton = this.rootElem.getElementsByClassName('list-picker-new-button')[0] as HTMLElement;\n\t\tnewItemButton.addEventListener('click', event => {\n\t\t\tconst newItem = this.config.newItem();\n\t\t\tconst newList = this.config.getValue(this.modObject).concat([newItem]);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): Array<ItemType> {\n\t\treturn this.itemPickerPairs.map(pair => pair.item);\n\t}\n\n\tsetInputValue(newValue: Array<ItemType>): void {\n\t\t// Remove items that are no longer in the list.\n\t\tconst removePairs = this.itemPickerPairs.filter(ipp => !newValue.includes(ipp.item));\n\t\tremovePairs.forEach(ipp => ipp.elem.remove());\n\t\tthis.itemPickerPairs = this.itemPickerPairs.filter(ipp => !removePairs.includes(ipp));\n\n\t\t// Add items that were missing.\n\t\tconst curItems = this.getInputValue();\n\t\tnewValue\n\t\t\t.filter(newItem => !curItems.includes(newItem))\n\t\t\t.forEach(newItem => this.addNewPicker(newItem));\n\n\t\t// Reorder to match the new list.\n\t\tthis.itemPickerPairs = newValue.map(item => this.itemPickerPairs.find(ipp => ipp.item == item)!);\n\n\t\t// Reorder item picker elements in the DOM if necessary.\n\t\tconst curPickerElems = Array.from(this.itemsDiv.children);\n\t\tif (!curPickerElems.every((elem, i) => elem == this.itemPickerPairs[i].elem)) {\n\t\t\tthis.itemPickerPairs.forEach(ipp => ipp.elem.remove());\n\t\t\tthis.itemPickerPairs.forEach(ipp => this.itemsDiv.appendChild(ipp.elem));\n\t\t}\n\t}\n\n\tgetPickerIndex(picker: ItemPicker): number {\n\t\treturn this.itemPickerPairs.findIndex(ipp => ipp.picker == picker);\n\t}\n\n\tprivate addNewPicker(item: ItemType) {\n\t\tconst itemContainer = document.createElement('div');\n\t\titemContainer.classList.add('list-picker-item-container');\n\t\tif (this.config.inlineMenuBar) {\n\t\t\titemContainer.classList.add('inline');\n\t\t}\n\n\t\tconst itemHTML = '<div class=\"list-picker-item\"></div>';\n\t\titemContainer.innerHTML = `\n\t\t\t${this.config.inlineMenuBar ? itemHTML : ''}\n\t\t\t<div class=\"list-picker-item-header\">\n\t\t\t\t<span class=\"list-picker-item-up fa fa-angle-up\"></span>\n\t\t\t\t<span class=\"list-picker-item-down fa fa-angle-down\"></span>\n\t\t\t\t<span class=\"list-picker-item-copy fa fa-copy\"></span>\n\t\t\t\t<span class=\"list-picker-item-delete fa fa-times\"></span>\n\t\t\t</div>\n\t\t\t${!this.config.inlineMenuBar ? itemHTML : ''}\n\t\t`;\n\n\t\tconst upButton = itemContainer.getElementsByClassName('list-picker-item-up')[0] as HTMLElement;\n\t\tupButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (index == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index - 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(upButton, {\n\t\t\t'content': `Move Up`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst downButton = itemContainer.getElementsByClassName('list-picker-item-down')[0] as HTMLElement;\n\t\tdownButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (index == this.itemPickerPairs.length - 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index + 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(downButton, {\n\t\t\t'content': `Move Down`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst copyButton = itemContainer.getElementsByClassName('list-picker-item-copy')[0] as HTMLElement;\n\t\tcopyButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst copiedItem = this.config.copyItem(item);\n\t\t\tconst newList = this.config.getValue(this.modObject).concat([copiedItem]);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(copyButton, {\n\t\t\t'content': `Copy to New ${this.config.itemLabel}`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst deleteButton = itemContainer.getElementsByClassName('list-picker-item-delete')[0] as HTMLElement;\n\t\tdeleteButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tnewList.splice(index, 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(deleteButton, {\n\t\t\t'content': `Delete`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst itemElem = itemContainer.getElementsByClassName('list-picker-item')[0] as HTMLElement;\n\t\tconst itemPicker = this.config.newItemPicker(itemElem, item, this);\n\t\tthis.itemsDiv.appendChild(itemContainer);\n\n\t\tthis.itemPickerPairs.push({ item: item, elem: itemContainer, picker: itemPicker });\n\t}\n}\n","import { Spec } from '../proto/common.js';\nimport { CustomRotation, CustomSpell } from '../proto/common.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { Player } from '../player.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from '../components/icon_enum_picker.js';\nimport { ListPicker, ListPickerConfig } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\n\nexport interface CustomRotationPickerConfig<SpecType extends Spec, T> {\n\tgetValue: (player: Player<SpecType>) => CustomRotation,\n\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\n\nexport class CustomRotationPicker<SpecType extends Spec, T> extends Component {\n\tconstructor(parent: HTMLElement, modPlayer: Player<SpecType>, config: CustomRotationPickerConfig<SpecType, T>) {\n\t\tsuper(parent, 'custom-rotation-picker-root');\n\n\t\tnew ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: [\n\t\t\t\t'custom-spells-picker',\n\t\t\t],\n\t\t\ttitle: 'Spell Priority',\n\t\t\ttitleTooltip: 'Spells at the top of the list are prioritized first. Safely ignores untalented options.',\n\t\t\titemLabel: 'Spell',\n\t\t\tchangedEvent: (player: Player<SpecType>) => player.changeEmitter,\n\t\t\tgetValue: (player: Player<SpecType>) => config.getValue(player).spells,\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: Array<CustomSpell>) => {\n\t\t\t\tconfig.setValue(eventID, player, CustomRotation.create({\n\t\t\t\t\tspells: newValue,\n\t\t\t\t}));\n\t\t\t},\n\t\t\tnewItem: () => CustomSpell.create(),\n\t\t\tcopyItem: (oldItem: CustomSpell) => CustomSpell.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, newItem: CustomSpell, listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>) => new CustomSpellPicker(parent, modPlayer, newItem, config, listPicker),\n\t\t\tinlineMenuBar: true,\n\t\t\tshowWhen: config.showWhen,\n\t\t});\n\t}\n}\n\nclass CustomSpellPicker<SpecType extends Spec, T> extends Component {\n\tprivate readonly player: Player<SpecType>;\n\tprivate readonly config: CustomRotationPickerConfig<SpecType, T>;\n\tprivate readonly listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>;\n\n\tconstructor(parent: HTMLElement, player: Player<SpecType>, modSpell: CustomSpell, config: CustomRotationPickerConfig<SpecType, T>, listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>) {\n\t\tsuper(parent, 'custom-spell-picker-root');\n\t\tthis.player = player;\n\t\tthis.config = config;\n\t\tthis.listPicker = listPicker;\n\n\t\tnew IconEnumPicker<CustomSpell, number>(this.rootElem, modSpell, {\n\t\t\tnumColumns: config.numColumns,\n\t\t\tvalues: config.values.map(value => {\n\t\t\t\tif (value.showWhen) {\n\t\t\t\t\tconst oldShowWhen = value.showWhen;\n\t\t\t\t\tvalue.showWhen = ((spell: CustomSpell) => oldShowWhen(player)) as unknown as ((player: Player<SpecType>) => boolean);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}) as unknown as Array<IconEnumValueConfig<CustomSpell, number>>,\n\t\t\tequals: (a: number, b: number) => a == b,\n\t\t\tzeroValue: 0,\n\t\t\tchangedEvent: (spell: CustomSpell) => player.changeEmitter,\n\t\t\tgetValue: (spell: CustomSpell) => spell.spell,\n\t\t\tsetValue: (eventID: EventID, spell: CustomSpell, newValue: number) => {\n\t\t\t\tspell.spell = newValue;\n\t\t\t\tthis.setSpell(eventID, spell);\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate setSpell(eventID: EventID, spell: CustomSpell) {\n\t\tconst index = this.listPicker.getPickerIndex(this);\n\t\tconst cr = this.config.getValue(this.player);\n\t\tcr.spells[index] = CustomSpell.clone(spell);\n\t\tthis.config.setValue(eventID, this.player, cr);\n\t}\n}\n","import { Race } from '../proto/common.js';\nimport { specToEligibleRaces } from '../proto_utils/utils.js';\nimport { raceNames } from '../proto_utils/names.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface EnumValueConfig {\n\tname: string,\n\tvalue: number,\n\ttooltip?: string,\n}\n\nexport interface EnumPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tvalues: Array<EnumValueConfig>;\n}\n\nexport class EnumPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly selectElem: HTMLSelectElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: EnumPickerConfig<ModObject>) {\n\t\tsuper(parent, 'enum-picker-root', modObject, config);\n\n\t\tthis.selectElem = document.createElement('select');\n\t\tthis.selectElem.classList.add('enum-picker-selector');\n\t\tthis.rootElem.appendChild(this.selectElem);\n\n\t\tconfig.values.forEach((value) => {\n\t\t\tconst option = document.createElement('option');\n\t\t\toption.value = String(value.value);\n\t\t\toption.textContent = value.name;\n\t\t\tthis.selectElem.appendChild(option);\n\n\t\t\tif (value.tooltip) {\n\t\t\t\toption.title = value.tooltip;\n\t\t\t}\n\t\t});\n\n\t\tthis.init();\n\n\t\tthis.selectElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.selectElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn parseInt(this.selectElem.value);\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.selectElem.value = String(newValue);\n\t}\n}\n","import { MobType } from '../proto/common.js';\nimport { SpellSchool } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { Encounter } from '../encounter.js';\nimport { Raid } from '../raid.js';\nimport { Target } from '../target.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { ListPicker, ListPickerConfig } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { isHealingSpec, isTankSpec } from '../proto_utils/utils.js';\nimport { statNames } from '../proto_utils/names.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Popup } from './popup.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { SimUI } from '../sim_ui.js';\n\nexport interface EncounterPickerConfig {\n\tshowExecuteProportion: boolean,\n}\n\nexport class EncounterPicker extends Component {\n\tconstructor(parent: HTMLElement, modEncounter: Encounter, config: EncounterPickerConfig, simUI: SimUI) {\n\t\tsuper(parent, 'encounter-picker-root');\n\n\t\taddEncounterFieldPickers(this.rootElem, modEncounter, config.showExecuteProportion);\n\n\t\t// Need to wait so that the encounter and target presets will be loaded.\n\t\tmodEncounter.sim.waitForInit().then(() => {\n\t\t\tconst presetTargets = modEncounter.sim.getAllPresetTargets();\n\t\t\tnew EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t\textraCssClasses: ['damage-metrics', 'npc-picker'],\n\t\t\t\tlabel: 'NPC',\n\t\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t};\n\t\t\t\t})),\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => presetTargets.findIndex(pe => encounter.primaryTarget.matchesPreset(pe)),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\tif (newValue != -1) {\n\t\t\t\t\t\tencounter.primaryTarget.applyPreset(eventID, presetTargets[newValue]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t//new EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Target Level',\n\t\t\t//\tvalues: [\n\t\t\t//\t\t{ name: '83', value: 83 },\n\t\t\t//\t\t{ name: '82', value: 82 },\n\t\t\t//\t\t{ name: '81', value: 81 },\n\t\t\t//\t\t{ name: '80', value: 80 },\n\t\t\t//\t],\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getLevel(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setLevel(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t//new EnumPicker(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Mob Type',\n\t\t\t//\tvalues: mobTypeEnumValues,\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMobType(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setMobType(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t// Leaving this commented in case we want it later. But it takes up a lot of\n\t\t\t// screen space and none of these fields get changed much.\n\t\t\t//if (config.simpleTargetStats) {\n\t\t\t//\tconfig.simpleTargetStats.forEach(stat => {\n\t\t\t//\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t//\t\t\tlabel: statNames[stat],\n\t\t\t//\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getStats().getStat(stat),\n\t\t\t//\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\t\t\tencounter.primaryTarget.setStats(eventID, encounter.primaryTarget.getStats().withStat(stat, newValue));\n\t\t\t//\t\t\t},\n\t\t\t//\t\t});\n\t\t\t//\t});\n\t\t\t//}\n\n\t\t\tif (simUI.isIndividualSim() && isHealingSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, simUI.sim.raid, {\n\t\t\t\t\tlabel: 'Num Allies',\n\t\t\t\t\tlabelTooltip: 'Number of allied players in the raid.',\n\t\t\t\t\tchangedEvent: (raid: Raid) => raid.targetDummiesChangeEmitter,\n\t\t\t\t\tgetValue: (raid: Raid) => raid.getTargetDummies(),\n\t\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\n\t\t\t\t\t\traid.setTargetDummies(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (simUI.isIndividualSim() && isTankSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t\t\tlabel: 'Min Base Damage',\n\t\t\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMinBaseDamage(),\n\t\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\t\tencounter.primaryTarget.setMinBaseDamage(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst advancedButton = document.createElement('button');\n\t\t\tadvancedButton.classList.add('sim-button', 'advanced-button', 'damage-metrics');\n\t\t\tadvancedButton.textContent = 'ADVANCED';\n\t\t\tadvancedButton.addEventListener('click', () => new AdvancedEncounterPicker(this.rootElem, modEncounter, simUI));\n\t\t\tthis.rootElem.appendChild(advancedButton);\n\t\t});\n\t}\n}\n\nclass AdvancedEncounterPicker extends Popup {\n\tprivate readonly encounter: Encounter;\n\n\tconstructor(parent: HTMLElement, encounter: Encounter, simUI: SimUI) {\n\t\tsuper(parent);\n\t\tthis.encounter = encounter;\n\n\t\tthis.rootElem.classList.add('advanced-encounter-picker');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"encounter-type\"></div>\n\t\t\t<div class=\"encounter-header\">\n\t\t\t</div>\n\t\t\t<div class=\"encounter-targets\">\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\n\t\tconst presetEncounters = this.encounter.sim.getAllPresetEncounters();\n\n\t\tconst encounterTypeContainer = this.rootElem.getElementsByClassName('encounter-type')[0] as HTMLElement;\n\t\tnew EnumPicker<Encounter>(encounterTypeContainer, this.encounter, {\n\t\t\tlabel: 'ENCOUNTER',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetEncounters.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => presetEncounters.findIndex(pe => encounter.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPreset(eventID, presetEncounters[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tconst header = this.rootElem.getElementsByClassName('encounter-header')[0] as HTMLElement;\n\t\tconst targetsElem = this.rootElem.getElementsByClassName('encounter-targets')[0] as HTMLElement;\n\n\t\taddEncounterFieldPickers(header, this.encounter, true);\n\t\tif (!simUI.isIndividualSim()) {\n\t\t\tnew BooleanPicker<Encounter>(header, encounter, {\n\t\t\t\tlabel: 'Use Health',\n\t\t\t\tlabelTooltip: 'Uses a damage limit in place of a duration limit. Damage limit is equal to sum of all targets health.',\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => encounter.getUseHealth(),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: boolean) => {\n\t\t\t\t\tencounter.setUseHealth(eventID, newValue);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tnew ListPicker<Encounter, Target, TargetPicker>(targetsElem, this.encounter, {\n\t\t\textraCssClasses: [\n\t\t\t\t'targets-picker',\n\t\t\t],\n\t\t\titemLabel: 'Target',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getTargets(),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<Target>) => {\n\t\t\t\tencounter.setTargets(eventID, newValue);\n\t\t\t},\n\t\t\tnewItem: () => Target.fromDefaults(TypedEvent.nextEventID(), this.encounter.sim),\n\t\t\tcopyItem: (oldItem: Target) => oldItem.clone(TypedEvent.nextEventID()),\n\t\t\tnewItemPicker: (parent: HTMLElement, target: Target) => new TargetPicker(parent, target),\n\t\t});\n\t}\n}\n\nclass TargetPicker extends Component {\n\tconstructor(parent: HTMLElement, modTarget: Target) {\n\t\tsuper(parent, 'target-picker-root');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"target-picker-section target-picker-section1\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section2\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section3 threat-metrics\"></div>\n\t\t`;\n\n\t\tconst encounter = modTarget.sim.encounter;\n\t\tconst section1 = this.rootElem.getElementsByClassName('target-picker-section1')[0] as HTMLElement;\n\t\tconst section2 = this.rootElem.getElementsByClassName('target-picker-section2')[0] as HTMLElement;\n\t\tconst section3 = this.rootElem.getElementsByClassName('target-picker-section3')[0] as HTMLElement;\n\n\t\tconst presetTargets = modTarget.sim.getAllPresetTargets();\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['npc-picker'],\n\t\t\tlabel: 'NPC',\n\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => presetTargets.findIndex(pe => target.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\ttarget.applyPreset(eventID, presetTargets[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['ai-picker'],\n\t\t\tlabel: 'AI',\n\t\t\tlabelTooltip: `\n\t\t\t\t<p>Determines the target\\'s ability rotation.</p>\n\t\t\t\t<p>Note that most rotations are not yet implemented.</p>\n\t\t\t`,\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: 0 },\n\t\t\t].concat(presetTargets.map(pe => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: pe.target!.id,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getId(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setId(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\tlabel: 'Level',\n\t\t\tvalues: [\n\t\t\t\t{ name: '83', value: 83 },\n\t\t\t\t{ name: '82', value: 82 },\n\t\t\t\t{ name: '81', value: 81 },\n\t\t\t\t{ name: '80', value: 80 },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.levelChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getLevel(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setLevel(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker(section1, modTarget, {\n\t\t\tlabel: 'Mob Type',\n\t\t\tvalues: mobTypeEnumValues,\n\t\t\tchangedEvent: (target: Target) => target.mobTypeChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getMobType(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setMobType(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['threat-metrics'],\n\t\t\tlabel: 'Tanked By',\n\t\t\tlabelTooltip: 'Determines which player in the raid this enemy will attack. If no player is assigned to the specified tank slot, this enemy will not attack.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: -1 },\n\t\t\t\t{ name: 'Main Tank', value: 0 },\n\t\t\t\t{ name: 'Tank 2', value: 1 },\n\t\t\t\t{ name: 'Tank 3', value: 2 },\n\t\t\t\t{ name: 'Tank 4', value: 3 },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getTankIndex(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setTankIndex(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tALL_TARGET_STATS.forEach(statData => {\n\t\t\tconst stat = statData.stat;\n\t\t\tnew NumberPicker(section2, modTarget, {\n\t\t\t\textraCssClasses: statData.extraCssClasses,\n\t\t\t\tlabel: statNames[stat],\n\t\t\t\tlabelTooltip: statData.tooltip,\n\t\t\t\tchangedEvent: (target: Target) => target.statsChangeEmitter,\n\t\t\t\tgetValue: (target: Target) => target.getStats().getStat(stat),\n\t\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\t\ttarget.setStats(eventID, target.getStats().withStat(stat, newValue));\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tnew NumberPicker(section3, modTarget, {\n\t\t\tlabel: 'Swing Speed',\n\t\t\tlabelTooltip: 'Time in seconds between auto attacks. Set to 0 to disable auto attacks.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSwingSpeed(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setSwingSpeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew NumberPicker(section3, modTarget, {\n\t\t\tlabel: 'Min Base Damage',\n\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getMinBaseDamage(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setMinBaseDamage(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Dual Wield',\n\t\t\tlabelTooltip: 'Uses 2 separate weapons to attack.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getDualWield(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setDualWield(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'DW Miss Penalty',\n\t\t\tlabelTooltip: 'Enables the Dual Wield Miss Penalty (+19% chance to miss) if dual wielding. Bosses in Hyjal/BT/SWP usually have this disabled to stop tanks from avoidance stacking.',\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getDualWieldPenalty(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setDualWieldPenalty(eventID, newValue);\n\t\t\t},\n\t\t\tenableWhen: (target: Target) => target.getDualWield(),\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Parry Haste',\n\t\t\tlabelTooltip: 'Whether this enemy will gain parry haste when parrying attacks.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getParryHaste(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setParryHaste(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker<Target>(section3, modTarget, {\n\t\t\tlabel: 'Spell School',\n\t\t\tlabelTooltip: 'Type of damage caused by auto attacks. This is usually Physical, but some enemies have elemental attacks.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Physical', value: SpellSchool.SpellSchoolPhysical },\n\t\t\t\t{ name: 'Arcane', value: SpellSchool.SpellSchoolArcane },\n\t\t\t\t{ name: 'Fire', value: SpellSchool.SpellSchoolFire },\n\t\t\t\t{ name: 'Frost', value: SpellSchool.SpellSchoolFrost },\n\t\t\t\t{ name: 'Holy', value: SpellSchool.SpellSchoolHoly },\n\t\t\t\t{ name: 'Nature', value: SpellSchool.SpellSchoolNature },\n\t\t\t\t{ name: 'Shadow', value: SpellSchool.SpellSchoolShadow },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSpellSchool(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setSpellSchool(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Sunwell Radiance',\n\t\t\tlabelTooltip: 'Reduces the chance for this enemy\\'s attacks to be dodged by 20% and be missed by 5%. All Sunwell Plateau bosses have this.',\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSuppressDodge(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setSuppressDodge(eventID, newValue);\n\t\t\t},\n\t\t\tenableWhen: (target: Target) => target.getLevel() == Mechanics.BOSS_LEVEL,\n\t\t});\n\t}\n}\n\nfunction addEncounterFieldPickers(rootElem: HTMLElement, encounter: Encounter, showExecuteProportion: boolean) {\n\tnew NumberPicker(rootElem, encounter, {\n\t\tlabel: 'Duration',\n\t\tlabelTooltip: 'The fight length for each sim iteration, in seconds.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDuration(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDuration(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\tnew NumberPicker(rootElem, encounter, {\n\t\tlabel: 'Duration +/-',\n\t\tlabelTooltip: 'Adds a random amount of time, in seconds, between [value, -1 * value] to each sim iteration. For example, setting Duration to 180 and Duration +/- to 10 will result in random durations between 170s and 190s.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDurationVariation(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDurationVariation(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\n\tif (showExecuteProportion) {\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 20 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 20% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion20() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion20(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 25 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 25% HP) for the purpose of effects like Warlock\\'s Drain Soul.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion25() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion25(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 35 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 35% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion35() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion35(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t}\n}\n\nconst ALL_TARGET_STATS: Array<{ stat: Stat, tooltip: string, extraCssClasses: Array<string> }> = [\n\t{ stat: Stat.StatHealth, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArmor, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArcaneResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFireResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFrostResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatNatureResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatShadowResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatAttackPower, tooltip: '', extraCssClasses: ['threat-metrics'] },\n\t{ stat: Stat.StatBlockValue, tooltip: '', extraCssClasses: ['threat-metrics'] },\n];\n\nconst mobTypeEnumValues = [\n\t{ name: 'None', value: MobType.MobTypeUnknown },\n\t{ name: 'Beast', value: MobType.MobTypeBeast },\n\t{ name: 'Demon', value: MobType.MobTypeDemon },\n\t{ name: 'Dragonkin', value: MobType.MobTypeDragonkin },\n\t{ name: 'Elemental', value: MobType.MobTypeElemental },\n\t{ name: 'Giant', value: MobType.MobTypeGiant },\n\t{ name: 'Humanoid', value: MobType.MobTypeHumanoid },\n\t{ name: 'Mechanical', value: MobType.MobTypeMechanical },\n\t{ name: 'Undead', value: MobType.MobTypeUndead },\n];\n","import { Enchant } from '../proto/common.js';\n\nlet descriptionsPromise: Promise<Record<number, string>> | null = null;\nfunction fetchEnchantDescriptions(): Promise<Record<number, string>> {\n\tif (descriptionsPromise == null) {\n\t\tdescriptionsPromise = fetch('/wotlk/assets/enchants/descriptions.json')\n\t\t.then(response => response.json())\n\t\t.then(json => {\n\t\t\tconst descriptionsMap: Record<number, string> = {};\n\t\t\tfor (let idStr in json) {\n\t\t\t\tdescriptionsMap[parseInt(idStr)] = json[idStr];\n\t\t\t}\n\t\t\treturn descriptionsMap;\n\t\t});\n\t}\n\treturn descriptionsPromise;\n}\n\nexport async function getEnchantDescription(enchant: Enchant): Promise<string> {\n\tconst descriptionsMap = await fetchEnchantDescriptions();\n\treturn descriptionsMap[enchant.effectId] || enchant.name;\n}\n","import { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { Conjured } from '../proto/common.js';\nimport { RaidTarget } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { Raid } from '../raid.js';\nimport { SimUI } from '../sim_ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { emptyRaidTarget } from '../proto_utils/utils.js';\n\nexport function makeShow1hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n    return new BooleanPicker<Sim>(parent, sim, {\n        extraCssClasses: [\n            'show-1h-weapons-selector',\n        ],\n        label: '1H',\n        changedEvent: (sim: Sim) => sim.show1hWeaponsChangeEmitter,\n        getValue: (sim: Sim) => sim.getShow1hWeapons(),\n        setValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n            sim.setShow1hWeapons(eventID, newValue);\n        },\n    });\n}\n\nexport function makeShow2hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n    return new BooleanPicker<Sim>(parent, sim, {\n        extraCssClasses: [\n            'show-2h-weapons-selector',\n        ],\n        label: '2H',\n        changedEvent: (sim: Sim) => sim.show2hWeaponsChangeEmitter,\n        getValue: (sim: Sim) => sim.getShow2hWeapons(),\n        setValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n            sim.setShow2hWeapons(eventID, newValue);\n        },\n    });\n}\n\nexport function makeShowMatchingGemsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n    return new BooleanPicker<Sim>(parent, sim, {\n        extraCssClasses: [\n            'show-matching-gems-selector',\n        ],\n        label: 'Match Socket',\n        changedEvent: (sim: Sim) => sim.showMatchingGemsChangeEmitter,\n        getValue: (sim: Sim) => sim.getShowMatchingGems(),\n        setValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n            sim.setShowMatchingGems(eventID, newValue);\n        },\n    });\n}\n\nexport function makePhaseSelector(parent: HTMLElement, sim: Sim): EnumPicker<Sim> {\n    return new EnumPicker<Sim>(parent, sim, {\n        extraCssClasses: [\n            'phase-selector',\n        ],\n        values: [\n            { name: 'Phase 1', value: 1 },\n            { name: 'Phase 2', value: 2 },\n            { name: 'Phase 3', value: 3 },\n            { name: 'Phase 4', value: 4 },\n            { name: 'Phase 5', value: 5 },\n        ],\n        changedEvent: (sim: Sim) => sim.phaseChangeEmitter,\n        getValue: (sim: Sim) => sim.getPhase(),\n        setValue: (eventID: EventID, sim: Sim, newValue: number) => {\n            sim.setPhase(eventID, newValue);\n        },\n    });\n}\n\nexport const StartingConjured = {\n\ttype: 'enum' as const,\n\tlabel: 'Starting Conjured',\n\tlabelTooltip: 'If set, this conjured will be used instead of the default conjured for the first few uses.',\n\tvalues: [\n\t\t{ name: 'None', value: Conjured.ConjuredUnknown },\n\t\t{ name: 'Dark Rune', value: Conjured.ConjuredDarkRune },\n\t\t{ name: 'Flame Cap', value: Conjured.ConjuredFlameCap },\n\t\t{ name: 'Thistle Tea', value: Conjured.ConjuredRogueThistleTea },\n\t],\n\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getConsumes().startingConjured,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.startingConjured = newValue;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t},\n};\n\nexport const NumStartingConjured = {\n    type: 'number' as const,\n    label: '# to use',\n    labelTooltip: 'The number of starting conjured items to use before going back to the default conjured.',\n    changedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n    getValue: (player: Player<any>) => player.getConsumes().numStartingConjured,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const newConsumes = player.getConsumes();\n        newConsumes.numStartingConjured = newValue;\n        player.setConsumes(eventID, newConsumes);\n    },\n    enableWhen: (player: Player<any>) => player.getConsumes().startingConjured != Conjured.ConjuredUnknown,\n};\n\nexport const InFrontOfTarget = {\n    type: 'boolean' as const,\n    label: 'In Front of Target',\n    labelTooltip: 'Stand in front of the target, causing Blocks and Parries to be included in the attack table.',\n    changedEvent: (player: Player<any>) => player.inFrontOfTargetChangeEmitter,\n    getValue: (player: Player<any>) => player.getInFrontOfTarget(),\n    setValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n        player.setInFrontOfTarget(eventID, newValue);\n    },\n};\n\nexport const DistanceFromTarget = {\n    type: 'number' as const,\n    label: 'Distance From Target',\n    labelTooltip: 'Distance from targets, in yards. Used to calculate travel time for certain spells.',\n    changedEvent: (player: Player<any>) => player.distanceFromTargetChangeEmitter,\n    getValue: (player: Player<any>) => player.getDistanceFromTarget(),\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        player.setDistanceFromTarget(eventID, newValue);\n    },\n};\n\nexport const TankAssignment = {\n    type: 'enum' as const,\n    extraCssClasses: [\n        'tank-selector',\n        'threat-metrics',\n        'within-raid-sim-hide',\n    ],\n    label: 'Tank Assignment',\n    labelTooltip: 'Determines which mobs will be tanked. Most mobs default to targeting the Main Tank, but in preset multi-target encounters this is not always true.',\n    values: [\n        { name: 'None', value: -1 },\n        { name: 'Main Tank', value: 0 },\n        { name: 'Tank 2', value: 1 },\n        { name: 'Tank 3', value: 2 },\n        { name: 'Tank 4', value: 3 },\n    ],\n    changedEvent: (player: Player<any>) => player.getRaid()!.tanksChangeEmitter,\n    getValue: (player: Player<any>) => player.getRaid()!.getTanks().findIndex(tank => RaidTarget.equals(tank, player.makeRaidTarget())),\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const newTanks = [];\n        if (newValue != -1) {\n            for (let i = 0; i < newValue; i++) {\n                newTanks.push(emptyRaidTarget());\n            }\n            newTanks.push(player.makeRaidTarget());\n        }\n        player.getRaid()!.setTanks(eventID, newTanks);\n    },\n};\n\nexport const IncomingHps = {\n    type: 'number' as const,\n    label: 'Incoming HPS',\n    labelTooltip: `\n\t\t<p>Average amount of healing received per second. Used for calculating chance of death.</p>\n\t\t<p>If set to 0, defaults to 125% of DTPS.</p>\n\t`,\n    changedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n    getValue: (player: Player<any>) => player.getHealingModel().hps,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const healingModel = player.getHealingModel();\n        healingModel.hps = newValue;\n        player.setHealingModel(eventID, healingModel);\n    },\n    enableWhen: (player: Player<any>) => player.getRaid()!.getTanks().find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HealingCadence = {\n    type: 'number' as const,\n    float: true,\n    label: 'Healing Cadence',\n    labelTooltip: `\n\t\t<p>How often the incoming heal 'ticks', in seconds. Generally, longer durations favor Effective Hit Points (EHP) for minimizing Chance of Death, while shorter durations favor avoidance.</p>\n\t\t<p>Example: if Incoming HPS is set to 1000 and this is set to 1s, then every 1s a heal will be received for 1000. If this is instead set to 2s, then every 2s a heal will be recieved for 2000.</p>\n\t\t<p>If set to 0, defaults to 2.5 seconds.</p>\n\t`,\n    changedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n    getValue: (player: Player<any>) => player.getHealingModel().cadenceSeconds,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const healingModel = player.getHealingModel();\n        healingModel.cadenceSeconds = newValue;\n        player.setHealingModel(eventID, healingModel);\n    },\n    enableWhen: (player: Player<any>) => player.getRaid()!.getTanks().find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HpPercentForDefensives = {\n    type: 'number' as const,\n    float: true,\n    label: 'HP % for Defensive CDs',\n    labelTooltip: `\n\t\t<p>% of Maximum Health, below which defensive cooldowns are allowed to be used.</p>\n\t\t<p>If set to 0, this restriction is disabled.</p>\n\t`,\n    changedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n    getValue: (player: Player<any>) => player.getCooldowns().hpPercentForDefensives * 100,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const cooldowns = player.getCooldowns();\n        cooldowns.hpPercentForDefensives = newValue / 100;\n        player.setCooldowns(eventID, cooldowns);\n    },\n};\n","import { getWowheadItemId } from '../proto_utils/equipped_item.js';\nimport { EquippedItem } from '../proto_utils/equipped_item.js';\nimport { getEmptyGemSocketIconUrl, gemMatchesSocket } from '../proto_utils/gems.js';\nimport { setGemSocketCssClass } from '../proto_utils/gems.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { enchantAppliesToItem } from '../proto_utils/utils.js';\nimport { Class, Enchant, Gem, GemColor } from '../proto/common.js';\nimport { HandType } from '../proto/common.js';\nimport { WeaponType } from '../proto/common.js';\nimport { Item } from '../proto/common.js';\nimport { ItemQuality } from '../proto/common.js';\nimport { ItemSlot } from '../proto/common.js';\nimport { ItemType } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { getEnchantDescription } from '../proto_utils/enchants.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { slotNames } from '../proto_utils/names.js';\nimport { setItemQualityCssClass } from '../css_utils.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { formatDeltaTextElem } from '../utils.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Popup } from './popup.js';\nimport { makePhaseSelector } from './other_inputs.js';\nimport { makeShow1hWeaponsSelector } from './other_inputs.js';\nimport { makeShow2hWeaponsSelector } from './other_inputs.js';\nimport { makeShowMatchingGemsSelector } from './other_inputs.js';\n\ndeclare var $: any;\n\nexport class GearPicker extends Component {\n\t// ItemSlot is used as the index\n\treadonly itemPickers: Array<ItemPicker>;\n\n\tconstructor(parent: HTMLElement, player: Player<any>) {\n\t\tsuper(parent, 'gear-picker-root');\n\n\t\tconst leftSide = document.createElement('div');\n\t\tleftSide.classList.add('gear-picker-left');\n\t\tthis.rootElem.appendChild(leftSide);\n\n\t\tconst rightSide = document.createElement('div');\n\t\trightSide.classList.add('gear-picker-right');\n\t\tthis.rootElem.appendChild(rightSide);\n\n\t\tconst leftItemPickers = [\n\t\t\tItemSlot.ItemSlotHead,\n\t\t\tItemSlot.ItemSlotNeck,\n\t\t\tItemSlot.ItemSlotShoulder,\n\t\t\tItemSlot.ItemSlotBack,\n\t\t\tItemSlot.ItemSlotChest,\n\t\t\tItemSlot.ItemSlotWrist,\n\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\tItemSlot.ItemSlotOffHand,\n\t\t].map(slot => new ItemPicker(leftSide, player, slot));\n\n\t\tconst rightItemPickers = [\n\t\t\tItemSlot.ItemSlotHands,\n\t\t\tItemSlot.ItemSlotWaist,\n\t\t\tItemSlot.ItemSlotLegs,\n\t\t\tItemSlot.ItemSlotFeet,\n\t\t\tItemSlot.ItemSlotFinger1,\n\t\t\tItemSlot.ItemSlotFinger2,\n\t\t\tItemSlot.ItemSlotTrinket1,\n\t\t\tItemSlot.ItemSlotTrinket2,\n\t\t\tItemSlot.ItemSlotRanged,\n\t\t].map(slot => new ItemPicker(rightSide, player, slot));\n\n\t\tthis.itemPickers = leftItemPickers.concat(rightItemPickers).sort((a, b) => a.slot - b.slot);\n\t}\n}\n\nclass ItemPicker extends Component {\n\treadonly slot: ItemSlot;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly iconElem: HTMLAnchorElement;\n\tprivate readonly nameElem: HTMLAnchorElement;\n\tprivate readonly enchantElem: HTMLAnchorElement;\n\tprivate readonly socketsContainerElem: HTMLElement;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\n\tprivate _equippedItem: EquippedItem | null = null;\n\n\n\tconstructor(parent: HTMLElement, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(parent, 'item-picker-root');\n\t\tthis.slot = slot;\n\t\tthis.player = player;\n\n\t\tthis.rootElem.innerHTML = `\n      <a class=\"item-picker-icon\">\n        <div class=\"item-picker-sockets-container\">\n        </div>\n      </a>\n      <div class=\"item-picker-labels-container\">\n        <a class=\"item-picker-name\"></a><br>\n        <a class=\"item-picker-enchant\"></a>\n      </div>\n    `;\n\n\t\tthis.iconElem = this.rootElem.getElementsByClassName('item-picker-icon')[0] as HTMLAnchorElement;\n\t\tthis.nameElem = this.rootElem.getElementsByClassName('item-picker-name')[0] as HTMLAnchorElement;\n\t\tthis.enchantElem = this.rootElem.getElementsByClassName('item-picker-enchant')[0] as HTMLAnchorElement;\n\t\tthis.socketsContainerElem = this.rootElem.getElementsByClassName('item-picker-sockets-container')[0] as HTMLElement;\n\n\t\tthis.item = player.getEquippedItem(slot);\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._items = this.player.getItems(this.slot);\n\t\t\tthis._enchants = this.player.getEnchants(this.slot);\n\n\t\t\tconst onClickStart = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t};\n\t\t\tconst onClickEnd = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\t\t\tthis.iconElem.addEventListener('click', onClickStart);\n\t\t\tthis.iconElem.addEventListener('touchstart', onClickStart);\n\t\t\tthis.iconElem.addEventListener('touchend', onClickEnd);\n\t\t\tthis.nameElem.addEventListener('click', onClickStart);\n\t\t\tthis.nameElem.addEventListener('touchstart', onClickStart);\n\t\t\tthis.nameElem.addEventListener('touchend', onClickEnd);\n\n\t\t\t// Make enchant name open enchant tab.\n\t\t\tthis.enchantElem.addEventListener('click', (ev: Event) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t\tselectorModal.openTab(1);\n\t\t\t});\n\t\t\tthis.enchantElem.addEventListener('touchstart', (ev: Event) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t\tselectorModal.openTab(1);\n\t\t\t});\n\t\t\tthis.enchantElem.addEventListener('touchend', onClickEnd);\n\t\t});\n\t\tplayer.gearChangeEmitter.on(() => {\n\t\t\tthis.item = player.getEquippedItem(slot);\n\t\t});\n\t\tplayer.professionChangeEmitter.on(() => {\n\t\t\tif (this._equippedItem != null) {\n\t\t\t\tthis.player.setWowheadData(this._equippedItem, this.iconElem);\n\t\t\t}\n\t\t});\n\t}\n\n\tset item(newItem: EquippedItem | null) {\n\t\t// Clear everything first\n\t\tthis.nameElem.removeAttribute('data-wowhead');\n\t\tthis.nameElem.removeAttribute('href');\n\t\tthis.iconElem.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\tthis.iconElem.removeAttribute('data-wowhead');\n\t\tthis.iconElem.removeAttribute('href');\n\t\tthis.enchantElem.removeAttribute('data-wowhead');\n\n\t\tthis.nameElem.textContent = slotNames[this.slot];\n\t\tsetItemQualityCssClass(this.nameElem, null);\n\n\t\tthis.enchantElem.innerHTML = '';\n\t\tthis.socketsContainerElem.innerHTML = '';\n\n\t\tif (newItem != null) {\n\t\t\tthis.nameElem.textContent = newItem.item.name;\n\t\t\tif (newItem.item.heroic) {\n\t\t\t\tvar heroic_span = document.createElement('span');\n\t\t\t\theroic_span.style.color = \"green\";\n\t\t\t\theroic_span.style.marginLeft = \"3px\";\n\t\t\t\theroic_span.innerText = \"[H]\";\n\t\t\t\tthis.nameElem.appendChild(heroic_span);\n\t\t\t}\n\n\t\t\tsetItemQualityCssClass(this.nameElem, newItem.item.quality);\n\n\t\t\tthis.player.setWowheadData(newItem, this.iconElem);\n\t\t\tthis.player.setWowheadData(newItem, this.nameElem);\n\t\t\tnewItem.asActionId().fill().then(filledId => {\n\t\t\t\tfilledId.setBackgroundAndHref(this.iconElem);\n\t\t\t\tfilledId.setWowheadHref(this.nameElem);\n\t\t\t});\n\n\t\t\tif (newItem.enchant) {\n\t\t\t\tgetEnchantDescription(newItem.enchant).then(description => {\n\t\t\t\t\tthis.enchantElem.textContent = description;\n\t\t\t\t});\n\t\t\t\t// Make enchant text hover have a tooltip.\n\t\t\t\tif (newItem.enchant.isSpellId) {\n\t\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&spell=${newItem.enchant.id}`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&item=${newItem.enchant.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewItem.allSocketColors().forEach((socketColor, gemIdx) => {\n\t\t\t\tconst gemIconElem = document.createElement('img');\n\t\t\t\tgemIconElem.classList.add('item-picker-gem-icon');\n\t\t\t\tsetGemSocketCssClass(gemIconElem, socketColor);\n\t\t\t\tif (newItem.gems[gemIdx] == null) {\n\t\t\t\t\tgemIconElem.src = getEmptyGemSocketIconUrl(socketColor);\n\t\t\t\t} else {\n\t\t\t\t\tActionId.fromItemId(newItem.gems[gemIdx]!.id).fill().then(filledId => {\n\t\t\t\t\t\tgemIconElem.src = filledId.iconUrl;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.socketsContainerElem.appendChild(gemIconElem);\n\n\t\t\t\tif (gemIdx == newItem.numPossibleSockets - 1 && [ItemType.ItemTypeWrist, ItemType.ItemTypeHands].includes(newItem.item.type)) {\n\t\t\t\t\tconst updateProfession = () => {\n\t\t\t\t\t\tif (this.player.isBlacksmithing()) {\n\t\t\t\t\t\t\tgemIconElem.style.removeProperty('display');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgemIconElem.style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tthis.player.professionChangeEmitter.on(updateProfession);\n\t\t\t\t\tupdateProfession();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._equippedItem = newItem;\n\t}\n}\n\nclass SelectorModal extends Popup {\n\tprivate player: Player<any>;\n\tprivate readonly tabsElem: HTMLElement;\n\tprivate readonly contentElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, slot: ItemSlot, equippedItem: EquippedItem | null, eligibleItems: Array<Item>, eligibleEnchants: Array<Enchant>) {\n\t\tsuper(parent);\n\t\tthis.player = player;\n\n\t\tthis.rootElem.classList.add('selector-modal');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<ul class=\"nav nav-tabs selector-modal-tabs\">\n\t\t\t</ul>\n\t\t\t<div class=\"tab-content selector-modal-tab-content\">\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\t\tthis.tabsElem = this.rootElem.getElementsByClassName('selector-modal-tabs')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('selector-modal-tab-content')[0] as HTMLElement;\n\n\t\tthis.setData(slot, equippedItem, eligibleItems, eligibleEnchants);\n\t}\n\n\topenTab(idx: number) {\n\t\tconst elems = this.tabsElem.getElementsByClassName(\"selector-modal-item-tab\");\n\t\t(elems[idx] as HTMLElement).click();\n\t}\n\n\tsetData(slot: ItemSlot, equippedItem: EquippedItem | null, eligibleItems: Array<Item>, eligibleEnchants: Array<Enchant>) {\n\t\tthis.tabsElem.innerHTML = '';\n\t\tthis.contentElem.innerHTML = '';\n\n\t\tthis.addTab(\n\t\t\t'Items',\n\t\t\tslot,\n\t\t\tequippedItem,\n\t\t\teligibleItems.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\titem: item,\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tactionId: ActionId.fromItem(item),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tquality: item.quality,\n\t\t\t\t\theroic: item.heroic,\n\t\t\t\t\tphase: item.phase,\n\t\t\t\t\tbaseEP: this.player.computeItemEP(item),\n\t\t\t\t\tignoreEPFilter: false,\n\t\t\t\t\tonEquip: (eventID, item: Item) => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withItem(item));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, new EquippedItem(item));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\titem => this.player.computeItemEP(item),\n\t\t\tequippedItem => equippedItem?.item,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tthis.player.equipItem(eventID, slot, null);\n\t\t\t});\n\n\t\tthis.addTab(\n\t\t\t'Enchants',\n\t\t\tslot,\n\t\t\tequippedItem,\n\t\t\teligibleEnchants.map(enchant => {\n\t\t\t\treturn {\n\t\t\t\t\titem: enchant,\n\t\t\t\t\tid: enchant.id,\n\t\t\t\t\tactionId: enchant.isSpellId ? ActionId.fromSpellId(enchant.id) : ActionId.fromItemId(enchant.id),\n\t\t\t\t\tname: enchant.name,\n\t\t\t\t\tquality: enchant.quality,\n\t\t\t\t\tphase: enchant.phase || 1,\n\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(enchant.stats)),\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\theroic: false,\n\t\t\t\t\tonEquip: (eventID, enchant: Enchant) => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withEnchant(enchant));\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\tenchant => this.player.computeEnchantEP(enchant),\n\t\t\tequippedItem => equippedItem?.enchant,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\tif (equippedItem)\n\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withEnchant(null));\n\t\t\t});\n\n\t\tthis.addGemTabs(slot, equippedItem);\n\t}\n\n\tprivate addGemTabs(slot: ItemSlot, equippedItem: EquippedItem | null) {\n\t\tif (equippedItem == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst socketBonusEP = this.player.computeStatsEP(new Stats(equippedItem.item.socketBonus)) / (equippedItem.item.gemSockets.length || 1);\n\t\tequippedItem.curSocketColors(this.player.isBlacksmithing()).forEach((socketColor, socketIdx) => {\n\t\t\tthis.addTab(\n\t\t\t\t'Gem ' + (socketIdx + 1),\n\t\t\t\tslot,\n\t\t\t\tequippedItem,\n\t\t\t\tthis.player.getGems(socketColor).map((gem: Gem) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\titem: gem,\n\t\t\t\t\t\tid: gem.id,\n\t\t\t\t\t\tactionId: ActionId.fromItemId(gem.id),\n\t\t\t\t\t\tname: gem.name,\n\t\t\t\t\t\tquality: gem.quality,\n\t\t\t\t\t\tphase: gem.phase,\n\t\t\t\t\t\theroic: false,\n\t\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(gem.stats)),\n\t\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\t\tonEquip: (eventID, gem: Gem) => {\n\t\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withGem(gem, socketIdx));\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tgem => {\n\t\t\t\t\tlet gemEP = this.player.computeGemEP(gem);\n\t\t\t\t\tif (gemMatchesSocket(gem, socketColor)) {\n\t\t\t\t\t\tgemEP += socketBonusEP;\n\t\t\t\t\t}\n\t\t\t\t\treturn gemEP;\n\t\t\t\t},\n\t\t\t\tequippedItem => equippedItem?.gems[socketIdx],\n\t\t\t\tsocketColor,\n\t\t\t\teventID => {\n\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withGem(null, socketIdx));\n\t\t\t\t},\n\t\t\t\ttabAnchor => {\n\t\t\t\t\ttabAnchor.classList.add('selector-modal-tab-gem-icon');\n\t\t\t\t\tsetGemSocketCssClass(tabAnchor, socketColor);\n\n\t\t\t\t\tconst updateGemIcon = () => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tconst gem = equippedItem?.gems[socketIdx];\n\n\t\t\t\t\t\tif (gem) {\n\t\t\t\t\t\t\tActionId.fromItemId(gem.id).fill().then(filledId => {\n\t\t\t\t\t\t\t\ttabAnchor.style.backgroundImage = `url('${filledId.iconUrl}')`;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst url = getEmptyGemSocketIconUrl(socketColor);\n\t\t\t\t\t\t\ttabAnchor.style.backgroundImage = `url('${url}')`;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.player.gearChangeEmitter.on(updateGemIcon);\n\t\t\t\t\tupdateGemIcon();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds one of the tabs for the item selector menu.\n\t *\n\t * T is expected to be Item, Enchant, or Gem. Tab menus for all 3 looks extremely\n\t * similar so this function uses extra functions to do it generically.\n\t */\n\tprivate addTab<T>(\n\t\tlabel: string,\n\t\tslot: ItemSlot,\n\t\tequippedItem: EquippedItem | null,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => (T | null | undefined),\n\t\tsocketColor: GemColor,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tsetTabContent?: (tabElem: HTMLAnchorElement) => void) {\n\t\tif (itemData.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t// Trinket EP is weird so just sort by ilvl instead.\n\t\t\titemData.sort((dataA, dataB) => (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl);\n\t\t} else {\n\t\t\titemData.sort((dataA, dataB) => {\n\t\t\t\tconst diff = computeEP(dataB.item) - computeEP(dataA.item);\n\t\t\t\t// if EP is same, sort by ilvl\n\t\t\t\tif (Math.abs(diff) < 0.01) {\n\t\t\t\t\treturn (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl;\n\t\t\t\t}\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\n\t\tconst tabElem = document.createElement('li');\n\t\tthis.tabsElem.appendChild(tabElem);\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\ttabElem.innerHTML = `<a class=\"selector-modal-item-tab\" data-toggle=\"tab\" href=\"#${tabContentId}\"></a>`;\n\n\t\tconst tabAnchor = tabElem.getElementsByClassName('selector-modal-item-tab')[0] as HTMLAnchorElement;\n\t\ttabAnchor.dataset.label = label;\n\t\tif (setTabContent) {\n\t\t\tsetTabContent(tabAnchor);\n\t\t} else {\n\t\t\ttabAnchor.textContent = label;\n\t\t}\n\n\t\tconst tabContent = document.createElement('div');\n\t\ttabContent.id = tabContentId;\n\t\ttabContent.classList.add('tab-pane', 'fade', 'selector-modal-tab-content');\n\t\tthis.contentElem.appendChild(tabContent);\n\t\ttabContent.innerHTML = `\n    <div class=\"selector-modal-tab-content-header\">\n      <button class=\"selector-modal-remove-button sim-button\">Remove</button>\n      <input class=\"selector-modal-search\" type=\"text\" placeholder=\"Search...\">\n      <div class=\"selector-modal-filter-bar-filler\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-1h-weapons\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-2h-weapons\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-matching-gems\"></div>\n      <div class=\"selector-modal-phase-selector\"></div>\n    </div>\n    <ul class=\"selector-modal-list\"></ul>\n    `;\n\n\t\tconst show1hWeaponsSelector = makeShow1hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement, this.player.sim);\n\t\tconst show2hWeaponsSelector = makeShow2hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement, this.player.sim);\n\t\tif (label != 'Items' || slot != ItemSlot.ItemSlotMainHand && this.player.getClass() != Class.ClassWarrior) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst showMatchingGemsSelector = makeShowMatchingGemsSelector(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement, this.player.sim);\n\t\tif (!label.startsWith('Gem')) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst phaseSelector = makePhaseSelector(tabContent.getElementsByClassName('selector-modal-phase-selector')[0] as HTMLElement, this.player.sim);\n\n\t\tif (label == 'Items') {\n\t\t\ttabElem.classList.add('active', 'in');\n\t\t\ttabContent.classList.add('active', 'in');\n\t\t}\n\n\t\tconst listElem = tabContent.getElementsByClassName('selector-modal-list')[0] as HTMLElement;\n\n\t\tconst listItemElems = itemData.map((itemData, itemIdx) => {\n\t\t\tconst item = itemData.item;\n\t\t\tconst itemEP = computeEP(item);\n\n\t\t\tconst listItemElem = document.createElement('li');\n\t\t\tlistItemElem.classList.add('selector-modal-list-item');\n\t\t\tlistElem.appendChild(listItemElem);\n\n\t\t\tlistItemElem.dataset.idx = String(itemIdx);\n\n\t\t\tlistItemElem.innerHTML = `\n        <a class=\"selector-modal-list-item-icon\"></a>\n        <a class=\"selector-modal-list-item-name\">${itemData.heroic ? itemData.name + \"<span style=\\\"color:green\\\">[H]</span>\" : itemData.name}</a>\n        <div class=\"selector-modal-list-item-padding\"></div>\n        <div class=\"selector-modal-list-item-ep\">\n\t\t\t\t\t<span class=\"selector-modal-list-item-ep-value\">${itemEP < 9.95 ? itemEP.toFixed(1) : Math.round(itemEP)}</span>\n\t\t\t\t\t<span class=\"selector-modal-list-item-ep-delta\"></span>\n\t\t\t\t</div>\n      `;\n\n\t\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t\tconst epElem = listItemElem.getElementsByClassName('selector-modal-list-item-ep')[0] as HTMLElement;\n\t\t\t\tepElem.style.display = 'none';\n\t\t\t}\n\n\t\t\tconst iconElem = listItemElem.getElementsByClassName('selector-modal-list-item-icon')[0] as HTMLImageElement;\n\t\t\titemData.actionId.fill().then(filledId => {\n\t\t\t\tfilledId.setWowheadHref(listItemElem.children[0] as HTMLAnchorElement);\n\t\t\t\tfilledId.setWowheadHref(listItemElem.children[1] as HTMLAnchorElement);\n\t\t\t\ticonElem.style.backgroundImage = `url('${filledId.iconUrl}')`;\n\t\t\t});\n\n\t\t\tconst nameElem = listItemElem.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLImageElement;\n\t\t\tsetItemQualityCssClass(nameElem, itemData.quality);\n\n\t\t\tconst onclick = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\titemData.onEquip(TypedEvent.nextEventID(), item);\n\n\t\t\t\t// If the item changes, the gem slots might change, so remove and recreate the gem tabs\n\t\t\t\tif (Item.is(item)) {\n\t\t\t\t\tthis.removeTabs('Gem');\n\t\t\t\t\tthis.addGemTabs(slot, this.player.getEquippedItem(slot));\n\t\t\t\t}\n\t\t\t};\n\t\t\tnameElem.addEventListener('click', onclick);\n\t\t\ticonElem.addEventListener('click', onclick);\n\n\t\t\treturn listItemElem;\n\t\t});\n\n\t\tconst removeButton = tabContent.getElementsByClassName('selector-modal-remove-button')[0] as HTMLButtonElement;\n\t\tremoveButton.addEventListener('click', event => {\n\t\t\tlistItemElems.forEach(elem => elem.classList.remove('active'));\n\t\t\tonRemove(TypedEvent.nextEventID());\n\t\t});\n\n\t\tconst updateSelected = () => {\n\t\t\tconst newEquippedItem = this.player.getEquippedItem(slot);\n\t\t\tconst newItem = equippedToItemFn(newEquippedItem);\n\n\t\t\tconst newItemId = (newItem as any)?.id || null;\n\t\t\tconst newEP = newItem ? computeEP(newItem) : 0;\n\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = itemData[listItemIdx];\n\t\t\t\tconst listItem = listItemData.item;\n\n\t\t\t\telem.classList.remove('active');\n\t\t\t\tif (listItemData.id == newItemId) {\n\t\t\t\t\telem.classList.add('active');\n\t\t\t\t}\n\n\t\t\t\tconst epDeltaElem = elem.getElementsByClassName('selector-modal-list-item-ep-delta')[0] as HTMLSpanElement;\n\t\t\t\tepDeltaElem.textContent = '';\n\t\t\t\tif (listItem) {\n\t\t\t\t\tconst listItemEP = computeEP(listItem);\n\t\t\t\t\tformatDeltaTextElem(epDeltaElem, newEP, listItemEP, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tupdateSelected();\n\t\tthis.player.gearChangeEmitter.on(updateSelected);\n\n\t\tconst applyFilters = () => {\n\t\t\tlet validItemElems = listItemElems;\n\t\t\tconst currentEquippedItem = this.player.getEquippedItem(slot);\n\n\t\t\tvalidItemElems = validItemElems.filter(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = itemData[listItemIdx];\n\n\t\t\t\tif (label == 'Items') {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Item;\n\t\t\t\t\tif (!this.player.sim.getShow1hWeapons() && listItem.weaponType != WeaponType.WeaponTypeUnknown && listItem.handType != HandType.HandTypeTwoHand) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.player.sim.getShow2hWeapons() && listItem.weaponType != WeaponType.WeaponTypeUnknown && listItem.handType == HandType.HandTypeTwoHand) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (label == 'Enchants') {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Enchant;\n\t\t\t\t\tif (currentEquippedItem && !enchantAppliesToItem(listItem, currentEquippedItem.item)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (label.startsWith('Gem')) {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Gem;\n\t\t\t\t\tif (this.player.sim.getShowMatchingGems() && !gemMatchesSocket(listItem, socketColor)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (listItemData.phase > this.player.sim.getPhase()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (searchInput.value.length > 0) {\n\t\t\t\t\tconst searchQuery = searchInput.value.toLowerCase().split(\" \");\n\t\t\t\t\tconst name = listItemData.name.toLowerCase();\n\n\t\t\t\t\tvar include = true;\n\t\t\t\t\tsearchQuery.forEach(v => {\n\t\t\t\t\t\tif (!name.includes(v))\n\t\t\t\t\t\t\tinclude = false;\n\t\t\t\t\t});\n\t\t\t\t\tif (!include) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tlet numShown = 0;\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tif (validItemElems.includes(elem)) {\n\t\t\t\t\telem.classList.remove('hidden');\n\t\t\t\t\tnumShown++;\n\t\t\t\t\tif (numShown % 2 == 0) {\n\t\t\t\t\t\telem.classList.remove('odd');\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.classList.add('odd');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.classList.add('hidden');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst searchInput = tabContent.getElementsByClassName('selector-modal-search')[0] as HTMLInputElement;\n\t\tsearchInput.addEventListener('input', applyFilters);\n\t\tsearchInput.addEventListener(\"keyup\", ev => {\n\t\t\tif (ev.key == \"Enter\") {\n\t\t\t\tlistItemElems.find(ele => {\n\t\t\t\t\tif (ele.classList.contains(\"hidden\")) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst nameElem = ele.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLElement;\n\t\t\t\t\tnameElem.click();\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.player.sim.phaseChangeEmitter.on(() => {\n\t\t\tapplyFilters();\n\t\t});\n\t\tTypedEvent.onAny([\n\t\t\tthis.player.sim.show1hWeaponsChangeEmitter,\n\t\t\tthis.player.sim.show2hWeaponsChangeEmitter,\n\t\t\tthis.player.sim.showMatchingGemsChangeEmitter,\n\t\t]).on(() => {\n\t\t\tapplyFilters();\n\t\t});\n\t\tthis.player.gearChangeEmitter.on(() => {\n\t\t\tapplyFilters();\n\t\t\tupdateSelected();\n\t\t});\n\n\t\tapplyFilters();\n\t}\n\n\tprivate removeTabs(labelSubstring: string) {\n\t\tconst tabElems = Array.prototype.slice.call(this.tabsElem.getElementsByClassName('selector-modal-item-tab'))\n\t\t\t.filter(tab => tab.dataset.label.includes(labelSubstring));\n\n\t\tconst contentElems = tabElems\n\t\t\t.map(tabElem => document.getElementById(tabElem.getAttribute('href').substring(1)))\n\t\t\t.filter(tabElem => Boolean(tabElem));\n\n\t\ttabElems.forEach(elem => elem.parentElement.remove());\n\t\tcontentElems.forEach(elem => elem!.remove());\n\t}\n}\n\ninterface ItemData<T> {\n\titem: T,\n\tname: string,\n\tid: number,\n\tactionId: ActionId,\n\tquality: ItemQuality,\n\tphase: number,\n\tbaseEP: number,\n\tignoreEPFilter: boolean,\n\theroic: boolean,\n\tonEquip: (eventID: EventID, item: T) => void,\n}\n\nconst emptySlotIcons: Record<ItemSlot, string> = {\n\t[ItemSlot.ItemSlotHead]: 'https://cdn.seventyupgrades.com/item-slots/Head.jpg',\n\t[ItemSlot.ItemSlotNeck]: 'https://cdn.seventyupgrades.com/item-slots/Neck.jpg',\n\t[ItemSlot.ItemSlotShoulder]: 'https://cdn.seventyupgrades.com/item-slots/Shoulders.jpg',\n\t[ItemSlot.ItemSlotBack]: 'https://cdn.seventyupgrades.com/item-slots/Back.jpg',\n\t[ItemSlot.ItemSlotChest]: 'https://cdn.seventyupgrades.com/item-slots/Chest.jpg',\n\t[ItemSlot.ItemSlotWrist]: 'https://cdn.seventyupgrades.com/item-slots/Wrists.jpg',\n\t[ItemSlot.ItemSlotHands]: 'https://cdn.seventyupgrades.com/item-slots/Hands.jpg',\n\t[ItemSlot.ItemSlotWaist]: 'https://cdn.seventyupgrades.com/item-slots/Waist.jpg',\n\t[ItemSlot.ItemSlotLegs]: 'https://cdn.seventyupgrades.com/item-slots/Legs.jpg',\n\t[ItemSlot.ItemSlotFeet]: 'https://cdn.seventyupgrades.com/item-slots/Feet.jpg',\n\t[ItemSlot.ItemSlotFinger1]: 'https://cdn.seventyupgrades.com/item-slots/Finger.jpg',\n\t[ItemSlot.ItemSlotFinger2]: 'https://cdn.seventyupgrades.com/item-slots/Finger.jpg',\n\t[ItemSlot.ItemSlotTrinket1]: 'https://cdn.seventyupgrades.com/item-slots/Trinket.jpg',\n\t[ItemSlot.ItemSlotTrinket2]: 'https://cdn.seventyupgrades.com/item-slots/Trinket.jpg',\n\t[ItemSlot.ItemSlotMainHand]: 'https://cdn.seventyupgrades.com/item-slots/MainHand.jpg',\n\t[ItemSlot.ItemSlotOffHand]: 'https://cdn.seventyupgrades.com/item-slots/OffHand.jpg',\n\t[ItemSlot.ItemSlotRanged]: 'https://cdn.seventyupgrades.com/item-slots/Ranged.jpg',\n};\nexport function getEmptySlotIconUrl(slot: ItemSlot): string {\n\treturn emptySlotIcons[slot];\n}\n","import { Spec } from '../proto/common.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from '../components/component.js';\n\ndeclare var tippy: any;\n\nexport type SavedDataManagerConfig<ModObject, T> = {\n\tlabel: string;\n\tpresetsOnly?: boolean;\n\tstorageKey: string;\n\tchangeEmitters: Array<TypedEvent<any>>,\n\tequals: (a: T, b: T) => boolean;\n\tgetData: (modObject: ModObject) => T;\n\tsetData: (eventID: EventID, modObject: ModObject, data: T) => void;\n\ttoJson: (a: T) => any;\n\tfromJson: (obj: any) => T;\n};\n\nexport type SavedDataConfig<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\ttooltip?: string;\n\tisPreset?: boolean;\n\n\t// If set, will automatically hide the saved data when this evaluates to false.\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\ntype SavedData<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\telem: HTMLElement;\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\nexport class SavedDataManager<ModObject, T> extends Component {\n\tprivate readonly modObject: ModObject;\n\tprivate readonly config: SavedDataManagerConfig<ModObject, T>;\n\n\tprivate readonly userData: Array<SavedData<ModObject, T>>;\n\tprivate readonly presets: Array<SavedData<ModObject, T>>;\n\n\tprivate readonly savedDataDiv: HTMLElement;\n\tprivate readonly saveInput: HTMLInputElement;\n\tprivate frozen: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: SavedDataManagerConfig<ModObject, T>) {\n\t\tsuper(parent, 'saved-data-manager-root');\n\t\tthis.modObject = modObject;\n\t\tthis.config = config;\n\n\t\tthis.userData = [];\n\t\tthis.presets = [];\n\t\tthis.frozen = false;\n\n\t\tthis.rootElem.innerHTML = `\n    <div class=\"saved-data-container\">\n    </div>\n    <div class=\"saved-data-create-container presets-only-hide\">\n      <input class=\"saved-data-save-input\" type=\"text\" placeholder=\"Label\">\n      <button class=\"saved-data-save-button sim-button\">SAVE CURRENT ${config.label.toUpperCase()}</button>\n    </div>\n    `;\n\n\t\tif (config.presetsOnly) {\n\t\t\tthis.rootElem.classList.add('presets-only');\n\t\t}\n\n\t\tthis.savedDataDiv = this.rootElem.getElementsByClassName('saved-data-container')[0] as HTMLElement;\n\n\t\tthis.saveInput = this.rootElem.getElementsByClassName('saved-data-save-input')[0] as HTMLInputElement;\n\t\tconst saveButton = this.rootElem.getElementsByClassName('saved-data-save-button')[0] as HTMLButtonElement;\n\t\tsaveButton.addEventListener('click', event => {\n\t\t\tif (this.frozen)\n\t\t\t\treturn;\n\n\t\t\tconst newName = this.saveInput.value;\n\t\t\tif (!newName) {\n\t\t\t\talert(`Choose a label for your saved ${config.label}!`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newName in this.presets) {\n\t\t\t\talert(`${config.label} with name ${newName} already exists.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.addSavedData({\n\t\t\t\tname: newName,\n\t\t\t\tdata: config.getData(this.modObject),\n\t\t\t});\n\t\t\tthis.saveUserData();\n\t\t});\n\t}\n\n\taddSavedData(config: SavedDataConfig<ModObject, T>) {\n\t\tconst newData = this.makeSavedData(config);\n\n\t\tconst dataArr = config.isPreset ? this.presets : this.userData;\n\n\t\tconst oldIdx = dataArr.findIndex(data => data.name == config.name);\n\t\tif (oldIdx == -1) {\n\t\t\tif (config.isPreset || this.presets.length == 0) {\n\t\t\t\tthis.savedDataDiv.appendChild(newData.elem);\n\t\t\t} else {\n\t\t\t\tthis.savedDataDiv.insertBefore(newData.elem, this.presets[0].elem);\n\t\t\t}\n\t\t\tdataArr.push(newData);\n\t\t} else {\n\t\t\tthis.savedDataDiv.replaceChild(newData.elem, dataArr[oldIdx].elem);\n\t\t\tdataArr[oldIdx] = newData;\n\t\t}\n\t}\n\n\tprivate makeSavedData(config: SavedDataConfig<ModObject, T>): SavedData<ModObject, T> {\n\t\tconst dataElem = document.createElement('div');\n\t\tdataElem.classList.add('saved-data-set-chip');\n\t\tdataElem.innerHTML = `\n    <span class=\"saved-data-set-name\">${config.name}</span>\n    <span class=\"saved-data-set-tooltip fa fa-info-circle\"></span>\n    <span class=\"saved-data-set-delete fa fa-times\"></span>\n    `;\n\n\t\tdataElem.addEventListener('click', event => {\n\t\t\tthis.config.setData(TypedEvent.nextEventID(), this.modObject, config.data);\n\t\t\tthis.saveInput.value = config.name;\n\t\t});\n\n\t\tif (config.isPreset) {\n\t\t\tdataElem.classList.add('saved-data-preset');\n\t\t} else {\n\t\t\tconst deleteButton = dataElem.getElementsByClassName('saved-data-set-delete')[0] as HTMLElement;\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst shouldDelete = confirm(`Delete saved ${this.config.label} '${config.name}'?`);\n\t\t\t\tif (!shouldDelete)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst idx = this.userData.findIndex(data => data.name == config.name);\n\t\t\t\tthis.userData[idx].elem.remove();\n\t\t\t\tthis.userData.splice(idx, 1);\n\t\t\t\tthis.saveUserData();\n\t\t\t});\n\t\t}\n\n\t\tif (config.tooltip) {\n\t\t\tdataElem.classList.add('saved-data-has-tooltip');\n\t\t\ttippy(dataElem.getElementsByClassName('saved-data-set-tooltip')[0], {\n\t\t\t\t'content': config.tooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst checkActive = () => {\n\t\t\tif (this.config.equals(config.data, this.config.getData(this.modObject))) {\n\t\t\t\tdataElem.classList.add('active');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('active');\n\t\t\t}\n\n\t\t\tif (config.enableWhen && !config.enableWhen(this.modObject)) {\n\t\t\t\tdataElem.classList.add('disabled');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('disabled');\n\t\t\t}\n\t\t};\n\n\t\tcheckActive();\n\t\tthis.config.changeEmitters.forEach(emitter => emitter.on(checkActive));\n\n\t\treturn {\n\t\t\tname: config.name,\n\t\t\tdata: config.data,\n\t\t\telem: dataElem,\n\t\t\tenableWhen: config.enableWhen,\n\t\t};\n\t}\n\n\t// Save data to window.localStorage.\n\tprivate saveUserData() {\n\t\tconst userData: Record<string, Object> = {};\n\t\tthis.userData.forEach(savedData => {\n\t\t\tuserData[savedData.name] = this.config.toJson(savedData.data);\n\t\t});\n\n\t\twindow.localStorage.setItem(this.config.storageKey, JSON.stringify(userData));\n\t}\n\n\t// Load data from window.localStorage.\n\tloadUserData() {\n\t\tconst dataStr = window.localStorage.getItem(this.config.storageKey);\n\t\tif (!dataStr)\n\t\t\treturn;\n\n\t\tlet jsonData;\n\t\ttry {\n\t\t\tjsonData = JSON.parse(dataStr);\n\t\t} catch (e) {\n\t\t\tconsole.warn('Invalid json for local storage value: ' + dataStr);\n\t\t}\n\n\t\tfor (let name in jsonData) {\n\t\t\ttry {\n\t\t\t\tthis.addSavedData({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdata: this.config.fromJson(jsonData[name]),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('Failed parsing saved data: ' + jsonData[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent user input from creating / deleting saved data.\n\tfreeze() {\n\t\tthis.frozen = true;\n\t\tthis.rootElem.classList.add('frozen');\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { CustomRotation } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SpecOptions, SpecRotation } from '../proto_utils/utils.js';\n\nimport { CustomRotationPickerConfig } from './custom_rotation_picker.js';\nimport { IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { EnumPickerConfig, EnumValueConfig } from './enum_picker.js';\nimport { BooleanPickerConfig } from './boolean_picker.js';\nimport { NumberPickerConfig } from './number_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\n\nexport function makeMultiIconInput<ModObject>(inputs: Array<IconPickerConfig<ModObject, any>>, label: string, numColumns?: number): MultiIconPickerConfig<ModObject> {\n\treturn {\n\t\tinputs: inputs,\n\t\tnumColumns: numColumns || 1,\n\t\temptyColor: 'grey',\n\t\tlabel: label,\n\t};\n}\n\n// Extend this to add player callbacks as optional config fields.\ninterface BasePlayerConfig<SpecType extends Spec, T> {\n\tgetValue?: (player: Player<SpecType>) => T,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newVal: T) => void,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    BOOLEAN\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedBooleanPickerConfig<ModObject> extends BooleanPickerConfig<ModObject> {\n\ttype: 'boolean',\n}\n\ninterface WrappedBooleanInputConfig<SpecType extends Spec, ModObject> extends BooleanPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedBooleanInput<SpecType extends Spec, ModObject>(config: WrappedBooleanInputConfig<SpecType, ModObject>): TypedBooleanPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'boolean',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: boolean) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerBooleanInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, boolean> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeSpecOptionsBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecOptions<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecRotation<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    NUMBER\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedNumberPickerConfig<ModObject> extends NumberPickerConfig<ModObject> {\n\ttype: 'number',\n}\n\ninterface WrappedNumberInputConfig<SpecType extends Spec, ModObject> extends NumberPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedNumberInput<SpecType extends Spec, ModObject>(config: WrappedNumberInputConfig<SpecType, ModObject>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'number',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerNumberInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, number> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tpercent?: boolean,\n\tfloat?: boolean,\n\tpositive?: boolean,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\nexport function makeSpecOptionsNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecOptions<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal/100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\nexport function makeRotationNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecRotation<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal/100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    ENUM\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedEnumPickerConfig<ModObject> extends EnumPickerConfig<ModObject> {\n\ttype: 'enum',\n}\n\ninterface WrappedEnumInputConfig<SpecType extends Spec, ModObject> extends EnumPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumInput<SpecType extends Spec, ModObject>(config: WrappedEnumInputConfig<SpecType, ModObject>): TypedEnumPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'enum',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\n\nexport interface PlayerEnumInputConfig<SpecType extends Spec, Message> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tvalues: Array<EnumValueConfig>;\n\tgetValue?: (player: Player<SpecType>) => number,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: number) => void,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeSpecOptionsEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecOptions<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeRotationEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecRotation<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                  ICON\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedIconPickerConfig<ModObject, T> extends IconPickerConfig<ModObject, T> {\n\ttype: 'icon',\n}\n\ninterface WrappedIconInputConfig<SpecType extends Spec, ModObject, T> extends IconPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedIconInput<SpecType extends Spec, ModObject, T>(config: WrappedIconInputConfig<SpecType, ModObject, T>): TypedIconPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'icon',\n\t\tid: config.id,\n\t\tstates: config.states,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\ninterface WrappedTypedInputConfig<Message, ModObject, T> {\n\tgetModObject: (player: Player<any>) => ModObject,\n\tgetValue: (modObj: ModObject) => Message,\n\tsetValue: (eventID: EventID, modObj: ModObject, messageVal: Message) => void,\n\tchangeEmitter: (modObj: ModObject) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n\n\tgetFieldValue?: (modObj: ModObject) => T,\n\tsetFieldValue?: (eventID: EventID, modObj: ModObject, newValue: T) => void,\n}\n\nexport function makeBooleanIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, boolean>, id: ActionId, fieldName: keyof Message, value?: number): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeWrappedIconInput<SpecType, ModObject, boolean>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 2,\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: config.getFieldValue || ((modObj: ModObject) => value ? (config.getValue(modObj)[fieldName] as unknown as number) == value : (config.getValue(modObj)[fieldName] as unknown as boolean)),\n\t\tsetValue: config.setFieldValue || ((eventID: EventID, modObj: ModObject, newValue: boolean) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (value) {\n\t\t\t\tif (newValue) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = value;\n\t\t\t\t} else if ((newMessage[fieldName] as unknown as number) == value) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t(newMessage[fieldName] as unknown as boolean) = newValue;\n\t\t\t}\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t}),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface PlayerBooleanIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tid: ActionId,\n\tvalue?: number,\n}\nexport function makeSpecOptionsBooleanIconInput<SpecType extends Spec>(config: PlayerBooleanIconInputConfig<SpecType, SpecOptions<SpecType>, boolean>): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeBooleanIconInput<SpecType, SpecOptions<SpecType>, Player<SpecType>>({\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: (player: Player<SpecType>) => player.getSpecOptions(),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecOptions<SpecType>) => player.setSpecOptions(eventID, newVal),\n\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t\tgetFieldValue: config.getValue,\n\t\tsetFieldValue: config.setValue,\n\t}, config.id, config.fieldName, config.value);\n}\n\nfunction makeNumberIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn makeWrappedIconInput<SpecType, ModObject, number>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 0, // Must be assigned externally.\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: (modObj: ModObject) => config.getValue(modObj)[fieldName] as unknown as number,\n\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: number) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (multiplier) {\n\t\t\t\tconst sign = newValue - (newMessage[fieldName] as unknown as number)\n\t\t\t\tnewValue += (multiplier-1)*sign\n\t\t\t}\n\t\t\tif (newValue < 0) {\n\t\t\t\tnewValue = 0\n\t\t\t}\n\t\t\t(newMessage[fieldName] as unknown as number) = newValue;\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t},\n\t});\n}\nexport function makeTristateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 3;\n\tinput.improvedId = impId;\n\treturn input;\n}\nexport function makeQuadstateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 4;\n\tinput.improvedId = impId;\n\tinput.improvedId2 = impId2;\n\treturn input;\n}\nexport function makeMultistateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, numStates: number, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName, multiplier);\n\tinput.states = numStates;\n\treturn input;\n}\n\n\nexport interface TypedIconEnumPickerConfig<ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\ttype: 'iconEnum',\n}\n\ninterface WrappedEnumIconInputConfig<SpecType extends Spec, ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumIconInput<SpecType extends Spec, ModObject, T>(config: WrappedEnumIconInputConfig<SpecType, ModObject, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'iconEnum',\n\t\tnumColumns: config.numColumns,\n\t\tvalues: config.values.map(value => {\n\t\t\tif (value.showWhen) {\n\t\t\t\tconst showWhen = value.showWhen;\n\t\t\t\tvalue.showWhen = ((player: Player<SpecType>) => showWhen(getModObject(player))) as any;\n\t\t\t}\n\t\t\treturn value as unknown as IconEnumValueConfig<Player<SpecType>, T>;\n\t\t}),\n\t\tequals: config.equals,\n\t\tzeroValue: config.zeroValue,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\nexport interface PlayerEnumIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\tnumColumns?: number,\n}\nexport function makeSpecOptionsEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecOptions<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecRotation<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface TypedCustomRotationPickerConfig<SpecType extends Spec, T> extends CustomRotationPickerConfig<SpecType, T> {\n\ttype: 'customRotation',\n}\n\ninterface WrappedCustomRotationInputConfig<SpecType extends Spec, T> {\n\tfieldName: keyof SpecRotation<SpecType>,\n\tgetValue?: (player: Player<SpecType>) => CustomRotation,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeCustomRotationInput<SpecType extends Spec, T>(config: WrappedCustomRotationInputConfig<SpecType, T>): TypedCustomRotationPickerConfig<SpecType, T> {\n\treturn {\n\t\ttype: 'customRotation',\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => (player.getRotation()[config.fieldName] as unknown as CustomRotation) || CustomRotation.create()),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => {\n\t\t\tconst rotation = player.getRotation();\n\t\t\t(rotation[config.fieldName] as unknown as CustomRotation) = newValue;\n\t\t\tplayer.setRotation(eventID, rotation);\n\t\t}),\n\t\tshowWhen: config.showWhen,\n\t\tnumColumns: config.numColumns,\n\t\tvalues: config.values,\n\t}\n}\n","import { Spec } from '../proto/common.js';\nimport { HunterPetTalents, Hunter_Options_PetType as PetType } from '../proto/hunter.js';\nimport { Player } from '../player.js';\nimport { Component } from '../components/component.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { SavedDataManager } from '../components/saved_data_manager.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ActionId } from '../proto_utils/action_id.js';\n\nimport { TalentsConfig, TalentsPicker, newTalentsConfig } from './talents_picker.js';\nimport { protoToTalentString, talentStringToProto } from './factory.js';\n\nimport * as InputHelpers from '../components/input_helpers.js';\n\nexport function makePetTypeInputConfig(includeLabel: boolean): InputHelpers.TypedIconEnumPickerConfig<Player<Spec.SpecHunter>, PetType> {\n\treturn InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecHunter, PetType>({\n\t\tfieldName: 'petType',\n\t\tnumColumns: 5,\n\t\t//label: includeLabel ? 'Pet' : '',\n\t\tvalues: [\n\t\t\t{ color: 'grey', value: PetType.PetNone },\n\t\t\t{ actionId: ActionId.fromPetName('Bat'), tooltip: 'Bat', value: PetType.Bat },\n\t\t\t{ actionId: ActionId.fromPetName('Bear'), tooltip: 'Bear', value: PetType.Bear },\n\t\t\t{ actionId: ActionId.fromPetName('Bird of Prey'), tooltip: 'Bird of Prey', value: PetType.BirdOfPrey },\n\t\t\t{ actionId: ActionId.fromPetName('Boar'), tooltip: 'Boar', value: PetType.Boar },\n\t\t\t{ actionId: ActionId.fromPetName('Carrion Bird'), tooltip: 'Carrion Bird', value: PetType.CarrionBird },\n\t\t\t{ actionId: ActionId.fromPetName('Cat'), tooltip: 'Cat', value: PetType.Cat },\n\t\t\t{ actionId: ActionId.fromPetName('Chimaera'), tooltip: 'Chimaera (Exotic)', value: PetType.Chimaera },\n\t\t\t{ actionId: ActionId.fromPetName('Core Hound'), tooltip: 'Core Hound (Exotic)', value: PetType.CoreHound },\n\t\t\t{ actionId: ActionId.fromPetName('Crab'), tooltip: 'Crab', value: PetType.Crab },\n\t\t\t{ actionId: ActionId.fromPetName('Crocolisk'), tooltip: 'Crocolisk', value: PetType.Crocolisk },\n\t\t\t{ actionId: ActionId.fromPetName('Devilsaur'), tooltip: 'Devilsaur (Exotic)', value: PetType.Devilsaur },\n\t\t\t{ actionId: ActionId.fromPetName('Dragonhawk'), tooltip: 'Dragonhawk', value: PetType.Dragonhawk },\n\t\t\t{ actionId: ActionId.fromPetName('Gorilla'), tooltip: 'Gorilla', value: PetType.Gorilla },\n\t\t\t{ actionId: ActionId.fromPetName('Hyena'), tooltip: 'Hyena', value: PetType.Hyena },\n\t\t\t{ actionId: ActionId.fromPetName('Moth'), tooltip: 'Moth', value: PetType.Moth },\n\t\t\t{ actionId: ActionId.fromPetName('Nether Ray'), tooltip: 'Nether Ray', value: PetType.NetherRay },\n\t\t\t{ actionId: ActionId.fromPetName('Raptor'), tooltip: 'Raptor', value: PetType.Raptor },\n\t\t\t{ actionId: ActionId.fromPetName('Ravager'), tooltip: 'Ravager', value: PetType.Ravager },\n\t\t\t{ actionId: ActionId.fromPetName('Rhino'), tooltip: 'Rhino', value: PetType.Rhino },\n\t\t\t{ actionId: ActionId.fromPetName('Scorpid'), tooltip: 'Scorpid', value: PetType.Scorpid },\n\t\t\t{ actionId: ActionId.fromPetName('Serpent'), tooltip: 'Serpent', value: PetType.Serpent },\n\t\t\t{ actionId: ActionId.fromPetName('Silithid'), tooltip: 'Silithid (Exotic)', value: PetType.Silithid },\n\t\t\t{ actionId: ActionId.fromPetName('Spider'), tooltip: 'Spider', value: PetType.Spider },\n\t\t\t{ actionId: ActionId.fromPetName('Spirit Beast'), tooltip: 'Spirit Beast (Exotic)', value: PetType.SpiritBeast },\n\t\t\t{ actionId: ActionId.fromPetName('Spore Bat'), tooltip: 'Spore Bat', value: PetType.SporeBat },\n\t\t\t{ actionId: ActionId.fromPetName('Tallstrider'), tooltip: 'Tallstrider', value: PetType.Tallstrider },\n\t\t\t{ actionId: ActionId.fromPetName('Turtle'), tooltip: 'Turtle', value: PetType.Turtle },\n\t\t\t{ actionId: ActionId.fromPetName('Warp Stalker'), tooltip: 'Warp Stalker', value: PetType.WarpStalker },\n\t\t\t{ actionId: ActionId.fromPetName('Wasp'), tooltip: 'Wasp', value: PetType.Wasp },\n\t\t\t{ actionId: ActionId.fromPetName('Wind Serpent'), tooltip: 'Wind Serpent', value: PetType.WindSerpent },\n\t\t\t{ actionId: ActionId.fromPetName('Wolf'), tooltip: 'Wolf', value: PetType.Wolf },\n\t\t\t{ actionId: ActionId.fromPetName('Worm'), tooltip: 'Worm (Exotic)', value: PetType.Worm },\n\t\t],\n\t});\n}\n\nenum PetCategory {\n    Cunning,\n    Ferocity,\n    Tenacity,\n}\n\nconst petCategories: Record<PetType, PetCategory> = {\n    [PetType.PetNone]: PetCategory.Ferocity,\n    [PetType.Bat]: PetCategory.Cunning,\n    [PetType.Bear]: PetCategory.Tenacity,\n    [PetType.BirdOfPrey]: PetCategory.Cunning,\n    [PetType.Boar]: PetCategory.Tenacity,\n    [PetType.CarrionBird]: PetCategory.Ferocity,\n    [PetType.Cat]: PetCategory.Ferocity,\n    [PetType.Chimaera]: PetCategory.Cunning,\n    [PetType.CoreHound]: PetCategory.Ferocity,\n    [PetType.Crab]: PetCategory.Tenacity,\n    [PetType.Crocolisk]: PetCategory.Tenacity,\n    [PetType.Devilsaur]: PetCategory.Ferocity,\n    [PetType.Dragonhawk]: PetCategory.Cunning,\n    [PetType.Gorilla]: PetCategory.Tenacity,\n    [PetType.Hyena]: PetCategory.Ferocity,\n    [PetType.Moth]: PetCategory.Ferocity,\n    [PetType.NetherRay]: PetCategory.Cunning,\n    [PetType.Raptor]: PetCategory.Ferocity,\n    [PetType.Ravager]: PetCategory.Cunning,\n    [PetType.Rhino]: PetCategory.Tenacity,\n    [PetType.Scorpid]: PetCategory.Tenacity,\n    [PetType.Serpent]: PetCategory.Cunning,\n    [PetType.Silithid]: PetCategory.Cunning,\n    [PetType.Spider]: PetCategory.Cunning,\n    [PetType.SpiritBeast]: PetCategory.Ferocity,\n    [PetType.SporeBat]: PetCategory.Cunning,\n    [PetType.Tallstrider]: PetCategory.Ferocity,\n    [PetType.Turtle]: PetCategory.Tenacity,\n    [PetType.WarpStalker]: PetCategory.Tenacity,\n    [PetType.Wasp]: PetCategory.Ferocity,\n    [PetType.WindSerpent]: PetCategory.Cunning,\n    [PetType.Wolf]: PetCategory.Ferocity,\n    [PetType.Worm]: PetCategory.Tenacity,\n};\n\nconst categoryOrder = [PetCategory.Cunning, PetCategory.Ferocity, PetCategory.Tenacity];\nconst categoryClasses = ['cunning', 'ferocity', 'tenacity'];\n\nexport class HunterPetTalentsPicker extends Component {\n    private readonly player: Player<Spec.SpecHunter>;\n    private curCategory: PetCategory | null;\n    private curTalents: HunterPetTalents;\n\n    // Not saved to storage, just holds last-used values for this session.\n    private savedSets: Array<HunterPetTalents>;\n\n    constructor(parent: HTMLElement, player: Player<Spec.SpecHunter>) {\n        super(parent, 'hunter-pet-talents-picker');\n        this.player = player;\n\n        this.rootElem.innerHTML = `\n\t\t\t<div class=\"pet-talents-container\"></div>\n\t\t`;\n\n        this.curCategory = this.getCategoryFromPlayer();\n        this.curTalents = this.getPetTalentsFromPlayer();\n        this.savedSets = defaultTalents.slice();\n        this.savedSets[this.curCategory] = this.curTalents;\n        this.rootElem.classList.add(categoryClasses[this.curCategory]);\n\n        const talentsContainer = this.rootElem.getElementsByClassName('pet-talents-container')[0] as HTMLElement;\n\n        const pickers = categoryOrder.map((category, i) => {\n            const talentsConfig = petTalentsConfig[i];\n\n            const pickerContainer = document.createElement('div');\n            pickerContainer.classList.add('hunter-pet-talents-' + categoryClasses[i]);\n            talentsContainer.appendChild(pickerContainer);\n\n            const picker = new TalentsPicker(pickerContainer, player, {\n                trees: talentsConfig,\n                changedEvent: (player: Player<Spec.SpecHunter>) => player.specOptionsChangeEmitter,\n                getValue: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n                setValue: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n                    const options = player.getSpecOptions();\n                    options.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n                    player.setSpecOptions(eventID, options);\n\n                    this.savedSets[i] = options.petTalents;\n                    this.curTalents = options.petTalents;\n                },\n                pointsPerRow: 3,\n                maxPoints: 16,\n            });\n\n            const savedTalentsManager = new SavedDataManager<Player<Spec.SpecHunter>, string>(pickerContainer, this.player, {\n                presetsOnly: true,\n                label: 'Pet Talents',\n                storageKey: '__NEVER_USED__',\n                getData: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n                setData: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n                    const options = player.getSpecOptions();\n                    options.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n                    player.setSpecOptions(eventID, options);\n\n                    this.savedSets[i] = options.petTalents;\n                    this.curTalents = options.petTalents;\n                },\n                changeEmitters: [this.player.specOptionsChangeEmitter],\n                equals: (a: string, b: string) => a == b,\n                toJson: (a: string) => a,\n                fromJson: (obj: any) => '',\n            });\n            savedTalentsManager.addSavedData({\n                name: 'Default',\n                isPreset: true,\n                data: protoToTalentString(defaultTalents[i], talentsConfig),\n            });\n            savedTalentsManager.addSavedData({\n                name: 'BM',\n                isPreset: true,\n                data: protoToTalentString(defaultBMTalents[i], talentsConfig),\n            });\n\n            return picker;\n        });\n\n        player.specOptionsChangeEmitter.on(() => {\n            const petCategory = this.getCategoryFromPlayer();\n            const categoryIdx = categoryOrder.indexOf(petCategory);\n\n            if (petCategory != this.curCategory) {\n                this.curCategory = petCategory;\n                this.rootElem.classList.remove(...categoryClasses);\n                this.rootElem.classList.add(categoryClasses[categoryIdx]);\n\n                const curTalents = this.getPetTalentsFromPlayer();\n                if (!HunterPetTalents.equals(curTalents, this.curTalents)) {\n                    // If the current talents have also changed, this was probably a load so we shouldn't switch sets.\n                    this.curTalents = curTalents;\n                    this.savedSets[this.curCategory] = this.curTalents;\n                } else {\n                    // Revert to the talents from last time the user was editing this category.\n                    const options = this.player.getSpecOptions();\n                    options.petTalents = this.savedSets[this.curCategory];\n                    this.player.setSpecOptions(TypedEvent.nextEventID(), options);\n                    this.curTalents = options.petTalents;\n                }\n            }\n        });\n\n        const updateIsBM = () => {\n            const maxPoints = this.player.getTalents().beastMastery ? 20 : 16;\n            pickers.forEach(picker => picker.setMaxPoints(maxPoints));\n        };\n        player.talentsChangeEmitter.on(updateIsBM);\n        updateIsBM();\n    }\n\n    getPetTalentsFromPlayer(): HunterPetTalents {\n        return this.player.getSpecOptions().petTalents || HunterPetTalents.create();\n    }\n\n    getCategoryFromPlayer(): PetCategory {\n        const petType = this.player.getSpecOptions().petType;\n        return petCategories[petType];\n    }\n}\n\nexport function getPetTalentsConfig(petType: PetType): TalentsConfig<HunterPetTalents> {\n\tconst petCategory = petCategories[petType];\n\tconst categoryIdx = categoryOrder.indexOf(petCategory);\n\treturn petTalentsConfig[categoryIdx];\n}\n\nexport const cunningDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    dive: true,\n    boarsSpeed: true,\n    mobility: 2,\n    spikedCollar: 3,\n    cornered: 2,\n    feedingFrenzy: 2,\n    wolverineBite: true,\n    bullheaded: true,\n    wildHunt: 1,\n});\nexport const ferocityDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    dive: true,\n    spikedCollar: 3,\n    boarsSpeed: true,\n    cullingTheHerd: 3,\n    spidersBite: 3,\n    rabid: true,\n    callOfTheWild: true,\n    wildHunt: 1,\n});\nexport const tenacityDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    charge: true,\n    greatStamina: 3,\n    bloodOfTheRhino: 2,\n    guardDog: 2,\n    thunderstomp: true,\n    graceOfTheMantis: 2,\n    taunt: true,\n    roarOfSacrifice: true,\n    wildHunt: 1,\n});\nconst defaultTalents = [cunningDefault, ferocityDefault, tenacityDefault];\n\nexport const cunningBMDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    dive: true,\n    boarsSpeed: true,\n    mobility: 2,\n    spikedCollar: 3,\n    cornered: 2,\n    feedingFrenzy: 2,\n    wolverineBite: true,\n    bullheaded: true,\n    graceOfTheMantis: 2,\n    wildHunt: 2,\n    roarOfSacrifice: true,\n});\nexport const ferocityBMDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    dive: true,\n    bloodthirsty: 1,\n    spikedCollar: 3,\n    boarsSpeed: true,\n    cullingTheHerd: 3,\n    spidersBite: 3,\n    rabid: true,\n    callOfTheWild: true,\n    sharkAttack: 2,\n    wildHunt: 2,\n});\nexport const tenacityBMDefault: HunterPetTalents = HunterPetTalents.create({\n    cobraReflexes: 2,\n    charge: true,\n    greatStamina: 3,\n    spikedCollar: 3,\n    bloodOfTheRhino: 2,\n    guardDog: 2,\n    thunderstomp: true,\n    graceOfTheMantis: 2,\n    taunt: true,\n    roarOfSacrifice: true,\n    wildHunt: 2,\n});\nconst defaultBMTalents = [cunningBMDefault, ferocityBMDefault, tenacityBMDefault];\n\nconst cunningPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n    {\n        name: 'Cunning',\n        backgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_3.jpg?85',\n        talents: [\n            {\n                fieldName: 'cobraReflexes',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 0,\n                },\n                spellIds: [61682],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'dive',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 1,\n                },\n                spellIds: [23145],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'greatStamina',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 2,\n                },\n                spellIds: [61686],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'naturalArmor',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 3,\n                },\n                spellIds: [61689],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'boarsSpeed',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 0,\n                },\n                spellIds: [19596],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'mobility',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 1,\n                },\n                prereqLocation: {\n                    rowIdx: 0,\n                    colIdx: 1,\n                },\n                spellIds: [53554],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'owlsFocus',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 2,\n                },\n                spellIds: [53514, 53516],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'spikedCollar',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 3,\n                },\n                spellIds: [53182],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'cullingTheHerd',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 0,\n                },\n                spellIds: [61680, 61681, 52858],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'lionhearted',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 1,\n                },\n                spellIds: [53409, 53411],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'carrionFeeder',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 2,\n                },\n                spellIds: [54044],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'greatResistance',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 1,\n                },\n                spellIds: [53427, 53429],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'cornered',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [52234, 53497],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'feedingFrenzy',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 3,\n                },\n                prereqLocation: {\n                    rowIdx: 1,\n                    colIdx: 3,\n                },\n                spellIds: [53511],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'wolverineBite',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 0,\n                },\n                spellIds: [53508],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'roarOfRecovery',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 1,\n                },\n                spellIds: [53517],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'bullheaded',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [53490],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'graceOfTheMantis',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 3,\n                },\n                spellIds: [53450],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'wildHunt',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 0,\n                },\n                prereqLocation: {\n                    rowIdx: 4,\n                    colIdx: 0,\n                },\n                spellIds: [62758, 62762],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'roarOfSacrifice',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 3,\n                },\n                prereqLocation: {\n                    rowIdx: 4,\n                    colIdx: 3,\n                },\n                spellIds: [53480],\n                maxPoints: 1,\n            },\n        ],\n    },\n]);\nconst ferocityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n    {\n        name: 'Ferocity',\n        backgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_1.jpg?85',\n        talents: [\n            {\n                fieldName: 'cobraReflexes',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 0,\n                },\n                spellIds: [61682],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'dive',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 1,\n                },\n                spellIds: [23145],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'greatStamina',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 2,\n                },\n                spellIds: [61686],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'naturalArmor',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 3,\n                },\n                spellIds: [61689],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'improvedCower',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 0,\n                },\n                spellIds: [53180],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'bloodthirsty',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 1,\n                },\n                spellIds: [53186],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'spikedCollar',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 2,\n                },\n                spellIds: [53182],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'boarsSpeed',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 3,\n                },\n                spellIds: [19596],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'cullingTheHerd',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 0,\n                },\n                spellIds: [61680, 61681, 52858],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'lionhearted',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 2,\n                },\n                spellIds: [53409, 53411],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'charge',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 3,\n                },\n                spellIds: [61685],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'heartOfThePheonix',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 1,\n                },\n                prereqLocation: {\n                    rowIdx: 1,\n                    colIdx: 1,\n                },\n                spellIds: [55709],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'spidersBite',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [53203],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'greatResistance',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 3,\n                },\n                spellIds: [53427, 53429],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'rabid',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 0,\n                },\n                spellIds: [53401],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'lickYourWounds',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 1,\n                },\n                prereqLocation: {\n                    rowIdx: 3,\n                    colIdx: 1,\n                },\n                spellIds: [53426],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'callOfTheWild',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [53434],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'sharkAttack',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 0,\n                },\n                spellIds: [62759],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'wildHunt',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 4,\n                    colIdx: 2,\n                },\n                spellIds: [62758, 62762],\n                maxPoints: 2,\n            },\n        ],\n    },\n]);\nconst tenacityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n    {\n        name: 'Tenacity',\n        backgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_2.jpg?85',\n        talents: [\n            {\n                fieldName: 'cobraReflexes',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 0,\n                },\n                spellIds: [61682],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'charge',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 1,\n                },\n                spellIds: [61685],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'greatStamina',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 2,\n                },\n                spellIds: [61686],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'naturalArmor',\n                location: {\n                    rowIdx: 0,\n                    colIdx: 3,\n                },\n                spellIds: [61689],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'spikedCollar',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 0,\n                },\n                spellIds: [53182],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'boarsSpeed',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 1,\n                },\n                spellIds: [19596],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'bloodOfTheRhino',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 0,\n                    colIdx: 2,\n                },\n                spellIds: [53481],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'petBarding',\n                location: {\n                    rowIdx: 1,\n                    colIdx: 3,\n                },\n                prereqLocation: {\n                    rowIdx: 0,\n                    colIdx: 3,\n                },\n                spellIds: [53175],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'cullingTheHerd',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 0,\n                },\n                spellIds: [61680, 61681, 52858],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'guardDog',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 1,\n                },\n                spellIds: [53178],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'lionhearted',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 2,\n                },\n                spellIds: [53409, 53411],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'thunderstomp',\n                location: {\n                    rowIdx: 2,\n                    colIdx: 3,\n                },\n                spellIds: [63900],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'graceOfTheMantis',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [53450],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'greatResistance',\n                location: {\n                    rowIdx: 3,\n                    colIdx: 3,\n                },\n                spellIds: [53427, 53429],\n                maxPoints: 3,\n            },\n            {\n                fieldName: 'lastStand',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 0,\n                },\n                spellIds: [53478],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'taunt',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 1,\n                },\n                prereqLocation: {\n                    rowIdx: 2,\n                    colIdx: 1,\n                },\n                spellIds: [53477],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'roarOfSacrifice',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 3,\n                    colIdx: 2,\n                },\n                spellIds: [53480],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'intervene',\n                location: {\n                    rowIdx: 4,\n                    colIdx: 3,\n                },\n                spellIds: [53476],\n                maxPoints: 1,\n            },\n            {\n                fieldName: 'silverback',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 1,\n                },\n                spellIds: [62764],\n                maxPoints: 2,\n            },\n            {\n                fieldName: 'wildHunt',\n                location: {\n                    rowIdx: 5,\n                    colIdx: 2,\n                },\n                prereqLocation: {\n                    rowIdx: 4,\n                    colIdx: 2,\n                },\n                spellIds: [62758, 62762],\n                maxPoints: 2,\n            },\n        ],\n    },\n]);\n\nconst petTalentsConfig = [\n    cunningPetTalentsConfig,\n    ferocityPetTalentsConfig,\n    tenacityPetTalentsConfig,\n];\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Input, InputConfig } from './input.js';\n\n// Data for creating an icon-based input component.\n// \n// E.g. one of these for arcane brilliance, another for kings, etc.\n// ModObject is the object being modified (Sim, Player, or Target).\n// ValueType is either number or boolean.\nexport interface IconPickerConfig<ModObject, ValueType> extends InputConfig<ModObject, ValueType> {\n\tid: ActionId;\n\n\t// The number of possible 'states' this icon can have. Most inputs will use 2\n\t// for a bi-state icon (on or off). 0 indicates an unlimited number of states.\n\tstates: number;\n\n\t// Only used if states >= 3.\n\timprovedId?: ActionId;\n\n\t// Only used if states >= 4.\n\timprovedId2?: ActionId;\n};\n\n// Icon-based UI for picking buffs / consumes / etc\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconPicker<ModObject, ValueType> extends Input<ModObject, ValueType> {\n\tprivate readonly config: IconPickerConfig<ModObject, ValueType>;\n\n\tprivate readonly rootAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor2: HTMLAnchorElement;\n\tprivate readonly counterElem: HTMLElement;\n\n\tprivate currentValue: number;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconPickerConfig<ModObject, ValueType>) {\n\t\tsuper(parent, 'icon-input-root', modObj, config);\n\t\tthis.config = config;\n\t\tthis.currentValue = 0;\n\n\t\tthis.rootAnchor = document.createElement('a');\n\t\tthis.rootAnchor.classList.add('icon-input');\n\t\tthis.rootAnchor.target = '_blank';\n\t\tthis.rootElem.appendChild(this.rootAnchor);\n\n\t\tconst useImprovedIcons = Boolean(this.config.improvedId);\n\t\tif (useImprovedIcons) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons');\n\t\t}\n\t\tif (this.config.improvedId2) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons2');\n\t\t}\n\t\tif (!useImprovedIcons && this.config.states > 2) {\n\t\t\tthis.rootAnchor.classList.add('use-counter');\n\t\t}\n\n\t\tconst levelContainer = document.createElement('div');\n\t\tlevelContainer.classList.add('icon-input-level-container');\n\t\tthis.rootAnchor.appendChild(levelContainer);\n\t\tlevelContainer.innerHTML = `\n      <a class=\"icon-input-improved icon-input-improved1\"></a>\n      <a class=\"icon-input-improved icon-input-improved2\"></a>\n      <span class=\"icon-input-counter\"></span>\n    `;\n\n\t\tthis.improvedAnchor = this.rootAnchor.getElementsByClassName('icon-input-improved1')[0] as HTMLAnchorElement;\n\t\tthis.improvedAnchor2 = this.rootAnchor.getElementsByClassName('icon-input-improved2')[0] as HTMLAnchorElement;\n\t\tthis.counterElem = this.rootAnchor.getElementsByClassName('icon-input-counter')[0] as HTMLElement;\n\n\t\tthis.config.id.fillAndSet(this.rootAnchor, true, true);\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tthis.config.improvedId.fillAndSet(this.improvedAnchor, true, true);\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tthis.config.improvedId2.fillAndSet(this.improvedAnchor2, true, true);\n\t\t}\n\n\t\tthis.init();\n\n\t\tthis.rootAnchor.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\n\t\t\tif (rightClick) {\n\t\t\t\tif (this.currentValue > 0) {\n\t\t\t\t\tthis.currentValue--;\n\t\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.config.states == 0 || (this.currentValue + 1) < this.config.states) {\n\t\t\t\t\tthis.currentValue++;\n\t\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.rootAnchor.addEventListener('touchstart', event => {\n\t\t\tif (this.config.states == 0 || (this.currentValue + 1) < this.config.states) {\n\t\t\t\tthis.currentValue++;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t} else if (this.currentValue > 0) { // roll over\n\t\t\t\tthis.currentValue = 0;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootAnchor;\n\t}\n\n\tgetInputValue(): ValueType {\n\t\tif (this.config.states == 2) {\n\t\t\treturn Boolean(this.currentValue) as unknown as ValueType;\n\t\t} else {\n\t\t\treturn this.currentValue as unknown as ValueType;\n\t\t}\n\t}\n\n\t// Returns the ActionId of the currently selected value, or null if none selected.\n\tgetActionId(): ActionId | null {\n\t\t\n\t\t// Go directly to source because during event propogation \n\t\t//  the internal `this.currentValue` may not yet have been updated.\n\t\tconst v = Number(this.config.getValue(this.modObject));\n\t\tif (v == 0) {\n\t\t\treturn null;\n\t\t} else if (v == 1) {\n\t\t\treturn this.config.id;\n\t\t} else if (v == 2 && this.config.improvedId) {\n\t\t\treturn this.config.improvedId;\n\t\t} else if (v == 3 && this.config.improvedId2) {\n\t\t\treturn this.config.improvedId2;\n\t\t} else {\n\t\t\treturn this.config.id;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: ValueType) {\n\t\tthis.currentValue = Number(newValue);\n\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.rootAnchor.classList.add('active');\n\t\t\tthis.counterElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.rootAnchor.classList.remove('active');\n\t\t\tthis.counterElem.classList.remove('active');\n\t\t}\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tif (this.currentValue > 1) {\n\t\t\t\tthis.improvedAnchor.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor.classList.remove('active');\n\t\t\t}\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tif (this.currentValue > 2) {\n\t\t\t\tthis.improvedAnchor2.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor2.classList.remove('active');\n\t\t\t}\n\t\t}\n\n\t\tif (!this.config.improvedId && (this.config.states > 3 || this.config.states == 0)) {\n\t\t\tthis.counterElem.textContent = String(this.currentValue);\n\t\t}\n\t}\n}\n","import { SimUI } from '../sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\n\nexport class LogRunner extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent, 'log-runner-root');\n\n\t\tconst controlBar = document.createElement('div');\n\t\tcontrolBar.classList.add('log-runner-control-bar');\n\t\tthis.rootElem.appendChild(controlBar);\n\n\t\tconst simButton = document.createElement('button');\n\t\tsimButton.classList.add('log-runner-button', 'sim-button');\n\t\tsimButton.textContent = 'SIM 1 ITERATION';\n\t\tcontrolBar.appendChild(simButton);\n\n\t\tconst logsDiv = document.createElement('div');\n\t\tlogsDiv.classList.add('log-runner-logs');\n\t\tthis.rootElem.appendChild(logsDiv);\n\n\t\tsimButton.addEventListener('click', async () => simUI.runSimOnce());\n\n\t\tsimUI.sim.simResultEmitter.on((eventID, simResult) => {\n\t\t\tconst logs = simResult.logs;\n\t\t\tlogsDiv.textContent = '';\n\t\t\tlogs\n\t\t\t\t.filter(log => {\n\t\t\t\t\treturn !log.isCastCompleted();\n\t\t\t\t})\n\t\t\t\t.forEach(log => {\n\t\t\t\t\tconst lineElem = document.createElement('span');\n\t\t\t\t\tlineElem.textContent = log.toString();\n\t\t\t\t\tlogsDiv.appendChild(lineElem);\n\t\t\t\t});\n\t\t});\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SimUI } from '../sim_ui.js';\n\nimport { Component } from './component.js';\nimport { IconPicker, IconPickerConfig } from './icon_picker.js';\nimport { Input, InputConfig } from './input.js';\n\nexport interface MultiIconPickerItemConfig<ModObject> extends IconPickerConfig<ModObject, any> {\n}\n\nexport interface MultiIconPickerConfig<ModObject> {\n\tinputs: Array<MultiIconPickerItemConfig<ModObject>>,\n\temptyColor: string,\n\tnumColumns: number,\n\tlabel?: string,\n\tcategoryId?: ActionId,\n}\n\n// Icon-based UI for a dropdown with multiple icon pickers.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class MultiIconPicker<ModObject> extends Component {\n\tprivate readonly config: MultiIconPickerConfig<ModObject>;\n\n\tprivate currentValue: ActionId | null;\n\n\tprivate readonly dropdownRootElem: HTMLElement;\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly pickers: Array<IconPicker<ModObject, any>>;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: MultiIconPickerConfig<ModObject>, simUI: SimUI) {\n\t\tsuper(parent, 'multi-icon-picker-root');\n\t\tthis.config = config;\n\t\tthis.currentValue = null;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<span class=\"multi-icon-picker-label\"></span>\n\t\t\t<div class=\"dropdown-root multi-icon-picker-dropdown-root\">\n\t\t\t\t<a class=\"dropdown-button multi-icon-picker-button\"></a>\n\t\t\t\t<div class=\"dropdown-panel multi-icon-picker-dropdown\"></div>\n\t\t\t</div>\n    `;\n\t\tthis.dropdownRootElem = this.rootElem.getElementsByClassName('multi-icon-picker-dropdown-root')[0] as HTMLElement;\n\n\t\tconst labelElem = this.rootElem.getElementsByClassName('multi-icon-picker-label')[0] as HTMLElement;\n\t\tif (config.label) {\n\t\t\tlabelElem.textContent = config.label;\n\t\t} else {\n\t\t\tlabelElem.remove();\n\t\t}\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('multi-icon-picker-button')[0] as HTMLAnchorElement;\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName('multi-icon-picker-dropdown')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchstart', event => {\n\t\t\tif (dropdownElem.style.display == \"block\") {\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tdropdownElem.style.display = \"block\";\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tdropdownElem.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\n\t\tthis.pickers = config.inputs.map((pickerConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('div');\n\t\t\toptionContainer.classList.add('dropdown-option-container');\n\t\t\toptionContainer.classList.add('multi-icon-dropdown-container');\n\t\t\tdropdownElem.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('dropdown-option', 'multi-icon-picker-option');\n\t\t\toptionContainer.appendChild(option);\n\t\t\treturn new IconPicker(option, modObj, pickerConfig);\n\t\t});\n\t\tsimUI.sim.waitForInit().then(() => this.updateButtonImage());\n\t\tsimUI.changeEmitter.on(()=>this.updateButtonImage());\n\t}\n\n\tprivate updateButtonImage() {\n\t\tthis.currentValue = this.getMaxValue();\n\n\t\tif (this.currentValue) {\n\t\t\tthis.dropdownRootElem.classList.add('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.currentValue.fillAndSet(this.buttonElem, false, true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.dropdownRootElem.classList.remove('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.buttonElem.style.backgroundImage = '';\n\t\t\t}\n\t\t\tthis.buttonElem.style.backgroundColor = this.config.emptyColor;\n\t\t\tthis.buttonElem.removeAttribute(\"href\");\n\t\t}\n\t}\n\n\tprivate getMaxValue(): ActionId | null {\n\t\treturn this.pickers.map(picker => picker.getActionId()).filter(id => id != null)[0] || null;\n\t}\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { SimUI } from '../sim_ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Sim } from '../sim.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace, statNames } from '../proto_utils/names.js';\nimport { talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class SettingsMenu extends Popup {\n\tprivate readonly simUI: SimUI;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent);\n\t\tthis.rootElem.classList.add('settings-menu');\n\t\tthis.simUI = simUI;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"settings-menu-title\">\n\t\t\t\t<span>OPTIONS</span>\n\t\t\t</div>\n\t\t\t<div class=\"settings-menu-content\">\n\t\t\t\t<div class=\"settings-menu-content-left\">\n\t\t\t\t\t<button class=\"restore-defaults-button sim-button\">RESTORE DEFAULTS</button>\n\t\t\t\t\t<div class=\"settings-menu-section\">\n\t\t\t\t\t\t<div class=\"fixed-rng-seed\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"last-used-rng-seed-container\">\n\t\t\t\t\t\t\t<span>Last used RNG seed:</span><span class=\"last-used-rng-seed\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"show-threat-metrics-picker\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"show-experimental-picker\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-menu-content-right\">\n\t\t\t\t\t<div class=\"settings-menu-section settings-menu-ep-weights within-raid-sim-hide\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tthis.addCloseButton();\n\n\t\tconst restoreDefaultsButton = this.rootElem.getElementsByClassName('restore-defaults-button')[0] as HTMLElement;\n\t\trestoreDefaultsButton.addEventListener('click', event => {\n\t\t\tthis.simUI.applyDefaults(TypedEvent.nextEventID());\n\t\t});\n\t\ttippy(restoreDefaultsButton, {\n\t\t\t'content': 'Restores all default settings (gear, consumes, buffs, talents, EP weights, etc).',\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst fixedRngSeed = this.rootElem.getElementsByClassName('fixed-rng-seed')[0] as HTMLElement;\n\t\tnew NumberPicker(fixedRngSeed, this.simUI.sim, {\n\t\t\tlabel: 'Fixed RNG Seed',\n\t\t\tlabelTooltip: 'Seed value for the random number generator used during sims, or 0 to use different randomness each run. Use this to share exact sim results or for debugging.',\n\t\t\tchangedEvent: (sim: Sim) => sim.fixedRngSeedChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFixedRngSeed(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setFixedRngSeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst lastUsedRngSeed = this.rootElem.getElementsByClassName('last-used-rng-seed')[0] as HTMLElement;\n\t\tlastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed());\n\t\tthis.simUI.sim.lastUsedRngSeedChangeEmitter.on(() => lastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed()));\n\n\t\tconst showThreatMetrics = this.rootElem.getElementsByClassName('show-threat-metrics-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showThreatMetrics, this.simUI.sim, {\n\t\t\tlabel: 'Show Threat/Tank Options',\n\t\t\tlabelTooltip: 'Shows all options and metrics relevant to tanks, like TPS/DTPS.',\n\t\t\tchangedEvent: (sim: Sim) => sim.showThreatMetricsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowThreatMetrics(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowThreatMetrics(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\t// Comment this out when there are no experiments to show.\n\t\tconst showExperimental = this.rootElem.getElementsByClassName('show-experimental-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showExperimental, this.simUI.sim, {\n\t\t\tlabel: 'Show Experimental',\n\t\t\tchangedEvent: (sim: Sim) => sim.showExperimentalChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowExperimental(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowExperimental(eventID, newValue);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Component } from '../components/component.js';\n\nexport class ResultsViewer extends Component {\n\treadonly pendingElem: HTMLElement;\n\treadonly contentElem: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement) {\n\t\tsuper(parentElem, 'results-viewer');\n\t\tthis.rootElem.innerHTML = `\n      <div class=\"results-pending\">\n        <div class=\"loader\"></div>\n      </div>\n      <div class=\"results-content\">\n      </div>\n\t\t`;\n\n\t\tthis.pendingElem = this.rootElem.getElementsByClassName('results-pending')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('results-content')[0] as HTMLElement;\n\t\tthis.hideAll();\n\t}\n\n\thideAll() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n\n\tsetPending() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'initial';\n\t}\n\n\tsetContent(innerHTML: string) {\n\t\tthis.contentElem.innerHTML = innerHTML;\n\t\tthis.contentElem.style.display = 'initial';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n}\n","import { Spec } from './proto/common.js';\n\n// This file is for anything related to launching a new sim. DO NOT touch this\n// file until your sim is ready to launch!\n\nexport enum LaunchStatus {\n    Unlaunched,\n    Alpha,\n    Beta,\n    Launched,\n}\n\nexport const raidSimLaunched = false;\n\n// This list controls which links are shown in the top-left dropdown menu.\nexport const simLaunchStatuses: Record<Spec, LaunchStatus> = {\n\t[Spec.SpecBalanceDruid]: LaunchStatus.Alpha,\n\t[Spec.SpecElementalShaman]: LaunchStatus.Alpha,\n\t[Spec.SpecEnhancementShaman]: LaunchStatus.Alpha,\n\t[Spec.SpecFeralDruid]: LaunchStatus.Unlaunched,\n\t[Spec.SpecFeralTankDruid]: LaunchStatus.Unlaunched,\n\t[Spec.SpecHunter]: LaunchStatus.Alpha,\n\t[Spec.SpecMage]: LaunchStatus.Alpha,\n\t[Spec.SpecRogue]: LaunchStatus.Alpha,\n\t[Spec.SpecRetributionPaladin]: LaunchStatus.Alpha,\n\t[Spec.SpecProtectionPaladin]: LaunchStatus.Unlaunched,\n\t[Spec.SpecHealingPriest]: LaunchStatus.Unlaunched,\n\t[Spec.SpecShadowPriest]: LaunchStatus.Alpha,\n\t[Spec.SpecSmitePriest]: LaunchStatus.Alpha,\n\t[Spec.SpecWarlock]: LaunchStatus.Alpha,\n\t[Spec.SpecWarrior]: LaunchStatus.Alpha,\n\t[Spec.SpecProtectionWarrior]: LaunchStatus.Alpha,\n\t[Spec.SpecDeathknight]: LaunchStatus.Alpha,\n\t[Spec.SpecTankDeathknight]: LaunchStatus.Unlaunched,\n};\n\n// Meme specs are excluded from title drop-down menu.\nexport const memeSpecs: Array<Spec> = [\n\tSpec.SpecSmitePriest,\n];\n\nexport function getLaunchedSims(): Array<Spec> {\n    return Object.keys(simLaunchStatuses)\n        .map(specStr => parseInt(specStr) as Spec)\n        .filter(spec => simLaunchStatuses[spec] > LaunchStatus.Unlaunched);\n}\n","import { Component } from '../components/component.js';\nimport { getLaunchedSims, raidSimLaunched, memeSpecs } from '../launched_sims.js';\nimport { Spec } from '../proto/common.js';\nimport {\n\tclassColors,\n\tgetSpecSiteUrl,\n\tnaturalSpecOrder,\n\traidSimSiteUrl,\n\tspecNames,\n\tspecToClass,\n\ttitleIcons,\n\traidSimIcon,\n} from '../proto_utils/utils.js';\n\ndeclare var tippy: any;\n\nexport interface SimLinkOption {\n\ticonUrl: string,\n\thref: string,\n\ttext: string,\n\tcolor: string,\n};\n\n// Dropdown menu for selecting a player.\nexport class Title extends Component {\n\tprivate readonly buttonElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, currentSpec: Spec | null) {\n\t\tsuper(parent, 'sim-title-root');\n\t\tthis.rootElem.classList.add('dropdown-root');\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"dropdown-button sim-title-button\"></div>\n\t\t\t<div class=\"dropdown-panel sim-title-dropdown within-raid-sim-hide\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('sim-title-button')[0] as HTMLElement;\n\t\tconst dropdownPanel = this.rootElem.getElementsByClassName('dropdown-panel')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tconst orderedLaunchedSpecs: Array<Spec | null> = (naturalSpecOrder\n\t\t\t.filter(spec => getLaunchedSims().includes(spec)) as Array<Spec | null>)\n\t\t\t.filter(spec => !spec || !memeSpecs.includes(spec))\n\t\t\t.concat(raidSimLaunched ? [null] : []); // Null represents the raid sim.\n\n\t\tdropdownPanel.style.gridTemplateRows = `repeat(${Math.ceil(orderedLaunchedSpecs.length / 2)}, 1fr)`;\n\n\t\tconst currentOption = this.makeOptionData(currentSpec, true);\n\t\tconst otherOptions = orderedLaunchedSpecs.map(spec => this.makeOptionData(spec, false));\n\n\t\tthis.buttonElem.appendChild(Title.makeOptionElem(currentOption));\n\n\t\tconst isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n\t\tif (!isWithinRaidSim) {\n\t\t\totherOptions.forEach((option, i) => dropdownPanel.appendChild(this.makeOption(option)));\n\t\t}\n\t}\n\n\tprivate makeOptionData(spec: Spec | null, isButton: boolean) {\n\t\tif (spec == null) {\n\t\t\treturn {\n\t\t\t\ticonUrl: raidSimIcon,\n\t\t\t\thref: raidSimSiteUrl,\n\t\t\t\ttext: 'RAID',\n\t\t\t\tcolor: isButton ? '' : 'black',\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ticonUrl: titleIcons[spec],\n\t\t\t\thref: getSpecSiteUrl(spec),\n\t\t\t\ttext: specNames[spec].toUpperCase(),\n\t\t\t\tcolor: isButton ? '' : classColors[specToClass[spec]],\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate makeOption(data: SimLinkOption): HTMLElement {\n\t\tconst option = Title.makeOptionElem(data);\n\n\t\toption.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\twindow.location.href = data.href;\n\t\t});\n\n\t\treturn option;\n\t}\n\n\tstatic makeOptionElem(data: SimLinkOption): HTMLElement {\n\t\tconst optionContainer = document.createElement('a');\n\t\toptionContainer.href = data.href;\n\t\toptionContainer.classList.add('sim-title-dropdown-option-container', 'dropdown-option-container');\n\n\t\tconst option = document.createElement('div');\n\t\toption.classList.add('sim-title-option', 'dropdown-option');\n\t\toptionContainer.appendChild(option);\n\n\t\tif (data.color) {\n\t\t\toption.style.backgroundColor = data.color;\n\t\t}\n\n\t\tconst icon = document.createElement('img');\n\t\ticon.src = data.iconUrl;\n\t\ticon.classList.add('sim-title-icon');\n\t\toption.appendChild(icon);\n\n\t\tconst labelDiv = document.createElement('div');\n\t\tlabelDiv.classList.add('sim-title-label-container');\n\t\toption.appendChild(labelDiv);\n\n\t\tif (!data.color) { // Hacky check for 'isButton'\n\t\t\tconst simLabel = document.createElement('span');\n\t\t\tsimLabel.textContent = 'WotLK Simulator';\n\t\t\tsimLabel.classList.add('sim-title-sim-label', 'sim-title-label');\n\t\t\tlabelDiv.appendChild(simLabel);\n\t\t}\n\n\t\tconst label = document.createElement('span');\n\t\tlabel.textContent = data.text;\n\t\tlabel.classList.add('sim-title-spec-label', 'sim-title-label');\n\t\tlabelDiv.appendChild(label);\n\n\t\treturn optionContainer;\n\t}\n}\n","import { Component } from './components/component.js';\nimport { NumberPicker } from './components/number_picker.js';\nimport { ResultsViewer } from './components/results_viewer.js';\nimport { Title } from './components/title.js';\nimport { Spec } from './proto/common.js';\nimport { SimOptions } from './proto/api.js';\nimport { LaunchStatus } from './launched_sims.js';\nimport { specToLocalStorageKey } from './proto_utils/utils.js';\n\nimport { Sim, SimError } from './sim.js';\nimport { Target } from './target.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\ndeclare var tippy: any;\ndeclare var pako: any;\n\nconst URLMAXLEN = 2048;\nconst noticeText = '';\n//const noticeText = 'We are looking for help migrating our sims to Wrath of the Lich King. If you\\'d like to participate in a fun side project working with an open-source community please <a href=\"https://discord.gg/jJMPr9JWwx\" target=\"_blank\">join our discord!</a>';\n\n// Config for displaying a warning to the user whenever a condition is met.\nexport interface SimWarning {\n    updateOn: TypedEvent<any>,\n    getContent: () => string | Array<string>,\n}\n\nexport interface SimUIConfig {\n    // The spec, if an individual sim, or null if the raid sim.\n    spec: Spec | null,\n    launchStatus: LaunchStatus,\n    knownIssues?: Array<string>,\n}\n\n// Shared UI for all individual sims and the raid sim.\nexport abstract class SimUI extends Component {\n    readonly sim: Sim;\n    readonly isWithinRaidSim: boolean;\n\n    // Emits when anything from the sim, raid, or encounter changes.\n    readonly changeEmitter;\n\n    readonly resultsViewer: ResultsViewer\n\n    private warnings: Array<SimWarning>;\n    private warningsTippy: any;\n\n    constructor(parentElem: HTMLElement, sim: Sim, config: SimUIConfig) {\n        super(parentElem, 'sim-ui');\n        this.sim = sim;\n        this.rootElem.innerHTML = simHTML;\n        this.isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n        if (!this.isWithinRaidSim) {\n            this.rootElem.classList.add('not-within-raid-sim');\n        }\n\n        this.changeEmitter = TypedEvent.onAny([\n            this.sim.changeEmitter,\n        ], 'SimUIChange');\n\n        this.sim.crashEmitter.on((eventID: EventID, error: SimError) => this.handleCrash(error));\n\n        const updateShowDamageMetrics = () => {\n            if (this.sim.getShowDamageMetrics()) {\n                this.rootElem.classList.remove('hide-damage-metrics');\n            } else {\n                this.rootElem.classList.add('hide-damage-metrics');\n            }\n        };\n        updateShowDamageMetrics();\n        this.sim.showDamageMetricsChangeEmitter.on(updateShowDamageMetrics);\n\n        const updateShowThreatMetrics = () => {\n            if (this.sim.getShowThreatMetrics()) {\n                this.rootElem.classList.remove('hide-threat-metrics');\n            } else {\n                this.rootElem.classList.add('hide-threat-metrics');\n            }\n        };\n        updateShowThreatMetrics();\n        this.sim.showThreatMetricsChangeEmitter.on(updateShowThreatMetrics);\n\n        const updateShowHealingMetrics = () => {\n            if (this.sim.getShowHealingMetrics()) {\n                this.rootElem.classList.remove('hide-healing-metrics');\n            } else {\n                this.rootElem.classList.add('hide-healing-metrics');\n            }\n        };\n        updateShowHealingMetrics();\n        this.sim.showHealingMetricsChangeEmitter.on(updateShowHealingMetrics);\n\n        const updateShowExperimental = () => {\n            if (this.sim.getShowExperimental()) {\n                this.rootElem.classList.remove('hide-experimental');\n            } else {\n                this.rootElem.classList.add('hide-experimental');\n            }\n        };\n        updateShowExperimental();\n        this.sim.showExperimentalChangeEmitter.on(updateShowExperimental);\n\n        const noticesElem = document.getElementsByClassName('notices')[0] as HTMLElement;\n        if (noticeText) {\n            tippy(noticesElem, {\n                content: noticeText,\n                allowHTML: true,\n                interactive: true,\n            });\n        } else {\n            noticesElem.remove();\n        }\n\n        this.warnings = [];\n        const warningsElem = document.getElementsByClassName('warnings')[0] as HTMLElement;\n        this.warningsTippy = tippy(warningsElem, {\n            content: '',\n            allowHTML: true,\n        });\n        this.updateWarnings();\n\n        let statusStr = '';\n        if (config.launchStatus == LaunchStatus.Unlaunched) {\n            statusStr = 'This sim is a WORK IN PROGRESS. It is not fully developed and should not be used for general purposes.';\n        } else if (config.launchStatus == LaunchStatus.Alpha) {\n            statusStr = 'This sim is in ALPHA. Bugs are expected; please let us know if you find one!';\n        } else if (config.launchStatus == LaunchStatus.Beta) {\n            statusStr = 'This sim is in BETA. There may still be a few bugs; please let us know if you find one!';\n        }\n        if (statusStr) {\n            config.knownIssues = [statusStr].concat(config.knownIssues || []);\n        }\n        if (config.knownIssues && config.knownIssues.length) {\n            const knownIssuesContainer = document.getElementsByClassName('known-issues')[0] as HTMLElement;\n            knownIssuesContainer.style.display = 'initial';\n            tippy(knownIssuesContainer, {\n                content: `\n\t\t\t\t<ul class=\"known-issues-tooltip\">\n\t\t\t\t\t${config.knownIssues.map(issue => '<li>' + issue + '</li>').join('')}\n\t\t\t\t</ul>\n\t\t\t\t`,\n                allowHTML: true,\n                interactive: true,\n            });\n        }\n\n        const resultsViewerElem = this.rootElem.getElementsByClassName('sim-sidebar-results')[0] as HTMLElement;\n        this.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n        const titleElem = this.rootElem.getElementsByClassName('sim-sidebar-title')[0] as HTMLElement;\n        const title = new Title(titleElem, config.spec);\n\n        const simActionsContainer = this.rootElem.getElementsByClassName('sim-sidebar-actions')[0] as HTMLElement;\n        const iterationsPicker = new NumberPicker(simActionsContainer, this.sim, {\n            label: 'Iterations',\n            extraCssClasses: [\n                'iterations-picker',\n                'within-raid-sim-hide',\n            ],\n            changedEvent: (sim: Sim) => sim.iterationsChangeEmitter,\n            getValue: (sim: Sim) => sim.getIterations(),\n            setValue: (eventID: EventID, sim: Sim, newValue: number) => {\n                sim.setIterations(eventID, newValue);\n            },\n        });\n\n        const reportBug = document.createElement('span');\n        reportBug.classList.add('report-bug', 'fa', 'fa-bug');\n        tippy(reportBug, {\n            'content': 'Report a bug / request a feature',\n            'allowHTML': true,\n        });\n        reportBug.addEventListener('click', event => {\n            window.open('https://github.com/wowsims/wotlk/issues/new/choose', '_blank');\n        });\n        this.addToolbarItem(reportBug);\n\n        if (!this.isWithinRaidSim) {\n            window.addEventListener('message', async event => {\n                if (event.data == 'runOnce') {\n                    this.runSimOnce();\n                }\n            });\n        }\n\n        const downloadBinary = document.createElement('span');\n        // downloadBinary.src = \"/wotlk/assets/img/gauge.svg\"\n        downloadBinary.classList.add('downbin', 'hide');\n        downloadBinary.addEventListener('click', event => {\n            window.open('https://github.com/wowsims/wotlk/releases', '_blank');\n        });\n\n        if (document.location.href.includes(\"localhost\")) {\n            fetch(document.location.protocol + \"//\" + document.location.host + \"/version\").then(resp => {\n                resp.json()\n                    .then((versionInfo) => {\n                        if (versionInfo.outdated == 2) {\n                            tippy(downloadBinary, {\n                                'content': 'Newer version of simulator available for download',\n                                'allowHTML': true,\n                            });\n                            downloadBinary.classList.add('downbinalert');\n                            this.addToolbarItem(downloadBinary);\n                        }\n                    })\n                    .catch(error => {\n                        console.warn('No version info found!');\n                    });\n            });\n        } else {\n            tippy(downloadBinary, {\n                'content': 'Download simulator for faster simulating',\n                'allowHTML': true,\n            });\n            downloadBinary.classList.add('downbinnorm');\n            this.addToolbarItem(downloadBinary);\n        }\n    }\n\n    addAction(name: string, cssClass: string, actFn: () => void) {\n        const simActionsContainer = this.rootElem.getElementsByClassName('sim-sidebar-actions')[0] as HTMLElement;\n        const iterationsPicker = this.rootElem.getElementsByClassName('iterations-picker')[0] as HTMLElement;\n\n        const button = document.createElement('button');\n        button.classList.add('sim-sidebar-actions-button', cssClass);\n        button.textContent = name;\n        button.addEventListener('click', actFn);\n        simActionsContainer.insertBefore(button, iterationsPicker);\n    }\n\n    addTab(title: string, cssClass: string, innerHTML: string) {\n        const simTabsContainer = this.rootElem.getElementsByClassName('sim-tabs')[0] as HTMLElement;\n        const simTabContentsContainer = this.rootElem.getElementsByClassName('tab-content')[0] as HTMLElement;\n        const topBar = simTabsContainer.getElementsByClassName('sim-top-bar')[0] as HTMLElement;\n\n        const contentId = cssClass.replace(/\\s+/g, '-') + '-tab';\n        const isFirstTab = simTabsContainer.children.length == 1;\n\n        const newTab = document.createElement('li');\n        newTab.innerHTML = `<a data-toggle=\"tab\" href=\"#${contentId}\">${title}</a>`;\n        newTab.classList.add(cssClass + '-tab');\n\n        const newContent = document.createElement('div');\n        newContent.id = contentId;\n        newContent.classList.add(cssClass, 'tab-pane', 'fade');\n        newContent.innerHTML = innerHTML;\n\n        if (isFirstTab) {\n            newTab.classList.add('active');\n            newContent.classList.add('active', 'in');\n        }\n\n        simTabsContainer.insertBefore(newTab, topBar);\n        simTabContentsContainer.appendChild(newContent);\n    }\n\n    addToolbarItem(elem: HTMLElement) {\n        const topBar = this.rootElem.getElementsByClassName('sim-top-bar')[0] as HTMLElement;\n        elem.classList.add('sim-top-bar-item');\n        topBar.appendChild(elem);\n    }\n\n    private updateWarnings() {\n        const activeWarnings = this.warnings.map(warning => warning.getContent()).flat().filter(content => content != '');\n\n        const warningsElem = document.getElementsByClassName('warnings')[0] as HTMLElement;\n        if (activeWarnings.length == 0) {\n            warningsElem.style.display = 'none';\n        } else {\n            warningsElem.style.display = 'initial';\n            this.warningsTippy.setContent(`\n\t\t\t\t<ul class=\"known-issues-tooltip\">\n\t\t\t\t\t${activeWarnings.map(content => '<li>' + content + '</li>').join('')}\n\t\t\t\t</ul>`\n            );\n        }\n    }\n\n    addWarning(warning: SimWarning) {\n        this.warnings.push(warning);\n        warning.updateOn.on(() => this.updateWarnings());\n        this.updateWarnings();\n    }\n\n    // Returns a key suitable for the browser's localStorage feature.\n    abstract getStorageKey(postfix: string): string;\n\n    getSettingsStorageKey(): string {\n        return this.getStorageKey('__currentSettings__');\n    }\n\n    getSavedEncounterStorageKey(): string {\n        // By skipping the call to this.getStorageKey(), saved encounters will be\n        // shared across all sims.\n        return 'sharedData__savedEncounter__';\n    }\n\n    isIndividualSim(): boolean {\n        return this.rootElem.classList.contains('individual-sim-ui');\n    }\n\n    async runSim(onProgress: Function) {\n        this.resultsViewer.setPending();\n        try {\n            await this.sim.runRaidSim(TypedEvent.nextEventID(), onProgress);\n        } catch (e) {\n            this.resultsViewer.hideAll();\n            this.handleCrash(e);\n        }\n    }\n\n    async runSimOnce() {\n        this.resultsViewer.setPending();\n        try {\n            await this.sim.runRaidSimWithLogs(TypedEvent.nextEventID());\n        } catch (e) {\n            this.resultsViewer.hideAll();\n            this.handleCrash(e);\n        }\n    }\n\n    handleCrash(error: any) {\n        if (!(error instanceof SimError)) {\n            alert(error);\n            return;\n        }\n\n\t\tconst errorStr = (error as SimError).errorStr;\n\t\tif (window.confirm('Simulation Failure:\\n' + errorStr + '\\nPress Ok to file crash report')) {\n\t\t\t// Splice out just the line numbers\n\t\t\tconst hash = this.hashCode(errorStr);\n\t\t\tconst link = this.toLink();\n\t\t\tconst rngSeed = this.sim.getLastUsedRngSeed();\n\t\t\tfetch('https://api.github.com/search/issues?q=is:issue+is:open+repo:wowsims/wotlk+' + hash).then(resp => {\n\t\t\t\tresp.json().then((issues) => {\n\t\t\t\t\tif (issues.total_count > 0) {\n\t\t\t\t\t\twindow.open(issues.items[0].html_url, '_blank');\n                    } else {\n                        const base_url = 'https://github.com/wowsims/wotlk/issues/new?assignees=&labels=&title=Crash%20Report%20'\n                        const base = `${base_url}${hash}&body=`;\n                        const maxBodyLength = URLMAXLEN - base.length;\n                        let issueBody = encodeURIComponent(`Link:\\n${link}\\n\\nRNG Seed: ${rngSeed}\\n\\n${errorStr}`)\n                        while (issueBody.length > maxBodyLength) {\n                            issueBody = issueBody.slice(0, issueBody.lastIndexOf('%')) // Avoid truncating in the middle of a URLencoded segment\n                        }\n                        window.open(base + issueBody, '_blank');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).catch(fetchErr => {\n\t\t\t\talert('Failed to file report... try again another time:' + fetchErr);\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n    hashCode(str: string): number {\n        let hash = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            let chr = str.charCodeAt(i);\n            hash = (hash << 5) - hash + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    }\n\n    abstract applyDefaults(eventID: EventID): void;\n    abstract toLink(): string;\n}\n\nconst simHTML = `\n<div class=\"sim-root\">\n  <section class=\"sim-sidebar\">\n    <div class=\"sim-sidebar-title\"></div>\n    <div class=\"sim-sidebar-actions within-raid-sim-hide\"></div>\n    <div class=\"sim-sidebar-results within-raid-sim-hide\"></div>\n    <div class=\"sim-sidebar-footer\"></div>\n  </section>\n  <section class=\"sim-main\">\n\t\t<div class=\"sim-toolbar\">\n\t\t\t<ul class=\"sim-tabs nav nav-tabs\">\n\t\t\t\t<li class=\"sim-top-bar\">\n\t\t\t\t\t<span class=\"notices fas fa-exclamation-circle\"></span>\n\t\t\t\t\t<span class=\"warnings fa fa-exclamation-triangle\"></span>\n\t\t\t\t\t<div class=\"known-issues\">Known Issues</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n    </div>\n    <div class=\"tab-content\">\n    </div>\n  </section>\n</div>\n`;\n","import { StatWeightsRequest, StatWeightsResult, StatWeightValues, ProgressMetrics } from '../proto/api.js';\nimport { ItemSlot } from '../proto/common.js';\nimport { Gem } from '../proto/common.js';\nimport { GemColor } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { Gear } from '../proto_utils/gear.js';\nimport { statNames, statOrder } from '../proto_utils/names.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { Player } from '../player.js';\nimport { stDevToConf90 } from '../utils.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { ResultsViewer } from '../components/results_viewer.js';\nimport { combinations, combinationsWithDups, permutations, getEnumValues, maxIndex, sum } from '../utils.js';\n\nimport * as Gems from '../proto_utils/gems.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var tippy: any;\n\nexport function addStatWeightsAction(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epReferenceStat: Stat) {\n\tsimUI.addAction('STAT WEIGHTS', 'ep-weights-action', () => {\n\t\tnew EpWeightsMenu(simUI, epStats, epReferenceStat);\n\t});\n}\n\nclass EpWeightsMenu extends Popup {\n\tprivate readonly simUI: IndividualSimUI<any>;\n\tprivate readonly tableContainer: HTMLElement;\n\tprivate readonly tableBody: HTMLElement;\n\tprivate readonly tableHeader: HTMLElement;\n\tprivate readonly resultsViewer: ResultsViewer;\n\n\tprivate statsType: string;\n\tprivate epStats: Array<Stat>;\n\tprivate epReferenceStat: Stat;\n\n\tconstructor(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epReferenceStat: Stat) {\n\t\tsuper(simUI.rootElem);\n\t\tthis.simUI = simUI;\n\t\tthis.statsType = 'ep';\n\t\tthis.epStats = epStats;\n\t\tthis.epReferenceStat = epReferenceStat;\n\n\t\tthis.rootElem.classList.add('ep-weights-menu');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"ep-weights-header\">\n\t\t\t\t<div class=\"ep-weights-actions\">\n\t\t\t\t\t<button class=\"sim-button calc-weights\">CALCULATE</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ep-weights-results\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"stats-controls-row\">\n\t\t\t\t<div class=\"ep-weights-options\">\n\t\t\t\t\t<select class=\"ep-type-select\">\n\t\t\t\t\t\t<option value=\"ep\">EP</option>\n\t\t\t\t\t\t<option value=\"weight\">Weights</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"show-all-stats-container\">\n\t\t\t\t</div>\n\t\t\t\t<button class=\"sim-button optimize-gems\">OPTIMIZE GEMS</button>\n\t\t\t</div>\n\t\t\t<div class=\"ep-weights-table\">\n\t\t\t\t<table class=\"results-ep-table\">\n\t\t\t\t\t<tbody id=\"ep-tbody\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Stat</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-weight\"><span>DPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-ep\"><span>DPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-weight\"><span>HPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-ep\"><span>HPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\"><span>TPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\"><span>TPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\"><span>DTPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\"><span>DTPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th><span>Current EP</span><span class=\"col-action fa fa-recycle\"></span></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.tableContainer = this.rootElem.getElementsByClassName('ep-weights-table')[0] as HTMLElement;\n\t\tthis.tableBody = this.rootElem.querySelector('#ep-tbody') as HTMLElement;\n\t\tthis.tableHeader = this.rootElem.querySelector('#ep-tbody > tr') as HTMLElement;\n\n\t\tconst resultsViewerElem = this.rootElem.getElementsByClassName('ep-weights-results')[0] as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n\t\tconst updateType = () => {\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tthis.tableContainer.classList.remove('stats-type-weight');\n\t\t\t\tthis.tableContainer.classList.add('stats-type-ep');\n\t\t\t} else {\n\t\t\t\tthis.tableContainer.classList.add('stats-type-weight');\n\t\t\t\tthis.tableContainer.classList.remove('stats-type-ep');\n\t\t\t}\n\t\t};\n\n\t\tconst selectElem = this.rootElem.getElementsByClassName('ep-type-select')[0] as HTMLSelectElement;\n\t\tselectElem.addEventListener('input', event => {\n\t\t\tthis.statsType = selectElem.value;\n\t\t\tupdateType();\n\t\t});\n\t\tselectElem.value = this.statsType;\n\t\tupdateType();\n\n\t\tconst calcButton = this.rootElem.getElementsByClassName('calc-weights')[0] as HTMLElement;\n\t\tcalcButton.addEventListener('click', async event => {\n\t\t\tthis.resultsViewer.setPending();\n\t\t\tconst iterations = this.simUI.sim.getIterations();\n\t\t\tconst result = await this.simUI.player.computeStatWeights(TypedEvent.nextEventID(), this.epStats, this.epReferenceStat, (progress: ProgressMetrics) => {\n\t\t\t\tthis.setSimProgress(progress);\n\t\t\t});\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.simUI.prevEpIterations = iterations;\n\t\t\tthis.simUI.prevEpSimResult = result;\n\t\t\tthis.preprocessResults(result);\n\t\t\tthis.updateTable(iterations, result);\n\t\t});\n\n\t\tconst colActionButtons = Array.from(this.rootElem.getElementsByClassName('col-action')) as Array<HTMLSelectElement>;\n\t\tconst makeUpdateWeights = (button: HTMLElement, labelTooltip: string, tooltip: string, weightsFunc: () => Array<number>) => {\n\t\t\ttippy(button.previousSibling, {\n\t\t\t\t'content': labelTooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t\ttippy(button, {\n\t\t\t\t'content': tooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t\tbutton.addEventListener('click', event => {\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), new Stats(weightsFunc()));\n\t\t\t});\n\t\t};\n\t\tmakeUpdateWeights(colActionButtons[0], 'Per-point increase in DPS (Damage Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[1], `EP (Equivalency Points) for DPS (Damage Per Second) for each stat. Normalized by ${statNames[this.epReferenceStat]}.`, 'Copy to Current EP', () => this.getPrevSimResult().dps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[2], 'Per-point increase in HPS (Healing Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().hps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[3], `EP (Equivalency Points) for HPS (Healing Per Second) for each stat. Normalized by ${statNames[this.epReferenceStat]}.`, 'Copy to Current EP', () => this.getPrevSimResult().hps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[4], 'Per-point increase in TPS (Threat Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[5], `EP (Equivalency Points) for TPS (Threat Per Second) for each stat. Normalized by ${statNames[this.epReferenceStat]}.`, 'Copy to Current EP', () => this.getPrevSimResult().tps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[6], 'Per-point increase in DTPS (Damage Taken Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dtps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[7], `EP (Equivalency Points) for DTPS (Damage Taken Per Second) for each stat. Normalized by ${statNames[Stat.StatArmor]}.`, 'Copy to Current EP', () => this.getPrevSimResult().dtps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[8], 'Current EP Weights. Used to sort the gear selector menus.', 'Restore Default EP', () => this.simUI.individualConfig.defaults.epWeights.asArray());\n\n\t\tconst showAllStatsContainer = this.rootElem.getElementsByClassName('show-all-stats-container')[0] as HTMLElement;\n\t\tnew BooleanPicker(showAllStatsContainer, this, {\n\t\t\tlabel: 'Show All Stats',\n\t\t\tchangedEvent: () => new TypedEvent(),\n\t\t\tgetValue: () => this.tableContainer.classList.contains('show-all-stats'),\n\t\t\tsetValue: (eventID: EventID, menu: EpWeightsMenu, newValue: boolean) => {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tthis.tableContainer.classList.add('show-all-stats');\n\t\t\t\t} else {\n\t\t\t\t\tthis.tableContainer.classList.remove('show-all-stats');\n\t\t\t\t}\n\t\t\t\tthis.applyAlternatingColors();\n\t\t\t},\n\t\t});\n\n\t\tthis.updateTable(this.simUI.prevEpIterations || 1, this.getPrevSimResult());\n\n\t\tconst optimizeGemsButton = this.rootElem.getElementsByClassName('optimize-gems')[0] as HTMLElement;\n\t\ttippy(optimizeGemsButton, {\n\t\t\t'content': `\n\t\t\t\t<p>Optimizes equipped gems to maximize EP, based on the values in <b>Current EP</b>.</p>\n\t\t\t\t<p>Does not change the meta gem, but ensures that its condition is met. Uses JC gems if Jewelcrafting is a selected profession.</p>\n\t\t\t`,\n\t\t\t'allowHTML': true,\n\t\t});\n\t\toptimizeGemsButton.addEventListener('click', event => this.optimizeGems(TypedEvent.nextEventID()));\n\n\t\tthis.addCloseButton();\n\t}\n\n\tsetSimProgress(progress: ProgressMetrics) {\n\t\tthis.resultsViewer.setContent(`\n  <div class=\"results-sim\">\n  \t\t\t<div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n  \t\t\t<div class=\"\">\n\t\t\t\t${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n\t\t\t</div>\n  </div>\n`);\n\t}\n\n\tprivate preprocessResults(result: StatWeightsResult) {\n\t\t// Values for a school's power should never exceed the value for regular spell power.\n\t\tresult.dps!.epValues.forEach((value, index) => {\n\t\t\tif (index == Stat.StatArcaneSpellPower ||\n\t\t\t\tindex == Stat.StatFireSpellPower ||\n\t\t\t\tindex == Stat.StatFrostSpellPower ||\n\t\t\t\tindex == Stat.StatHolySpellPower ||\n\t\t\t\tindex == Stat.StatNatureSpellPower ||\n\t\t\t\tindex == Stat.StatShadowSpellPower) {\n\t\t\t\tif (value > result.dps!.epValues[Stat.StatSpellPower]) {\n\t\t\t\t\tconst diff = value - result.dps!.epValues[Stat.StatSpellPower];\n\t\t\t\t\tresult.dps!.epValues[index] = result.dps!.epValues[Stat.StatSpellPower];\n\t\t\t\t\tresult.dps!.epValuesStdev[index] -= diff;\n\t\t\t\t\tconst wdiff = result.dps!.weights[index] - result.dps!.weights[Stat.StatSpellPower];\n\t\t\t\t\tresult.dps!.weights[index] = result.dps!.weights[Stat.StatSpellPower];\n\t\t\t\t\tresult.dps!.weightsStdev[index] -= wdiff;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateTable(iterations: number, result: StatWeightsResult) {\n\t\tthis.tableHeader.remove();\n\t\tthis.tableBody.innerHTML = '';\n\t\tthis.tableBody.appendChild(this.tableHeader);\n\n\t\tconst allStats = statOrder.filter(stat => ![Stat.StatMana, Stat.StatEnergy, Stat.StatRage].includes(stat));\n\t\tallStats.forEach(stat => {\n\t\t\tconst row = this.makeTableRow(stat, iterations, result);\n\t\t\tif (!this.epStats.includes(stat)) {\n\t\t\t\trow.classList.add('non-ep-stat');\n\t\t\t}\n\t\t\tthis.tableBody.appendChild(row);\n\t\t});\n\n\t\tthis.applyAlternatingColors();\n\t}\n\n\tprivate makeTableRow(stat: Stat, iterations: number, result: StatWeightsResult): HTMLElement {\n\t\tconst row = document.createElement('tr');\n\t\trow.innerHTML = `\n\t\t\t<td>${statNames[stat]}</td>\n\t\t\t<td class=\"stdev-cell damage-metrics type-weight\"><span>${result.dps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.dps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell damage-metrics type-ep\"><span>${result.dps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.dps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-weight\"><span>${result.tps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.tps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-ep\"><span>${result.tps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.tps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-weight\"><span>${result.dtps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.dtps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-ep\"><span>${result.dtps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.dtps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"current-ep\"></td>\n\t\t`;\n\n\t\tconst currentEpCell = row.querySelector('.current-ep') as HTMLElement;\n\t\tnew NumberPicker(currentEpCell, this.simUI.player, {\n\t\t\tfloat: true,\n\t\t\tchangedEvent: (player: Player<any>) => player.epWeightsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getEpWeights().getStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst epWeights = player.getEpWeights().withStat(stat, newValue);\n\t\t\t\tplayer.setEpWeights(eventID, epWeights);\n\t\t\t},\n\t\t});\n\n\t\treturn row;\n\t}\n\n\tprivate applyAlternatingColors() {\n\t\t(Array.from(this.tableBody.childNodes) as Array<HTMLElement>)\n\t\t\t.filter(row => window.getComputedStyle(row).getPropertyValue('display') != 'none')\n\t\t\t.forEach((row, i) => {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\trow.classList.remove('odd');\n\t\t\t\t} else {\n\t\t\t\t\trow.classList.add('odd');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate getPrevSimResult(): StatWeightsResult {\n\t\treturn this.simUI.prevEpSimResult || StatWeightsResult.create({\n\t\t\tdps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t\ttps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t\tdtps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate optimizeGems(eventID: EventID) {\n\t\t// Replace 0 weights with a very tiny value, so we always prefer to take free stats even if the user gave a 0 weight.\n\t\tlet epWeights = this.simUI.player.getEpWeights();\n\t\tepWeights = new Stats(epWeights.asArray().map(w => w == 0 ? 1e-8 : w));\n\n\t\tconst gear = this.simUI.player.getGear();\n\t\tconst allGems = this.simUI.sim.getGems();\n\t\tconst phase = this.simUI.sim.getPhase();\n\t\tconst isBlacksmithing = this.simUI.player.isBlacksmithing();\n\t\tconst isJewelcrafting = this.simUI.player.hasProfession(Profession.Jewelcrafting);\n\n\t\tconst optimizedGear = EpWeightsMenu.optimizeGemsForWeights(epWeights, gear, allGems, phase, isBlacksmithing, isJewelcrafting);\n\t\tthis.simUI.player.setGear(eventID, optimizedGear);\n\t}\n\n\tprivate static optimizeGemsForWeights(epWeights: Stats, gear: Gear, allGems: Array<Gem>, phase: number, isBlacksmithing: boolean, isJewelcrafting: boolean): Gear {\n\t\tconst unrestrictedGems = allGems.filter(gem => Gems.isUnrestrictedGem(gem, phase));\n\n\t\tconst {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t} = EpWeightsMenu.findBestGems(unrestrictedGems, epWeights);\n\n\t\tconst items = gear.asMap();\n\t\tconst socketBonusEPs = Object.values(items).map(item => item != null ? new Stats(item.item.socketBonus).computeEP(epWeights) : 0);\n\n\t\t// Start by optimally filling all items, ignoring meta condition.\n\t\tObject.entries(items).forEach(([itemSlot, equippedItem], i) => {\n\t\t\tif (equippedItem == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst item = equippedItem.item;\n\t\t\tconst socketColors = equippedItem.curSocketColors(isBlacksmithing);\n\n\t\t\t// Compare whether its better to match sockets + get socket bonus, or just use best gems.\n\t\t\tconst bestGemEPNotMatchingSockets = sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemEP));\n\t\t\tconst bestGemEPMatchingSockets = socketBonusEPs[i] + sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemForSocketEP[socketColor]));\n\n\t\t\tif (bestGemEPNotMatchingSockets > bestGemEPMatchingSockets) {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGem, i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGemForSocket[socketColor], i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\titems[Number(itemSlot) as ItemSlot] = equippedItem;\n\t\t});\n\t\tgear = new Gear(items);\n\n\t\tconst allSockets: Array<{itemSlot: ItemSlot, socketIdx: number}> = Object.keys(items).map((itemSlotStr) => {\n\t\t\tconst itemSlot = parseInt(itemSlotStr) as ItemSlot;\n\t\t\tconst item = items[itemSlot];\n\t\t\tif (!item) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst numSockets = item.numSockets(isBlacksmithing);\n\t\t\treturn [...Array(numSockets).keys()]\n\t\t\t.filter(socketIdx => item.item.gemSockets[socketIdx] != GemColor.GemColorMeta)\n\t\t\t.map(socketIdx => {\n\t\t\t\treturn {\n\t\t\t\t\titemSlot: itemSlot,\n\t\t\t\t\tsocketIdx: socketIdx,\n\t\t\t\t};\n\t\t\t});\n\t\t}).flat();\n\t\tconst threeSocketCombos = permutations(allSockets, 3);\n\t\tconst calculateGearGemsEP = (gear: Gear): number => gear.statsFromGems(isBlacksmithing).computeEP(epWeights);\n\n\t\t// Now make adjustments to satisfy meta condition.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tconst metaGem = gear.getMetaGem();\n\t\t\tif (!metaGem) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst condition = Gems.getMetaGemCondition(metaGem.id);\n\t\t\t// Only TBC gems use compare color conditions, so just ignore them.\n\t\t\tif (!condition || condition.isCompareColorCondition()) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// If there are very few non-meta gem slots, just skip because it's annoying to deal with.\n\t\t\tif (gear.getAllGems(isBlacksmithing).length - 1 < 3) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// In wrath, all meta gems use min colors condition (numRed >= r && numYellow >= y && numBlue >= b)\n\t\t\t// All conditions require 3 gems, e.g. 3 of a single color, 2 of one color and 1 of another, or 1 of each.\n\t\t\t// So the maximum number of gems that ever need to change is 3.\n\n\t\t\tconst colorCombos = EpWeightsMenu.getColorCombosToSatisfyCondition(condition);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\t// Use brute-force to try every possibility.\n\t\t\tcolorCombos.forEach(colorCombo => {\n\t\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\t\tfor (let i = 0; i < colorCombo.length; i++) {\n\t\t\t\t\t\tconst gemColor = colorCombo[i];\n\t\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\t\tcurItems[itemSlot] = curItems[itemSlot]!.withGem(bestGemForColor[gemColor], socketIdx);\n\t\t\t\t\t}\n\t\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\t// Now insert 3 JC gems, if Jewelcrafting is selected.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tif (!isJewelcrafting) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst jcGems = allGems.filter(gem => gem.requiredProfession == Profession.Jewelcrafting);\n\n\t\t\tconst {\n\t\t\t\tbestGemForColor: bestJcGemForColor,\n\t\t\t\tbestGemForColorEP: bestJcGemForColorEP,\n\t\t\t\tbestGemForSocket: bestJcGemForSocket,\n\t\t\t\tbestGemForSocketEP: bestJcGemForSocketEP,\n\t\t\t\tbestGem: bestJcGem,\n\t\t\t\tbestGemEP: bestJcGemEP,\n\t\t\t} = EpWeightsMenu.findBestGems(jcGems, epWeights);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\tfor (let i = 0; i < socketCombo.length; i++) {\n\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\tconst ei = curItems[itemSlot]!;\n\t\t\t\t\tconst gemColor = ei.gems[socketIdx]!.color;\n\t\t\t\t\tcurItems[itemSlot] = ei.withGem(bestJcGemForColor[gemColor], socketIdx);\n\t\t\t\t}\n\n\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\treturn gear;\n\t}\n\n\t// Returns every possible way we could satisfy the gem condition.\n\tprivate static getColorCombosToSatisfyCondition(condition: Gems.MetaGemCondition): Array<Array<GemColor>> {\n\t\tif (condition.isOneOfEach()) {\n\t\t\treturn [\n\t\t\t\tGems.PRIMARY_COLORS,\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t].concat(\n\t\t\t\tGems.SECONDARY_COLORS.map((secondaryColor, i) => {\n\t\t\t\t\tconst remainingColor = Gems.PRIMARY_COLORS[i];\n\t\t\t\t\treturn Gems.socketToMatchingColors.get(remainingColor)!.map(matchingColor => [matchingColor, secondaryColor]);\n\t\t\t\t}).flat()\n\t\t\t);\n\t\t} else if (condition.isTwoAndOne()) {\n\t\t\tconst oneColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(1)];\n\t\t\tconst twoColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(2)];\n\t\t\tconst secondaryColor = Gems.SECONDARY_COLORS.find(color => Gems.gemColorMatchesSocket(color, oneColor) && Gems.gemColorMatchesSocket(color, twoColor))!;\n\n\t\t\treturn [\n\t\t\t\t// All the ways to get 1 point in both colors. These are partial combos,\n\t\t\t\t// which still need 1 more gem in the 2-color.\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t\t[secondaryColor],\n\t\t\t\t[oneColor, twoColor],\n\t\t\t].map(partialCombo => {\n\t\t\t\t\treturn Gems.socketToMatchingColors.get(twoColor)!.map(matchingColor => partialCombo.concat([matchingColor]));\n\t\t\t}).flat();\n\t\t} else if (condition.isThreeOfAColor()) {\n\t\t\tconst threeColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(3)];\n\t\t\tconst matchingColors = Gems.socketToMatchingColors.get(threeColor)!;\n\t\t\treturn combinationsWithDups(matchingColors, 3);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate static findBestGems(gemList: Array<Gem>, epWeights: Stats): BestGemsResult {\n\t\t// Best gem when we need a gem of a specific color.\n\t\tconst bestGemForColor: Array<Gem> = Gems.GEM_COLORS.map(color => null as unknown as Gem);\n\t\tconst bestGemForColorEP: Array<number> = Gems.GEM_COLORS.map(color => 0);\n\t\t// Best gem when we need to match a socket to activate a bonus.\n\t\tconst bestGemForSocket: Array<Gem> = bestGemForColor.slice();\n\t\tconst bestGemForSocketEP: Array<number> = bestGemForColorEP.slice();\n\t\t// The single best gem, when color doesn't matter.\n\t\tlet bestGem = gemList[0];\n\t\tlet bestGemEP = 0;\n\t\tgemList.forEach(gem => {\n\t\t\tconst gemEP = new Stats(gem.stats).computeEP(epWeights);\n\t\t\tif (gemEP > bestGemForColorEP[gem.color]) {\n\t\t\t\tbestGemForColorEP[gem.color] = gemEP;\n\t\t\t\tbestGemForColor[gem.color] = gem;\n\n\t\t\t\tif (gem.color != GemColor.GemColorMeta && gemEP > bestGemEP) {\n\t\t\t\t\tbestGemEP = gemEP;\n\t\t\t\t\tbestGem = gem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGems.GEM_COLORS.forEach(socketColor => {\n\t\t\t\tif (Gems.gemMatchesSocket(gem, socketColor) && gemEP > bestGemForSocketEP[socketColor]) {\n\t\t\t\t\tbestGemForSocketEP[socketColor] = gemEP;\n\t\t\t\t\tbestGemForSocket[socketColor] = gem;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t};\n\t}\n}\n\ninterface BestGemsResult {\n\tbestGemForColor: Array<Gem>,\n\tbestGemForColorEP: Array<number>,\n\tbestGemForSocket: Array<Gem>,\n\tbestGemForSocketEP: Array<number>,\n\tbestGem: Gem,\n\tbestGemEP: number,\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { IndividualSimSettings } from '../proto/ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace } from '../proto_utils/names.js';\nimport { talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { downloadString, getEnumValues } from '../utils.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\ndeclare var pako: any;\n\nexport function newIndividualExporters<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>): HTMLElement {\n\tconst exportSettings = document.createElement('div');\n\texportSettings.classList.add('export-settings', 'sim-dropdown-menu');\n\texportSettings.innerHTML = `\n\t\t<span id=\"exportMenuLink\" class=\"dropdown-toggle fas fa-file-export\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" arai-expanded=\"false\"></span>\n\t\t<div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"exportMenuLink\">\n\t\t</div>\n\t`;\n\tconst linkElem = exportSettings.getElementsByClassName('dropdown-toggle')[0] as HTMLElement;\n\ttippy(linkElem, {\n\t\t'content': 'Export',\n\t\t'allowHTML': true,\n\t});\n\n\tconst menuElem = exportSettings.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\tconst addMenuItem = (label: string, onClick: () => void, showInRaidSim: boolean) => {\n\t\tconst itemElem = document.createElement('span');\n\t\titemElem.classList.add('dropdown-item');\n\t\tif (!showInRaidSim) {\n\t\t\titemElem.classList.add('within-raid-sim-hide');\n\t\t}\n\t\titemElem.textContent = label;\n\t\titemElem.addEventListener('click', onClick);\n\t\tmenuElem.appendChild(itemElem);\n\t};\n\n\taddMenuItem('Link', () => new IndividualLinkExporter(menuElem, simUI), false);\n\taddMenuItem('Json', () => new IndividualJsonExporter(menuElem, simUI), true);\n\taddMenuItem('80U EP', () => new Individual80UEPExporter(menuElem, simUI), false);\n\taddMenuItem('Pawn EP', () => new IndividualPawnEPExporter(menuElem, simUI), false);\n\n\treturn exportSettings;\n}\n\nexport abstract class Exporter extends Popup {\n\tprivate readonly textElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, title: string, allowDownload: boolean) {\n\t\tsuper(parent);\n\n\t\tthis.rootElem.classList.add('exporter');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<span class=\"exporter-title\">${title}</span>\n\t\t\t<div class=\"export-content\">\n\t\t\t\t<textarea class=\"exporter-textarea\" readonly></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"actions-row\">\n\t\t\t\t<button class=\"exporter-button sim-button clipboard-button\">COPY TO CLIPBOARD</button>\n\t\t\t\t<button class=\"exporter-button sim-button download-button\">DOWNLOAD</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('exporter-textarea')[0] as HTMLElement;\n\n\t\tconst clipboardButton = this.rootElem.getElementsByClassName('clipboard-button')[0] as HTMLElement;\n\t\tclipboardButton.addEventListener('click', event => {\n\t\t\tconst data = this.textElem.textContent!;\n\t\t\tif (navigator.clipboard == undefined) {\n\t\t\t\talert(data);\n\t\t\t} else {\n\t\t\t\tnavigator.clipboard.writeText(data);\n\t\t\t}\n\t\t});\n\n\t\tconst downloadButton = this.rootElem.getElementsByClassName('download-button')[0] as HTMLElement;\n\t\tif (allowDownload) {\n\t\t\tdownloadButton.addEventListener('click', event => {\n\t\t\t\tconst data = this.textElem.textContent!;\n\t\t\t\tdownloadString(data, 'wowsims.json');\n\t\t\t});\n\t\t} else {\n\t\t\tdownloadButton.remove();\n\t\t}\n\t}\n\n\tprotected init() {\n\t\tthis.textElem.textContent = this.getData();\n\t}\n\n\tabstract getData(): string;\n}\n\nclass IndividualLinkExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Sharable Link', false);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn this.simUI.toLink();\n\t}\n}\n\nclass IndividualJsonExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'JSON Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn JSON.stringify(IndividualSimSettings.toJson(this.simUI.toProto()), null, 2);\n\t}\n}\n\nclass Individual80UEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, '80Upgrades EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst epValues = this.simUI.player.getEpWeights();\n\t\tconst allStats = (getEnumValues(Stat) as Array<Stat>).filter(stat => ![Stat.StatEnergy, Stat.StatRage].includes(stat));\n\t\treturn `https://eightyupgrades.com/ep/import?name=${encodeURIComponent('WoWSims Weights')}` +\n\t\t\tallStats\n\t\t\t\t.filter(stat => epValues.getStat(stat) != 0)\n\t\t\t\t.map(stat => `&${Individual80UEPExporter.linkNames[stat]}=${epValues.getStat(stat).toFixed(3)}`).join('');\n\t}\n\n\tstatic linkNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'strength',\n\t\t[Stat.StatAgility]: 'agility',\n\t\t[Stat.StatStamina]: 'stamina',\n\t\t[Stat.StatIntellect]: 'intellect',\n\t\t[Stat.StatSpirit]: 'spirit',\n\t\t[Stat.StatSpellPower]: 'spellDamage',\n\t\t[Stat.StatHealingPower]: 'healing',\n\t\t[Stat.StatArcaneSpellPower]: 'arcaneDamage',\n\t\t[Stat.StatFireSpellPower]: 'fireDamage',\n\t\t[Stat.StatFrostSpellPower]: 'frostDamage',\n\t\t[Stat.StatHolySpellPower]: 'holyDamage',\n\t\t[Stat.StatNatureSpellPower]: 'natureDamage',\n\t\t[Stat.StatShadowSpellPower]: 'shadowDamage',\n\t\t[Stat.StatMP5]: 'mp5',\n\t\t[Stat.StatSpellHit]: 'spellHitRating',\n\t\t[Stat.StatSpellCrit]: 'spellCritRating',\n\t\t[Stat.StatSpellHaste]: 'spellHasteRating',\n\t\t[Stat.StatSpellPenetration]: 'spellPen',\n\t\t[Stat.StatAttackPower]: 'attackPower',\n\t\t[Stat.StatMeleeHit]: 'hitRating',\n\t\t[Stat.StatMeleeCrit]: 'critRating',\n\t\t[Stat.StatMeleeHaste]: 'hasteRating',\n\t\t[Stat.StatArmorPenetration]: 'armorPen',\n\t\t[Stat.StatExpertise]: 'expertiseRating',\n\t\t[Stat.StatMana]: 'mana',\n\t\t[Stat.StatEnergy]: 'energy',\n\t\t[Stat.StatRage]: 'rage',\n\t\t[Stat.StatArmor]: 'armor',\n\t\t[Stat.StatRangedAttackPower]: 'rangedAttackPower',\n\t\t[Stat.StatDefense]: 'defenseRating',\n\t\t[Stat.StatBlock]: 'blockRating',\n\t\t[Stat.StatBlockValue]: 'blockValue',\n\t\t[Stat.StatDodge]: 'dodgeRating',\n\t\t[Stat.StatParry]: 'parryRating',\n\t\t[Stat.StatResilience]: 'resilienceRating',\n\t\t[Stat.StatHealth]: 'health',\n\t\t[Stat.StatArcaneResistance]: 'arcaneResistance',\n\t\t[Stat.StatFireResistance]: 'fireResistance',\n\t\t[Stat.StatFrostResistance]: 'frostResistance',\n\t\t[Stat.StatNatureResistance]: 'natureResistance',\n\t\t[Stat.StatShadowResistance]: 'shadowResistance',\n\t}\n}\n\nclass IndividualPawnEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Pawn EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst epValues = this.simUI.player.getEpWeights();\n\t\tconst allStats = (getEnumValues(Stat) as Array<Stat>).filter(stat => ![Stat.StatEnergy, Stat.StatRage].includes(stat));\n\t\treturn `( Pawn: v1: \"WoWSims Weights\": Class=${classNames[this.simUI.player.getClass()]},` +\n\t\t\tallStats\n\t\t\t\t.filter(stat => epValues.getStat(stat) != 0)\n\t\t\t\t.map(stat => `${IndividualPawnEPExporter.statNames[stat]}=${epValues.getStat(stat).toFixed(3)}`).join(',') +\n\t\t\t' )';\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'Strength',\n\t\t[Stat.StatAgility]: 'Agility',\n\t\t[Stat.StatStamina]: 'Stamina',\n\t\t[Stat.StatIntellect]: 'Intellect',\n\t\t[Stat.StatSpirit]: 'Spirit',\n\t\t[Stat.StatSpellPower]: 'SpellDamage',\n\t\t[Stat.StatHealingPower]: 'Healing',\n\t\t[Stat.StatArcaneSpellPower]: 'ArcaneSpellDamage',\n\t\t[Stat.StatFireSpellPower]: 'FireSpellDamage',\n\t\t[Stat.StatFrostSpellPower]: 'FrostSpellDamage',\n\t\t[Stat.StatHolySpellPower]: 'HolySpellDamage',\n\t\t[Stat.StatNatureSpellPower]: 'NatureSpellDamage',\n\t\t[Stat.StatShadowSpellPower]: 'ShadowSpellDamage',\n\t\t[Stat.StatMP5]: 'Mp5',\n\t\t[Stat.StatSpellHit]: 'SpellHitRating',\n\t\t[Stat.StatSpellCrit]: 'SpellCritRating',\n\t\t[Stat.StatSpellHaste]: 'SpellHasteRating',\n\t\t[Stat.StatSpellPenetration]: 'SpellPen',\n\t\t[Stat.StatAttackPower]: 'Ap',\n\t\t[Stat.StatMeleeHit]: 'HitRating',\n\t\t[Stat.StatMeleeCrit]: 'CritRating',\n\t\t[Stat.StatMeleeHaste]: 'HasteRating',\n\t\t[Stat.StatArmorPenetration]: 'ArmorPenetration',\n\t\t[Stat.StatExpertise]: 'ExpertiseRating',\n\t\t[Stat.StatMana]: 'Mana',\n\t\t[Stat.StatEnergy]: 'Energy',\n\t\t[Stat.StatRage]: 'Rage',\n\t\t[Stat.StatArmor]: 'Armor',\n\t\t[Stat.StatRangedAttackPower]: 'Rap',\n\t\t[Stat.StatDefense]: 'DefenseRating',\n\t\t[Stat.StatBlock]: 'BlockRating',\n\t\t[Stat.StatBlockValue]: 'BlockValue',\n\t\t[Stat.StatDodge]: 'DodgeRating',\n\t\t[Stat.StatParry]: 'ParryRating',\n\t\t[Stat.StatResilience]: 'ResilienceRating',\n\t\t[Stat.StatHealth]: 'Health',\n\t\t[Stat.StatArcaneResistance]: 'ArcaneResistance',\n\t\t[Stat.StatFireResistance]: 'FireResistance',\n\t\t[Stat.StatFrostResistance]: 'FrostResistance',\n\t\t[Stat.StatNatureResistance]: 'NatureResistance',\n\t\t[Stat.StatShadowResistance]: 'ShadowResistance',\n\t}\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { IndividualSimSettings } from '../proto/ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace } from '../proto_utils/names.js';\nimport { talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport function newIndividualImporters<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>): HTMLElement {\n\tconst importSettings = document.createElement('div');\n\timportSettings.classList.add('import-settings', 'sim-dropdown-menu');\n\timportSettings.innerHTML = `\n\t\t<span id=\"importMenuLink\" class=\"dropdown-toggle fas fa-file-import\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" arai-expanded=\"false\"></span>\n\t\t<div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"importMenuLink\">\n\t\t</div>\n\t`;\n\tconst linkElem = importSettings.getElementsByClassName('dropdown-toggle')[0] as HTMLElement;\n\ttippy(linkElem, {\n\t\t'content': 'Import',\n\t\t'allowHTML': true,\n\t});\n\n\tconst menuElem = importSettings.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\tconst addMenuItem = (label: string, onClick: () => void, showInRaidSim: boolean) => {\n\t\tconst itemElem = document.createElement('span');\n\t\titemElem.classList.add('dropdown-item');\n\t\tif (!showInRaidSim) {\n\t\t\titemElem.classList.add('within-raid-sim-hide');\n\t\t}\n\t\tif (label == 'Addon') {\n\t\t\titemElem.classList.add('experimental');\n\t\t}\n\t\titemElem.textContent = label;\n\t\titemElem.addEventListener('click', onClick);\n\t\tmenuElem.appendChild(itemElem);\n\t};\n\n\taddMenuItem('Json', () => new IndividualJsonImporter(menuElem, simUI), true);\n\taddMenuItem('80U', () => new Individual80UImporter(menuElem, simUI), true);\n\taddMenuItem('Addon', () => new IndividualAddonImporter(menuElem, simUI), true);\n\n\treturn importSettings;\n}\n\nexport abstract class Importer extends Popup {\n\tprivate readonly textElem: HTMLTextAreaElement;\n\tprotected readonly descriptionElem: HTMLElement;\n\tprotected readonly importButton: HTMLButtonElement;\n\tprivate readonly includeFile: boolean;\n\n\tconstructor(parent: HTMLElement, title: string, includeFile: boolean) {\n\t\tsuper(parent);\n\t\tthis.includeFile = includeFile;\n\t\tconst uploadInputId = 'upload-input-' + title.toLowerCase().replaceAll(' ', '-');\n\n\t\tthis.rootElem.classList.add('importer');\n\t\tlet htmlVal = `\n\t\t\t<span class=\"importer-title\">${title}</span>\n\t\t\t<div class=\"import-description\">\n\t\t\t</div>\n\t\t\t<div class=\"import-content\">\n\t\t\t\t<textarea class=\"importer-textarea\"></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"actions-row\">\n\t\t`;\n\t\tif (this.includeFile) {\n\t\t\thtmlVal += `<label for=\"${uploadInputId}\" class=\"importer-button sim-button upload-button\">UPLOAD FROM FILE</label>\n\t\t\t\t<input type=\"file\" id=\"${uploadInputId}\" class=\"importer-upload-input\" hidden>\n\t\t\t`\n\t\t}\n\t\thtmlVal += `<button class=\"importer-button sim-button import-button\">IMPORT</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.rootElem.innerHTML = htmlVal\n\n\t\tthis.addCloseButton();\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('importer-textarea')[0] as HTMLTextAreaElement;\n\t\tthis.descriptionElem = this.rootElem.getElementsByClassName('import-description')[0] as HTMLElement;\n\n\t\tif (this.includeFile) {\n\t\t\tconst uploadInput = this.rootElem.getElementsByClassName('importer-upload-input')[0] as HTMLButtonElement;\n\t\t\tuploadInput.addEventListener('change', async event => {\n\t\t\t\tconst data: string = await (event as any).target.files[0].text();\n\t\t\t\tthis.textElem.textContent = data;\n\t\t\t});\n\t\t}\n\n\t\tthis.importButton = this.rootElem.getElementsByClassName('import-button')[0] as HTMLButtonElement;\n\t\tthis.importButton.addEventListener('click', event => {\n\t\t\ttry {\n\t\t\t\tthis.onImport(this.textElem.value || '');\n\t\t\t} catch (error) {\n\t\t\t\talert('Import error: ' + error);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract onImport(data: string): void\n\n\tprotected finishIndividualImport<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>, charClass: Class, race: Race, equipmentSpec: EquipmentSpec, talentsStr: string) {\n\t\tconst playerClass = simUI.player.getClass();\n\t\tif (charClass != playerClass) {\n\t\t\tthrow new Error(`Wrong Class! Expected ${classNames[playerClass]} but found ${classNames[charClass]}!`);\n\t\t}\n\n\t\tequipmentSpec.items.forEach(item => {\n\t\t\tif (item.enchant) {\n\t\t\t\tconst dbEnchant = simUI.sim.getEnchantFlexible(item.enchant);\n\t\t\t\tif (dbEnchant) {\n\t\t\t\t\titem.enchant = dbEnchant.id;\n\t\t\t\t} else {\n\t\t\t\t\titem.enchant = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst gear = simUI.sim.lookupEquipmentSpec(equipmentSpec);\n\n\t\tconst expectedEnchantIds = equipmentSpec.items.map(item => item.enchant);\n\t\tconst foundEnchantIds = gear.asSpec().items.map(item => item.enchant);\n\t\tconst missingEnchants = expectedEnchantIds.filter(expectedId => expectedId != 0 && !foundEnchantIds.includes(expectedId));\n\n\t\tconst expectedItemIds = equipmentSpec.items.map(item => item.id);\n\t\tconst foundItemIds = gear.asSpec().items.map(item => item.id);\n\t\tconst missingItems = expectedItemIds.filter(expectedId => !foundItemIds.includes(expectedId));\n\n\t\t// Now update settings using the parsed values.\n\t\tconst eventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tsimUI.player.setRace(eventID, race);\n\t\t\tsimUI.player.setGear(eventID, gear);\n\t\t\tif (talentsStr) {\n\t\t\t\tsimUI.player.setTalentsString(eventID, talentsStr);\n\t\t\t}\n\t\t});\n\n\t\tthis.close();\n\n\t\tif (missingItems.length == 0 && missingEnchants.length == 0) {\n\t\t\talert('Import successful!');\n\t\t} else {\n\t\t\talert('Import successful, but the following IDs were not found in the sim database:' +\n\t\t\t\t(missingItems.length == 0 ? '' : '\\n\\nItems: ' + missingItems.join(', ')) +\n\t\t\t\t(missingEnchants.length == 0 ? '' : '\\n\\nEnchants: ' + missingEnchants.join(', ')));\n\t\t}\n\t}\n}\n\nclass IndividualJsonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst proto = IndividualSimSettings.fromJsonString(data);\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tif (proto.player) {\n\t\t\t\tthis.simUI.player.fromProto(TypedEvent.nextEventID(), proto.player);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), proto);\n\t\t}\n\t\tthis.close();\n\t}\n}\n\nclass Individual80UImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, '80 Upgrades Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://eightyupgrades.com\" target=\"_blank\">Eighty Upgrades</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the site's export option below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson?.character?.gameClass as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson?.character?.race as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tlet talentsStr = '';\n\t\tif (importJson?.talents?.length > 0) {\n\t\t\tconst talentIds = (importJson.talents as Array<any>).map(talentJson => talentJson.spellId);\n\t\t\ttalentsStr = talentSpellIdsToTalentString(charClass, talentIds);\n\t\t}\n\n\t\tlet equipmentSpec = EquipmentSpec.create();\n\t\t(importJson.items as Array<any>).forEach(itemJson => {\n\t\t\tlet itemSpec = ItemSpec.create();\n\t\t\titemSpec.id = itemJson.id;\n\t\t\tif (itemJson.enchant?.id) {\n\t\t\t\titemSpec.enchant = itemJson.enchant.id;\n\t\t\t}\n\t\t\tif (itemJson.gems) {\n\t\t\t\titemSpec.gems = (itemJson.gems as Array<any>).filter(gemJson => gemJson?.id).map(gemJson => gemJson.id);\n\t\t\t}\n\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t});\n\n\t\tconst gear = this.simUI.sim.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr);\n\t}\n}\n\nclass IndividualAddonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Addon Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from the <a href=\"https://www.curseforge.com/wow/addons/wowsimsexporter\" target=\"_blank\">WoWSims Importer In-Game Addon</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the addon below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson['class'] as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson['race'] as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tconst talentsStr = (importJson['talents'] as string) || '';\n\n\t\tconst gearJson = importJson['gear'];\n\t\tgearJson.items = (gearJson.items as Array<any>).filter(item => item != null);\n\t\tconst equipmentSpec = EquipmentSpec.fromJson(gearJson);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr);\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { BattleElixir } from '../proto/common.js';\nimport { Explosive } from '../proto/common.js';\nimport { Flask } from '../proto/common.js';\nimport { Food } from '../proto/common.js';\nimport { GuardianElixir } from '../proto/common.js';\nimport { RaidBuffs } from '../proto/common.js';\nimport { PartyBuffs } from '../proto/common.js';\nimport { IndividualBuffs } from '../proto/common.js';\nimport { Conjured } from '../proto/common.js';\nimport { Consumes } from '../proto/common.js';\nimport { Debuffs } from '../proto/common.js';\n\nimport { PetFood } from '../proto/common.js';\nimport { Potions } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\n\nimport * as InputHelpers from './input_helpers.js';\n\n// Raid Buffs\n\nexport const AllStatsBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48470), ActionId.fromSpellId(17051), 'giftOfTheWild'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49634), 'drumsOfTheWild'),\n], 'Stats');\n\nexport const AllStatsPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25898), 'blessingOfKings'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49633), 'drumsOfForgottenKings'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n], 'Stats %');\n\nexport const ArmorBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48942), ActionId.fromSpellId(20140), 'devotionAura'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58753), ActionId.fromSpellId(16293), 'stoneskinTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43468), 'scrollOfProtection'),\n\t// stoneskin?\n], 'Armor');\n\nexport const StaminaBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48161), ActionId.fromSpellId(14767), 'powerWordFortitude'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37094), 'scrollOfStamina'),\n], 'Stam');\n\nexport const StrengthAndAgilityBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58643), ActionId.fromSpellId(52456), 'strengthOfEarthTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57623), 'hornOfWinter'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43464), 'scrollOfAgility'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43466), 'scrollOfStrength'),\n], 'Str/Agi');\n\nexport const IntellectBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(43002), 'arcaneBrilliance'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37092), 'scrollOfIntellect'),\n], 'Int');\n\nexport const SpiritBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48073), 'divineSpirit'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37098), 'scrollOfSpirit'),\n], 'Spi');\n\nexport const AttackPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48934), ActionId.fromSpellId(20045), 'blessingOfMight'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47436), ActionId.fromSpellId(12861), 'battleShout'),\n], 'AP');\n\nexport const AttackPowerPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53138), 'abominationsMight'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(30809), 'unleashedRage'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(19506), 'trueshotAura'),\n], 'AP %');\n\nexport const DamagePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31869), 'sanctifiedRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31583), 'arcaneEmpowerment'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(34460), 'ferociousInspiration'),\n], 'Dmg %');\n\nexport const DamageReductionPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(57472), 'renewedHope'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(50720), 'vigilance'),\n], 'Mit %');\n\nexport const HastePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53648), 'swiftRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48396), 'moonkinAura', TristateEffect.TristateEffectImproved),\n], 'Haste %');\n\nexport const HealthBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47440), ActionId.fromSpellId(12861), 'commandingShout'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47982), ActionId.fromSpellId(18696), 'bloodPact'),\n], 'Health');\n\nexport const MP5Buff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48938), ActionId.fromSpellId(20245), 'blessingOfWisdom'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58774), ActionId.fromSpellId(16206), 'manaSpringTotem'),\n], 'MP5');\n\nexport const MeleeCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(17007), ActionId.fromSpellId(34300), 'leaderOfThePack'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(29801), 'rampage'),\n], 'Melee Crit');\n\nexport const MeleeHasteBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(55610), 'icyTalons'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(65990), ActionId.fromSpellId(29193), 'windfuryTotem'),\n], 'Melee Haste');\n\nexport const ReplenishmentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(48160), 'vampiricTouch'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(31878), 'judgementsOfTheWise'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(53292), 'huntingParty'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(54118), 'improvedSoulLeech'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(44561), 'enduringWinter'),\n], 'Repl', 2);\n\nexport const SpellCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(24907), ActionId.fromSpellId(48396), 'moonkinAura'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(51470), 'elementalOath'),\n], 'Spell Crit');\n\nexport const SpellHasteBuff = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(3738), 'wrathOfAirTotem'), 'Spell Haste');\n\nexport const SpellPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeMultistateRaidBuffInput(ActionId.fromSpellId(47240), 5000, 'demonicPact', 500),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57722), 'totemOfWrath'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(58656), 'flametongueTotem'),\n], 'SP');\n\nexport const Bloodlust = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(2825), 'bloodlust'), 'Lust');\n\n// Misc Buffs\nexport const RetributionAura = makeBooleanRaidBuffInput(ActionId.fromSpellId(54043), 'retributionAura');\nexport const ShadowProtection = makeBooleanRaidBuffInput(ActionId.fromSpellId(48170), 'shadowProtection');\nexport const BraidedEterniumChain = makeBooleanPartyBuffInput(ActionId.fromSpellId(31025), 'braidedEterniumChain');\nexport const ChainOfTheTwilightOwl = makeBooleanPartyBuffInput(ActionId.fromSpellId(31035), 'chainOfTheTwilightOwl');\nexport const HeroicPresence = makeBooleanPartyBuffInput(ActionId.fromSpellId(6562), 'heroicPresence');\nexport const EyeOfTheNight = makeBooleanPartyBuffInput(ActionId.fromSpellId(31033), 'eyeOfTheNight');\nexport const Thorns = makeTristateRaidBuffInput(ActionId.fromSpellId(53307), ActionId.fromSpellId(16840), 'thorns');\nexport const ManaTideTotem = makeMultistatePartyBuffInput(ActionId.fromSpellId(16190), 5, 'manaTideTotems');\nexport const Innervate = makeMultistateIndividualBuffInput(ActionId.fromSpellId(29166), 11, 'innervates');\nexport const PowerInfusion = makeMultistateIndividualBuffInput(ActionId.fromSpellId(10060), 11, 'powerInfusions');\nexport const TricksOfTheTrade = makeMultistateIndividualBuffInput(ActionId.fromSpellId(57933), 20, 'tricksOfTheTrades');\nexport const UnholyFrenzy = makeMultistateIndividualBuffInput(ActionId.fromSpellId(49016), 11, 'unholyFrenzy');\nexport const RevitalizeRejuvination = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(26982), 101, 10, 'revitalizeRejuvination');\nexport const RevitalizeWildGrowth = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(53251), 101, 10, 'revitalizeWildGrowth');\n\n// Debuffs\n\nexport const MajorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(7386), 'sunderArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(8647), 'exposeArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(55754), 'acidSpit'),\n], 'Major Ar');\n\nexport const MinorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(770), ActionId.fromSpellId(33602), 'faerieFire'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(56631), 'sting'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53598), 'sporeCloud'),\n], 'Minor Ar');\n\nexport const AttackPowerDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(26016), 'vindication'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47437), ActionId.fromSpellId(12879), 'demoralizingShout'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(48560), ActionId.fromSpellId(16862), 'demoralizingRoar'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n], 'AP');\n\nexport const BleedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33876), 'mangle'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(46855), 'trauma'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(57393), 'stampede'),\n], 'Bleed');\n\nexport const CritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(30706), 'totemOfWrath'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(20337), 'heartOfTheCrusader'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58410), 'masterPoisoner'),\n], 'Crit');\n\nexport const MeleeAttackSpeedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47502), ActionId.fromSpellId(12666), 'thunderClap'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(55095), ActionId.fromSpellId(51456), 'frostFever'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53696), 'judgementsOfTheJust'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48485), 'infectedWounds'),\n], 'Atk Spd');\n\nexport const MeleeHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(65855), 'insectSwarm'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(3043), 'scorpidSting'),\n], 'Miss');\n\nexport const PhysicalDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(29859), 'bloodFrenzy'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58413), 'savageCombat'),\n], 'Phys Vuln');\n\nexport const SpellCritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(17800), 'shadowMastery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(12873), 'improvedScorch'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(28593), 'wintersChill'),\n], 'Spell Crit');\n\nexport const SpellHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33198), 'misery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33602), 'faerieFire', TristateEffect.TristateEffectImproved),\n], 'Spell Hit');\n\nexport const SpellDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(51161), 'ebonPlaguebringer'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48511), 'earthAndMoon'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(47865), 'curseOfElements'),\n], 'Spell Dmg');\n\nexport const HuntersMark = withLabel(makeQuadstateDebuffInput(ActionId.fromSpellId(53338), ActionId.fromSpellId(19423), ActionId.fromItemId(42907), 'huntersMark'), 'Mark');\nexport const JudgementOfWisdom = withLabel(makeBooleanDebuffInput(ActionId.fromSpellId(53408), 'judgementOfWisdom'), 'JoW');\nexport const JudgementOfLight = makeBooleanDebuffInput(ActionId.fromSpellId(20271), 'judgementOfLight');\nexport const ShatteringThrow = makeMultistateIndividualBuffInput(ActionId.fromSpellId(64382), 20, 'shatteringThrows');\nexport const GiftOfArthas = makeBooleanDebuffInput(ActionId.fromSpellId(11374), 'giftOfArthas');\n\n// Consumes\nexport const ThermalSapper = makeBooleanConsumeInput(ActionId.fromItemId(42641), 'thermalSapper');\nexport const ExplosiveDecoy = makeBooleanConsumeInput(ActionId.fromItemId(40536), 'explosiveDecoy');\n\nexport const SpicedMammothTreats = makeBooleanConsumeInput(ActionId.fromItemId(43005), 'petFood', PetFood.PetFoodSpicedMammothTreats);\nexport const PetScrollOfAgilityV = makeBooleanConsumeInput(ActionId.fromItemId(27498), 'petScrollOfAgility', 5);\nexport const PetScrollOfStrengthV = makeBooleanConsumeInput(ActionId.fromItemId(27503), 'petScrollOfStrength', 5);\n\nfunction withLabel<ModObject, T>(config: InputHelpers.TypedIconPickerConfig<ModObject, T>, label: string): InputHelpers.TypedIconPickerConfig<ModObject, T> {\n\tconfig.label = label;\n\treturn config;\n}\n\nfunction makeBooleanRaidBuffInput(id: ActionId, fieldName: keyof RaidBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanPartyBuffInput(id: ActionId, fieldName: keyof PartyBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanIndividualBuffInput(id: ActionId, fieldName: keyof IndividualBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanConsumeInput(id: ActionId, fieldName: keyof Consumes, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Consumes, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getConsumes(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: Consumes) => player.setConsumes(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.consumesChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanDebuffInput(id: ActionId, fieldName: keyof Debuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, fieldName, value);\n}\n\nfunction makeTristateRaidBuffInput(id: ActionId, impId: ActionId, fieldName: keyof RaidBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateIndividualBuffInput(id: ActionId, impId: ActionId, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateDebuffInput(id: ActionId, impId: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeQuadstateDebuffInput(id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeQuadstateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, impId2, fieldName);\n}\nfunction makeMultistateRaidBuffInput(id: ActionId, numStates: number, fieldName: keyof RaidBuffs, multiplier?: number): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\nfunction makeMultistatePartyBuffInput(id: ActionId, numStates: number, fieldName: keyof PartyBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateIndividualBuffInput(id: ActionId, numStates: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateMultiplierIndividualBuffInput(id: ActionId, numStates: number, multiplier: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\n\n\n//////////////////////////////////////////////////////////////////////\n// Custom buffs that don't fit into any of the helper functions above.\n//////////////////////////////////////////////////////////////////////\n\nfunction makePotionInputFactory(consumesFieldName: keyof Consumes): (options: Array<Potions>) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, Potions> {\n\treturn makeConsumeInputFactory(consumesFieldName, [\n\t\t{ actionId: ActionId.fromItemId(33447), value: Potions.RunicHealingPotion },\n\t\t{ actionId: ActionId.fromItemId(33448), value: Potions.RunicManaPotion },\n\t\t{ actionId: ActionId.fromItemId(40093), value: Potions.IndestructiblePotion },\n\t\t{ actionId: ActionId.fromItemId(40211), value: Potions.PotionOfSpeed },\n\t\t{ actionId: ActionId.fromItemId(40212), value: Potions.PotionOfWildMagic },\n\n\t\t{ actionId: ActionId.fromItemId(22839), value: Potions.DestructionPotion },\n\t\t{ actionId: ActionId.fromItemId(22838), value: Potions.HastePotion },\n\t\t{ actionId: ActionId.fromItemId(13442), value: Potions.MightyRagePotion },\n\t\t{ actionId: ActionId.fromItemId(22832), value: Potions.SuperManaPotion },\n\t\t{ actionId: ActionId.fromItemId(31677), value: Potions.FelManaPotion },\n\t\t{ actionId: ActionId.fromItemId(22828), value: Potions.InsaneStrengthPotion },\n\t\t{ actionId: ActionId.fromItemId(22849), value: Potions.IronshieldPotion },\n\t\t{ actionId: ActionId.fromItemId(22837), value: Potions.HeroicPotion },\n\t] as Array<IconEnumValueConfig<Player<any>, Potions>>);\n}\nexport const makePotionsInput = makePotionInputFactory('defaultPotion');\nexport const makePrepopPotionsInput = makePotionInputFactory('prepopPotion');\n\nexport const makeConjuredInput = makeConsumeInputFactory('defaultConjured', [\n\t{ actionId: ActionId.fromItemId(12662), value: Conjured.ConjuredDarkRune },\n\t{ actionId: ActionId.fromItemId(22788), value: Conjured.ConjuredFlameCap },\n\t{ actionId: ActionId.fromItemId(22105), value: Conjured.ConjuredHealthstone },\n\t{ actionId: ActionId.fromItemId(7676), value: Conjured.ConjuredRogueThistleTea },\n] as Array<IconEnumValueConfig<Player<any>, Conjured>>);\n\nexport const makeFlasksInput = makeConsumeInputFactory('flask', [\n\t{ actionId: ActionId.fromItemId(46376), value: Flask.FlaskOfTheFrostWyrm },\n\t{ actionId: ActionId.fromItemId(46377), value: Flask.FlaskOfEndlessRage },\n\t{ actionId: ActionId.fromItemId(46378), value: Flask.FlaskOfPureMojo },\n\t{ actionId: ActionId.fromItemId(46379), value: Flask.FlaskOfStoneblood },\n\t{ actionId: ActionId.fromItemId(40079), value: Flask.LesserFlaskOfToughness },\n\t{ actionId: ActionId.fromItemId(44939), value: Flask.LesserFlaskOfResistance },\n\t{ actionId: ActionId.fromItemId(22861), value: Flask.FlaskOfBlindingLight },\n\t{ actionId: ActionId.fromItemId(22853), value: Flask.FlaskOfMightyRestoration },\n\t{ actionId: ActionId.fromItemId(22866), value: Flask.FlaskOfPureDeath },\n\t{ actionId: ActionId.fromItemId(22854), value: Flask.FlaskOfRelentlessAssault },\n\t{ actionId: ActionId.fromItemId(13512), value: Flask.FlaskOfSupremePower },\n\t{ actionId: ActionId.fromItemId(22851), value: Flask.FlaskOfFortification },\n\t{ actionId: ActionId.fromItemId(33208), value: Flask.FlaskOfChromaticWonder },\n] as Array<IconEnumValueConfig<Player<any>, Flask>>, (eventID: EventID, player: Player<any>, newValue: Flask) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.battleElixir = BattleElixir.BattleElixirUnknown;\n\t\tnewConsumes.guardianElixir = GuardianElixir.GuardianElixirUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeBattleElixirsInput = makeConsumeInputFactory('battleElixir', [\n\t{ actionId: ActionId.fromItemId(44325), value: BattleElixir.ElixirOfAccuracy },\n\t{ actionId: ActionId.fromItemId(44330), value: BattleElixir.ElixirOfArmorPiercing },\n\t{ actionId: ActionId.fromItemId(44327), value: BattleElixir.ElixirOfDeadlyStrikes },\n\t{ actionId: ActionId.fromItemId(44329), value: BattleElixir.ElixirOfExpertise },\n\t{ actionId: ActionId.fromItemId(44331), value: BattleElixir.ElixirOfLightningSpeed },\n\t{ actionId: ActionId.fromItemId(39666), value: BattleElixir.ElixirOfMightyAgility },\n\t{ actionId: ActionId.fromItemId(40073), value: BattleElixir.ElixirOfMightyStrength },\n\t{ actionId: ActionId.fromItemId(40076), value: BattleElixir.GurusElixir },\n\t{ actionId: ActionId.fromItemId(40070), value: BattleElixir.SpellpowerElixir },\n\t{ actionId: ActionId.fromItemId(40068), value: BattleElixir.WrathElixir },\n\t{ actionId: ActionId.fromItemId(28103), value: BattleElixir.AdeptsElixir },\n\t{ actionId: ActionId.fromItemId(9224), value: BattleElixir.ElixirOfDemonslaying },\n\t{ actionId: ActionId.fromItemId(22831), value: BattleElixir.ElixirOfMajorAgility },\n\t{ actionId: ActionId.fromItemId(22833), value: BattleElixir.ElixirOfMajorFirePower },\n\t{ actionId: ActionId.fromItemId(22827), value: BattleElixir.ElixirOfMajorFrostPower },\n\t{ actionId: ActionId.fromItemId(22835), value: BattleElixir.ElixirOfMajorShadowPower },\n\t{ actionId: ActionId.fromItemId(22824), value: BattleElixir.ElixirOfMajorStrength },\n\t{ actionId: ActionId.fromItemId(28104), value: BattleElixir.ElixirOfMastery },\n\t{ actionId: ActionId.fromItemId(13452), value: BattleElixir.ElixirOfTheMongoose },\n\t{ actionId: ActionId.fromItemId(31679), value: BattleElixir.FelStrengthElixir },\n\t{ actionId: ActionId.fromItemId(13454), value: BattleElixir.GreaterArcaneElixir },\n] as Array<IconEnumValueConfig<Player<any>, BattleElixir>>, (eventID: EventID, player: Player<any>, newValue: BattleElixir) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeGuardianElixirsInput = makeConsumeInputFactory('guardianElixir', [\n\t{ actionId: ActionId.fromItemId(44328), value: GuardianElixir.ElixirOfMightyDefense },\n\t{ actionId: ActionId.fromItemId(40078), value: GuardianElixir.ElixirOfMightyFortitude },\n\t{ actionId: ActionId.fromItemId(40109), value: GuardianElixir.ElixirOfMightyMageblood },\n\t{ actionId: ActionId.fromItemId(44332), value: GuardianElixir.ElixirOfMightyThoughts },\n\t{ actionId: ActionId.fromItemId(40097), value: GuardianElixir.ElixirOfProtection },\n\t{ actionId: ActionId.fromItemId(40072), value: GuardianElixir.ElixirOfSpirit },\n\t{ actionId: ActionId.fromItemId(9088), value: GuardianElixir.GiftOfArthas },\n\t{ actionId: ActionId.fromItemId(32067), value: GuardianElixir.ElixirOfDraenicWisdom },\n\t{ actionId: ActionId.fromItemId(32068), value: GuardianElixir.ElixirOfIronskin },\n\t{ actionId: ActionId.fromItemId(22834), value: GuardianElixir.ElixirOfMajorDefense },\n\t{ actionId: ActionId.fromItemId(32062), value: GuardianElixir.ElixirOfMajorFortitude },\n\t{ actionId: ActionId.fromItemId(22840), value: GuardianElixir.ElixirOfMajorMageblood },\n] as Array<IconEnumValueConfig<Player<any>, GuardianElixir>>, (eventID: EventID, player: Player<any>, newValue: GuardianElixir) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeFoodInput = makeConsumeInputFactory('food', [\n\t{ actionId: ActionId.fromItemId(43015), value: Food.FoodFishFeast },\n\t{ actionId: ActionId.fromItemId(34753), value: Food.FoodGreatFeast },\n\t{ actionId: ActionId.fromItemId(42999), value: Food.FoodBlackenedDragonfin },\n\t{ actionId: ActionId.fromItemId(42995), value: Food.FoodHeartyRhino },\n\t{ actionId: ActionId.fromItemId(34754), value: Food.FoodMegaMammothMeal },\n\t{ actionId: ActionId.fromItemId(34756), value: Food.FoodSpicedWormBurger },\n\t{ actionId: ActionId.fromItemId(42994), value: Food.FoodRhinoliciousWormsteak },\n\t{ actionId: ActionId.fromItemId(34769), value: Food.FoodImperialMantaSteak },\n\t{ actionId: ActionId.fromItemId(42996), value: Food.FoodSnapperExtreme },\n\t{ actionId: ActionId.fromItemId(34758), value: Food.FoodMightyRhinoDogs },\n\t{ actionId: ActionId.fromItemId(34767), value: Food.FoodFirecrackerSalmon },\n\t{ actionId: ActionId.fromItemId(42998), value: Food.FoodCuttlesteak },\n\t{ actionId: ActionId.fromItemId(43000), value: Food.FoodDragonfinFilet },\n\n\t{ actionId: ActionId.fromItemId(27657), value: Food.FoodBlackenedBasilisk },\n\t{ actionId: ActionId.fromItemId(27664), value: Food.FoodGrilledMudfish },\n\t{ actionId: ActionId.fromItemId(27655), value: Food.FoodRavagerDog },\n\t{ actionId: ActionId.fromItemId(27658), value: Food.FoodRoastedClefthoof },\n\t{ actionId: ActionId.fromItemId(33872), value: Food.FoodSpicyHotTalbuk },\n\t{ actionId: ActionId.fromItemId(33825), value: Food.FoodSkullfishSoup },\n\t{ actionId: ActionId.fromItemId(33052), value: Food.FoodFishermansFeast },\n] as Array<IconEnumValueConfig<Player<any>, Food>>);\n\nexport const FillerExplosiveInput = makeConsumeInput('fillerExplosive', [\n\t{ actionId: ActionId.fromItemId(41119), value: Explosive.ExplosiveSaroniteBomb },\n\t{ actionId: ActionId.fromItemId(40771), value: Explosive.ExplosiveCobaltFragBomb },\n] as Array<IconEnumValueConfig<Player<any>, Explosive>>);\n\nfunction makeConsumeInputFactory<T extends number>(consumesFieldName: keyof Consumes, allOptions: Array<IconEnumValueConfig<Player<any>, T>>, onSet?: (eventID: EventID, player: Player<any>, newValue: T) => void): (options: Array<T>) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\treturn (options: Array<T>) => {\n\t\treturn {\n\t\t\ttype: 'iconEnum',\n\t\t\tnumColumns: options.length > 5 ? 2 : 1,\n\t\t\tvalues: [\n\t\t\t\t{ color: 'grey', value: 0 } as unknown as IconEnumValueConfig<Player<any>, T>,\n\t\t\t].concat(options.map(option => allOptions.find(allOption => allOption.value == option)!)),\n\t\t\tequals: (a: T, b: T) => a == b,\n\t\t\tzeroValue: 0 as T,\n\t\t\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getConsumes()[consumesFieldName] as T,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst newConsumes = player.getConsumes();\n\t\t\t\t(newConsumes[consumesFieldName] as number) = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t\t\t\tif (onSet) {\n\t\t\t\t\t\tonSet(eventID, player, newValue as T);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t};\n}\n\nfunction makeConsumeInput<T extends number>(consumesFieldName: keyof Consumes, allOptions: Array<IconEnumValueConfig<Player<any>, T>>, onSet?: (eventID: EventID, player: Player<any>, newValue: T) => void): InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\tconst factory = makeConsumeInputFactory(consumesFieldName, allOptions, onSet);\n\treturn factory(allOptions.map(option => option.value));\n}\n","export const OTHER_BUFFS_SECTION = 'Buffs provided by other party/raid members.';\nexport const DEBUFFS_SECTION = 'Debuffs applied by other raid members.';\nexport const COOLDOWNS_SECTION = 'Specify cooldown timings, in seconds. Cooldowns will be used as soon as possible after their specified timings. When not specified, cooldowns will be used when ready and it is sensible to do so.<br><br>Multiple timings can be provided by separating with commas. Any cooldown usages after the last provided timing will use the default logic.';\nexport const BLESSINGS_SECTION = 'Specify Paladin Blessings for each role, in order of priority. Blessings in the 1st column will be used if there is at least 1 Paladin in the raid, 2nd column if at least 2, etc.';\n\nexport const BASIC_BIS_DISCLAIMER = '<p>Preset gear lists are intended as rough approximations of BIS, and will often not be the absolute highest-DPS setup for you. Your optimal gear setup will depend on many factors; that\\'s why we have a sim!</p><p>Items may also be omitted from the presets if they are highly contested and clearly better utilized on other classes, to encourage equitable gearing for the raid as a whole.</p>';\n","import { ActionId } from './proto_utils/action_id.js';\nimport { BattleElixir, HandType } from './proto/common.js';\nimport { BonusStatsPicker } from './components/bonus_stats_picker.js';\nimport { BooleanPicker, BooleanPickerConfig } from './components/boolean_picker.js';\nimport { CharacterStats, StatMods } from './components/character_stats.js';\nimport { Class } from './proto/common.js';\nimport { Conjured } from './proto/common.js';\nimport { Consumes } from './proto/common.js';\nimport { Cooldowns } from './proto/common.js';\nimport { CooldownsPicker } from './components/cooldowns_picker.js';\nimport { Debuffs } from './proto/common.js';\nimport { DetailedResults } from './components/detailed_results.js';\n\nimport { CustomRotationPicker } from './components/custom_rotation_picker.js';\nimport { Encounter as EncounterProto } from './proto/common.js';\nimport { Encounter } from './encounter.js';\nimport { EncounterPicker, EncounterPickerConfig } from './components/encounter_picker.js';\nimport { EnumPicker, EnumPickerConfig } from './components/enum_picker.js';\nimport { EquipmentSpec } from './proto/common.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Flask } from './proto/common.js';\nimport { Food } from './proto/common.js';\nimport { Gear } from './proto_utils/gear.js';\nimport { GearPicker } from './components/gear_picker.js';\nimport { Glyphs } from './proto/common.js';\nimport { GuardianElixir } from './proto/common.js';\nimport { HealingModel } from './proto/common.js';\nimport { HunterPetTalentsPicker } from './talents/hunter_pet.js';\nimport { IconEnumPicker, IconEnumPickerConfig } from './components/icon_enum_picker.js';\nimport { IconPicker, IconPickerConfig } from './components/icon_picker.js';\nimport { ItemSlot } from './proto/common.js';\nimport { IndividualBuffs } from './proto/common.js';\nimport { IndividualSimSettings } from './proto/ui.js';\nimport { Input } from './components/input.js';\nimport { LogRunner } from './components/log_runner.js';\nimport { MobType } from './proto/common.js';\nimport { MultiIconPicker } from './components/multi_icon_picker.js';\nimport { NumberPicker, NumberPickerConfig } from './components/number_picker.js';\nimport { Party } from './party.js';\nimport { PartyBuffs } from './proto/common.js';\nimport { PetFood } from './proto/common.js';\nimport { Player as PlayerProto } from './proto/api.js';\nimport { Player } from './player.js';\nimport { Potions } from './proto/common.js';\nimport { Profession } from './proto/common.js';\nimport { Race } from './proto/common.js';\nimport { Raid } from './raid.js';\nimport { RaidBuffs } from './proto/common.js';\nimport { SavedDataConfig, SavedDataManager } from './components/saved_data_manager.js';\nimport { SavedEncounter } from './proto/ui.js';\nimport { SavedGearSet } from './proto/ui.js';\nimport { SavedSettings } from './proto/ui.js';\nimport { SavedTalents } from './proto/ui.js';\nimport { SettingsMenu } from './components/settings_menu.js';\nimport { ShattrathFaction } from './proto/common.js';\nimport { Sim } from './sim.js';\nimport { SimOptions } from './proto/api.js';\nimport { SimSettings as SimSettingsProto } from './proto/ui.js';\nimport { SimUI, SimWarning } from './sim_ui.js';\nimport { Spec } from './proto/common.js';\nimport { SpecOptions } from './proto_utils/utils.js';\nimport { SpecRotation } from './proto_utils/utils.js';\nimport { Stat } from './proto/common.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport { Stats } from './proto_utils/stats.js';\nimport { shattFactionNames } from './proto_utils/names.js';\nimport { Target } from './target.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { addRaidSimAction, RaidSimResultsManager } from './components/raid_sim_action.js';\nimport { addStatWeightsAction } from './components/stat_weights_action.js';\nimport { equalsOrBothNull, getEnumValues } from './utils.js';\nimport { getMetaGemConditionDescription } from './proto_utils/gems.js';\nimport { getTalentPoints } from './proto_utils/utils.js';\nimport { isDualWieldSpec } from './proto_utils/utils.js';\nimport { simLaunchStatuses } from './launched_sims.js';\nimport { makePetTypeInputConfig } from './talents/hunter_pet.js';\nimport { newIndividualExporters } from './components/exporters.js';\nimport { newIndividualImporters } from './components/importers.js';\nimport { newGlyphsPicker } from './talents/factory.js';\nimport { newTalentsPicker } from './talents/factory.js';\nimport { professionNames, raceNames } from './proto_utils/names.js';\nimport { isHealingSpec, isTankSpec } from './proto_utils/utils.js';\nimport { specNames } from './proto_utils/utils.js';\nimport { specToEligibleRaces } from './proto_utils/utils.js';\nimport { specToLocalStorageKey } from './proto_utils/utils.js';\n\nimport * as IconInputs from './components/icon_inputs.js';\nimport * as InputHelpers from './components/input_helpers.js';\nimport * as Mechanics from './constants/mechanics.js';\nimport * as OtherConstants from './constants/other.js';\nimport * as Tooltips from './constants/tooltips.js';\n\ndeclare var Muuri: any;\ndeclare var tippy: any;\ndeclare var pako: any;\n\nconst SAVED_GEAR_STORAGE_KEY = '__savedGear__';\nconst SAVED_ROTATION_STORAGE_KEY = '__savedRotation__';\nconst SAVED_SETTINGS_STORAGE_KEY = '__savedSettings__';\nconst SAVED_TALENTS_STORAGE_KEY = '__savedTalents__';\n\nexport type InputConfig<ModObject> = (\n\tInputHelpers.TypedBooleanPickerConfig<ModObject> |\n\tInputHelpers.TypedNumberPickerConfig<ModObject> |\n\tInputHelpers.TypedEnumPickerConfig<ModObject> |\n\tInputHelpers.TypedCustomRotationPickerConfig<any, any>);\n\nexport type IconInputConfig<ModObject, T> = (\n\tInputHelpers.TypedIconPickerConfig<ModObject, T> |\n\tInputHelpers.TypedIconEnumPickerConfig<ModObject, T>);\n\nexport interface InputSection {\n\ttooltip?: string,\n\tinputs: Array<InputConfig<Player<any>>>,\n}\n\nexport interface OtherDefaults {\n\tprofession1?: Profession,\n\tprofession2?: Profession,\n\tdistanceFromTarget?: number,\n}\n\nexport interface IndividualSimUIConfig<SpecType extends Spec> {\n\t// Additional css class to add to the root element.\n\tcssClass: string,\n\n\tknownIssues?: Array<string>;\n\twarnings?: Array<(simUI: IndividualSimUI<SpecType>) => SimWarning>,\n\n\tepStats: Array<Stat>;\n\tepReferenceStat: Stat;\n\tdisplayStats: Array<Stat>;\n\tmodifyDisplayStats?: (player: Player<SpecType>) => StatMods,\n\n\tdefaults: {\n\t\tgear: EquipmentSpec,\n\t\tepWeights: Stats,\n\t\tconsumes: Consumes,\n\t\trotation: SpecRotation<SpecType>,\n\t\ttalents: SavedTalents,\n\t\tspecOptions: SpecOptions<SpecType>,\n\n\t\traidBuffs: RaidBuffs,\n\t\tpartyBuffs: PartyBuffs,\n\t\tindividualBuffs: IndividualBuffs,\n\n\t\tdebuffs: Debuffs,\n\n\t\tother?: OtherDefaults,\n\t},\n\n\tplayerIconInputs: Array<IconInputConfig<Player<SpecType>, any>>,\n\tpetConsumeInputs?: Array<IconInputConfig<Player<SpecType>, any>>,\n\trotationInputs: InputSection;\n\trotationIconInputs?: Array<IconInputConfig<Player<any>, any>>;\n\tincludeBuffDebuffInputs: Array<any>,\n\texcludeBuffDebuffInputs: Array<any>,\n\totherInputs: InputSection;\n\n\t// Extra UI sections with the same input config as other sections.\n\tadditionalSections?: Record<string, InputSection>;\n\tadditionalIconSections?: Record<string, Array<IconInputConfig<Player<any>, any>>>;\n\n\t// For when extra sections are needed, with even more flexibility than additionalSections.\n\t// Return value is the label for the section.\n\tcustomSections?: Array<(simUI: IndividualSimUI<SpecType>, parentElem: HTMLElement) => string>;\n\n\tencounterPicker: EncounterPickerConfig,\n\n\tpresets: {\n\t\tgear: Array<PresetGear>,\n\t\ttalents: Array<SavedDataConfig<Player<any>, SavedTalents>>,\n\t\trotation?: Array<SavedDataConfig<Player<any>, string>>,\n\t},\n}\n\nexport interface GearAndStats {\n\tgear: Gear,\n\tbonusStats?: Stats,\n}\n\nexport interface PresetGear {\n\tname: string;\n\tgear: EquipmentSpec;\n\ttooltip?: string;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface Settings {\n\traidBuffs: RaidBuffs,\n\tpartyBuffs: PartyBuffs,\n\tindividualBuffs: IndividualBuffs,\n\tconsumes: Consumes,\n\trace: Race,\n\tprofessions?: Array<Profession>;\n}\n\n// Extended shared UI for all individual player sims.\nexport abstract class IndividualSimUI<SpecType extends Spec> extends SimUI {\n\treadonly player: Player<SpecType>;\n\treadonly individualConfig: IndividualSimUIConfig<SpecType>;\n\n\tprivate raidSimResultsManager: RaidSimResultsManager | null;\n\n\tprivate settingsMuuri: any;\n\n\tprevEpIterations: number;\n\tprevEpSimResult: StatWeightsResult | null;\n\n\tconstructor(parentElem: HTMLElement, player: Player<SpecType>, config: IndividualSimUIConfig<SpecType>) {\n\t\tsuper(parentElem, player.sim, {\n\t\t\tspec: player.spec,\n\t\t\tknownIssues: config.knownIssues,\n\t\t\tlaunchStatus: simLaunchStatuses[player.spec],\n\t\t});\n\t\tthis.rootElem.classList.add('individual-sim-ui', config.cssClass);\n\t\tthis.player = player;\n\t\tthis.individualConfig = config;\n\t\tthis.raidSimResultsManager = null;\n\t\tthis.settingsMuuri = null;\n\t\tthis.prevEpIterations = 0;\n\t\tthis.prevEpSimResult = null;\n\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.getGear().hasInactiveMetaGem(this.player.isBlacksmithing())) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tconst metaGem = this.player.getGear().getMetaGem()!;\n\t\t\t\treturn `Meta gem disabled (${metaGem.name}): ${getMetaGemConditionDescription(metaGem)}`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.professionChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tconst failedProfReqs = this.player.getGear().getFailedProfessionRequirements(this.player.getProfessions());\n\t\t\t\tif (failedProfReqs.length == 0) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn failedProfReqs.map(fpr => `${fpr.name} requires ${professionNames[fpr.requiredProfession]}, but it is not selected.`);\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst jcGems = this.player.getGear().getJCGems(this.player.isBlacksmithing());\n\t\t\t\tif (jcGems.length <= 3) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn `Only 3 Jewelcrafting Gems are allowed, but ${jcGems.length} are equipped.`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.talentsChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst talentPoints = getTalentPoints(this.player.getTalentsString());\n\n\t\t\t\tif (talentPoints == 0) {\n\t\t\t\t\t// Just return here, so we don't show a warning during page load.\n\t\t\t\t\treturn '';\n\t\t\t\t} else if (talentPoints < Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'Unspent talent points.';\n\t\t\t\t} else if (talentPoints > Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'More than maximum talent points spent.';\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.talentsChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.canDualWield2H() && \n\t\t\t\t(this.player.getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.handType == HandType.HandTypeTwoHand && \n\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand) != null ||\n\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.handType == HandType.HandTypeTwoHand)) {\n\t\t\t\t\t\treturn \"Dual wielding two-handed weapon(s) without Titan's Grip spec.\"\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\t(config.warnings || []).forEach(warning => this.addWarning(warning(this)));\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\t// This needs to go before all the UI components so that gear loading is the\n\t\t\t// first callback invoked from waitForInit().\n\t\t\tthis.sim.waitForInit().then(() => this.loadSettings());\n\t\t}\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addTopbarComponents();\n\t\tthis.addGearTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addTalentsTab();\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.addDetailedResultsTab();\n\t\t\tthis.addLogTab();\n\t\t}\n\n\t\tthis.player.changeEmitter.on(() => this.recomputeSettingsLayout());\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet loadedSettings = false;\n\n\t\t\tlet hash = window.location.hash;\n\t\t\tif (hash.length > 1) {\n\t\t\t\t// Remove leading '#'\n\t\t\t\thash = hash.substring(1);\n\t\t\t\ttry {\n\t\t\t\t\tconst binary = atob(hash);\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst settingsBytes = pako.inflate(bytes);\n\t\t\t\t\tconst settings = IndividualSimSettings.fromBinary(settingsBytes);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse settings from window hash: ' + e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.location.hash = '';\n\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (!loadedSettings && savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = IndividualSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!loadedSettings) {\n\t\t\t\tthis.applyDefaults(initEventID);\n\t\t\t}\n\t\t\tthis.player.setName(initEventID, 'Player');\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(eventID => {\n\t\t\t\tconst jsonStr = IndividualSimSettings.toJsonString(this.toProto());\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\taddStatWeightsAction(this, this.individualConfig.epStats, this.individualConfig.epReferenceStat);\n\n\t\tconst characterStats = new CharacterStats(\n\t\t\tthis.rootElem.getElementsByClassName('sim-sidebar-footer')[0] as HTMLElement,\n\t\t\tthis.player,\n\t\t\tthis.individualConfig.displayStats,\n\t\t\tthis.individualConfig.modifyDisplayStats);\n\t}\n\n\tprivate addTopbarComponents() {\n\t\tthis.addToolbarItem(newIndividualImporters(this));\n\t\tthis.addToolbarItem(newIndividualExporters(this));\n\n\t\tconst optionsMenu = document.createElement('span');\n\t\toptionsMenu.classList.add('fas', 'fa-cog');\n\t\ttippy(optionsMenu, {\n\t\t\t'content': 'Options',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\toptionsMenu.addEventListener('click', event => {\n\t\t\tnew SettingsMenu(this.rootElem, this);\n\t\t});\n\t\tthis.addToolbarItem(optionsMenu);\n\t}\n\n\tprivate addGearTab() {\n\t\tthis.addTab('GEAR', 'gear-tab', `\n\t\t\t<div class=\"gear-tab-columns\">\n\t\t\t\t<div class=\"left-gear-panel\">\n\t\t\t\t\t<div class=\"gear-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"right-gear-panel\">\n\t\t\t\t\t<div class=\"bonus-stats-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"saved-gear-manager\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst gearPicker = new GearPicker(this.rootElem.getElementsByClassName('gear-picker')[0] as HTMLElement, this.player);\n\t\tconst bonusStatsPicker = new BonusStatsPicker(this.rootElem.getElementsByClassName('bonus-stats-picker')[0] as HTMLElement, this.player, this.individualConfig.epStats);\n\n\t\tconst savedGearManager = new SavedDataManager<Player<any>, SavedGearSet>(this.rootElem.getElementsByClassName('saved-gear-manager')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Gear',\n\t\t\tstorageKey: this.getSavedGearStorageKey(),\n\t\t\tgetData: (player: Player<any>) => {\n\t\t\t\treturn SavedGearSet.create({\n\t\t\t\t\tgear: player.getGear().asSpec(),\n\t\t\t\t\tbonusStats: player.getBonusStats().asArray(),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newSavedGear: SavedGearSet) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setGear(eventID, this.sim.lookupEquipmentSpec(newSavedGear.gear || EquipmentSpec.create()));\n\t\t\t\t\tplayer.setBonusStats(eventID, new Stats(newSavedGear.bonusStats || []));\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.player.changeEmitter],\n\t\t\tequals: (a: SavedGearSet, b: SavedGearSet) => SavedGearSet.equals(a, b),\n\t\t\ttoJson: (a: SavedGearSet) => SavedGearSet.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedGearSet.fromJson(obj),\n\t\t});\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedGearManager.loadUserData();\n\t\t\tthis.individualConfig.presets.gear.forEach(presetGear => {\n\t\t\t\tsavedGearManager.addSavedData({\n\t\t\t\t\tname: presetGear.name,\n\t\t\t\t\ttooltip: presetGear.tooltip,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: SavedGearSet.create({\n\t\t\t\t\t\t// Convert to gear and back so order is always the same.\n\t\t\t\t\t\tgear: this.sim.lookupEquipmentSpec(presetGear.gear).asSpec(),\n\t\t\t\t\t\tbonusStats: new Stats().asArray(),\n\t\t\t\t\t}),\n\t\t\t\t\tenableWhen: presetGear.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\n\tprivate addSettingsTab() {\n\t\tthis.addTab('SETTINGS', 'settings-tab', `\n\t\t\t<div class=\"settings-inputs\">\n\t\t\t\t<div class=\"settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section encounter-section within-raid-sim-hide\">\n\t\t\t\t\t\t<legend>Encounter</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section race-section\">\n\t\t\t\t\t\t<legend>Player</legend>\n\t\t\t\t\t\t<div class=\"settings-section-iconrow player-iconrow\"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section rotation-section\">\n\t\t\t\t\t\t<legend>Rotation</legend>\n\t\t\t\t\t\t<div class=\"settings-section-iconrow rotation-iconrow\"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container custom-sections-container\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container labeled-icon-section within-raid-sim-hide\">\n\t\t\t\t\t<fieldset class=\"settings-section buffs-section\">\n\t\t\t\t\t\t<legend>Raid Buffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section debuffs-section damage-metrics\">\n\t\t\t\t\t\t<legend>Debuffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section new-consumes-section\">\n\t\t\t\t\t\t<legend>Consumes</legend>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Potions</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-prepot\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-potions\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-conjured\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Elixirs</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-flasks\"></div>\n\t\t\t\t\t\t\t\t<span>OR</span>\n\t\t\t\t\t\t\t\t<div class=\"consumes-battle-elixirs\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-guardian-elixirs\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Food</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-food\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row damage-metrics\">\n\t\t\t\t\t\t\t<span>Eng</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-trade\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row consumes-row-pet\">\n\t\t\t\t\t\t\t<span>Pet</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-pet\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-other\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container cooldowns-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section cooldowns-section\">\n\t\t\t\t\t\t<legend>Cooldowns</legend>\n\t\t\t\t\t\t<div class=\"cooldowns-section-content\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section other-settings-section\">\n\t\t\t\t\t\t<legend>Other</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"settings-bottom-bar\">\n\t\t\t\t<div class=\"saved-encounter-manager within-raid-sim-hide\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"saved-settings-manager within-raid-sim-hide\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst settingsTab = this.rootElem.getElementsByClassName('settings-inputs')[0] as HTMLElement;\n\n\t\tconst configureIconSection = (sectionElem: HTMLElement, iconPickers: Array<any>, tooltip?: string, adjustColumns?: boolean) => {\n\t\t\tif (tooltip) {\n\t\t\t\ttippy(sectionElem, {\n\t\t\t\t\t'content': tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (iconPickers.length == 0) {\n\t\t\t\tsectionElem.style.display = 'none';\n\t\t\t} else if (adjustColumns) {\n\t\t\t\tif (iconPickers.length < 4) {\n\t\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${iconPickers.length}, 1fr)`;\n\t\t\t\t} else if (iconPickers.length > 4 && iconPickers.length < 8) {\n\t\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${Math.ceil(iconPickers.length / 2)}, 1fr)`;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst makeIconInput = (parent: HTMLElement, inputConfig: IconInputConfig<Player<SpecType>, any>) => {\n\t\t\tif (inputConfig.type == 'icon') {\n\t\t\t\treturn new IconPicker<Player<SpecType>, any>(parent, this.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'iconEnum') {\n\t\t\t\treturn new IconEnumPicker<Player<SpecType>, any>(parent, this.player, inputConfig);\n\t\t\t}\n\t\t};\n\n\t\tconst playerIconsSection = this.rootElem.getElementsByClassName('player-iconrow')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tplayerIconsSection,\n\t\t\tthis.individualConfig.playerIconInputs.map(iconInput => makeIconInput(playerIconsSection, iconInput)),\n\t\t\t'', true);\n\n\t\tconst buffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.AllStatsBuff, stats: [] },\n\t\t\t{ item: IconInputs.AllStatsPercentBuff, stats: [] },\n\t\t\t{ item: IconInputs.HealthBuff, stats: [Stat.StatHealth] },\n\t\t\t{ item: IconInputs.ArmorBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.StaminaBuff, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.StrengthAndAgilityBuff, stats: [Stat.StatStrength, Stat.StatAgility] },\n\t\t\t{ item: IconInputs.IntellectBuff, stats: [Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.SpiritBuff, stats: [Stat.StatSpirit] },\n\t\t\t{ item: IconInputs.AttackPowerBuff, stats: [Stat.StatAttackPower] },\n\t\t\t{ item: IconInputs.AttackPowerPercentBuff, stats: [Stat.StatAttackPower] },\n\t\t\t{ item: IconInputs.MeleeCritBuff, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.MeleeHasteBuff, stats: [Stat.StatMeleeHaste] },\n\t\t\t{ item: IconInputs.SpellPowerBuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellCritBuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.HastePercentBuff, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: IconInputs.DamagePercentBuff, stats: [Stat.StatAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.DamageReductionPercentBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MP5Buff, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.ReplenishmentBuff, stats: [Stat.StatMP5] },\n\t\t]);\n\t\tconst buffsSection = this.rootElem.getElementsByClassName('buffs-section')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tbuffsSection,\n\t\t\tbuffOptions.map(multiIconInput => new MultiIconPicker(buffsSection, this.player, multiIconInput, this)),\n\t\t\tTooltips.OTHER_BUFFS_SECTION);\n\n\t\tconst otherBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.Bloodlust, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: IconInputs.SpellHasteBuff, stats: [Stat.StatSpellHaste] },\n\t\t] as Array<StatOption<IconInputConfig<Player<any>, any>>>);\n\t\totherBuffOptions.forEach(iconInput => makeIconInput(buffsSection, iconInput));\n\n\t\tconst revitalizeBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.RevitalizeRejuvination, stats: [] },\n\t\t\t{ item: IconInputs.RevitalizeWildGrowth, stats: [] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (revitalizeBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(buffsSection, this.player, {\n\t\t\t\tinputs: revitalizeBuffOptions,\n\t\t\t\tnumColumns: 1,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Revitalize',\n\t\t\t\tcategoryId: ActionId.fromSpellId(48545),\n\t\t\t}, this);\n\t\t}\n\n\t\tconst miscBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.HeroicPresence, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.BraidedEterniumChain, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.ChainOfTheTwilightOwl, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.EyeOfTheNight, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.Thorns, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.RetributionAura, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.ShadowProtection, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ManaTideTotem, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.Innervate, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.PowerInfusion, stats: [Stat.StatMP5, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.TricksOfTheTrade, stats: [Stat.StatAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.UnholyFrenzy, stats: [Stat.StatAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(buffsSection, this.player, {\n\t\t\t\tinputs: miscBuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this);\n\t\t}\n\n\t\tconst debuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.MajorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.MinorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.PhysicalDamageDebuff, stats: [Stat.StatAttackPower] },\n\t\t\t{ item: IconInputs.BleedDebuff, stats: [Stat.StatAttackPower] },\n\t\t\t{ item: IconInputs.SpellDamageDebuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellHitDebuff, stats: [Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.SpellCritDebuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.CritDebuff, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.AttackPowerDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeAttackSpeedDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeHitDebuff, stats: [Stat.StatDodge] },\n\t\t]);\n\t\tconst debuffsSection = this.rootElem.getElementsByClassName('debuffs-section')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tdebuffsSection,\n\t\t\tdebuffOptions.map(multiIconInput => new MultiIconPicker(debuffsSection, this.player, multiIconInput, this)),\n\t\t\tTooltips.DEBUFFS_SECTION);\n\n\t\tconst otherDebuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfWisdom, stats: [Stat.StatMP5, Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.HuntersMark, stats: [Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<InputHelpers.TypedIconPickerConfig<Player<any>, any>>>);\n\t\totherDebuffOptions.forEach(iconInput => makeIconInput(debuffsSection, iconInput));\n\n\t\tconst miscDebuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfLight, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ShatteringThrow, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.GiftOfArthas, stats: [Stat.StatAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscDebuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(debuffsSection, this.player, {\n\t\t\t\tinputs: miscDebuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this);\n\t\t}\n\n\t\tconst prepopPotionOptions = this.splitRelevantOptions([\n\t\t\t// This list is smaller because some potions don't make sense to use as prepot.\n\t\t\t// E.g. healing/mana potions.\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (prepopPotionOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-prepot')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makePrepopPotionsInput(prepopPotionOptions));\n\t\t\ttippy(elem, {\n\t\t\t\t'content': 'Prepop Potion (1s before combat)',\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst potionOptions = this.splitRelevantOptions([\n\t\t\t{ item: Potions.RunicHealingPotion, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.RunicManaPotion, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (potionOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-potions')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makePotionsInput(potionOptions));\n\t\t\ttippy(elem, {\n\t\t\t\t'content': 'Combat Potion',\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst conjuredOptions = this.splitRelevantOptions([\n\t\t\tthis.player.getClass() == Class.ClassRogue ? { item: Conjured.ConjuredRogueThistleTea, stats: [] } : null,\n\t\t\t{ item: Conjured.ConjuredHealthstone, stats: [Stat.StatStamina] },\n\t\t\t{ item: Conjured.ConjuredDarkRune, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Conjured.ConjuredFlameCap, stats: [Stat.StatStrength, Stat.StatAgility, Stat.StatFireSpellPower] },\n\t\t]);\n\t\tif (conjuredOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-conjured')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeConjuredInput(conjuredOptions));\n\t\t}\n\n\t\tconst flaskOptions = this.splitRelevantOptions([\n\t\t\t{ item: Flask.FlaskOfTheFrostWyrm, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Flask.FlaskOfEndlessRage, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: Flask.FlaskOfPureMojo, stats: [Stat.StatMP5] },\n\t\t\t{ item: Flask.FlaskOfStoneblood, stats: [Stat.StatStamina] },\n\t\t\t{ item: Flask.LesserFlaskOfToughness, stats: [Stat.StatResilience] },\n\t\t\t{ item: Flask.LesserFlaskOfResistance, stats: [Stat.StatArcaneResistance, Stat.StatFireResistance, Stat.StatFrostResistance, Stat.StatNatureResistance, Stat.StatShadowResistance] },\n\t\t]);\n\t\tif (flaskOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-flasks')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeFlasksInput(flaskOptions));\n\t\t}\n\n\t\tconst battleElixirOptions = this.splitRelevantOptions([\n\t\t\t{ item: BattleElixir.ElixirOfAccuracy, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: BattleElixir.ElixirOfArmorPiercing, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: BattleElixir.ElixirOfDeadlyStrikes, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: BattleElixir.ElixirOfExpertise, stats: [Stat.StatExpertise] },\n\t\t\t{ item: BattleElixir.ElixirOfLightningSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyAgility, stats: [Stat.StatAgility] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyStrength, stats: [Stat.StatStrength] },\n\t\t\t{ item: BattleElixir.GurusElixir, stats: [Stat.StatStamina, Stat.StatAgility, Stat.StatStrength, Stat.StatSpirit, Stat.StatIntellect] },\n\t\t\t{ item: BattleElixir.SpellpowerElixir, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: BattleElixir.WrathElixir, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t]);\n\t\tif (battleElixirOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-battle-elixirs')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeBattleElixirsInput(battleElixirOptions));\n\t\t}\n\n\t\tconst guardianElixirOptions = this.splitRelevantOptions([\n\t\t\t{ item: GuardianElixir.ElixirOfMightyDefense, stats: [Stat.StatDefense] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyFortitude, stats: [Stat.StatStamina] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyMageblood, stats: [Stat.StatMP5] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyThoughts, stats: [Stat.StatIntellect] },\n\t\t\t{ item: GuardianElixir.ElixirOfProtection, stats: [Stat.StatArmor] },\n\t\t\t{ item: GuardianElixir.ElixirOfSpirit, stats: [Stat.StatSpirit] },\n\t\t\t{ item: GuardianElixir.GiftOfArthas, stats: [Stat.StatStamina] },\n\t\t]);\n\t\tif (guardianElixirOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-guardian-elixirs')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeGuardianElixirsInput(guardianElixirOptions));\n\t\t}\n\n\t\tconst foodOptions = this.splitRelevantOptions([\n\t\t\t{ item: Food.FoodFishFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodGreatFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodBlackenedDragonfin, stats: [Stat.StatAgility] },\n\t\t\t{ item: Food.FoodDragonfinFilet, stats: [Stat.StatStrength] },\n\t\t\t{ item: Food.FoodCuttlesteak, stats: [Stat.StatSpirit] },\n\t\t\t{ item: Food.FoodMegaMammothMeal, stats: [Stat.StatAttackPower] },\n\t\t\t{ item: Food.FoodHeartyRhino, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: Food.FoodRhinoliciousWormsteak, stats: [Stat.StatExpertise] },\n\t\t\t{ item: Food.FoodFirecrackerSalmon, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodSnapperExtreme, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: Food.FoodSpicedWormBurger, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: Food.FoodImperialMantaSteak, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Food.FoodMightyRhinoDogs, stats: [Stat.StatMP5] },\n\t\t]);\n\t\tif (foodOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-food')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeFoodInput(foodOptions));\n\t\t}\n\n\t\tconst tradeConsumesElem = this.rootElem.getElementsByClassName('consumes-trade')[0] as HTMLElement;\n\t\t//tradeConsumesElem.parentElement!.style.display = 'none';\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.ThermalSapper);\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.ExplosiveDecoy);\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.FillerExplosiveInput);\n\n\t\tconst updateProfession = () => {\n\t\t\tif (this.player.hasProfession(Profession.Engineering)) {\n\t\t\t\ttradeConsumesElem.parentElement!.style.removeProperty('display');\n\t\t\t} else {\n\t\t\t\ttradeConsumesElem.parentElement!.style.display = 'none';\n\t\t\t}\n\t\t};\n\t\tthis.player.professionChangeEmitter.on(updateProfession);\n\t\tupdateProfession();\n\n\t\tif (this.individualConfig.petConsumeInputs?.length) {\n\t\t\tconst petConsumesElem = this.rootElem.getElementsByClassName('consumes-pet')[0] as HTMLElement;\n\t\t\tthis.individualConfig.petConsumeInputs.map(iconInput => makeIconInput(petConsumesElem, iconInput));\n\t\t} else {\n\t\t\tconst petRowElem = this.rootElem.getElementsByClassName('consumes-row-pet')[0] as HTMLElement;\n\t\t\tpetRowElem.style.display = 'none';\n\t\t}\n\n\t\tconst configureInputSection = (sectionElem: HTMLElement, sectionConfig: InputSection) => {\n\t\t\tif (sectionConfig.tooltip) {\n\t\t\t\ttippy(sectionElem, {\n\t\t\t\t\t'content': sectionConfig.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsectionConfig.inputs.forEach(inputConfig => {\n\t\t\t\tif (inputConfig.type == 'number') {\n\t\t\t\t\tnew NumberPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'boolean') {\n\t\t\t\t\tnew BooleanPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'enum') {\n\t\t\t\t\tnew EnumPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'customRotation') {\n\t\t\t\t\tnew CustomRotationPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tif (this.individualConfig.rotationIconInputs?.length) {\n\t\t\tconst rotationIconSection = this.rootElem.getElementsByClassName('rotation-iconrow')[0] as HTMLElement;\n\t\t\tconfigureIconSection(\n\t\t\t\trotationIconSection,\n\t\t\t\tthis.individualConfig.rotationIconInputs.map(iconInput => makeIconInput(rotationIconSection, iconInput)),\n\t\t\t\t'', true);\n\t\t}\n\n\n\t\tconfigureInputSection(this.rootElem.getElementsByClassName('rotation-section')[0] as HTMLElement, this.individualConfig.rotationInputs);\n\n\t\tif (this.individualConfig.otherInputs?.inputs.length) {\n\t\t\tconfigureInputSection(this.rootElem.getElementsByClassName('other-settings-section')[0] as HTMLElement, this.individualConfig.otherInputs);\n\t\t}\n\n\t\tconst races = specToEligibleRaces[this.player.spec];\n\t\tconst racePicker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Race',\n\t\t\tvalues: races.map(race => {\n\t\t\t\treturn {\n\t\t\t\t\tname: raceNames[race],\n\t\t\t\t\tvalue: race,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.raceChangeEmitter,\n\t\t\tgetValue: sim => sim.getRace(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setRace(eventID, newValue),\n\t\t});\n\t\tconst professions = getEnumValues(Profession) as Array<Profession>;\n\t\tconst profession1Picker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Profession 1',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession1(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession1(eventID, newValue),\n\t\t});\n\t\tconst profession2Picker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Profession 2',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession2(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession2(eventID, newValue),\n\t\t});\n\t\tconst shattFactionPicker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Shatt Faction',\n\t\t\tvalues: [ShattrathFaction.ShattrathFactionAldor, ShattrathFaction.ShattrathFactionScryer].map(faction => {\n\t\t\t\treturn {\n\t\t\t\t\tname: shattFactionNames[faction],\n\t\t\t\t\tvalue: faction,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.gearChangeEmitter,\n\t\t\tgetValue: sim => sim.getShattFaction(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setShattFaction(eventID, newValue),\n\t\t\tshowWhen: (player: Player<any>) => this.player.getEquippedItem(ItemSlot.ItemSlotNeck)?.item.id == 34678 || this.player.getEquippedItem(ItemSlot.ItemSlotNeck)?.item.id == 34679,\n\t\t});\n\n\t\tconst encounterSectionElem = settingsTab.getElementsByClassName('encounter-section')[0] as HTMLElement;\n\t\tnew EncounterPicker(encounterSectionElem, this.sim.encounter, this.individualConfig.encounterPicker, this);\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rootElem.getElementsByClassName('saved-encounter-manager')[0] as HTMLElement, this.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\tstorageKey: this.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\n\t\tconst cooldownSectionElem = settingsTab.getElementsByClassName('cooldowns-section')[0] as HTMLElement;\n\t\tconst cooldownContentElem = settingsTab.getElementsByClassName('cooldowns-section-content')[0] as HTMLElement;\n\t\tnew CooldownsPicker(cooldownContentElem, this.player);\n\t\ttippy(cooldownSectionElem, {\n\t\t\tcontent: Tooltips.COOLDOWNS_SECTION,\n\t\t\tallowHTML: true,\n\t\t\tplacement: 'left',\n\t\t});\n\n\t\t// Init Muuri layout only when settings tab is clicked, because it needs the elements\n\t\t// to be shown so it can calculate sizes.\n\t\t(this.rootElem.getElementsByClassName('settings-tab-tab')[0] as HTMLElement)!.addEventListener('click', event => {\n\t\t\tif (this.settingsMuuri == null) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.settingsMuuri = new Muuri('.settings-inputs');\n\t\t\t\t}, 200); // Magic amount of time before Muuri init seems to work\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.recomputeSettingsLayout();\n\t\t\t}, 200);\n\t\t});\n\n\t\tconst savedSettingsManager = new SavedDataManager<IndividualSimUI<any>, SavedSettings>(this.rootElem.getElementsByClassName('saved-settings-manager')[0] as HTMLElement, this, {\n\t\t\tlabel: 'Settings',\n\t\t\tstorageKey: this.getSavedSettingsStorageKey(),\n\t\t\tgetData: (simUI: IndividualSimUI<any>) => {\n\t\t\t\treturn SavedSettings.create({\n\t\t\t\t\traidBuffs: simUI.sim.raid.getBuffs(),\n\t\t\t\t\tpartyBuffs: simUI.player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\t\t\tplayerBuffs: simUI.player.getBuffs(),\n\t\t\t\t\tdebuffs: simUI.sim.raid.getDebuffs(),\n\t\t\t\t\tconsumes: simUI.player.getConsumes(),\n\t\t\t\t\trace: simUI.player.getRace(),\n\t\t\t\t\tcooldowns: simUI.player.getCooldowns(),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, simUI: IndividualSimUI<any>, newSettings: SavedSettings) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tsimUI.sim.raid.setBuffs(eventID, newSettings.raidBuffs || RaidBuffs.create());\n\t\t\t\t\tsimUI.sim.raid.setDebuffs(eventID, newSettings.debuffs || Debuffs.create());\n\t\t\t\t\tconst party = simUI.player.getParty();\n\t\t\t\t\tif (party) {\n\t\t\t\t\t\tparty.setBuffs(eventID, newSettings.partyBuffs || PartyBuffs.create());\n\t\t\t\t\t}\n\t\t\t\t\tsimUI.player.setBuffs(eventID, newSettings.playerBuffs || IndividualBuffs.create());\n\t\t\t\t\tsimUI.player.setConsumes(eventID, newSettings.consumes || Consumes.create());\n\t\t\t\t\tsimUI.player.setRace(eventID, newSettings.race);\n\t\t\t\t\tsimUI.player.setCooldowns(eventID, newSettings.cooldowns || Cooldowns.create());\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [\n\t\t\t\tthis.sim.raid.buffsChangeEmitter,\n\t\t\t\tthis.sim.raid.debuffsChangeEmitter,\n\t\t\t\tthis.player.getParty()!.buffsChangeEmitter,\n\t\t\t\tthis.player.buffsChangeEmitter,\n\t\t\t\tthis.player.consumesChangeEmitter,\n\t\t\t\tthis.player.raceChangeEmitter,\n\t\t\t\tthis.player.cooldownsChangeEmitter,\n\t\t\t],\n\t\t\tequals: (a: SavedSettings, b: SavedSettings) => SavedSettings.equals(a, b),\n\t\t\ttoJson: (a: SavedSettings) => SavedSettings.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedSettings.fromJson(obj),\n\t\t});\n\n\t\tconst customSectionsContainer = this.rootElem.getElementsByClassName('custom-sections-container')[0] as HTMLElement;\n\t\tlet anyCustomSections = false;\n\t\tfor (const [sectionName, sectionConfig] of Object.entries(this.individualConfig.additionalSections || {})) {\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tsectionElem.innerHTML = `<legend>${sectionName}</legend>`;\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconfigureInputSection(sectionElem, sectionConfig);\n\t\t\tanyCustomSections = true;\n\t\t};\n\n\t\tfor (const [sectionName, sectionConfig] of Object.entries(this.individualConfig.additionalIconSections || {})) {\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tsectionElem.innerHTML = `<legend>${sectionName}</legend>`;\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconfigureIconSection(sectionElem, sectionConfig.map(iconInput => makeIconInput(sectionElem, iconInput)));\n\t\t\tanyCustomSections = true;\n\t\t};\n\n\t\t(this.individualConfig.customSections || []).forEach(customSection => {\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconst sectionName = customSection(this, sectionElem);\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tconst labelElem = document.createElement('legend');\n\t\t\tlabelElem.textContent = sectionName;\n\t\t\tsectionElem.prepend(labelElem);\n\t\t\tanyCustomSections = true;\n\t\t});\n\n\t\tif (!anyCustomSections) {\n\t\t\tcustomSectionsContainer.remove();\n\t\t}\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t\tsavedSettingsManager.loadUserData();\n\t\t});\n\n\t\tArray.from(this.rootElem.getElementsByClassName('settings-section-container')).forEach((container, i) => {\n\t\t\t(container as HTMLElement).style.zIndex = String(1000 - i);\n\t\t});\n\t}\n\n\tprivate addTalentsTab() {\n\t\tthis.addTab('TALENTS', 'talents-tab', `\n\t\t\t<div class=\"player-pet-toggle\">\n\t\t\t</div>\n\t\t\t<div class=\"talents-content\">\n\t\t\t\t<div class=\"talents-tab-content\">\n\t\t\t\t\t<div class=\"talents-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"glyphs-picker\">\n\t\t\t\t\t<span>Glyphs</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"saved-talents-manager\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"talents-content\">\n\t\t\t\t<div class=\"talents-tab-content\">\n\t\t\t\t\t<div class=\"pet-talents-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst talentsPicker = newTalentsPicker(this.rootElem.getElementsByClassName('talents-picker')[0] as HTMLElement, this.player);\n\t\tconst glyphsPicker = newGlyphsPicker(this.rootElem.getElementsByClassName('glyphs-picker')[0] as HTMLElement, this.player);\n\n\t\tconst savedTalentsManager = new SavedDataManager<Player<any>, SavedTalents>(this.rootElem.getElementsByClassName('saved-talents-manager')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Talents',\n\t\t\tstorageKey: this.getSavedTalentsStorageKey(),\n\t\t\tgetData: (player: Player<any>) => SavedTalents.create({\n\t\t\t\ttalentsString: player.getTalentsString(),\n\t\t\t\tglyphs: player.getGlyphs(),\n\t\t\t}),\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newTalents: SavedTalents) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents.talentsString);\n\t\t\t\t\tplayer.setGlyphs(eventID, newTalents.glyphs || Glyphs.create());\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.player.talentsChangeEmitter, this.player.glyphsChangeEmitter],\n\t\t\tequals: (a: SavedTalents, b: SavedTalents) => SavedTalents.equals(a, b),\n\t\t\ttoJson: (a: SavedTalents) => SavedTalents.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedTalents.fromJson(obj),\n\t\t});\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedTalentsManager.loadUserData();\n\t\t\tthis.individualConfig.presets.talents.forEach(config => {\n\t\t\t\tconfig.isPreset = true;\n\t\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\t\tname: config.name,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: config.data,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (this.player.getClass() == Class.ClassHunter) {\n\t\t\t\tconst petTalentsPicker = new HunterPetTalentsPicker(this.rootElem.getElementsByClassName('pet-talents-picker')[0] as HTMLElement, this.player as Player<Spec.SpecHunter>);\n\n\t\t\t\tlet curShown = 0;\n\t\t\t\tconst toggledElems = Array.from(this.rootElem.getElementsByClassName('talents-content')) as Array<HTMLElement>;\n\t\t\t\tconst updateToggle = () => {\n\t\t\t\t\ttoggledElems[1 - curShown].style.display = 'none';\n\t\t\t\t\ttoggledElems[curShown].style.removeProperty('display');\n\n\t\t\t\t\tif (curShown == 0) {\n\t\t\t\t\t\tpetTypeToggle.rootElem.style.display = 'none';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpetTypeToggle.rootElem.style.removeProperty('display');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst toggleContainer = this.rootElem.getElementsByClassName('player-pet-toggle')[0] as HTMLElement;\n\t\t\t\tconst playerPetToggle = new EnumPicker(toggleContainer, this, {\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{ name: 'Player', value: 0 },\n\t\t\t\t\t\t{ name: 'Pet', value: 1 },\n\t\t\t\t\t],\n\t\t\t\t\tchangedEvent: sim => new TypedEvent(),\n\t\t\t\t\tgetValue: sim => curShown,\n\t\t\t\t\tsetValue: (eventID, sim, newValue) => {\n\t\t\t\t\t\tcurShown = newValue;\n\t\t\t\t\t\tupdateToggle();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst petTypeToggle = new IconEnumPicker(toggleContainer, this.player as Player<Spec.SpecHunter>, makePetTypeInputConfig(false));\n\t\t\t\tupdateToggle();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab('DETAILED RESULTS', 'detailed-results-tab', `\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst detailedResults = new DetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate addLogTab() {\n\t\tthis.addTab('LOG', 'log-tab', `\n\t\t\t<div class=\"log-runner\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst logRunner = new LogRunner(this.rootElem.getElementsByClassName('log-runner')[0] as HTMLElement, this);\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\n\t\t\tthis.player.applySharedDefaults(eventID);\n\t\t\tthis.player.setRace(eventID, specToEligibleRaces[this.player.spec][0]);\n\t\t\tthis.player.setGear(eventID, this.sim.lookupEquipmentSpec(this.individualConfig.defaults.gear));\n\t\t\tthis.player.setConsumes(eventID, this.individualConfig.defaults.consumes);\n\t\t\tthis.player.setRotation(eventID, this.individualConfig.defaults.rotation);\n\t\t\tthis.player.setTalentsString(eventID, this.individualConfig.defaults.talents.talentsString);\n\t\t\tthis.player.setGlyphs(eventID, this.individualConfig.defaults.talents.glyphs || Glyphs.create());\n\t\t\tthis.player.setSpecOptions(eventID, this.individualConfig.defaults.specOptions);\n\t\t\tthis.player.setBuffs(eventID, this.individualConfig.defaults.individualBuffs);\n\t\t\tthis.player.getParty()!.setBuffs(eventID, this.individualConfig.defaults.partyBuffs);\n\t\t\tthis.player.getRaid()!.setBuffs(eventID, this.individualConfig.defaults.raidBuffs);\n\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\tthis.player.setProfession1(eventID, this.individualConfig.defaults.other?.profession1 || Profession.Engineering);\n\t\t\tthis.player.setProfession2(eventID, this.individualConfig.defaults.other?.profession2 || Profession.Jewelcrafting);\n\t\t\tthis.player.setDistanceFromTarget(eventID, this.individualConfig.defaults.other?.distanceFromTarget || 0);\n\n\t\t\tif (this.isWithinRaidSim) {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, 0);\n\t\t\t} else {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, healingSpec ? 9 : 0);\n\t\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\t\tthis.sim.raid.setDebuffs(eventID, this.individualConfig.defaults.debuffs);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\n\t\t\t\tif (tankSpec) {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, [this.player.makeRaidTarget()]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, []);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSavedGearStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_GEAR_STORAGE_KEY);\n\t}\n\n\tgetSavedRotationStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_ROTATION_STORAGE_KEY);\n\t}\n\n\tgetSavedSettingsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_SETTINGS_STORAGE_KEY);\n\t}\n\n\tgetSavedTalentsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_TALENTS_STORAGE_KEY);\n\t}\n\n\tprivate recomputeSettingsLayout() {\n\t\tif (this.settingsMuuri) {\n\t\t\t//this.settingsMuuri.refreshItems();\n\t\t}\n\t\twindow.dispatchEvent(new Event('resize'));\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\t// Local storage is shared by all sites under the same domain, so we need to use\n\t\t// different keys for each spec site.\n\t\treturn specToLocalStorageKey[this.player.spec] + keyPart;\n\t}\n\n\ttoProto(): IndividualSimSettings {\n\t\treturn IndividualSimSettings.create({\n\t\t\tsettings: this.sim.toProto(),\n\t\t\tplayer: this.player.toProto(true),\n\t\t\traidBuffs: this.sim.raid.getBuffs(),\n\t\t\tdebuffs: this.sim.raid.getDebuffs(),\n\t\t\ttanks: this.sim.raid.getTanks(),\n\t\t\tpartyBuffs: this.player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t\tepWeights: this.player.getEpWeights().asArray(),\n\t\t\ttargetDummies: this.sim.raid.getTargetDummies(),\n\t\t});\n\t}\n\n\ttoLink(): string {\n\t\tconst proto = this.toProto();\n\t\t// When sharing links, people generally don't intend to share settings/ep weights.\n\t\tproto.settings = undefined;\n\t\tproto.epWeights = [];\n\n\t\tconst protoBytes = IndividualSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\treturn linkUrl.toString();\n\t}\n\n\tfromProto(eventID: EventID, settings: IndividualSimSettings) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (!settings.player) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (settings.settings) {\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t}\n\t\t\tthis.player.fromProto(eventID, settings.player);\n\t\t\tif (settings.epWeights?.length > 0) {\n\t\t\t\tthis.player.setEpWeights(eventID, new Stats(settings.epWeights));\n\t\t\t} else {\n\t\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\t}\n\t\t\tthis.sim.raid.setBuffs(eventID, settings.raidBuffs || RaidBuffs.create());\n\t\t\tthis.sim.raid.setDebuffs(eventID, settings.debuffs || Debuffs.create());\n\t\t\tthis.sim.raid.setTanks(eventID, settings.tanks || []);\n\t\t\tthis.sim.raid.setTargetDummies(eventID, settings.targetDummies);\n\t\t\tconst party = this.player.getParty();\n\t\t\tif (party) {\n\t\t\t\tparty.setBuffs(eventID, settings.partyBuffs || PartyBuffs.create());\n\t\t\t}\n\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\n\t\t\t// Needed because of new proto field addition. Can remove on 2022/11/14 (2 months).\n\t\t\tif (!isHealingSpec(this.player.spec)) {\n\t\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tsplitRelevantOptions<T>(options: Array<StatOption<T> | null>): Array<T> {\n\t\treturn options\n\t\t\t.filter(option => option != null)\n\t\t\t.filter(option =>\n\t\t\t\tthis.individualConfig.includeBuffDebuffInputs.includes(option!.item) ||\n\t\t\t\toption!.stats.length == 0 ||\n\t\t\t\toption!.stats.some(stat => this.individualConfig.epStats.includes(stat)))\n\t\t\t.filter(option =>\n\t\t\t\t!this.individualConfig.excludeBuffDebuffInputs.includes(option!.item))\n\t\t\t.map(option => option!.item);\n\t}\n}\n\nexport interface StatOption<T> {\n\tstats: Array<Stat>,\n\titem: T,\n}\n"],"names":["Target","constructor","sim","this","id","name","level","Mechanics.BOSS_LEVEL","mobType","MobType","MobTypeDemon","tankIndex","stats","Stats","swingSpeed","minBaseDamage","dualWield","dualWieldPenalty","suppressDodge","parryHaste","spellSchool","SpellSchool","SpellSchoolPhysical","idChangeEmitter","TypedEvent","nameChangeEmitter","levelChangeEmitter","mobTypeChangeEmitter","propChangeEmitter","statsChangeEmitter","changeEmitter","forEach","emitter","on","eventID","emit","encounter","getId","setId","newId","getName","setName","newName","getLevel","setLevel","newLevel","getMobType","setMobType","newMobType","getTankIndex","setTankIndex","newTankIndex","getSwingSpeed","setSwingSpeed","newSwingSpeed","getMinBaseDamage","setMinBaseDamage","newMinBaseDamage","getDualWield","setDualWield","newDualWield","getDualWieldPenalty","setDualWieldPenalty","newDualWieldPenalty","getSuppressDodge","setSuppressDodge","newSuppressDodge","getParryHaste","setParryHaste","newParryHaste","getSpellSchool","setSpellSchool","newSpellSchool","getStats","setStats","newStats","equals","matchesPreset","preset","TargetProto","toProto","target","applyPreset","fromProto","create","asArray","proto","freezeAllAndDo","clone","newTarget","static","MobTypeUndead","fromMap","Stat","StatArmor","StatAttackPower","defaultProto","Encounter","duration","durationVariation","executeProportion20","executeProportion25","executeProportion35","useHealth","targetsChangeEmitter","durationChangeEmitter","executeProportionChangeEmitter","targets","fromDefaults","nextEventID","primaryTarget","getDurationVariation","setDurationVariation","newDuration","getDuration","setDuration","getExecuteProportion20","setExecuteProportion20","newExecuteProportion20","getExecuteProportion25","setExecuteProportion25","newExecuteProportion25","getExecuteProportion35","setExecuteProportion35","newExecuteProportion35","getUseHealth","setUseHealth","newUseHealth","getNumTargets","length","getTargets","slice","setTargets","newTargets","every","i","t","push","nt","EncounterProto","map","targetProto","applyDefaults","MAX_NUM_PARTIES","Raid","buffs","RaidBuffs","debuffs","Debuffs","tanks","targetDummies","compChangeEmitter","buffsChangeEmitter","debuffsChangeEmitter","tanksChangeEmitter","targetDummiesChangeEmitter","parties","Array","keys","newParty","Party","onAny","size","sum","party","isEmpty","getParties","getParty","index","getPlayers","flat","getPlayer","Math","floor","MAX_PARTY_SIZE","getPlayerFromRaidTarget","raidTarget","targetIndex","NO_TARGET","setPlayer","newPlayer","getClassCount","playerClass","filter","player","getClass","getBuffs","setBuffs","newBuffs","totemOfWrath","newDebuff","setDebuffs","getDebuffs","newDebuffs","getTanks","RaidTarget","tank","setTanks","newTanks","getTargetDummies","setTargetDummies","newTargetDummies","forExport","RaidProto","clear","SIM_WORKER_URL","REPO_NAME","WorkerPool","numWorkers","workers","SimWorker","getLeastBusyWorker","reduce","curMinWorker","nextWorker","numTasksRunning","async","requestName","request","doApiCall","result","makeApiCall","GearListRequest","toBinary","GearListResult","fromBinary","ComputeStatsRequest","ComputeStatsResult","onProgress","console","log","StatWeightsRequest","toJsonString","worker","makeTaskId","addPromiseFunc","newProgressHandler","err","resultData","ProgressMetrics","StatWeightsResult","finalWeightResult","RaidSimRequest","resultJson","RaidSimResult","toJson","finalRaidResult","JSON","stringify","progressData","progress","taskIdsToPromiseFuncs","window","Worker","resolveReady","onReady","Promise","_resolve","_reject","onmessage","event","data","msg","postMessage","warn","promiseFuncs","outputData","callback","onError","characters","charAt","random","taskPromise","resolve","reject","inputData","_Sim","iterations","phase","OtherConstants.CURRENT_PHASE","faction","Faction","Alliance","fixedRngSeed","show1hWeapons","show2hWeapons","showMatchingGems","showDamageMetrics","showThreatMetrics","showHealingMetrics","showExperimental","items","enchants","gems","presetEncounters","presetTargets","iterationsChangeEmitter","phaseChangeEmitter","factionChangeEmitter","fixedRngSeedChangeEmitter","lastUsedRngSeedChangeEmitter","show1hWeaponsChangeEmitter","show2hWeaponsChangeEmitter","showMatchingGemsChangeEmitter","showDamageMetricsChangeEmitter","showThreatMetricsChangeEmitter","showHealingMetricsChangeEmitter","showExperimentalChangeEmitter","crashEmitter","simResultEmitter","lastUsedRngSeed","modifyRaidProto","workerPool","_initPromise","getGearList","then","item","gem","encounters","path","e","raid","settingsChangeEmitter","updateCharacterStats","waitForInit","setModifyRaidProto","newModFn","getModifiedRaidProto","raidProto","players","equipment","gear","lookupEquipmentSpec","gearChanged","isBlacksmith","profession1","profession2","includes","Profession","Blacksmithing","hasInactiveMetaGem","withoutMetaGem","withoutBlacksmithSockets","asSpec","makeRaidSimRequest","debug","simOptions","SimOptions","getIterations","randomSeed","BigInt","nextRngSeed","debugFirstIteration","Error","raidSimAsync","errorResult","SimError","simResult","SimResult","makeNew","req","computeStats","raidStats","partyStats","partyIndex","playerStats","playerIndex","setCurrentStats","epStats","epReferenceStat","getRaidIndex","raidBuffs","partyBuffs","statsToWeigh","statWeightsAsync","getItems","slot","Object","values","getEligibleItemSlots","getEnchants","enchant","getEligibleEnchantSlots","getEnchantFlexible","find","effectId","getGems","socketColor","gemEligibleForSocket","getMatchingGems","gemMatchesSocket","getPresetEncounter","getPresetTarget","getAllPresetEncounters","getAllPresetTargets","getPhase","setPhase","newPhase","getFaction","setFaction","newFaction","getFixedRngSeed","setFixedRngSeed","newFixedRngSeed","rngSeed","MAX_RNG_SEED","getLastUsedRngSeed","getShow1hWeapons","setShow1hWeapons","newShow1hWeapons","getShow2hWeapons","setShow2hWeapons","newShow2hWeapons","getShowMatchingGems","setShowMatchingGems","newShowMatchingGems","getShowDamageMetrics","setShowDamageMetrics","newShowDamageMetrics","getShowThreatMetrics","setShowThreatMetrics","newShowThreatMetrics","getShowHealingMetrics","setShowHealingMetrics","newShowHealingMetrics","getShowExperimental","setShowExperimental","newShowExperimental","setIterations","newIterations","lookupItemSpec","itemSpec","type","gemId","EquippedItem","equipSpec","gearMap","assignedSlot","Item","Gear","SimSettingsProto","Number","isTankSim","isHealingSim","Sim","pow","errorStr","super","NumberPicker","Input","parent","modObject","config","float","positive","inputElem","document","createElement","inputMode","min","onchange","value","abs","parseInt","toString","classList","add","rootElem","appendChild","init","addEventListener","inputChanged","getInputElem","getInputValue","parseFloat","setInputValue","newValue","String","BonusStatsPicker","Component","label","textContent","tippy","content","allowHTML","statPickers","statOrder","stat","statNames","changedEvent","bonusStatsChangeEmitter","getValue","getBonusStats","getStat","setValue","bonusStats","withStat","player2","setBonusStats","statPicker","remove","BooleanPicker","Boolean","checked","spellPowerTypeStats","StatArcaneSpellPower","StatFireSpellPower","StatFrostSpellPower","StatHolySpellPower","StatNatureSpellPower","StatShadowSpellPower","CharacterStats","modifyDisplayStats","table","valueElems","tooltipElems","row","innerHTML","toUpperCase","valueElem","getElementsByClassName","tooltipElem","updateStats","currentStatsEmitter","getCurrentStats","statMods","talents","baseStats","gearStats","talentsStats","buffsStats","consumesStats","debuffStats","getDebuffStats","finalStats","gearDelta","subtract","talentsDelta","buffsDelta","consumesDelta","idx","statDisplayString","rawValue","StatSpellPower","displayStr","round","StatMeleeHit","Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE","toFixed","StatSpellHit","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","StatMeleeCrit","StatSpellCrit","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","StatMeleeHaste","Class","ClassDruid","ClassShaman","ClassPaladin","ClassDeathknight","Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT","Mechanics.HASTE_RATING_PER_HASTE_PERCENT","StatSpellHaste","StatExpertise","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","StatDefense","Mechanics.CHARACTER_LEVEL","Mechanics.DEFENSE_RATING_PER_DEFENSE","StatBlock","Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE","StatDodge","Mechanics.DODGE_RATING_PER_DODGE_CHANCE","StatParry","Mechanics.PARRY_RATING_PER_PARRY_CHANCE","misery","faerieFire","TristateEffect","TristateEffectImproved","addStat","heartOfTheCrusader","masterPoisoner","Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE","improvedScorch","wintersChill","shadowMastery","IconEnumPicker","modObj","currentValue","zeroValue","buttonElem","dropdownElem","preventDefault","style","display","gridTemplateColumns","numColumns","valueConfig","optionContainer","option","setImage","tooltip","showWhen","dispatchEvent","Event","setActionImage","elem","actionId","fillAndSet","backgroundImage","backgroundColor","color","backupIconUrl","backupId","NumberListPicker","placeholder","str","split","val","isNaN","arrayEquals","v","join","CooldownsPicker","parentElem","cooldownPickers","update","cooldowns","getCooldowns","cooldown","deleteButton","newCooldowns","splice","setCooldowns","makeActionPicker","ActionId","fill","filledId","makeTimingsPicker","cooldownIndex","availableCooldowns","extraCssClasses","ActionIdProto","concat","cooldownAction","a","b","cooldownsChangeEmitter","Cooldown","timings","enableWhen","curCooldown","DetailedResults","simUI","simResultsManager","tabWindow","latestRun","updateSettings","computedStyles","getComputedStyle","url","URL","location","protocol","host","searchParams","append","getPropertyValue","trim","isIndividualSim","href","iframeElem","closed","open","setSimRunData","focus","currentChangeEmitter","runData","getRunData","simRunData","DetailedResultsUpdate","oneofKind","settings","contentWindow","ListPicker","itemPickerPairs","title","itemLabel","titleTooltip","itemsDiv","newItem","newList","pair","removePairs","ipp","curItems","addNewPicker","from","children","getPickerIndex","picker","findIndex","itemContainer","inlineMenuBar","itemHTML","upButton","error","swap","downButton","copyButton","copiedItem","copyItem","itemElem","itemPicker","newItemPicker","CustomRotationPicker","modPlayer","spells","CustomRotation","CustomSpell","oldItem","listPicker","CustomSpellPicker","modSpell","oldShowWhen","spell","setSpell","cr","EnumPicker","selectElem","EncounterPicker","modEncounter","addEncounterFieldPickers","showExecuteProportion","labelTooltip","pe","isHealingSpec","spec","isTankSpec","advancedButton","AdvancedEncounterPicker","Popup","addCloseButton","encounterTypeContainer","encounter2","header","targetsElem","TargetPicker","modTarget","section1","section2","section3","mobTypeEnumValues","ALL_TARGET_STATS","statData","SpellSchoolArcane","SpellSchoolFire","SpellSchoolFrost","SpellSchoolHoly","SpellSchoolNature","SpellSchoolShadow","obj","StatHealth","StatArcaneResistance","StatFireResistance","StatFrostResistance","StatNatureResistance","StatShadowResistance","StatBlockValue","MobTypeUnknown","MobTypeBeast","MobTypeDragonkin","MobTypeElemental","MobTypeGiant","MobTypeHumanoid","MobTypeMechanical","descriptionsPromise","getEnchantDescription","fetch","response","json","descriptionsMap","idStr","StartingConjured","Conjured","ConjuredUnknown","ConjuredDarkRune","ConjuredFlameCap","ConjuredRogueThistleTea","consumesChangeEmitter","getConsumes","startingConjured","newConsumes","setConsumes","InFrontOfTarget","inFrontOfTargetChangeEmitter","getInFrontOfTarget","setInFrontOfTarget","DistanceFromTarget","distanceFromTargetChangeEmitter","getDistanceFromTarget","setDistanceFromTarget","TankAssignment","getRaid","makeRaidTarget","emptyRaidTarget","IncomingHps","getHealingModel","hps","healingModel","setHealingModel","HealingCadence","cadenceSeconds","HpPercentForDefensives","hpPercentForDefensives","GearPicker","leftSide","rightSide","leftItemPickers","ItemSlot","ItemSlotHead","ItemSlotNeck","ItemSlotShoulder","ItemSlotBack","ItemSlotChest","ItemSlotWrist","ItemSlotMainHand","ItemSlotOffHand","ItemPicker","rightItemPickers","ItemSlotHands","ItemSlotWaist","ItemSlotLegs","ItemSlotFeet","ItemSlotFinger1","ItemSlotFinger2","ItemSlotTrinket1","ItemSlotTrinket2","ItemSlotRanged","itemPickers","sort","_items","_enchants","_equippedItem","iconElem","nameElem","enchantElem","socketsContainerElem","getEquippedItem","onClickStart","SelectorModal","closest","onClickEnd","ev","openTab","gearChangeEmitter","professionChangeEmitter","setWowheadData","removeAttribute","emptySlotIcons","slotNames","setItemQualityCssClass","heroic","heroic_span","marginLeft","innerText","quality","asActionId","setBackgroundAndHref","setWowheadHref","description","isSpellId","setAttribute","allSocketColors","gemIdx","gemIconElem","setGemSocketCssClass","src","getEmptyGemSocketIconUrl","fromItemId","iconUrl","numPossibleSockets","ItemType","ItemTypeWrist","ItemTypeHands","updateProfession","isBlacksmithing","removeProperty","equippedItem","eligibleItems","eligibleEnchants","tabsElem","contentElem","setData","click","addTab","fromItem","baseEP","computeItemEP","ignoreEPFilter","onEquip","equipItem","withItem","GemColor","GemColorUnknown","fromSpellId","computeStatsEP","withEnchant","computeEnchantEP","addGemTabs","socketBonusEP","socketBonus","gemSockets","curSocketColors","socketIdx","withGem","gemEP","computeGemEP","tabAnchor","updateGemIcon","itemData","computeEP","equippedToItemFn","onRemove","setTabContent","dataA","dataB","ilvl","diff","tabElem","tabContentId","dataset","tabContent","sim2","makeShow2hWeaponsSelector","ClassWarrior","makeShowMatchingGemsSelector","startsWith","makePhaseSelector","listElem","listItemElems","itemIdx","itemEP","listItemElem","onclick","is","removeTabs","updateSelected","newEquippedItem","newItemId","newEP","listItemIdx","listItemData","listItem","epDeltaElem","listItemEP","formatDeltaTextElem","applyFilters","validItemElems","currentEquippedItem","weaponType","WeaponType","WeaponTypeUnknown","handType","HandType","HandTypeTwoHand","enchantAppliesToItem","searchInput","searchQuery","toLowerCase","include","numShown","key","ele","contains","labelSubstring","tabElems","prototype","call","tab","contentElems","getElementById","getAttribute","substring","parentElement","SavedDataManager","userData","presets","frozen","presetsOnly","savedDataDiv","saveInput","alert","addSavedData","getData","saveUserData","newData","makeSavedData","dataArr","isPreset","oldIdx","insertBefore","replaceChild","dataElem","stopPropagation","confirm","checkActive","changeEmitters","savedData","localStorage","setItem","storageKey","loadUserData","dataStr","getItem","jsonData","parse","fromJson","freeze","makeMultiIconInput","inputs","emptyColor","makeWrappedBooleanInput","getModObject","makeSpecOptionsBooleanInput","getSpecOptions","fieldName","newVal","newMessage","setSpecOptions","specOptionsChangeEmitter","makeRotationBooleanInput","getRotation","setRotation","rotationChangeEmitter","makeWrappedNumberInput","makeSpecOptionsNumberInput","internalConfig","percent","makeRotationNumberInput","makeWrappedEnumInput","makeSpecOptionsEnumInput","makeRotationEnumInput","makeWrappedIconInput","states","makeBooleanIconInput","getFieldValue","setFieldValue","makeSpecOptionsBooleanIconInput","makeNumberIconInput","multiplier","sign","makeTristateIconInput","impId","input","improvedId","makeMultistateIconInput","numStates","makeWrappedEnumIconInput","makeSpecOptionsEnumIconInput","makeRotationEnumIconInput","makeCustomRotationInput","rotation","makePetTypeInputConfig","includeLabel","InputHelpers.makeSpecOptionsEnumIconInput","PetType","PetNone","fromPetName","Bat","Bear","BirdOfPrey","Boar","CarrionBird","Cat","Chimaera","CoreHound","Crab","Crocolisk","Devilsaur","Dragonhawk","Gorilla","Hyena","Moth","NetherRay","Raptor","Ravager","Rhino","Scorpid","Serpent","Silithid","Spider","SpiritBeast","SporeBat","Tallstrider","Turtle","WarpStalker","Wasp","WindSerpent","Wolf","Worm","petCategories","categoryOrder","categoryClasses","HunterPetTalentsPicker","curCategory","getCategoryFromPlayer","curTalents","getPetTalentsFromPlayer","savedSets","defaultTalents","talentsContainer","pickers","category","talentsConfig","petTalentsConfig","pickerContainer","TalentsPicker","trees","protoToTalentString","options","petTalents","talentStringToProto","HunterPetTalents","pointsPerRow","maxPoints","savedTalentsManager","defaultBMTalents","petCategory","categoryIdx","indexOf","updateIsBM","getTalents","beastMastery","setMaxPoints","talentsChangeEmitter","petType","getPetTalentsConfig","cunningDefault","cobraReflexes","dive","boarsSpeed","mobility","spikedCollar","cornered","feedingFrenzy","wolverineBite","bullheaded","wildHunt","ferocityDefault","cullingTheHerd","spidersBite","rabid","callOfTheWild","charge","greatStamina","bloodOfTheRhino","guardDog","thunderstomp","graceOfTheMantis","taunt","roarOfSacrifice","cunningBMDefault","ferocityBMDefault","bloodthirsty","sharkAttack","newTalentsConfig","backgroundUrl","rowIdx","colIdx","spellIds","prereqLocation","IconPicker","rootAnchor","useImprovedIcons","improvedId2","levelContainer","improvedAnchor","improvedAnchor2","counterElem","isRightClick","getActionId","LogRunner","controlBar","simButton","logsDiv","runSimOnce","logs","isCastCompleted","lineElem","MultiIconPicker","dropdownRootElem","labelElem","pickerConfig","updateButtonImage","getMaxValue","categoryId","SettingsMenu","restoreDefaultsButton","ResultsViewer","pendingElem","hideAll","setPending","setContent","LaunchStatus","LaunchStatus2","simLaunchStatuses","Spec","SpecBalanceDruid","SpecElementalShaman","SpecEnhancementShaman","SpecFeralDruid","SpecFeralTankDruid","SpecHunter","SpecMage","SpecRogue","SpecRetributionPaladin","SpecProtectionPaladin","SpecHealingPriest","SpecShadowPriest","SpecSmitePriest","SpecWarlock","SpecWarrior","SpecProtectionWarrior","SpecDeathknight","SpecTankDeathknight","memeSpecs","Title","currentSpec","dropdownPanel","orderedLaunchedSpecs","naturalSpecOrder","specStr","gridTemplateRows","ceil","currentOption","makeOptionData","otherOptions","makeOptionElem","makeOption","isButton","raidSimIcon","raidSimSiteUrl","text","titleIcons","getSpecSiteUrl","specNames","classColors","specToClass","icon","labelDiv","simLabel","SimUI","simHTML","isWithinRaidSim","handleCrash","updateShowDamageMetrics","updateShowThreatMetrics","updateShowHealingMetrics","updateShowExperimental","warnings","warningsElem","warningsTippy","updateWarnings","statusStr","launchStatus","Unlaunched","Alpha","Beta","knownIssues","knownIssuesContainer","issue","interactive","resultsViewerElem","resultsViewer","titleElem","simActionsContainer","reportBug","addToolbarItem","downloadBinary","resp","versionInfo","outdated","catch","addAction","cssClass","actFn","iterationsPicker","button","simTabsContainer","simTabContentsContainer","topBar","contentId","replace","isFirstTab","newTab","newContent","activeWarnings","warning","getContent","addWarning","updateOn","getSettingsStorageKey","getStorageKey","getSavedEncounterStorageKey","runRaidSim","runRaidSimWithLogs","hash","hashCode","link","toLink","issues","total_count","html_url","base","maxBodyLength","issueBody","encodeURIComponent","lastIndexOf","fetchErr","len","charCodeAt","EpWeightsMenu","statsType","tableContainer","tableBody","querySelector","tableHeader","updateType","computeStatWeights","setSimProgress","prevEpIterations","prevEpSimResult","preprocessResults","updateTable","colActionButtons","makeUpdateWeights","weightsFunc","previousSibling","setEpWeights","getPrevSimResult","dps","weights","epValues","tps","dtps","individualConfig","defaults","epWeights","showAllStatsContainer","menu","applyAlternatingColors","optimizeGemsButton","optimizeGems","completedSims","totalSims","completedIterations","totalIterations","epValuesStdev","wdiff","weightsStdev","StatMana","StatEnergy","StatRage","makeTableRow","stDevToConf90","currentEpCell","epWeightsChangeEmitter","getEpWeights","childNodes","w","getGear","allGems","isJewelcrafting","hasProfession","Jewelcrafting","optimizedGear","optimizeGemsForWeights","setGear","unrestrictedGems","Gems.isUnrestrictedGem","bestGemForColor","bestGemForColorEP","bestGemForSocket","bestGemForSocketEP","bestGem","bestGemEP","findBestGems","asMap","socketBonusEPs","entries","itemSlot","socketColors","GemColorMeta","allSockets","itemSlotStr","numSockets","threeSocketCombos","permutations","calculateGearGemsEP","statsFromGems","jcGems","requiredProfession","bestJcGemForColor","bestJcGemForColorEP","bestJcGemForSocket","bestJcGemForSocketEP","bestJcGem","bestJcGemEP","bestGear","bestGearEP","socketCombo","ei","gemColor","curGear","hasActiveMetaGem","curGearEP","metaGem","getMetaGem","condition","Gems.getMetaGemCondition","isCompareColorCondition","getAllGems","colorCombos","getColorCombosToSatisfyCondition","colorCombo","isOneOfEach","Gems.PRIMARY_COLORS","GemColorPrismatic","Gems.SECONDARY_COLORS","secondaryColor","remainingColor","Gems.socketToMatchingColors","get","matchingColor","isTwoAndOne","oneColor","minRed","minYellow","minBlue","twoColor","Gems.gemColorMatchesSocket","partialCombo","isThreeOfAColor","threeColor","matchingColors","combinationsWithDups","gemList","Gems.GEM_COLORS","GEM_COLORS","Gems.gemMatchesSocket","Exporter","allowDownload","textElem","navigator","clipboard","writeText","downloadButton","downloadString","IndividualLinkExporter","IndividualJsonExporter","IndividualSimSettings","_Individual80UEPExporter","allStats","getEnumValues","linkNames","Individual80UEPExporter","StatStrength","StatAgility","StatStamina","StatIntellect","StatSpirit","StatHealingPower","StatMP5","StatSpellPenetration","StatArmorPenetration","StatRangedAttackPower","StatResilience","_IndividualPawnEPExporter","classNames","IndividualPawnEPExporter","Importer","includeFile","uploadInputId","replaceAll","htmlVal","descriptionElem","files","importButton","onImport","finishIndividualImport","charClass","race","equipmentSpec","talentsStr","dbEnchant","expectedEnchantIds","foundEnchantIds","missingEnchants","expectedId","expectedItemIds","foundItemIds","missingItems","setRace","setTalentsString","close","IndividualJsonImporter","fromJsonString","Individual80UImporter","importJson","nameToClass","character","gameClass","ClassUnknown","nameToRace","Race","RaceUnknown","talentIds","talentJson","spellId","talentSpellIdsToTalentString","EquipmentSpec","itemJson","ItemSpec","gemJson","IndividualAddonImporter","gearJson","AllStatsBuff","InputHelpers.makeMultiIconInput","makeTristateRaidBuffInput","makeBooleanRaidBuffInput","AllStatsPercentBuff","makeBooleanIndividualBuffInput","ArmorBuff","StaminaBuff","StrengthAndAgilityBuff","IntellectBuff","SpiritBuff","AttackPowerBuff","makeTristateIndividualBuffInput","AttackPowerPercentBuff","DamagePercentBuff","DamageReductionPercentBuff","HastePercentBuff","HealthBuff","MP5Buff","MeleeCritBuff","MeleeHasteBuff","ReplenishmentBuff","SpellCritBuff","SpellHasteBuff","withLabel","SpellPowerBuff","InputHelpers.makeMultistateIconInput","Bloodlust","RetributionAura","ShadowProtection","BraidedEterniumChain","makeBooleanPartyBuffInput","ChainOfTheTwilightOwl","HeroicPresence","EyeOfTheNight","Thorns","ManaTideTotem","makeMultistatePartyBuffInput","Innervate","makeMultistateIndividualBuffInput","PowerInfusion","TricksOfTheTrade","UnholyFrenzy","RevitalizeRejuvination","makeMultistateMultiplierIndividualBuffInput","RevitalizeWildGrowth","MajorArmorDebuff","makeBooleanDebuffInput","MinorArmorDebuff","makeTristateDebuffInput","AttackPowerDebuff","BleedDebuff","CritDebuff","MeleeAttackSpeedDebuff","MeleeHitDebuff","PhysicalDamageDebuff","SpellCritDebuff","SpellHitDebuff","SpellDamageDebuff","HuntersMark","impId2","InputHelpers.makeQuadstateIconInput","makeQuadstateDebuffInput","JudgementOfWisdom","JudgementOfLight","ShatteringThrow","GiftOfArthas","ThermalSapper","makeBooleanConsumeInput","ExplosiveDecoy","SpicedMammothTreats","PetFood","PetFoodSpicedMammothTreats","InputHelpers.makeBooleanIconInput","InputHelpers.makeTristateIconInput","makePotionInputFactory","consumesFieldName","makeConsumeInputFactory","Potions","RunicHealingPotion","RunicManaPotion","IndestructiblePotion","PotionOfSpeed","PotionOfWildMagic","DestructionPotion","HastePotion","MightyRagePotion","SuperManaPotion","FelManaPotion","InsaneStrengthPotion","IronshieldPotion","HeroicPotion","makePotionsInput","makePrepopPotionsInput","makeConjuredInput","ConjuredHealthstone","makeFlasksInput","Flask","FlaskOfTheFrostWyrm","FlaskOfEndlessRage","FlaskOfPureMojo","FlaskOfStoneblood","LesserFlaskOfToughness","LesserFlaskOfResistance","FlaskOfBlindingLight","FlaskOfMightyRestoration","FlaskOfPureDeath","FlaskOfRelentlessAssault","FlaskOfSupremePower","FlaskOfFortification","FlaskOfChromaticWonder","battleElixir","BattleElixir","BattleElixirUnknown","guardianElixir","GuardianElixir","GuardianElixirUnknown","makeBattleElixirsInput","ElixirOfAccuracy","ElixirOfArmorPiercing","ElixirOfDeadlyStrikes","ElixirOfExpertise","ElixirOfLightningSpeed","ElixirOfMightyAgility","ElixirOfMightyStrength","GurusElixir","SpellpowerElixir","WrathElixir","AdeptsElixir","ElixirOfDemonslaying","ElixirOfMajorAgility","ElixirOfMajorFirePower","ElixirOfMajorFrostPower","ElixirOfMajorShadowPower","ElixirOfMajorStrength","ElixirOfMastery","ElixirOfTheMongoose","FelStrengthElixir","GreaterArcaneElixir","flask","FlaskUnknown","makeGuardianElixirsInput","ElixirOfMightyDefense","ElixirOfMightyFortitude","ElixirOfMightyMageblood","ElixirOfMightyThoughts","ElixirOfProtection","ElixirOfSpirit","ElixirOfDraenicWisdom","ElixirOfIronskin","ElixirOfMajorDefense","ElixirOfMajorFortitude","ElixirOfMajorMageblood","makeFoodInput","Food","FoodFishFeast","FoodGreatFeast","FoodBlackenedDragonfin","FoodHeartyRhino","FoodMegaMammothMeal","FoodSpicedWormBurger","FoodRhinoliciousWormsteak","FoodImperialMantaSteak","FoodSnapperExtreme","FoodMightyRhinoDogs","FoodFirecrackerSalmon","FoodCuttlesteak","FoodDragonfinFilet","FoodBlackenedBasilisk","FoodGrilledMudfish","FoodRavagerDog","FoodRoastedClefthoof","FoodSpicyHotTalbuk","FoodSkullfishSoup","FoodFishermansFeast","FillerExplosiveInput","allOptions","Explosive","ExplosiveSaroniteBomb","ExplosiveCobaltFragBomb","onSet","factory","allOption","BLESSINGS_SECTION","BASIC_BIS_DISCLAIMER","IndividualSimUI","raidSimResultsManager","settingsMuuri","getMetaGemConditionDescription","failedProfReqs","getFailedProfessionRequirements","getProfessions","fpr","professionNames","getJCGems","talentPoints","getTalentPoints","getTalentsString","Mechanics.MAX_TALENT_POINTS","canDualWield2H","loadSettings","addSidebarComponents","addTopbarComponents","addGearTab","addSettingsTab","addTalentsTab","addDetailedResultsTab","addLogTab","recomputeSettingsLayout","initEventID","loadedSettings","binary","atob","bytes","Uint8Array","settingsBytes","pako","inflate","savedSettings","jsonStr","addRaidSimAction","displayStats","importSettings","linkElem","menuElem","addMenuItem","onClick","showInRaidSim","newIndividualImporters","exportSettings","newIndividualExporters","optionsMenu","savedGearManager","getSavedGearStorageKey","SavedGearSet","newSavedGear","presetGear","settingsTab","configureIconSection","sectionElem","iconPickers","adjustColumns","makeIconInput","inputConfig","playerIconsSection","playerIconInputs","iconInput","buffOptions","splitRelevantOptions","IconInputs.AllStatsBuff","IconInputs.AllStatsPercentBuff","IconInputs.HealthBuff","IconInputs.ArmorBuff","IconInputs.StaminaBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.IntellectBuff","IconInputs.SpiritBuff","IconInputs.AttackPowerBuff","IconInputs.AttackPowerPercentBuff","IconInputs.MeleeCritBuff","IconInputs.MeleeHasteBuff","IconInputs.SpellPowerBuff","IconInputs.SpellCritBuff","IconInputs.HastePercentBuff","IconInputs.DamagePercentBuff","IconInputs.DamageReductionPercentBuff","IconInputs.MP5Buff","IconInputs.ReplenishmentBuff","buffsSection","multiIconInput","IconInputs.Bloodlust","IconInputs.SpellHasteBuff","revitalizeBuffOptions","IconInputs.RevitalizeRejuvination","IconInputs.RevitalizeWildGrowth","miscBuffOptions","IconInputs.HeroicPresence","IconInputs.BraidedEterniumChain","IconInputs.ChainOfTheTwilightOwl","IconInputs.EyeOfTheNight","IconInputs.Thorns","IconInputs.RetributionAura","IconInputs.ShadowProtection","IconInputs.ManaTideTotem","IconInputs.Innervate","IconInputs.PowerInfusion","IconInputs.TricksOfTheTrade","IconInputs.UnholyFrenzy","debuffOptions","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.BleedDebuff","IconInputs.SpellDamageDebuff","IconInputs.SpellHitDebuff","IconInputs.SpellCritDebuff","IconInputs.CritDebuff","IconInputs.AttackPowerDebuff","IconInputs.MeleeAttackSpeedDebuff","IconInputs.MeleeHitDebuff","debuffsSection","IconInputs.JudgementOfWisdom","IconInputs.HuntersMark","miscDebuffOptions","IconInputs.JudgementOfLight","IconInputs.ShatteringThrow","IconInputs.GiftOfArthas","prepopPotionOptions","IconInputs.makePrepopPotionsInput","potionOptions","IconInputs.makePotionsInput","conjuredOptions","ClassRogue","IconInputs.makeConjuredInput","flaskOptions","IconInputs.makeFlasksInput","battleElixirOptions","IconInputs.makeBattleElixirsInput","guardianElixirOptions","IconInputs.makeGuardianElixirsInput","foodOptions","IconInputs.makeFoodInput","tradeConsumesElem","IconInputs.ThermalSapper","IconInputs.ExplosiveDecoy","IconInputs.FillerExplosiveInput","Engineering","petConsumeInputs","petConsumesElem","configureInputSection","sectionConfig","rotationIconInputs","rotationIconSection","rotationInputs","otherInputs","races","specToEligibleRaces","raceNames","raceChangeEmitter","getRace","professions","p","getProfession1","setProfession1","getProfession2","setProfession2","ShattrathFaction","ShattrathFactionAldor","ShattrathFactionScryer","shattFactionNames","getShattFaction","setShattFaction","encounterSectionElem","encounterPicker","savedEncounterManager","SavedEncounter","newEncounter","cooldownSectionElem","cooldownContentElem","placement","setTimeout","Muuri","savedSettingsManager","getSavedSettingsStorageKey","SavedSettings","PartyBuffs","playerBuffs","consumes","newSettings","IndividualBuffs","Consumes","Cooldowns","customSectionsContainer","anyCustomSections","sectionName","additionalSections","sectionCssPrefix","additionalIconSections","customSections","customSection","prepend","container","zIndex","newTalentsPicker","newGlyphsPicker","getSavedTalentsStorageKey","SavedTalents","talentsString","glyphs","getGlyphs","newTalents","setGlyphs","Glyphs","glyphsChangeEmitter","ClassHunter","curShown","toggledElems","updateToggle","petTypeToggle","toggleContainer","tankSpec","healingSpec","applySharedDefaults","specOptions","individualBuffs","other","distanceFromTarget","getSavedRotationStorageKey","keyPart","specToLocalStorageKey","protoBytes","deflated","deflate","to","encoded","btoa","fromCharCode","linkUrl","includeBuffDebuffInputs","some","excludeBuffDebuffInputs"],"mappings":"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"}