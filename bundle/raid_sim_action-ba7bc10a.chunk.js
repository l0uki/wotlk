function e(e){let t=typeof e;if("object"==t){if(Array.isArray(e))return"array";if(null===e)return"null"}return t}let t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""),a=[];for(let $=0;$<t.length;$++)a[t[$].charCodeAt(0)]=$;a["-".charCodeAt(0)]=t.indexOf("+"),a["_".charCodeAt(0)]=t.indexOf("/");const n=e=>String.fromCharCode.apply(String,e);function i(){let e=0,t=0;for(let n=0;n<28;n+=7){let a=this.buf[this.pos++];if(e|=(127&a)<<n,0==(128&a))return this.assertBounds(),[e,t]}let a=this.buf[this.pos++];if(e|=(15&a)<<28,t=(112&a)>>4,0==(128&a))return this.assertBounds(),[e,t];for(let n=3;n<=31;n+=7){let a=this.buf[this.pos++];if(t|=(127&a)<<n,0==(128&a))return this.assertBounds(),[e,t]}throw new Error("invalid varint")}function o(e,t,a){for(let o=0;o<28;o+=7){const n=e>>>o,i=!(n>>>7==0&&0==t),r=255&(i?128|n:n);if(a.push(r),!i)return}const n=e>>>28&15|(7&t)<<4,i=!(t>>3==0);if(a.push(255&(i?128|n:n)),i){for(let e=3;e<31;e+=7){const n=t>>>e,i=!(n>>>7==0),o=255&(i?128|n:n);if(a.push(o),!i)return}a.push(t>>>31&1)}}function r(e){let t="-"==e[0];t&&(e=e.slice(1));const a=1e6;let n=0,i=0;function o(t,o){const r=Number(e.slice(t,o));i*=a,n=n*a+r,n>=4294967296&&(i+=n/4294967296|0,n%=4294967296)}return o(-24,-18),o(-18,-12),o(-12,-6),o(-6),[t,n,i]}function s(e,t){if(t<=2097151)return""+(4294967296*t+e);let a=(e>>>24|t<<8)>>>0&16777215,n=t>>16&65535,i=(16777215&e)+6777216*a+6710656*n,o=a+8147497*n,r=2*n,s=1e7;function l(e,t){let a=e?String(e):"";return t?"0000000".slice(a.length)+a:a}return i>=s&&(o+=Math.floor(i/s),i%=s),o>=s&&(r+=Math.floor(o/s),o%=s),l(r,0)+l(o,r)+l(i,1)}function l(e,t){if(e>=0){for(;e>127;)t.push(127&e|128),e>>>=7;t.push(e)}else{for(let a=0;a<9;a++)t.push(127&e|128),e>>=7;t.push(1)}}function c(){let e=this.buf[this.pos++],t=127&e;if(0==(128&e))return this.assertBounds(),t;if(e=this.buf[this.pos++],t|=(127&e)<<7,0==(128&e))return this.assertBounds(),t;if(e=this.buf[this.pos++],t|=(127&e)<<14,0==(128&e))return this.assertBounds(),t;if(e=this.buf[this.pos++],t|=(127&e)<<21,0==(128&e))return this.assertBounds(),t;e=this.buf[this.pos++],t|=(15&e)<<28;for(let a=5;0!=(128&e)&&a<10;a++)e=this.buf[this.pos++];if(0!=(128&e))throw new Error("invalid varint");return this.assertBounds(),t>>>0}const d=function(){const e=new DataView(new ArrayBuffer(8));return void 0!==globalThis.BigInt&&"function"==typeof e.getBigInt64&&"function"==typeof e.getBigUint64&&"function"==typeof e.setBigInt64&&"function"==typeof e.setBigUint64?{MIN:BigInt("-9223372036854775808"),MAX:BigInt("9223372036854775807"),UMIN:BigInt("0"),UMAX:BigInt("18446744073709551615"),C:BigInt,V:e}:void 0}();function m(e){if(!e)throw new Error("BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support")}const p=/^-?[0-9]+$/;class h{constructor(e,t){this.lo=0|e,this.hi=0|t}isZero(){return 0==this.lo&&0==this.hi}toNumber(){let e=4294967296*this.hi+(this.lo>>>0);if(!Number.isSafeInteger(e))throw new Error("cannot convert to safe number");return e}}class g extends h{static from(e){if(d)switch(typeof e){case"string":if("0"==e)return this.ZERO;if(""==e)throw new Error("string is no integer");e=d.C(e);case"number":if(0===e)return this.ZERO;e=d.C(e);case"bigint":if(!e)return this.ZERO;if(e<d.UMIN)throw new Error("signed value for ulong");if(e>d.UMAX)throw new Error("ulong too large");return d.V.setBigUint64(0,e,!0),new g(d.V.getInt32(0,!0),d.V.getInt32(4,!0))}else switch(typeof e){case"string":if("0"==e)return this.ZERO;if(e=e.trim(),!p.test(e))throw new Error("string is no integer");let[t,a,n]=r(e);if(t)throw new Error("signed value");return new g(a,n);case"number":if(0==e)return this.ZERO;if(!Number.isSafeInteger(e))throw new Error("number is no integer");if(e<0)throw new Error("signed value for ulong");return new g(e,e/4294967296)}throw new Error("unknown value "+typeof e)}toString(){return d?this.toBigInt().toString():s(this.lo,this.hi)}toBigInt(){return m(d),d.V.setInt32(0,this.lo,!0),d.V.setInt32(4,this.hi,!0),d.V.getBigUint64(0,!0)}}g.ZERO=new g(0,0);class u extends h{static from(e){if(d)switch(typeof e){case"string":if("0"==e)return this.ZERO;if(""==e)throw new Error("string is no integer");e=d.C(e);case"number":if(0===e)return this.ZERO;e=d.C(e);case"bigint":if(!e)return this.ZERO;if(e<d.MIN)throw new Error("ulong too small");if(e>d.MAX)throw new Error("ulong too large");return d.V.setBigInt64(0,e,!0),new u(d.V.getInt32(0,!0),d.V.getInt32(4,!0))}else switch(typeof e){case"string":if("0"==e)return this.ZERO;if(e=e.trim(),!p.test(e))throw new Error("string is no integer");let[t,a,n]=r(e),i=new u(a,n);return t?i.negate():i;case"number":if(0==e)return this.ZERO;if(!Number.isSafeInteger(e))throw new Error("number is no integer");return e>0?new u(e,e/4294967296):new u(-e,-e/4294967296).negate()}throw new Error("unknown value "+typeof e)}isNegative(){return 0!=(2147483648&this.hi)}negate(){let e=~this.hi,t=this.lo;return t?t=1+~t:e+=1,new u(t,e)}toString(){if(d)return this.toBigInt().toString();if(this.isNegative()){let e=this.negate();return"-"+s(e.lo,e.hi)}return s(this.lo,this.hi)}toBigInt(){return m(d),d.V.setInt32(0,this.lo,!0),d.V.setInt32(4,this.hi,!0),d.V.getBigInt64(0,!0)}}u.ZERO=new u(0,0);class f{constructor(e){this.varint64=i,this.uint32=c,this.buf=e,this.len=e.length,this.pos=0,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength)}tag(){let e=this.uint32(),t=e>>>3,a=7&e;if(t<=0||a<0||a>5)throw new Error("illegal tag: field no "+t+" wire type "+a);return[t,a]}skip(e){let t=this.pos;switch(e){case v.Varint:for(;128&this.buf[this.pos++];);break;case v.Bit64:this.pos+=4;case v.Bit32:this.pos+=4;break;case v.LengthDelimited:let t=this.uint32();this.pos+=t;break;case v.StartGroup:let a;for(;(a=this.tag()[1])!==v.EndGroup;)this.skip(a);break;default:throw new Error("cant skip wire type "+e)}return this.assertBounds(),this.buf.subarray(t,this.pos)}assertBounds(){if(this.pos>this.len)throw new RangeError("premature EOF")}int32(){return 0|this.uint32()}sint32(){let e=this.uint32();return e>>>1^-(1&e)}int64(){return new u(...this.varint64())}uint64(){return new g(...this.varint64())}sint64(){let[e,t]=this.varint64(),a=-(1&e);return e=(e>>>1|(1&t)<<31)^a,t=t>>>1^a,new u(e,t)}bool(){let[e,t]=this.varint64();return 0!==e||0!==t}fixed32(){return this.view.getUint32((this.pos+=4)-4,!0)}sfixed32(){return this.view.getInt32((this.pos+=4)-4,!0)}fixed64(){return new g(this.sfixed32(),this.sfixed32())}sfixed64(){return new u(this.sfixed32(),this.sfixed32())}float(){return this.view.getFloat32((this.pos+=4)-4,!0)}double(){return this.view.getFloat64((this.pos+=8)-8,!0)}bytes(){let e=this.uint32(),t=this.pos;return this.pos+=e,this.assertBounds(),this.buf.subarray(t,t+e)}string(){return function(e){if(e.length<1)return"";let t,a=0,i=[],o=[],r=0,s=e.length;for(;a<s;)t=e[a++],t<128?o[r++]=t:t>191&&t<224?o[r++]=(31&t)<<6|63&e[a++]:t>239&&t<365?(t=((7&t)<<18|(63&e[a++])<<12|(63&e[a++])<<6|63&e[a++])-65536,o[r++]=55296+(t>>10),o[r++]=56320+(1023&t)):o[r++]=(15&t)<<12|(63&e[a++])<<6|63&e[a++],r>8191&&(i.push(n(o)),r=0);return i.length?(r&&i.push(n(o.slice(0,r))),i.join("")):n(o.slice(0,r))}(this.bytes())}}function w(e,t){if(!e)throw new Error(t)}function y(e){if("number"!=typeof e)throw new Error("invalid int 32: "+typeof e);if(!Number.isInteger(e)||e>2147483647||e<-2147483648)throw new Error("invalid int 32: "+e)}function k(e){if("number"!=typeof e)throw new Error("invalid uint 32: "+typeof e);if(!Number.isInteger(e)||e>4294967295||e<0)throw new Error("invalid uint 32: "+e)}function b(e){if("number"!=typeof e)throw new Error("invalid float 32: "+typeof e);if(Number.isFinite(e)&&(e>34028234663852886e22||e<-34028234663852886e22))throw new Error("invalid float 32: "+e)}class I{constructor(e){this.stack=[],this.textEncoder=null!=e?e:new TextEncoder,this.chunks=[],this.buf=[]}finish(){this.chunks.push(new Uint8Array(this.buf));let e=0;for(let n=0;n<this.chunks.length;n++)e+=this.chunks[n].length;let t=new Uint8Array(e),a=0;for(let n=0;n<this.chunks.length;n++)t.set(this.chunks[n],a),a+=this.chunks[n].length;return this.chunks=[],t}fork(){return this.stack.push({chunks:this.chunks,buf:this.buf}),this.chunks=[],this.buf=[],this}join(){let e=this.finish(),t=this.stack.pop();if(!t)throw new Error("invalid state, fork stack empty");return this.chunks=t.chunks,this.buf=t.buf,this.uint32(e.byteLength),this.raw(e)}tag(e,t){return this.uint32((e<<3|t)>>>0)}raw(e){return this.buf.length&&(this.chunks.push(new Uint8Array(this.buf)),this.buf=[]),this.chunks.push(e),this}uint32(e){for(k(e);e>127;)this.buf.push(127&e|128),e>>>=7;return this.buf.push(e),this}int32(e){return y(e),l(e,this.buf),this}bool(e){return this.buf.push(e?1:0),this}bytes(e){return this.uint32(e.byteLength),this.raw(e)}string(e){let t=this.textEncoder.encode(e);return this.uint32(t.byteLength),this.raw(t)}float(e){b(e);let t=new Uint8Array(4);return new DataView(t.buffer).setFloat32(0,e,!0),this.raw(t)}double(e){let t=new Uint8Array(8);return new DataView(t.buffer).setFloat64(0,e,!0),this.raw(t)}fixed32(e){k(e);let t=new Uint8Array(4);return new DataView(t.buffer).setUint32(0,e,!0),this.raw(t)}sfixed32(e){y(e);let t=new Uint8Array(4);return new DataView(t.buffer).setInt32(0,e,!0),this.raw(t)}sint32(e){return y(e),l(e=(e<<1^e>>31)>>>0,this.buf),this}sfixed64(e){let t=new Uint8Array(8),a=new DataView(t.buffer),n=u.from(e);return a.setInt32(0,n.lo,!0),a.setInt32(4,n.hi,!0),this.raw(t)}fixed64(e){let t=new Uint8Array(8),a=new DataView(t.buffer),n=g.from(e);return a.setInt32(0,n.lo,!0),a.setInt32(4,n.hi,!0),this.raw(t)}int64(e){let t=u.from(e);return o(t.lo,t.hi,this.buf),this}sint64(e){let t=u.from(e),a=t.hi>>31;return o(t.lo<<1^a,(t.hi<<1|t.lo>>>31)^a,this.buf),this}uint64(e){let t=g.from(e);return o(t.lo,t.hi,this.buf),this}}var T;!function(e){e.symbol=Symbol("protobuf-ts/unknown"),e.onRead=(a,n,i,o,r)=>{(t(n)?n[e.symbol]:n[e.symbol]=[]).push({no:i,wireType:o,data:r})},e.onWrite=(t,a,n)=>{for(let{no:i,wireType:o,data:r}of e.list(a))n.tag(i,o).raw(r)},e.list=(a,n)=>{if(t(a)){let t=a[e.symbol];return n?t.filter((e=>e.no==n)):t}return[]},e.last=(t,a)=>e.list(t,a).slice(-1)[0];const t=t=>t&&Array.isArray(t[e.symbol])}(T||(T={}));const x={readUnknownField:!0,readerFactory:e=>new f(e)},S={writeUnknownFields:!0,writerFactory:()=>new I};var v,_;(_=v||(v={}))[_.Varint=0]="Varint",_[_.Bit64=1]="Bit64",_[_.LengthDelimited=2]="LengthDelimited",_[_.StartGroup=3]="StartGroup",_[_.EndGroup=4]="EndGroup",_[_.Bit32=5]="Bit32";const O={emitDefaultValues:!1,enumAsInteger:!1,useProtoFieldName:!1,prettySpaces:0},P={ignoreUnknownFields:!1};const G=Symbol("protobuf-ts/message-type");function R(e){let t=!1;const a=[];for(let n=0;n<e.length;n++){let i=e.charAt(n);"_"==i?t=!0:/\d/.test(i)?(a.push(i),t=!0):t?(a.push(i.toUpperCase()),t=!1):0==n?a.push(i.toLowerCase()):a.push(i)}return a.join("")}var B,N,F,W,V,C;function D(e){var t,a,n,i;return e.localName=null!==(t=e.localName)&&void 0!==t?t:R(e.name),e.jsonName=null!==(a=e.jsonName)&&void 0!==a?a:R(e.name),e.repeat=null!==(n=e.repeat)&&void 0!==n?n:V.NO,e.opt=null!==(i=e.opt)&&void 0!==i?i:!e.repeat&&(!e.oneof&&"message"==e.kind),e}function E(e){if("object"!=typeof e||null===e||!e.hasOwnProperty("oneofKind"))return!1;switch(typeof e.oneofKind){case"string":return void 0!==e[e.oneofKind]&&2==Object.keys(e).length;case"undefined":return 1==Object.keys(e).length;default:return!1}}(N=B||(B={}))[N.DOUBLE=1]="DOUBLE",N[N.FLOAT=2]="FLOAT",N[N.INT64=3]="INT64",N[N.UINT64=4]="UINT64",N[N.INT32=5]="INT32",N[N.FIXED64=6]="FIXED64",N[N.FIXED32=7]="FIXED32",N[N.BOOL=8]="BOOL",N[N.STRING=9]="STRING",N[N.BYTES=12]="BYTES",N[N.UINT32=13]="UINT32",N[N.SFIXED32=15]="SFIXED32",N[N.SFIXED64=16]="SFIXED64",N[N.SINT32=17]="SINT32",N[N.SINT64=18]="SINT64",(W=F||(F={}))[W.BIGINT=0]="BIGINT",W[W.STRING=1]="STRING",W[W.NUMBER=2]="NUMBER",(C=V||(V={}))[C.NO=0]="NO",C[C.PACKED=1]="PACKED",C[C.UNPACKED=2]="UNPACKED";class j{constructor(e){var t;this.fields=null!==(t=e.fields)&&void 0!==t?t:[]}prepare(){if(this.data)return;const e=[],t=[],a=[];for(let n of this.fields)if(n.oneof)a.includes(n.oneof)||(a.push(n.oneof),e.push(n.oneof),t.push(n.oneof));else switch(t.push(n.localName),n.kind){case"scalar":case"enum":n.opt&&!n.repeat||e.push(n.localName);break;case"message":n.repeat&&e.push(n.localName);break;case"map":e.push(n.localName)}this.data={req:e,known:t,oneofs:Object.values(a)}}is(e,t,a=!1){if(t<0)return!0;if(null==e||"object"!=typeof e)return!1;this.prepare();let n=Object.keys(e),i=this.data;if(n.length<i.req.length||i.req.some((e=>!n.includes(e))))return!1;if(!a&&n.some((e=>!i.known.includes(e))))return!1;if(t<1)return!0;for(const o of i.oneofs){const n=e[o];if(!E(n))return!1;if(void 0===n.oneofKind)continue;const i=this.fields.find((e=>e.localName===n.oneofKind));if(!i)return!1;if(!this.field(n[n.oneofKind],i,a,t))return!1}for(const o of this.fields)if(void 0===o.oneof&&!this.field(e[o.localName],o,a,t))return!1;return!0}field(e,t,a,n){let i=t.repeat;switch(t.kind){case"scalar":return void 0===e?t.opt:i?this.scalars(e,t.T,n,t.L):this.scalar(e,t.T,t.L);case"enum":return void 0===e?t.opt:i?this.scalars(e,B.INT32,n):this.scalar(e,B.INT32);case"message":return void 0===e||(i?this.messages(e,t.T(),a,n):this.message(e,t.T(),a,n));case"map":if("object"!=typeof e||null===e)return!1;if(n<2)return!0;if(!this.mapKeys(e,t.K,n))return!1;switch(t.V.kind){case"scalar":return this.scalars(Object.values(e),t.V.T,n,t.V.L);case"enum":return this.scalars(Object.values(e),B.INT32,n);case"message":return this.messages(Object.values(e),t.V.T(),a,n)}}return!0}message(e,t,a,n){return a?t.isAssignable(e,n):t.is(e,n)}messages(e,t,a,n){if(!Array.isArray(e))return!1;if(n<2)return!0;if(a){for(let i=0;i<e.length&&i<n;i++)if(!t.isAssignable(e[i],n-1))return!1}else for(let i=0;i<e.length&&i<n;i++)if(!t.is(e[i],n-1))return!1;return!0}scalar(e,t,a){let n=typeof e;switch(t){case B.UINT64:case B.FIXED64:case B.INT64:case B.SFIXED64:case B.SINT64:switch(a){case F.BIGINT:return"bigint"==n;case F.NUMBER:return"number"==n&&!isNaN(e);default:return"string"==n}case B.BOOL:return"boolean"==n;case B.STRING:return"string"==n;case B.BYTES:return e instanceof Uint8Array;case B.DOUBLE:case B.FLOAT:return"number"==n&&!isNaN(e);default:return"number"==n&&Number.isInteger(e)}}scalars(e,t,a,n){if(!Array.isArray(e))return!1;if(a<2)return!0;if(Array.isArray(e))for(let i=0;i<e.length&&i<a;i++)if(!this.scalar(e[i],t,n))return!1;return!0}mapKeys(e,t,a){let n=Object.keys(e);switch(t){case B.INT32:case B.FIXED32:case B.SFIXED32:case B.SINT32:case B.UINT32:return this.scalars(n.slice(0,a).map((e=>parseInt(e))),t,a);case B.BOOL:return this.scalars(n.slice(0,a).map((e=>"true"==e||"false"!=e&&e)),t,a);default:return this.scalars(n,t,a,F.STRING)}}}function U(e,t){switch(t){case F.BIGINT:return e.toBigInt();case F.NUMBER:return e.toNumber();default:return e.toString()}}class M{constructor(e){this.info=e}prepare(){var e;if(void 0===this.fMap){this.fMap={};const t=null!==(e=this.info.fields)&&void 0!==e?e:[];for(const e of t)this.fMap[e.name]=e,this.fMap[e.jsonName]=e,this.fMap[e.localName]=e}}assert(t,a,n){if(!t){let t=e(n);throw"number"!=t&&"boolean"!=t||(t=n.toString()),new Error(`Cannot parse JSON ${t} for ${this.info.typeName}#${a}`)}}read(e,t,a){this.prepare();const n=[];for(const[o,r]of Object.entries(e)){const e=this.fMap[o];if(!e){if(!a.ignoreUnknownFields)throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${o}`);continue}const s=e.localName;let l;if(e.oneof){if(n.includes(e.oneof))throw new Error(`Multiple members of the oneof group "${e.oneof}" of ${this.info.typeName} are present in JSON.`);n.push(e.oneof),l=t[e.oneof]={oneofKind:s}}else l=t;if("map"==e.kind){if(null===r)continue;this.assert(null!==(i=r)&&"object"==typeof i&&!Array.isArray(i),e.name,r);const t=l[s];for(const[n,i]of Object.entries(r)){let o;switch(this.assert(null!==i,e.name+" map value",null),e.V.kind){case"message":o=e.V.T().internalJsonRead(i,a);break;case"enum":o=this.enum(e.V.T(),i,e.name);break;case"scalar":o=this.scalar(i,e.V.T,e.V.L,e.name)}this.assert(void 0!==o,e.name+" map value",i);let r=n;e.K==B.BOOL&&(r="true"==r||"false"!=r&&r),r=this.scalar(r,e.K,F.STRING,e.name).toString(),t[r]=o}}else if(e.repeat){if(null===r)continue;this.assert(Array.isArray(r),e.name,r);const t=l[s];for(const n of r){let i;switch(this.assert(null!==n,e.name,null),e.kind){case"message":i=e.T().internalJsonRead(n,a);break;case"enum":i=this.enum(e.T(),n,e.name);break;case"scalar":i=this.scalar(n,e.T,e.L,e.name)}this.assert(void 0!==i,e.name,r),t.push(i)}}else switch(e.kind){case"message":if(null===r&&"google.protobuf.Value"!=e.T().typeName){this.assert(void 0===e.oneof,e.name+" (oneof member)",null);continue}l[s]=e.T().internalJsonRead(r,a,l[s]);break;case"enum":l[s]=this.enum(e.T(),r,e.name);break;case"scalar":l[s]=this.scalar(r,e.T,e.L,e.name)}}var i}enum(e,t,a){if("google.protobuf.NullValue"==e[0]&&w(null===t,`Unable to parse field ${this.info.typeName}#${a}, enum ${e[0]} only accepts null.`),null===t)return 0;switch(typeof t){case"number":return w(Number.isInteger(t),`Unable to parse field ${this.info.typeName}#${a}, enum can only be integral number, got ${t}.`),t;case"string":let n=t;e[2]&&t.substring(0,e[2].length)===e[2]&&(n=t.substring(e[2].length));let i=e[1][n];return w("number"==typeof i,`Unable to parse field ${this.info.typeName}#${a}, enum ${e[0]} has no value for "${t}".`),i}w(!1,`Unable to parse field ${this.info.typeName}#${a}, cannot parse enum value from ${typeof t}".`)}scalar(e,t,n,i){let o;try{switch(t){case B.DOUBLE:case B.FLOAT:if(null===e)return 0;if("NaN"===e)return Number.NaN;if("Infinity"===e)return Number.POSITIVE_INFINITY;if("-Infinity"===e)return Number.NEGATIVE_INFINITY;if(""===e){o="empty string";break}if("string"==typeof e&&e.trim().length!==e.length){o="extra whitespace";break}if("string"!=typeof e&&"number"!=typeof e)break;let i=Number(e);if(Number.isNaN(i)){o="not a number";break}if(!Number.isFinite(i)){o="too large or small";break}return t==B.FLOAT&&b(i),i;case B.INT32:case B.FIXED32:case B.SFIXED32:case B.SINT32:case B.UINT32:if(null===e)return 0;let s;if("number"==typeof e?s=e:""===e?o="empty string":"string"==typeof e&&(e.trim().length!==e.length?o="extra whitespace":s=Number(e)),void 0===s)break;return t==B.UINT32?k(s):y(s),s;case B.INT64:case B.SFIXED64:case B.SINT64:if(null===e)return U(u.ZERO,n);if("number"!=typeof e&&"string"!=typeof e)break;return U(u.from(e),n);case B.FIXED64:case B.UINT64:if(null===e)return U(g.ZERO,n);if("number"!=typeof e&&"string"!=typeof e)break;return U(g.from(e),n);case B.BOOL:if(null===e)return!1;if("boolean"!=typeof e)break;return e;case B.STRING:if(null===e)return"";if("string"!=typeof e){o="extra whitespace";break}try{encodeURIComponent(e)}catch(r){r="invalid UTF8";break}return e;case B.BYTES:if(null===e||""===e)return new Uint8Array(0);if("string"!=typeof e)break;return function(e){let t=3*e.length/4;"="==e[e.length-2]?t-=2:"="==e[e.length-1]&&(t-=1);let n,i=new Uint8Array(t),o=0,r=0,s=0;for(let l=0;l<e.length;l++){if(n=a[e.charCodeAt(l)],void 0===n)switch(e[l]){case"=":r=0;case"\n":case"\r":case"\t":case" ":continue;default:throw Error("invalid base64 string.")}switch(r){case 0:s=n,r=1;break;case 1:i[o++]=s<<2|(48&n)>>4,s=n,r=2;break;case 2:i[o++]=(15&s)<<4|(60&n)>>2,s=n,r=3;break;case 3:i[o++]=(3&s)<<6|n,r=0}}if(1==r)throw Error("invalid base64 string.");return i.subarray(0,o)}(e)}}catch(s){o=s.message}this.assert(!1,i+(o?" - "+o:""),e)}}class A{constructor(e){var t;this.fields=null!==(t=e.fields)&&void 0!==t?t:[]}write(e,t){const a={},n=e;for(const i of this.fields.filter((e=>!e.oneof))){let e=this.field(i,n[i.localName],t);void 0!==e&&(a[t.useProtoFieldName?i.name:i.jsonName]=e)}for(const i of this.fields){if(!i.oneof)continue;const e=n[i.oneof];if(e.oneofKind!==i.localName)continue;let o;o="scalar"==i.kind||"enum"==i.kind?this.field(i,e[i.localName],{enumAsInteger:t.enumAsInteger,useProtoFieldName:t.useProtoFieldName,emitDefaultValues:!0}):this.field(i,e[i.localName],t),w(void 0!==o),a[t.useProtoFieldName?i.name:i.jsonName]=o}return a}field(e,t,a){let n;if("map"==e.kind){w("object"==typeof t&&null!==t);const i={};switch(e.V.kind){case"scalar":for(const[a,r]of Object.entries(t)){const t=this.scalar(e.V.T,r,e.name,!1,!0);w(void 0!==t),i[a.toString()]=t}break;case"message":const n=e.V.T();for(const[r,s]of Object.entries(t)){const t=this.message(n,s,e.name,a);w(void 0!==t),i[r.toString()]=t}break;case"enum":const o=e.V.T();for(const[r,s]of Object.entries(t)){w(void 0===s||"number"==typeof s);const t=this.enum(o,s,e.name,!1,!0,a.enumAsInteger);w(void 0!==t),i[r.toString()]=t}}(a.emitDefaultValues||Object.keys(i).length>0)&&(n=i)}else if(e.repeat){w(Array.isArray(t));const i=[];switch(e.kind){case"scalar":for(let a=0;a<t.length;a++){const n=this.scalar(e.T,t[a],e.name,e.opt,!0);w(void 0!==n),i.push(n)}break;case"enum":const n=e.T();for(let r=0;r<t.length;r++){w(void 0===t[r]||"number"==typeof t[r]);const o=this.enum(n,t[r],e.name,e.opt,!0,a.enumAsInteger);w(void 0!==o),i.push(o)}break;case"message":const o=e.T();for(let r=0;r<t.length;r++){const n=this.message(o,t[r],e.name,a);w(void 0!==n),i.push(n)}}(a.emitDefaultValues||i.length>0||a.emitDefaultValues)&&(n=i)}else switch(e.kind){case"scalar":n=this.scalar(e.T,t,e.name,e.opt,a.emitDefaultValues);break;case"enum":n=this.enum(e.T(),t,e.name,e.opt,a.emitDefaultValues,a.enumAsInteger);break;case"message":n=this.message(e.T(),t,e.name,a)}return n}enum(e,t,a,n,i,o){if("google.protobuf.NullValue"==e[0])return null;if(void 0!==t){if(0!==t||i||n)return w("number"==typeof t),w(Number.isInteger(t)),o||!e[1].hasOwnProperty(t)?t:e[2]?e[2]+e[1][t]:e[1][t]}else w(n)}message(e,t,a,n){return void 0===t?n.emitDefaultValues?null:void 0:e.internalJsonWrite(t,n)}scalar(e,a,n,i,o){if(void 0===a)return void w(i);const r=o||i;switch(e){case B.INT32:case B.SFIXED32:case B.SINT32:return 0===a?r?0:void 0:(y(a),a);case B.FIXED32:case B.UINT32:return 0===a?r?0:void 0:(k(a),a);case B.FLOAT:b(a);case B.DOUBLE:return 0===a?r?0:void 0:(w("number"==typeof a),Number.isNaN(a)?"NaN":a===Number.POSITIVE_INFINITY?"Infinity":a===Number.NEGATIVE_INFINITY?"-Infinity":a);case B.STRING:return""===a?r?"":void 0:(w("string"==typeof a),a);case B.BOOL:return!1===a?!r&&void 0:(w("boolean"==typeof a),a);case B.UINT64:case B.FIXED64:w("number"==typeof a||"string"==typeof a||"bigint"==typeof a);let e=g.from(a);if(e.isZero()&&!r)return;return e.toString();case B.INT64:case B.SFIXED64:case B.SINT64:w("number"==typeof a||"string"==typeof a||"bigint"==typeof a);let n=u.from(a);if(n.isZero()&&!r)return;return n.toString();case B.BYTES:return w(a instanceof Uint8Array),a.byteLength?function(e){let a,n="",i=0,o=0;for(let r=0;r<e.length;r++)switch(a=e[r],i){case 0:n+=t[a>>2],o=(3&a)<<4,i=1;break;case 1:n+=t[o|a>>4],o=(15&a)<<2,i=2;break;case 2:n+=t[o|a>>6],n+=t[63&a],i=0}return i&&(n+=t[o],n+="=",1==i&&(n+="=")),n}(a):r?"":void 0}}}function L(e,t=F.STRING){switch(e){case B.BOOL:return!1;case B.UINT64:case B.FIXED64:return U(g.ZERO,t);case B.INT64:case B.SFIXED64:case B.SINT64:return U(u.ZERO,t);case B.DOUBLE:case B.FLOAT:return 0;case B.BYTES:return new Uint8Array(0);case B.STRING:return"";default:return 0}}class z{constructor(e){this.info=e}prepare(){var e;if(!this.fieldNoToField){const t=null!==(e=this.info.fields)&&void 0!==e?e:[];this.fieldNoToField=new Map(t.map((e=>[e.no,e])))}}read(e,t,a,n){this.prepare();const i=void 0===n?e.len:e.pos+n;for(;e.pos<i;){const[n,i]=e.tag(),o=this.fieldNoToField.get(n);if(!o){let o=a.readUnknownField;if("throw"==o)throw new Error(`Unknown field ${n} (wire type ${i}) for ${this.info.typeName}`);let r=e.skip(i);!1!==o&&(!0===o?T.onRead:o)(this.info.typeName,t,n,i,r);continue}let r=t,s=o.repeat,l=o.localName;switch(o.oneof&&(r=r[o.oneof],r.oneofKind!==l&&(r=t[o.oneof]={oneofKind:l})),o.kind){case"scalar":case"enum":let t="enum"==o.kind?B.INT32:o.T,n="scalar"==o.kind?o.L:void 0;if(s){let a=r[l];if(i==v.LengthDelimited&&t!=B.STRING&&t!=B.BYTES){let i=e.uint32()+e.pos;for(;e.pos<i;)a.push(this.scalar(e,t,n))}else a.push(this.scalar(e,t,n))}else r[l]=this.scalar(e,t,n);break;case"message":if(s){let t=r[l],n=o.T().internalBinaryRead(e,e.uint32(),a);t.push(n)}else r[l]=o.T().internalBinaryRead(e,e.uint32(),a,r[l]);break;case"map":let[c,d]=this.mapEntry(o,e,a);r[l][c]=d}}}mapEntry(e,t,a){let n,i,o=t.uint32(),r=t.pos+o;for(;t.pos<r;){let[o,r]=t.tag();switch(o){case 1:n=e.K==B.BOOL?t.bool().toString():this.scalar(t,e.K,F.STRING);break;case 2:switch(e.V.kind){case"scalar":i=this.scalar(t,e.V.T,e.V.L);break;case"enum":i=t.int32();break;case"message":i=e.V.T().internalBinaryRead(t,t.uint32(),a)}break;default:throw new Error(`Unknown field ${o} (wire type ${r}) in map entry for ${this.info.typeName}#${e.name}`)}}if(void 0===n){let t=L(e.K);n=e.K==B.BOOL?t.toString():t}if(void 0===i)switch(e.V.kind){case"scalar":i=L(e.V.T,e.V.L);break;case"enum":i=0;break;case"message":i=e.V.T().create()}return[n,i]}scalar(e,t,a){switch(t){case B.INT32:return e.int32();case B.STRING:return e.string();case B.BOOL:return e.bool();case B.DOUBLE:return e.double();case B.FLOAT:return e.float();case B.INT64:return U(e.int64(),a);case B.UINT64:return U(e.uint64(),a);case B.FIXED64:return U(e.fixed64(),a);case B.FIXED32:return e.fixed32();case B.BYTES:return e.bytes();case B.UINT32:return e.uint32();case B.SFIXED32:return e.sfixed32();case B.SFIXED64:return U(e.sfixed64(),a);case B.SINT32:return e.sint32();case B.SINT64:return U(e.sint64(),a)}}}class H{constructor(e){this.info=e}prepare(){if(!this.fields){const e=this.info.fields?this.info.fields.concat():[];this.fields=e.sort(((e,t)=>e.no-t.no))}}write(e,t,a){this.prepare();for(const i of this.fields){let n,o,r=i.repeat,s=i.localName;if(i.oneof){const t=e[i.oneof];if(t.oneofKind!==s)continue;n=t[s],o=!0}else n=e[s],o=!1;switch(i.kind){case"scalar":case"enum":let e="enum"==i.kind?B.INT32:i.T;if(r)if(w(Array.isArray(n)),r==V.PACKED)this.packed(t,e,i.no,n);else for(const a of n)this.scalar(t,e,i.no,a,!0);else void 0===n?w(i.opt):this.scalar(t,e,i.no,n,o||i.opt);break;case"message":if(r){w(Array.isArray(n));for(const e of n)this.message(t,a,i.T(),i.no,e)}else this.message(t,a,i.T(),i.no,n);break;case"map":w("object"==typeof n&&null!==n);for(const[o,r]of Object.entries(n))this.mapEntry(t,a,i,o,r)}}let n=a.writeUnknownFields;!1!==n&&(!0===n?T.onWrite:n)(this.info.typeName,e,t)}mapEntry(e,t,a,n,i){e.tag(a.no,v.LengthDelimited),e.fork();let o=n;switch(a.K){case B.INT32:case B.FIXED32:case B.UINT32:case B.SFIXED32:case B.SINT32:o=Number.parseInt(n);break;case B.BOOL:w("true"==n||"false"==n),o="true"==n}switch(this.scalar(e,a.K,1,o,!0),a.V.kind){case"scalar":this.scalar(e,a.V.T,2,i,!0);break;case"enum":this.scalar(e,B.INT32,2,i,!0);break;case"message":this.message(e,t,a.V.T(),2,i)}e.join()}message(e,t,a,n,i){void 0!==i&&(a.internalBinaryWrite(i,e.tag(n,v.LengthDelimited).fork(),t),e.join())}scalar(e,t,a,n,i){let[o,r,s]=this.scalarInfo(t,n);s&&!i||(e.tag(a,o),e[r](n))}packed(e,t,a,n){if(!n.length)return;w(t!==B.BYTES&&t!==B.STRING),e.tag(a,v.LengthDelimited),e.fork();let[,i]=this.scalarInfo(t);for(let o=0;o<n.length;o++)e[i](n[o]);e.join()}scalarInfo(e,t){let a,n=v.Varint,i=void 0===t,o=0===t;switch(e){case B.INT32:a="int32";break;case B.STRING:o=i||!t.length,n=v.LengthDelimited,a="string";break;case B.BOOL:o=!1===t,a="bool";break;case B.UINT32:a="uint32";break;case B.DOUBLE:n=v.Bit64,a="double";break;case B.FLOAT:n=v.Bit32,a="float";break;case B.INT64:o=i||u.from(t).isZero(),a="int64";break;case B.UINT64:o=i||g.from(t).isZero(),a="uint64";break;case B.FIXED64:o=i||g.from(t).isZero(),n=v.Bit64,a="fixed64";break;case B.BYTES:o=i||!t.byteLength,n=v.LengthDelimited,a="bytes";break;case B.FIXED32:n=v.Bit32,a="fixed32";break;case B.SFIXED32:n=v.Bit32,a="sfixed32";break;case B.SFIXED64:o=i||u.from(t).isZero(),n=v.Bit64,a="sfixed64";break;case B.SINT32:a="sint32";break;case B.SINT64:o=i||u.from(t).isZero(),a="sint64"}return[n,a,i||o]}}function q(e,t,a){let n,i,o=a;for(let r of e.fields){let e=r.localName;if(r.oneof){const a=o[r.oneof];if(void 0===a)continue;if(n=a[e],i=t[r.oneof],i.oneofKind=a.oneofKind,void 0===n){delete i[e];continue}}else if(n=o[e],i=t,void 0===n)continue;switch(r.kind){case"scalar":case"enum":r.repeat?i[e]=n.concat():i[e]=n;break;case"message":let t=r.T();if(r.repeat)for(let a=0;a<n.length;a++)i[e][a]=t.create(n[a]);else void 0===i[e]?i[e]=t.create(n):t.mergePartial(i[e],n);break;case"map":switch(r.V.kind){case"scalar":case"enum":Object.assign(i[e],n);break;case"message":let t=r.V.T();for(let a of Object.keys(n))i[e][a]=t.create(n[a])}}}}const J=Object.values;function K(e,t,a){if(t===a)return!0;if(e!==B.BYTES)return!1;let n=t,i=a;if(n.length!==i.length)return!1;for(let o=0;o<n.length;o++)if(n[o]!=i[o])return!1;return!0}function Y(e,t,a){if(t.length!==a.length)return!1;for(let n=0;n<t.length;n++)if(!K(e,t[n],a[n]))return!1;return!0}function Q(e,t,a){if(t.length!==a.length)return!1;for(let n=0;n<t.length;n++)if(!e.equals(t[n],a[n]))return!1;return!0}class X{constructor(e,t,a){this.defaultCheckDepth=16,this.typeName=e,this.fields=t.map(D),this.options=null!=a?a:{},this.refTypeCheck=new j(this),this.refJsonReader=new M(this),this.refJsonWriter=new A(this),this.refBinReader=new z(this),this.refBinWriter=new H(this)}create(e){let t=function(e){const t={};Object.defineProperty(t,G,{enumerable:!1,value:e});for(let a of e.fields){let e=a.localName;if(!a.opt)if(a.oneof)t[a.oneof]={oneofKind:void 0};else if(a.repeat)t[e]=[];else switch(a.kind){case"scalar":t[e]=L(a.T,a.L);break;case"enum":t[e]=0;break;case"map":t[e]={}}}return t}(this);return void 0!==e&&q(this,t,e),t}clone(e){let t=this.create();return q(this,t,e),t}equals(e,t){return function(e,t,a){if(t===a)return!0;if(!t||!a)return!1;for(let n of e.fields){let e=n.localName,i=n.oneof?t[n.oneof][e]:t[e],o=n.oneof?a[n.oneof][e]:a[e];switch(n.kind){case"enum":case"scalar":let e="enum"==n.kind?B.INT32:n.T;if(!(n.repeat?Y(e,i,o):K(e,i,o)))return!1;break;case"map":if(!("message"==n.V.kind?Q(n.V.T(),J(i),J(o)):Y("enum"==n.V.kind?B.INT32:n.V.T,J(i),J(o))))return!1;break;case"message":let t=n.T();if(!(n.repeat?Q(t,i,o):t.equals(i,o)))return!1}}return!0}(this,e,t)}is(e,t=this.defaultCheckDepth){return this.refTypeCheck.is(e,t,!1)}isAssignable(e,t=this.defaultCheckDepth){return this.refTypeCheck.is(e,t,!0)}mergePartial(e,t){q(this,e,t)}fromBinary(e,t){let a=function(e){return e?Object.assign(Object.assign({},x),e):x}(t);return this.internalBinaryRead(a.readerFactory(e),e.byteLength,a)}fromJson(e,t){return this.internalJsonRead(e,function(e){return e?Object.assign(Object.assign({},P),e):P}(t))}fromJsonString(e,t){let a=JSON.parse(e);return this.fromJson(a,t)}toJson(e,t){return this.internalJsonWrite(e,function(e){return e?Object.assign(Object.assign({},O),e):O}(t))}toJsonString(e,t){var a;let n=this.toJson(e,t);return JSON.stringify(n,null,null!==(a=null==t?void 0:t.prettySpaces)&&void 0!==a?a:0)}toBinary(e,t){let a=function(e){return e?Object.assign(Object.assign({},S),e):S}(t);return this.internalBinaryWrite(e,a.writerFactory(),a).finish()}internalJsonRead(t,a,n){if(null!==t&&"object"==typeof t&&!Array.isArray(t)){let e=null!=n?n:this.create();return this.refJsonReader.read(t,e,a),e}throw new Error(`Unable to parse message ${this.typeName} from JSON ${e(t)}.`)}internalJsonWrite(e,t){return this.refJsonWriter.write(e,t)}internalBinaryWrite(e,t,a){return this.refBinWriter.write(e,t,a),t}internalBinaryRead(e,t,a,n){let i=null!=n?n:this.create();return this.refBinReader.read(e,i,a,t),i}}var Z=(e=>(e[e.SpecBalanceDruid=0]="SpecBalanceDruid",e[e.SpecElementalShaman=1]="SpecElementalShaman",e[e.SpecEnhancementShaman=9]="SpecEnhancementShaman",e[e.SpecFeralDruid=12]="SpecFeralDruid",e[e.SpecFeralTankDruid=14]="SpecFeralTankDruid",e[e.SpecHunter=8]="SpecHunter",e[e.SpecMage=2]="SpecMage",e[e.SpecProtectionPaladin=13]="SpecProtectionPaladin",e[e.SpecRetributionPaladin=3]="SpecRetributionPaladin",e[e.SpecRogue=7]="SpecRogue",e[e.SpecHealingPriest=17]="SpecHealingPriest",e[e.SpecShadowPriest=4]="SpecShadowPriest",e[e.SpecSmitePriest=10]="SpecSmitePriest",e[e.SpecWarlock=5]="SpecWarlock",e[e.SpecWarrior=6]="SpecWarrior",e[e.SpecProtectionWarrior=11]="SpecProtectionWarrior",e[e.SpecDeathknight=15]="SpecDeathknight",e[e.SpecTankDeathknight=16]="SpecTankDeathknight",e))(Z||{}),ee=(e=>(e[e.RaceUnknown=0]="RaceUnknown",e[e.RaceBloodElf=1]="RaceBloodElf",e[e.RaceDraenei=2]="RaceDraenei",e[e.RaceDwarf=3]="RaceDwarf",e[e.RaceGnome=4]="RaceGnome",e[e.RaceHuman=5]="RaceHuman",e[e.RaceNightElf=6]="RaceNightElf",e[e.RaceOrc=7]="RaceOrc",e[e.RaceTauren=8]="RaceTauren",e[e.RaceTroll=9]="RaceTroll",e[e.RaceUndead=10]="RaceUndead",e))(ee||{}),te=(e=>(e[e.Unknown=0]="Unknown",e[e.Alliance=1]="Alliance",e[e.Horde=2]="Horde",e))(te||{}),ae=(e=>(e[e.ShattrathFactionAldor=0]="ShattrathFactionAldor",e[e.ShattrathFactionScryer=1]="ShattrathFactionScryer",e))(ae||{}),ne=(e=>(e[e.ClassUnknown=0]="ClassUnknown",e[e.ClassDruid=1]="ClassDruid",e[e.ClassHunter=2]="ClassHunter",e[e.ClassMage=3]="ClassMage",e[e.ClassPaladin=4]="ClassPaladin",e[e.ClassPriest=5]="ClassPriest",e[e.ClassRogue=6]="ClassRogue",e[e.ClassShaman=7]="ClassShaman",e[e.ClassWarlock=8]="ClassWarlock",e[e.ClassWarrior=9]="ClassWarrior",e[e.ClassDeathknight=10]="ClassDeathknight",e))(ne||{}),ie=(e=>(e[e.ProfessionUnknown=0]="ProfessionUnknown",e[e.Alchemy=1]="Alchemy",e[e.Blacksmithing=2]="Blacksmithing",e[e.Enchanting=3]="Enchanting",e[e.Engineering=4]="Engineering",e[e.Herbalism=5]="Herbalism",e[e.Inscription=6]="Inscription",e[e.Jewelcrafting=7]="Jewelcrafting",e[e.Leatherworking=8]="Leatherworking",e[e.Mining=9]="Mining",e[e.Skinning=10]="Skinning",e[e.Tailoring=11]="Tailoring",e))(ie||{}),oe=(e=>(e[e.StatStrength=0]="StatStrength",e[e.StatAgility=1]="StatAgility",e[e.StatStamina=2]="StatStamina",e[e.StatIntellect=3]="StatIntellect",e[e.StatSpirit=4]="StatSpirit",e[e.StatSpellPower=5]="StatSpellPower",e[e.StatHealingPower=6]="StatHealingPower",e[e.StatArcaneSpellPower=7]="StatArcaneSpellPower",e[e.StatFireSpellPower=8]="StatFireSpellPower",e[e.StatFrostSpellPower=9]="StatFrostSpellPower",e[e.StatHolySpellPower=10]="StatHolySpellPower",e[e.StatNatureSpellPower=11]="StatNatureSpellPower",e[e.StatShadowSpellPower=12]="StatShadowSpellPower",e[e.StatMP5=13]="StatMP5",e[e.StatSpellHit=14]="StatSpellHit",e[e.StatSpellCrit=15]="StatSpellCrit",e[e.StatSpellHaste=16]="StatSpellHaste",e[e.StatSpellPenetration=17]="StatSpellPenetration",e[e.StatAttackPower=18]="StatAttackPower",e[e.StatMeleeHit=19]="StatMeleeHit",e[e.StatMeleeCrit=20]="StatMeleeCrit",e[e.StatMeleeHaste=21]="StatMeleeHaste",e[e.StatArmorPenetration=22]="StatArmorPenetration",e[e.StatExpertise=23]="StatExpertise",e[e.StatMana=24]="StatMana",e[e.StatEnergy=25]="StatEnergy",e[e.StatRage=26]="StatRage",e[e.StatArmor=27]="StatArmor",e[e.StatRangedAttackPower=28]="StatRangedAttackPower",e[e.StatDefense=29]="StatDefense",e[e.StatBlock=30]="StatBlock",e[e.StatBlockValue=31]="StatBlockValue",e[e.StatDodge=32]="StatDodge",e[e.StatParry=33]="StatParry",e[e.StatResilience=34]="StatResilience",e[e.StatHealth=35]="StatHealth",e[e.StatArcaneResistance=36]="StatArcaneResistance",e[e.StatFireResistance=37]="StatFireResistance",e[e.StatFrostResistance=38]="StatFrostResistance",e[e.StatNatureResistance=39]="StatNatureResistance",e[e.StatShadowResistance=40]="StatShadowResistance",e))(oe||{}),re=(e=>(e[e.ItemTypeUnknown=0]="ItemTypeUnknown",e[e.ItemTypeHead=1]="ItemTypeHead",e[e.ItemTypeNeck=2]="ItemTypeNeck",e[e.ItemTypeShoulder=3]="ItemTypeShoulder",e[e.ItemTypeBack=4]="ItemTypeBack",e[e.ItemTypeChest=5]="ItemTypeChest",e[e.ItemTypeWrist=6]="ItemTypeWrist",e[e.ItemTypeHands=7]="ItemTypeHands",e[e.ItemTypeWaist=8]="ItemTypeWaist",e[e.ItemTypeLegs=9]="ItemTypeLegs",e[e.ItemTypeFeet=10]="ItemTypeFeet",e[e.ItemTypeFinger=11]="ItemTypeFinger",e[e.ItemTypeTrinket=12]="ItemTypeTrinket",e[e.ItemTypeWeapon=13]="ItemTypeWeapon",e[e.ItemTypeRanged=14]="ItemTypeRanged",e))(re||{}),se=(e=>(e[e.ArmorTypeUnknown=0]="ArmorTypeUnknown",e[e.ArmorTypeCloth=1]="ArmorTypeCloth",e[e.ArmorTypeLeather=2]="ArmorTypeLeather",e[e.ArmorTypeMail=3]="ArmorTypeMail",e[e.ArmorTypePlate=4]="ArmorTypePlate",e))(se||{}),le=(e=>(e[e.WeaponTypeUnknown=0]="WeaponTypeUnknown",e[e.WeaponTypeAxe=1]="WeaponTypeAxe",e[e.WeaponTypeDagger=2]="WeaponTypeDagger",e[e.WeaponTypeFist=3]="WeaponTypeFist",e[e.WeaponTypeMace=4]="WeaponTypeMace",e[e.WeaponTypeOffHand=5]="WeaponTypeOffHand",e[e.WeaponTypePolearm=6]="WeaponTypePolearm",e[e.WeaponTypeShield=7]="WeaponTypeShield",e[e.WeaponTypeStaff=8]="WeaponTypeStaff",e[e.WeaponTypeSword=9]="WeaponTypeSword",e))(le||{}),ce=(e=>(e[e.HandTypeUnknown=0]="HandTypeUnknown",e[e.HandTypeMainHand=1]="HandTypeMainHand",e[e.HandTypeOneHand=2]="HandTypeOneHand",e[e.HandTypeOffHand=3]="HandTypeOffHand",e[e.HandTypeTwoHand=4]="HandTypeTwoHand",e))(ce||{}),de=(e=>(e[e.RangedWeaponTypeUnknown=0]="RangedWeaponTypeUnknown",e[e.RangedWeaponTypeBow=1]="RangedWeaponTypeBow",e[e.RangedWeaponTypeCrossbow=2]="RangedWeaponTypeCrossbow",e[e.RangedWeaponTypeGun=3]="RangedWeaponTypeGun",e[e.RangedWeaponTypeIdol=4]="RangedWeaponTypeIdol",e[e.RangedWeaponTypeLibram=5]="RangedWeaponTypeLibram",e[e.RangedWeaponTypeThrown=6]="RangedWeaponTypeThrown",e[e.RangedWeaponTypeTotem=7]="RangedWeaponTypeTotem",e[e.RangedWeaponTypeWand=8]="RangedWeaponTypeWand",e[e.RangedWeaponTypeSigil=9]="RangedWeaponTypeSigil",e))(de||{}),me=(e=>(e[e.ItemSlotHead=0]="ItemSlotHead",e[e.ItemSlotNeck=1]="ItemSlotNeck",e[e.ItemSlotShoulder=2]="ItemSlotShoulder",e[e.ItemSlotBack=3]="ItemSlotBack",e[e.ItemSlotChest=4]="ItemSlotChest",e[e.ItemSlotWrist=5]="ItemSlotWrist",e[e.ItemSlotHands=6]="ItemSlotHands",e[e.ItemSlotWaist=7]="ItemSlotWaist",e[e.ItemSlotLegs=8]="ItemSlotLegs",e[e.ItemSlotFeet=9]="ItemSlotFeet",e[e.ItemSlotFinger1=10]="ItemSlotFinger1",e[e.ItemSlotFinger2=11]="ItemSlotFinger2",e[e.ItemSlotTrinket1=12]="ItemSlotTrinket1",e[e.ItemSlotTrinket2=13]="ItemSlotTrinket2",e[e.ItemSlotMainHand=14]="ItemSlotMainHand",e[e.ItemSlotOffHand=15]="ItemSlotOffHand",e[e.ItemSlotRanged=16]="ItemSlotRanged",e))(me||{}),pe=(e=>(e[e.ItemQualityJunk=0]="ItemQualityJunk",e[e.ItemQualityCommon=1]="ItemQualityCommon",e[e.ItemQualityUncommon=2]="ItemQualityUncommon",e[e.ItemQualityRare=3]="ItemQualityRare",e[e.ItemQualityEpic=4]="ItemQualityEpic",e[e.ItemQualityLegendary=5]="ItemQualityLegendary",e))(pe||{}),he=(e=>(e[e.GemColorUnknown=0]="GemColorUnknown",e[e.GemColorMeta=1]="GemColorMeta",e[e.GemColorRed=2]="GemColorRed",e[e.GemColorBlue=3]="GemColorBlue",e[e.GemColorYellow=4]="GemColorYellow",e[e.GemColorGreen=5]="GemColorGreen",e[e.GemColorOrange=6]="GemColorOrange",e[e.GemColorPurple=7]="GemColorPurple",e[e.GemColorPrismatic=8]="GemColorPrismatic",e))(he||{}),ge=(e=>(e[e.SpellSchoolPhysical=0]="SpellSchoolPhysical",e[e.SpellSchoolArcane=1]="SpellSchoolArcane",e[e.SpellSchoolFire=2]="SpellSchoolFire",e[e.SpellSchoolFrost=3]="SpellSchoolFrost",e[e.SpellSchoolHoly=4]="SpellSchoolHoly",e[e.SpellSchoolNature=5]="SpellSchoolNature",e[e.SpellSchoolShadow=6]="SpellSchoolShadow",e))(ge||{}),ue=(e=>(e[e.TristateEffectMissing=0]="TristateEffectMissing",e[e.TristateEffectRegular=1]="TristateEffectRegular",e[e.TristateEffectImproved=2]="TristateEffectImproved",e))(ue||{}),fe=(e=>(e[e.ExplosiveUnknown=0]="ExplosiveUnknown",e[e.ExplosiveSaroniteBomb=1]="ExplosiveSaroniteBomb",e[e.ExplosiveCobaltFragBomb=2]="ExplosiveCobaltFragBomb",e))(fe||{}),we=(e=>(e[e.UnknownPotion=0]="UnknownPotion",e[e.RunicHealingPotion=1]="RunicHealingPotion",e[e.RunicManaPotion=2]="RunicManaPotion",e[e.IndestructiblePotion=3]="IndestructiblePotion",e[e.PotionOfSpeed=4]="PotionOfSpeed",e[e.PotionOfWildMagic=5]="PotionOfWildMagic",e[e.DestructionPotion=6]="DestructionPotion",e[e.SuperManaPotion=7]="SuperManaPotion",e[e.HastePotion=8]="HastePotion",e[e.MightyRagePotion=9]="MightyRagePotion",e[e.FelManaPotion=10]="FelManaPotion",e[e.InsaneStrengthPotion=11]="InsaneStrengthPotion",e[e.IronshieldPotion=12]="IronshieldPotion",e[e.HeroicPotion=13]="HeroicPotion",e))(we||{}),ye=(e=>(e[e.ConjuredUnknown=0]="ConjuredUnknown",e[e.ConjuredDarkRune=1]="ConjuredDarkRune",e[e.ConjuredFlameCap=2]="ConjuredFlameCap",e[e.ConjuredHealthstone=5]="ConjuredHealthstone",e[e.ConjuredRogueThistleTea=4]="ConjuredRogueThistleTea",e))(ye||{}),ke=(e=>(e[e.FlaskUnknown=0]="FlaskUnknown",e[e.FlaskOfTheFrostWyrm=1]="FlaskOfTheFrostWyrm",e[e.FlaskOfEndlessRage=2]="FlaskOfEndlessRage",e[e.FlaskOfPureMojo=3]="FlaskOfPureMojo",e[e.FlaskOfStoneblood=4]="FlaskOfStoneblood",e[e.LesserFlaskOfToughness=5]="LesserFlaskOfToughness",e[e.LesserFlaskOfResistance=6]="LesserFlaskOfResistance",e[e.FlaskOfBlindingLight=7]="FlaskOfBlindingLight",e[e.FlaskOfMightyRestoration=8]="FlaskOfMightyRestoration",e[e.FlaskOfPureDeath=9]="FlaskOfPureDeath",e[e.FlaskOfRelentlessAssault=10]="FlaskOfRelentlessAssault",e[e.FlaskOfSupremePower=11]="FlaskOfSupremePower",e[e.FlaskOfFortification=12]="FlaskOfFortification",e[e.FlaskOfChromaticWonder=13]="FlaskOfChromaticWonder",e))(ke||{}),be=(e=>(e[e.BattleElixirUnknown=0]="BattleElixirUnknown",e[e.ElixirOfAccuracy=1]="ElixirOfAccuracy",e[e.ElixirOfArmorPiercing=2]="ElixirOfArmorPiercing",e[e.ElixirOfDeadlyStrikes=3]="ElixirOfDeadlyStrikes",e[e.ElixirOfExpertise=4]="ElixirOfExpertise",e[e.ElixirOfLightningSpeed=5]="ElixirOfLightningSpeed",e[e.ElixirOfMightyAgility=6]="ElixirOfMightyAgility",e[e.ElixirOfMightyStrength=7]="ElixirOfMightyStrength",e[e.GurusElixir=8]="GurusElixir",e[e.SpellpowerElixir=9]="SpellpowerElixir",e[e.WrathElixir=10]="WrathElixir",e[e.AdeptsElixir=11]="AdeptsElixir",e[e.ElixirOfDemonslaying=12]="ElixirOfDemonslaying",e[e.ElixirOfMajorAgility=13]="ElixirOfMajorAgility",e[e.ElixirOfMajorFirePower=14]="ElixirOfMajorFirePower",e[e.ElixirOfMajorFrostPower=15]="ElixirOfMajorFrostPower",e[e.ElixirOfMajorShadowPower=16]="ElixirOfMajorShadowPower",e[e.ElixirOfMajorStrength=17]="ElixirOfMajorStrength",e[e.ElixirOfMastery=18]="ElixirOfMastery",e[e.ElixirOfTheMongoose=19]="ElixirOfTheMongoose",e[e.FelStrengthElixir=20]="FelStrengthElixir",e[e.GreaterArcaneElixir=21]="GreaterArcaneElixir",e))(be||{}),Ie=(e=>(e[e.GuardianElixirUnknown=0]="GuardianElixirUnknown",e[e.ElixirOfMightyDefense=1]="ElixirOfMightyDefense",e[e.ElixirOfMightyFortitude=2]="ElixirOfMightyFortitude",e[e.ElixirOfMightyMageblood=3]="ElixirOfMightyMageblood",e[e.ElixirOfMightyThoughts=4]="ElixirOfMightyThoughts",e[e.ElixirOfProtection=5]="ElixirOfProtection",e[e.ElixirOfSpirit=6]="ElixirOfSpirit",e[e.GiftOfArthas=7]="GiftOfArthas",e[e.ElixirOfDraenicWisdom=8]="ElixirOfDraenicWisdom",e[e.ElixirOfIronskin=9]="ElixirOfIronskin",e[e.ElixirOfMajorDefense=10]="ElixirOfMajorDefense",e[e.ElixirOfMajorFortitude=11]="ElixirOfMajorFortitude",e[e.ElixirOfMajorMageblood=12]="ElixirOfMajorMageblood",e))(Ie||{}),Te=(e=>(e[e.FoodUnknown=0]="FoodUnknown",e[e.FoodFishFeast=1]="FoodFishFeast",e[e.FoodGreatFeast=2]="FoodGreatFeast",e[e.FoodBlackenedDragonfin=3]="FoodBlackenedDragonfin",e[e.FoodHeartyRhino=4]="FoodHeartyRhino",e[e.FoodMegaMammothMeal=5]="FoodMegaMammothMeal",e[e.FoodSpicedWormBurger=6]="FoodSpicedWormBurger",e[e.FoodRhinoliciousWormsteak=7]="FoodRhinoliciousWormsteak",e[e.FoodImperialMantaSteak=8]="FoodImperialMantaSteak",e[e.FoodSnapperExtreme=9]="FoodSnapperExtreme",e[e.FoodMightyRhinoDogs=10]="FoodMightyRhinoDogs",e[e.FoodFirecrackerSalmon=11]="FoodFirecrackerSalmon",e[e.FoodCuttlesteak=12]="FoodCuttlesteak",e[e.FoodDragonfinFilet=13]="FoodDragonfinFilet",e[e.FoodBlackenedBasilisk=14]="FoodBlackenedBasilisk",e[e.FoodGrilledMudfish=15]="FoodGrilledMudfish",e[e.FoodRavagerDog=16]="FoodRavagerDog",e[e.FoodRoastedClefthoof=17]="FoodRoastedClefthoof",e[e.FoodSkullfishSoup=18]="FoodSkullfishSoup",e[e.FoodSpicyHotTalbuk=19]="FoodSpicyHotTalbuk",e[e.FoodFishermansFeast=20]="FoodFishermansFeast",e))(Te||{}),xe=(e=>(e[e.PetFoodUnknown=0]="PetFoodUnknown",e[e.PetFoodSpicedMammothTreats=1]="PetFoodSpicedMammothTreats",e[e.PetFoodKiblersBits=2]="PetFoodKiblersBits",e))(xe||{}),Se=(e=>(e[e.MobTypeUnknown=0]="MobTypeUnknown",e[e.MobTypeBeast=1]="MobTypeBeast",e[e.MobTypeDemon=2]="MobTypeDemon",e[e.MobTypeDragonkin=3]="MobTypeDragonkin",e[e.MobTypeElemental=4]="MobTypeElemental",e[e.MobTypeGiant=5]="MobTypeGiant",e[e.MobTypeHumanoid=6]="MobTypeHumanoid",e[e.MobTypeMechanical=7]="MobTypeMechanical",e[e.MobTypeUndead=8]="MobTypeUndead",e))(Se||{}),ve=(e=>(e[e.EnchantTypeNormal=0]="EnchantTypeNormal",e[e.EnchantTypeTwoHand=1]="EnchantTypeTwoHand",e[e.EnchantTypeShield=2]="EnchantTypeShield",e[e.EnchantTypeKit=3]="EnchantTypeKit",e))(ve||{}),_e=(e=>(e[e.OtherActionNone=0]="OtherActionNone",e[e.OtherActionWait=1]="OtherActionWait",e[e.OtherActionManaRegen=2]="OtherActionManaRegen",e[e.OtherActionEnergyRegen=5]="OtherActionEnergyRegen",e[e.OtherActionFocusRegen=6]="OtherActionFocusRegen",e[e.OtherActionManaGain=10]="OtherActionManaGain",e[e.OtherActionRageGain=11]="OtherActionRageGain",e[e.OtherActionAttack=3]="OtherActionAttack",e[e.OtherActionShoot=4]="OtherActionShoot",e[e.OtherActionPet=7]="OtherActionPet",e[e.OtherActionRefund=8]="OtherActionRefund",e[e.OtherActionDamageTaken=9]="OtherActionDamageTaken",e[e.OtherActionHealingModel=12]="OtherActionHealingModel",e[e.OtherActionBloodRuneGain=13]="OtherActionBloodRuneGain",e[e.OtherActionFrostRuneGain=14]="OtherActionFrostRuneGain",e[e.OtherActionUnholyRuneGain=15]="OtherActionUnholyRuneGain",e[e.OtherActionDeathRuneGain=16]="OtherActionDeathRuneGain",e))(_e||{});const Oe=new class extends X{constructor(){super("proto.RaidBuffs",[{no:1,name:"gift_of_the_wild",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:2,name:"power_word_fortitude",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:3,name:"commanding_shout",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:4,name:"blood_pact",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:5,name:"horn_of_winter",kind:"scalar",T:8},{no:6,name:"strength_of_earth_totem",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:7,name:"arcane_brilliance",kind:"scalar",T:8},{no:8,name:"fel_intelligence",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:9,name:"divine_spirit",kind:"scalar",T:8},{no:10,name:"battle_shout",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:11,name:"trueshot_aura",kind:"scalar",T:8},{no:12,name:"unleashed_rage",kind:"scalar",T:8},{no:13,name:"abominations_might",kind:"scalar",T:8},{no:14,name:"leader_of_the_pack",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:15,name:"rampage",kind:"scalar",T:8},{no:16,name:"icy_talons",kind:"scalar",T:8},{no:17,name:"windfury_totem",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:18,name:"totem_of_wrath",kind:"scalar",T:8},{no:19,name:"flametongue_totem",kind:"scalar",T:8},{no:20,name:"demonic_pact",kind:"scalar",T:5},{no:21,name:"swift_retribution",kind:"scalar",T:8},{no:22,name:"moonkin_aura",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:23,name:"elemental_oath",kind:"scalar",T:8},{no:24,name:"wrath_of_air_totem",kind:"scalar",T:8},{no:25,name:"ferocious_inspiration",kind:"scalar",T:8},{no:26,name:"sanctified_retribution",kind:"scalar",T:8},{no:27,name:"arcane_empowerment",kind:"scalar",T:8},{no:28,name:"mana_spring_totem",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:29,name:"bloodlust",kind:"scalar",T:8},{no:30,name:"thorns",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:31,name:"devotion_aura",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:42,name:"stoneskin_totem",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:32,name:"retribution_aura",kind:"scalar",T:8},{no:33,name:"shadow_protection",kind:"scalar",T:8},{no:34,name:"drums_of_forgotten_kings",kind:"scalar",T:8},{no:35,name:"drums_of_the_wild",kind:"scalar",T:8},{no:36,name:"scroll_of_protection",kind:"scalar",T:8},{no:37,name:"scroll_of_stamina",kind:"scalar",T:8},{no:38,name:"scroll_of_strength",kind:"scalar",T:8},{no:39,name:"scroll_of_agility",kind:"scalar",T:8},{no:40,name:"scroll_of_intellect",kind:"scalar",T:8},{no:41,name:"scroll_of_spirit",kind:"scalar",T:8}])}create(e){const t={giftOfTheWild:0,powerWordFortitude:0,commandingShout:0,bloodPact:0,hornOfWinter:!1,strengthOfEarthTotem:0,arcaneBrilliance:!1,felIntelligence:0,divineSpirit:!1,battleShout:0,trueshotAura:!1,unleashedRage:!1,abominationsMight:!1,leaderOfThePack:0,rampage:!1,icyTalons:!1,windfuryTotem:0,totemOfWrath:!1,flametongueTotem:!1,demonicPact:0,swiftRetribution:!1,moonkinAura:0,elementalOath:!1,wrathOfAirTotem:!1,ferociousInspiration:!1,sanctifiedRetribution:!1,arcaneEmpowerment:!1,manaSpringTotem:0,bloodlust:!1,thorns:0,devotionAura:0,stoneskinTotem:0,retributionAura:!1,shadowProtection:!1,drumsOfForgottenKings:!1,drumsOfTheWild:!1,scrollOfProtection:!1,scrollOfStamina:!1,scrollOfStrength:!1,scrollOfAgility:!1,scrollOfIntellect:!1,scrollOfSpirit:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.giftOfTheWild=e.int32();break;case 2:i.powerWordFortitude=e.int32();break;case 3:i.commandingShout=e.int32();break;case 4:i.bloodPact=e.int32();break;case 5:i.hornOfWinter=e.bool();break;case 6:i.strengthOfEarthTotem=e.int32();break;case 7:i.arcaneBrilliance=e.bool();break;case 8:i.felIntelligence=e.int32();break;case 9:i.divineSpirit=e.bool();break;case 10:i.battleShout=e.int32();break;case 11:i.trueshotAura=e.bool();break;case 12:i.unleashedRage=e.bool();break;case 13:i.abominationsMight=e.bool();break;case 14:i.leaderOfThePack=e.int32();break;case 15:i.rampage=e.bool();break;case 16:i.icyTalons=e.bool();break;case 17:i.windfuryTotem=e.int32();break;case 18:i.totemOfWrath=e.bool();break;case 19:i.flametongueTotem=e.bool();break;case 20:i.demonicPact=e.int32();break;case 21:i.swiftRetribution=e.bool();break;case 22:i.moonkinAura=e.int32();break;case 23:i.elementalOath=e.bool();break;case 24:i.wrathOfAirTotem=e.bool();break;case 25:i.ferociousInspiration=e.bool();break;case 26:i.sanctifiedRetribution=e.bool();break;case 27:i.arcaneEmpowerment=e.bool();break;case 28:i.manaSpringTotem=e.int32();break;case 29:i.bloodlust=e.bool();break;case 30:i.thorns=e.int32();break;case 31:i.devotionAura=e.int32();break;case 42:i.stoneskinTotem=e.int32();break;case 32:i.retributionAura=e.bool();break;case 33:i.shadowProtection=e.bool();break;case 34:i.drumsOfForgottenKings=e.bool();break;case 35:i.drumsOfTheWild=e.bool();break;case 36:i.scrollOfProtection=e.bool();break;case 37:i.scrollOfStamina=e.bool();break;case 38:i.scrollOfStrength=e.bool();break;case 39:i.scrollOfAgility=e.bool();break;case 40:i.scrollOfIntellect=e.bool();break;case 41:i.scrollOfSpirit=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.giftOfTheWild&&t.tag(1,v.Varint).int32(e.giftOfTheWild),0!==e.powerWordFortitude&&t.tag(2,v.Varint).int32(e.powerWordFortitude),0!==e.commandingShout&&t.tag(3,v.Varint).int32(e.commandingShout),0!==e.bloodPact&&t.tag(4,v.Varint).int32(e.bloodPact),!1!==e.hornOfWinter&&t.tag(5,v.Varint).bool(e.hornOfWinter),0!==e.strengthOfEarthTotem&&t.tag(6,v.Varint).int32(e.strengthOfEarthTotem),!1!==e.arcaneBrilliance&&t.tag(7,v.Varint).bool(e.arcaneBrilliance),0!==e.felIntelligence&&t.tag(8,v.Varint).int32(e.felIntelligence),!1!==e.divineSpirit&&t.tag(9,v.Varint).bool(e.divineSpirit),0!==e.battleShout&&t.tag(10,v.Varint).int32(e.battleShout),!1!==e.trueshotAura&&t.tag(11,v.Varint).bool(e.trueshotAura),!1!==e.unleashedRage&&t.tag(12,v.Varint).bool(e.unleashedRage),!1!==e.abominationsMight&&t.tag(13,v.Varint).bool(e.abominationsMight),0!==e.leaderOfThePack&&t.tag(14,v.Varint).int32(e.leaderOfThePack),!1!==e.rampage&&t.tag(15,v.Varint).bool(e.rampage),!1!==e.icyTalons&&t.tag(16,v.Varint).bool(e.icyTalons),0!==e.windfuryTotem&&t.tag(17,v.Varint).int32(e.windfuryTotem),!1!==e.totemOfWrath&&t.tag(18,v.Varint).bool(e.totemOfWrath),!1!==e.flametongueTotem&&t.tag(19,v.Varint).bool(e.flametongueTotem),0!==e.demonicPact&&t.tag(20,v.Varint).int32(e.demonicPact),!1!==e.swiftRetribution&&t.tag(21,v.Varint).bool(e.swiftRetribution),0!==e.moonkinAura&&t.tag(22,v.Varint).int32(e.moonkinAura),!1!==e.elementalOath&&t.tag(23,v.Varint).bool(e.elementalOath),!1!==e.wrathOfAirTotem&&t.tag(24,v.Varint).bool(e.wrathOfAirTotem),!1!==e.ferociousInspiration&&t.tag(25,v.Varint).bool(e.ferociousInspiration),!1!==e.sanctifiedRetribution&&t.tag(26,v.Varint).bool(e.sanctifiedRetribution),!1!==e.arcaneEmpowerment&&t.tag(27,v.Varint).bool(e.arcaneEmpowerment),0!==e.manaSpringTotem&&t.tag(28,v.Varint).int32(e.manaSpringTotem),!1!==e.bloodlust&&t.tag(29,v.Varint).bool(e.bloodlust),0!==e.thorns&&t.tag(30,v.Varint).int32(e.thorns),0!==e.devotionAura&&t.tag(31,v.Varint).int32(e.devotionAura),0!==e.stoneskinTotem&&t.tag(42,v.Varint).int32(e.stoneskinTotem),!1!==e.retributionAura&&t.tag(32,v.Varint).bool(e.retributionAura),!1!==e.shadowProtection&&t.tag(33,v.Varint).bool(e.shadowProtection),!1!==e.drumsOfForgottenKings&&t.tag(34,v.Varint).bool(e.drumsOfForgottenKings),!1!==e.drumsOfTheWild&&t.tag(35,v.Varint).bool(e.drumsOfTheWild),!1!==e.scrollOfProtection&&t.tag(36,v.Varint).bool(e.scrollOfProtection),!1!==e.scrollOfStamina&&t.tag(37,v.Varint).bool(e.scrollOfStamina),!1!==e.scrollOfStrength&&t.tag(38,v.Varint).bool(e.scrollOfStrength),!1!==e.scrollOfAgility&&t.tag(39,v.Varint).bool(e.scrollOfAgility),!1!==e.scrollOfIntellect&&t.tag(40,v.Varint).bool(e.scrollOfIntellect),!1!==e.scrollOfSpirit&&t.tag(41,v.Varint).bool(e.scrollOfSpirit);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Pe=new class extends X{constructor(){super("proto.PartyBuffs",[{no:1,name:"atiesh_mage",kind:"scalar",T:5},{no:2,name:"atiesh_warlock",kind:"scalar",T:5},{no:3,name:"braided_eternium_chain",kind:"scalar",T:8},{no:4,name:"eye_of_the_night",kind:"scalar",T:8},{no:5,name:"chain_of_the_twilight_owl",kind:"scalar",T:8},{no:6,name:"mana_tide_totems",kind:"scalar",T:5},{no:7,name:"heroic_presence",kind:"scalar",T:8}])}create(e){const t={atieshMage:0,atieshWarlock:0,braidedEterniumChain:!1,eyeOfTheNight:!1,chainOfTheTwilightOwl:!1,manaTideTotems:0,heroicPresence:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.atieshMage=e.int32();break;case 2:i.atieshWarlock=e.int32();break;case 3:i.braidedEterniumChain=e.bool();break;case 4:i.eyeOfTheNight=e.bool();break;case 5:i.chainOfTheTwilightOwl=e.bool();break;case 6:i.manaTideTotems=e.int32();break;case 7:i.heroicPresence=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.atieshMage&&t.tag(1,v.Varint).int32(e.atieshMage),0!==e.atieshWarlock&&t.tag(2,v.Varint).int32(e.atieshWarlock),!1!==e.braidedEterniumChain&&t.tag(3,v.Varint).bool(e.braidedEterniumChain),!1!==e.eyeOfTheNight&&t.tag(4,v.Varint).bool(e.eyeOfTheNight),!1!==e.chainOfTheTwilightOwl&&t.tag(5,v.Varint).bool(e.chainOfTheTwilightOwl),0!==e.manaTideTotems&&t.tag(6,v.Varint).int32(e.manaTideTotems),!1!==e.heroicPresence&&t.tag(7,v.Varint).bool(e.heroicPresence);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ge=new class extends X{constructor(){super("proto.IndividualBuffs",[{no:1,name:"blessing_of_kings",kind:"scalar",T:8},{no:2,name:"blessing_of_wisdom",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:3,name:"blessing_of_might",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:4,name:"blessing_of_sanctuary",kind:"scalar",T:8},{no:5,name:"vigilance",kind:"scalar",T:8},{no:6,name:"renewed_hope",kind:"scalar",T:8},{no:7,name:"hymn_of_hope",kind:"scalar",T:5},{no:8,name:"hand_of_salvation",kind:"scalar",T:5},{no:9,name:"rapture",kind:"scalar",T:5},{no:10,name:"innervates",kind:"scalar",T:5},{no:11,name:"power_infusions",kind:"scalar",T:5},{no:12,name:"unholy_frenzy",kind:"scalar",T:5},{no:13,name:"revitalize_rejuvination",kind:"scalar",T:5},{no:21,name:"revitalize_wild_growth",kind:"scalar",T:5},{no:19,name:"tricks_of_the_trades",kind:"scalar",T:5},{no:20,name:"shattering_throws",kind:"scalar",T:5},{no:14,name:"vampiric_touch",kind:"scalar",T:8},{no:15,name:"hunting_party",kind:"scalar",T:8},{no:16,name:"judgements_of_the_wise",kind:"scalar",T:8},{no:17,name:"improved_soul_leech",kind:"scalar",T:8},{no:18,name:"enduring_winter",kind:"scalar",T:8}])}create(e){const t={blessingOfKings:!1,blessingOfWisdom:0,blessingOfMight:0,blessingOfSanctuary:!1,vigilance:!1,renewedHope:!1,hymnOfHope:0,handOfSalvation:0,rapture:0,innervates:0,powerInfusions:0,unholyFrenzy:0,revitalizeRejuvination:0,revitalizeWildGrowth:0,tricksOfTheTrades:0,shatteringThrows:0,vampiricTouch:!1,huntingParty:!1,judgementsOfTheWise:!1,improvedSoulLeech:!1,enduringWinter:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.blessingOfKings=e.bool();break;case 2:i.blessingOfWisdom=e.int32();break;case 3:i.blessingOfMight=e.int32();break;case 4:i.blessingOfSanctuary=e.bool();break;case 5:i.vigilance=e.bool();break;case 6:i.renewedHope=e.bool();break;case 7:i.hymnOfHope=e.int32();break;case 8:i.handOfSalvation=e.int32();break;case 9:i.rapture=e.int32();break;case 10:i.innervates=e.int32();break;case 11:i.powerInfusions=e.int32();break;case 12:i.unholyFrenzy=e.int32();break;case 13:i.revitalizeRejuvination=e.int32();break;case 21:i.revitalizeWildGrowth=e.int32();break;case 19:i.tricksOfTheTrades=e.int32();break;case 20:i.shatteringThrows=e.int32();break;case 14:i.vampiricTouch=e.bool();break;case 15:i.huntingParty=e.bool();break;case 16:i.judgementsOfTheWise=e.bool();break;case 17:i.improvedSoulLeech=e.bool();break;case 18:i.enduringWinter=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.blessingOfKings&&t.tag(1,v.Varint).bool(e.blessingOfKings),0!==e.blessingOfWisdom&&t.tag(2,v.Varint).int32(e.blessingOfWisdom),0!==e.blessingOfMight&&t.tag(3,v.Varint).int32(e.blessingOfMight),!1!==e.blessingOfSanctuary&&t.tag(4,v.Varint).bool(e.blessingOfSanctuary),!1!==e.vigilance&&t.tag(5,v.Varint).bool(e.vigilance),!1!==e.renewedHope&&t.tag(6,v.Varint).bool(e.renewedHope),0!==e.hymnOfHope&&t.tag(7,v.Varint).int32(e.hymnOfHope),0!==e.handOfSalvation&&t.tag(8,v.Varint).int32(e.handOfSalvation),0!==e.rapture&&t.tag(9,v.Varint).int32(e.rapture),0!==e.innervates&&t.tag(10,v.Varint).int32(e.innervates),0!==e.powerInfusions&&t.tag(11,v.Varint).int32(e.powerInfusions),0!==e.unholyFrenzy&&t.tag(12,v.Varint).int32(e.unholyFrenzy),0!==e.revitalizeRejuvination&&t.tag(13,v.Varint).int32(e.revitalizeRejuvination),0!==e.revitalizeWildGrowth&&t.tag(21,v.Varint).int32(e.revitalizeWildGrowth),0!==e.tricksOfTheTrades&&t.tag(19,v.Varint).int32(e.tricksOfTheTrades),0!==e.shatteringThrows&&t.tag(20,v.Varint).int32(e.shatteringThrows),!1!==e.vampiricTouch&&t.tag(14,v.Varint).bool(e.vampiricTouch),!1!==e.huntingParty&&t.tag(15,v.Varint).bool(e.huntingParty),!1!==e.judgementsOfTheWise&&t.tag(16,v.Varint).bool(e.judgementsOfTheWise),!1!==e.improvedSoulLeech&&t.tag(17,v.Varint).bool(e.improvedSoulLeech),!1!==e.enduringWinter&&t.tag(18,v.Varint).bool(e.enduringWinter);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Re=new class extends X{constructor(){super("proto.Consumes",[{no:1,name:"flask",kind:"enum",T:()=>["proto.Flask",ke]},{no:2,name:"battle_elixir",kind:"enum",T:()=>["proto.BattleElixir",be]},{no:3,name:"guardian_elixir",kind:"enum",T:()=>["proto.GuardianElixir",Ie]},{no:6,name:"food",kind:"enum",T:()=>["proto.Food",Te]},{no:7,name:"pet_food",kind:"enum",T:()=>["proto.PetFood",xe]},{no:8,name:"pet_scroll_of_agility",kind:"scalar",T:5},{no:9,name:"pet_scroll_of_strength",kind:"scalar",T:5},{no:10,name:"default_potion",kind:"enum",T:()=>["proto.Potions",we]},{no:11,name:"prepop_potion",kind:"enum",T:()=>["proto.Potions",we]},{no:12,name:"default_conjured",kind:"enum",T:()=>["proto.Conjured",ye]},{no:13,name:"starting_conjured",kind:"enum",T:()=>["proto.Conjured",ye]},{no:14,name:"num_starting_conjured",kind:"scalar",T:5},{no:15,name:"thermal_sapper",kind:"scalar",T:8},{no:16,name:"explosive_decoy",kind:"scalar",T:8},{no:17,name:"filler_explosive",kind:"enum",T:()=>["proto.Explosive",fe]}])}create(e){const t={flask:0,battleElixir:0,guardianElixir:0,food:0,petFood:0,petScrollOfAgility:0,petScrollOfStrength:0,defaultPotion:0,prepopPotion:0,defaultConjured:0,startingConjured:0,numStartingConjured:0,thermalSapper:!1,explosiveDecoy:!1,fillerExplosive:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.flask=e.int32();break;case 2:i.battleElixir=e.int32();break;case 3:i.guardianElixir=e.int32();break;case 6:i.food=e.int32();break;case 7:i.petFood=e.int32();break;case 8:i.petScrollOfAgility=e.int32();break;case 9:i.petScrollOfStrength=e.int32();break;case 10:i.defaultPotion=e.int32();break;case 11:i.prepopPotion=e.int32();break;case 12:i.defaultConjured=e.int32();break;case 13:i.startingConjured=e.int32();break;case 14:i.numStartingConjured=e.int32();break;case 15:i.thermalSapper=e.bool();break;case 16:i.explosiveDecoy=e.bool();break;case 17:i.fillerExplosive=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.flask&&t.tag(1,v.Varint).int32(e.flask),0!==e.battleElixir&&t.tag(2,v.Varint).int32(e.battleElixir),0!==e.guardianElixir&&t.tag(3,v.Varint).int32(e.guardianElixir),0!==e.food&&t.tag(6,v.Varint).int32(e.food),0!==e.petFood&&t.tag(7,v.Varint).int32(e.petFood),0!==e.petScrollOfAgility&&t.tag(8,v.Varint).int32(e.petScrollOfAgility),0!==e.petScrollOfStrength&&t.tag(9,v.Varint).int32(e.petScrollOfStrength),0!==e.defaultPotion&&t.tag(10,v.Varint).int32(e.defaultPotion),0!==e.prepopPotion&&t.tag(11,v.Varint).int32(e.prepopPotion),0!==e.defaultConjured&&t.tag(12,v.Varint).int32(e.defaultConjured),0!==e.startingConjured&&t.tag(13,v.Varint).int32(e.startingConjured),0!==e.numStartingConjured&&t.tag(14,v.Varint).int32(e.numStartingConjured),!1!==e.thermalSapper&&t.tag(15,v.Varint).bool(e.thermalSapper),!1!==e.explosiveDecoy&&t.tag(16,v.Varint).bool(e.explosiveDecoy),0!==e.fillerExplosive&&t.tag(17,v.Varint).int32(e.fillerExplosive);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Be=new class extends X{constructor(){super("proto.Debuffs",[{no:1,name:"judgement_of_wisdom",kind:"scalar",T:8},{no:2,name:"judgement_of_light",kind:"scalar",T:8},{no:3,name:"misery",kind:"scalar",T:8},{no:4,name:"faerie_fire",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:5,name:"curse_of_elements",kind:"scalar",T:8},{no:6,name:"ebon_plaguebringer",kind:"scalar",T:8},{no:7,name:"earth_and_moon",kind:"scalar",T:8},{no:8,name:"heart_of_the_crusader",kind:"scalar",T:8},{no:9,name:"master_poisoner",kind:"scalar",T:8},{no:10,name:"totem_of_wrath",kind:"scalar",T:8},{no:11,name:"shadow_mastery",kind:"scalar",T:8},{no:12,name:"improved_scorch",kind:"scalar",T:8},{no:13,name:"winters_chill",kind:"scalar",T:8},{no:14,name:"blood_frenzy",kind:"scalar",T:8},{no:15,name:"savage_combat",kind:"scalar",T:8},{no:16,name:"gift_of_arthas",kind:"scalar",T:8},{no:17,name:"mangle",kind:"scalar",T:8},{no:18,name:"trauma",kind:"scalar",T:8},{no:19,name:"stampede",kind:"scalar",T:8},{no:20,name:"expose_armor",kind:"scalar",T:8},{no:21,name:"sunder_armor",kind:"scalar",T:8},{no:22,name:"acid_spit",kind:"scalar",T:8},{no:23,name:"curse_of_weakness",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:24,name:"sting",kind:"scalar",T:8},{no:37,name:"spore_cloud",kind:"scalar",T:8},{no:25,name:"demoralizing_roar",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:26,name:"demoralizing_shout",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:36,name:"vindication",kind:"scalar",T:8},{no:27,name:"thunder_clap",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:28,name:"frost_fever",kind:"enum",T:()=>["proto.TristateEffect",ue]},{no:29,name:"infected_wounds",kind:"scalar",T:8},{no:30,name:"judgements_of_the_just",kind:"scalar",T:8},{no:31,name:"insect_swarm",kind:"scalar",T:8},{no:32,name:"scorpid_sting",kind:"scalar",T:8},{no:33,name:"shadow_embrace",kind:"scalar",T:8},{no:34,name:"screech",kind:"scalar",T:8},{no:35,name:"hunters_mark",kind:"scalar",T:5}])}create(e){const t={judgementOfWisdom:!1,judgementOfLight:!1,misery:!1,faerieFire:0,curseOfElements:!1,ebonPlaguebringer:!1,earthAndMoon:!1,heartOfTheCrusader:!1,masterPoisoner:!1,totemOfWrath:!1,shadowMastery:!1,improvedScorch:!1,wintersChill:!1,bloodFrenzy:!1,savageCombat:!1,giftOfArthas:!1,mangle:!1,trauma:!1,stampede:!1,exposeArmor:!1,sunderArmor:!1,acidSpit:!1,curseOfWeakness:0,sting:!1,sporeCloud:!1,demoralizingRoar:0,demoralizingShout:0,vindication:!1,thunderClap:0,frostFever:0,infectedWounds:!1,judgementsOfTheJust:!1,insectSwarm:!1,scorpidSting:!1,shadowEmbrace:!1,screech:!1,huntersMark:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.judgementOfWisdom=e.bool();break;case 2:i.judgementOfLight=e.bool();break;case 3:i.misery=e.bool();break;case 4:i.faerieFire=e.int32();break;case 5:i.curseOfElements=e.bool();break;case 6:i.ebonPlaguebringer=e.bool();break;case 7:i.earthAndMoon=e.bool();break;case 8:i.heartOfTheCrusader=e.bool();break;case 9:i.masterPoisoner=e.bool();break;case 10:i.totemOfWrath=e.bool();break;case 11:i.shadowMastery=e.bool();break;case 12:i.improvedScorch=e.bool();break;case 13:i.wintersChill=e.bool();break;case 14:i.bloodFrenzy=e.bool();break;case 15:i.savageCombat=e.bool();break;case 16:i.giftOfArthas=e.bool();break;case 17:i.mangle=e.bool();break;case 18:i.trauma=e.bool();break;case 19:i.stampede=e.bool();break;case 20:i.exposeArmor=e.bool();break;case 21:i.sunderArmor=e.bool();break;case 22:i.acidSpit=e.bool();break;case 23:i.curseOfWeakness=e.int32();break;case 24:i.sting=e.bool();break;case 37:i.sporeCloud=e.bool();break;case 25:i.demoralizingRoar=e.int32();break;case 26:i.demoralizingShout=e.int32();break;case 36:i.vindication=e.bool();break;case 27:i.thunderClap=e.int32();break;case 28:i.frostFever=e.int32();break;case 29:i.infectedWounds=e.bool();break;case 30:i.judgementsOfTheJust=e.bool();break;case 31:i.insectSwarm=e.bool();break;case 32:i.scorpidSting=e.bool();break;case 33:i.shadowEmbrace=e.bool();break;case 34:i.screech=e.bool();break;case 35:i.huntersMark=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.judgementOfWisdom&&t.tag(1,v.Varint).bool(e.judgementOfWisdom),!1!==e.judgementOfLight&&t.tag(2,v.Varint).bool(e.judgementOfLight),!1!==e.misery&&t.tag(3,v.Varint).bool(e.misery),0!==e.faerieFire&&t.tag(4,v.Varint).int32(e.faerieFire),!1!==e.curseOfElements&&t.tag(5,v.Varint).bool(e.curseOfElements),!1!==e.ebonPlaguebringer&&t.tag(6,v.Varint).bool(e.ebonPlaguebringer),!1!==e.earthAndMoon&&t.tag(7,v.Varint).bool(e.earthAndMoon),!1!==e.heartOfTheCrusader&&t.tag(8,v.Varint).bool(e.heartOfTheCrusader),!1!==e.masterPoisoner&&t.tag(9,v.Varint).bool(e.masterPoisoner),!1!==e.totemOfWrath&&t.tag(10,v.Varint).bool(e.totemOfWrath),!1!==e.shadowMastery&&t.tag(11,v.Varint).bool(e.shadowMastery),!1!==e.improvedScorch&&t.tag(12,v.Varint).bool(e.improvedScorch),!1!==e.wintersChill&&t.tag(13,v.Varint).bool(e.wintersChill),!1!==e.bloodFrenzy&&t.tag(14,v.Varint).bool(e.bloodFrenzy),!1!==e.savageCombat&&t.tag(15,v.Varint).bool(e.savageCombat),!1!==e.giftOfArthas&&t.tag(16,v.Varint).bool(e.giftOfArthas),!1!==e.mangle&&t.tag(17,v.Varint).bool(e.mangle),!1!==e.trauma&&t.tag(18,v.Varint).bool(e.trauma),!1!==e.stampede&&t.tag(19,v.Varint).bool(e.stampede),!1!==e.exposeArmor&&t.tag(20,v.Varint).bool(e.exposeArmor),!1!==e.sunderArmor&&t.tag(21,v.Varint).bool(e.sunderArmor),!1!==e.acidSpit&&t.tag(22,v.Varint).bool(e.acidSpit),0!==e.curseOfWeakness&&t.tag(23,v.Varint).int32(e.curseOfWeakness),!1!==e.sting&&t.tag(24,v.Varint).bool(e.sting),!1!==e.sporeCloud&&t.tag(37,v.Varint).bool(e.sporeCloud),0!==e.demoralizingRoar&&t.tag(25,v.Varint).int32(e.demoralizingRoar),0!==e.demoralizingShout&&t.tag(26,v.Varint).int32(e.demoralizingShout),!1!==e.vindication&&t.tag(36,v.Varint).bool(e.vindication),0!==e.thunderClap&&t.tag(27,v.Varint).int32(e.thunderClap),0!==e.frostFever&&t.tag(28,v.Varint).int32(e.frostFever),!1!==e.infectedWounds&&t.tag(29,v.Varint).bool(e.infectedWounds),!1!==e.judgementsOfTheJust&&t.tag(30,v.Varint).bool(e.judgementsOfTheJust),!1!==e.insectSwarm&&t.tag(31,v.Varint).bool(e.insectSwarm),!1!==e.scorpidSting&&t.tag(32,v.Varint).bool(e.scorpidSting),!1!==e.shadowEmbrace&&t.tag(33,v.Varint).bool(e.shadowEmbrace),!1!==e.screech&&t.tag(34,v.Varint).bool(e.screech),0!==e.huntersMark&&t.tag(35,v.Varint).int32(e.huntersMark);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ne=new class extends X{constructor(){super("proto.Target",[{no:14,name:"id",kind:"scalar",T:5},{no:15,name:"name",kind:"scalar",T:9},{no:4,name:"level",kind:"scalar",T:5},{no:3,name:"mob_type",kind:"enum",T:()=>["proto.MobType",Se]},{no:5,name:"stats",kind:"scalar",repeat:1,T:1},{no:7,name:"min_base_damage",kind:"scalar",T:1},{no:8,name:"swing_speed",kind:"scalar",T:1},{no:9,name:"dual_wield",kind:"scalar",T:8},{no:10,name:"dual_wield_penalty",kind:"scalar",T:8},{no:12,name:"parry_haste",kind:"scalar",T:8},{no:16,name:"suppress_dodge",kind:"scalar",T:8},{no:13,name:"spell_school",kind:"enum",T:()=>["proto.SpellSchool",ge]},{no:6,name:"tank_index",kind:"scalar",T:5}])}create(e){const t={id:0,name:"",level:0,mobType:0,stats:[],minBaseDamage:0,swingSpeed:0,dualWield:!1,dualWieldPenalty:!1,parryHaste:!1,suppressDodge:!1,spellSchool:0,tankIndex:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 14:i.id=e.int32();break;case 15:i.name=e.string();break;case 4:i.level=e.int32();break;case 3:i.mobType=e.int32();break;case 5:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.stats.push(e.double());else i.stats.push(e.double());break;case 7:i.minBaseDamage=e.double();break;case 8:i.swingSpeed=e.double();break;case 9:i.dualWield=e.bool();break;case 10:i.dualWieldPenalty=e.bool();break;case 12:i.parryHaste=e.bool();break;case 16:i.suppressDodge=e.bool();break;case 13:i.spellSchool=e.int32();break;case 6:i.tankIndex=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(0!==e.id&&t.tag(14,v.Varint).int32(e.id),""!==e.name&&t.tag(15,v.LengthDelimited).string(e.name),0!==e.level&&t.tag(4,v.Varint).int32(e.level),0!==e.mobType&&t.tag(3,v.Varint).int32(e.mobType),e.stats.length){t.tag(5,v.LengthDelimited).fork();for(let a=0;a<e.stats.length;a++)t.double(e.stats[a]);t.join()}0!==e.minBaseDamage&&t.tag(7,v.Bit64).double(e.minBaseDamage),0!==e.swingSpeed&&t.tag(8,v.Bit64).double(e.swingSpeed),!1!==e.dualWield&&t.tag(9,v.Varint).bool(e.dualWield),!1!==e.dualWieldPenalty&&t.tag(10,v.Varint).bool(e.dualWieldPenalty),!1!==e.parryHaste&&t.tag(12,v.Varint).bool(e.parryHaste),!1!==e.suppressDodge&&t.tag(16,v.Varint).bool(e.suppressDodge),0!==e.spellSchool&&t.tag(13,v.Varint).int32(e.spellSchool),0!==e.tankIndex&&t.tag(6,v.Varint).int32(e.tankIndex);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Fe=new class extends X{constructor(){super("proto.Encounter",[{no:1,name:"duration",kind:"scalar",T:1},{no:2,name:"duration_variation",kind:"scalar",T:1},{no:3,name:"execute_proportion_20",kind:"scalar",T:1},{no:7,name:"execute_proportion_25",kind:"scalar",T:1},{no:4,name:"execute_proportion_35",kind:"scalar",T:1},{no:5,name:"use_health",kind:"scalar",T:8},{no:6,name:"targets",kind:"message",repeat:1,T:()=>Ne}])}create(e){const t={duration:0,durationVariation:0,executeProportion20:0,executeProportion25:0,executeProportion35:0,useHealth:!1,targets:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.duration=e.double();break;case 2:i.durationVariation=e.double();break;case 3:i.executeProportion20=e.double();break;case 7:i.executeProportion25=e.double();break;case 4:i.executeProportion35=e.double();break;case 5:i.useHealth=e.bool();break;case 6:i.targets.push(Ne.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.duration&&t.tag(1,v.Bit64).double(e.duration),0!==e.durationVariation&&t.tag(2,v.Bit64).double(e.durationVariation),0!==e.executeProportion20&&t.tag(3,v.Bit64).double(e.executeProportion20),0!==e.executeProportion25&&t.tag(7,v.Bit64).double(e.executeProportion25),0!==e.executeProportion35&&t.tag(4,v.Bit64).double(e.executeProportion35),!1!==e.useHealth&&t.tag(5,v.Varint).bool(e.useHealth);for(let i=0;i<e.targets.length;i++)Ne.internalBinaryWrite(e.targets[i],t.tag(6,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const We=new class extends X{constructor(){super("proto.ItemSpec",[{no:2,name:"id",kind:"scalar",T:5},{no:3,name:"enchant",kind:"scalar",T:5},{no:4,name:"gems",kind:"scalar",repeat:1,T:5}])}create(e){const t={id:0,enchant:0,gems:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 2:i.id=e.int32();break;case 3:i.enchant=e.int32();break;case 4:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.gems.push(e.int32());else i.gems.push(e.int32());break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(0!==e.id&&t.tag(2,v.Varint).int32(e.id),0!==e.enchant&&t.tag(3,v.Varint).int32(e.enchant),e.gems.length){t.tag(4,v.LengthDelimited).fork();for(let a=0;a<e.gems.length;a++)t.int32(e.gems[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ve=new class extends X{constructor(){super("proto.EquipmentSpec",[{no:1,name:"items",kind:"message",repeat:1,T:()=>We}])}create(e){const t={items:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.items.push(We.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.items.length;i++)We.internalBinaryWrite(e.items[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ce=new class extends X{constructor(){super("proto.Item",[{no:1,name:"id",kind:"scalar",T:5},{no:16,name:"wowhead_id",kind:"scalar",T:5},{no:2,name:"name",kind:"scalar",T:9},{no:15,name:"class_allowlist",kind:"enum",repeat:1,T:()=>["proto.Class",ne]},{no:3,name:"type",kind:"enum",T:()=>["proto.ItemType",re]},{no:4,name:"armor_type",kind:"enum",T:()=>["proto.ArmorType",se]},{no:5,name:"weapon_type",kind:"enum",T:()=>["proto.WeaponType",le]},{no:6,name:"hand_type",kind:"enum",T:()=>["proto.HandType",ce]},{no:7,name:"ranged_weapon_type",kind:"enum",T:()=>["proto.RangedWeaponType",de]},{no:8,name:"stats",kind:"scalar",repeat:1,T:1},{no:9,name:"gem_sockets",kind:"enum",repeat:1,T:()=>["proto.GemColor",he]},{no:10,name:"socketBonus",kind:"scalar",repeat:1,T:1},{no:17,name:"weapon_damage_min",kind:"scalar",T:1},{no:18,name:"weapon_damage_max",kind:"scalar",T:1},{no:19,name:"weapon_speed",kind:"scalar",T:1},{no:11,name:"phase",kind:"scalar",T:5},{no:12,name:"quality",kind:"enum",T:()=>["proto.ItemQuality",pe]},{no:13,name:"unique",kind:"scalar",T:8},{no:20,name:"ilvl",kind:"scalar",T:5},{no:21,name:"required_profession",kind:"enum",T:()=>["proto.Profession",ie]},{no:22,name:"heroic",kind:"scalar",T:8}])}create(e){const t={id:0,wowheadId:0,name:"",classAllowlist:[],type:0,armorType:0,weaponType:0,handType:0,rangedWeaponType:0,stats:[],gemSockets:[],socketBonus:[],weaponDamageMin:0,weaponDamageMax:0,weaponSpeed:0,phase:0,quality:0,unique:!1,ilvl:0,requiredProfession:0,heroic:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=e.int32();break;case 16:i.wowheadId=e.int32();break;case 2:i.name=e.string();break;case 15:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.classAllowlist.push(e.int32());else i.classAllowlist.push(e.int32());break;case 3:i.type=e.int32();break;case 4:i.armorType=e.int32();break;case 5:i.weaponType=e.int32();break;case 6:i.handType=e.int32();break;case 7:i.rangedWeaponType=e.int32();break;case 8:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.stats.push(e.double());else i.stats.push(e.double());break;case 9:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.gemSockets.push(e.int32());else i.gemSockets.push(e.int32());break;case 10:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.socketBonus.push(e.double());else i.socketBonus.push(e.double());break;case 17:i.weaponDamageMin=e.double();break;case 18:i.weaponDamageMax=e.double();break;case 19:i.weaponSpeed=e.double();break;case 11:i.phase=e.int32();break;case 12:i.quality=e.int32();break;case 13:i.unique=e.bool();break;case 20:i.ilvl=e.int32();break;case 21:i.requiredProfession=e.int32();break;case 22:i.heroic=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(0!==e.id&&t.tag(1,v.Varint).int32(e.id),0!==e.wowheadId&&t.tag(16,v.Varint).int32(e.wowheadId),""!==e.name&&t.tag(2,v.LengthDelimited).string(e.name),e.classAllowlist.length){t.tag(15,v.LengthDelimited).fork();for(let a=0;a<e.classAllowlist.length;a++)t.int32(e.classAllowlist[a]);t.join()}if(0!==e.type&&t.tag(3,v.Varint).int32(e.type),0!==e.armorType&&t.tag(4,v.Varint).int32(e.armorType),0!==e.weaponType&&t.tag(5,v.Varint).int32(e.weaponType),0!==e.handType&&t.tag(6,v.Varint).int32(e.handType),0!==e.rangedWeaponType&&t.tag(7,v.Varint).int32(e.rangedWeaponType),e.stats.length){t.tag(8,v.LengthDelimited).fork();for(let a=0;a<e.stats.length;a++)t.double(e.stats[a]);t.join()}if(e.gemSockets.length){t.tag(9,v.LengthDelimited).fork();for(let a=0;a<e.gemSockets.length;a++)t.int32(e.gemSockets[a]);t.join()}if(e.socketBonus.length){t.tag(10,v.LengthDelimited).fork();for(let a=0;a<e.socketBonus.length;a++)t.double(e.socketBonus[a]);t.join()}0!==e.weaponDamageMin&&t.tag(17,v.Bit64).double(e.weaponDamageMin),0!==e.weaponDamageMax&&t.tag(18,v.Bit64).double(e.weaponDamageMax),0!==e.weaponSpeed&&t.tag(19,v.Bit64).double(e.weaponSpeed),0!==e.phase&&t.tag(11,v.Varint).int32(e.phase),0!==e.quality&&t.tag(12,v.Varint).int32(e.quality),!1!==e.unique&&t.tag(13,v.Varint).bool(e.unique),0!==e.ilvl&&t.tag(20,v.Varint).int32(e.ilvl),0!==e.requiredProfession&&t.tag(21,v.Varint).int32(e.requiredProfession),!1!==e.heroic&&t.tag(22,v.Varint).bool(e.heroic);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const De=new class extends X{constructor(){super("proto.Enchant",[{no:1,name:"id",kind:"scalar",T:5},{no:2,name:"effect_id",kind:"scalar",T:5},{no:3,name:"name",kind:"scalar",T:9},{no:10,name:"is_spell_id",kind:"scalar",T:8},{no:4,name:"type",kind:"enum",T:()=>["proto.ItemType",re]},{no:9,name:"enchant_type",kind:"enum",T:()=>["proto.EnchantType",ve]},{no:7,name:"stats",kind:"scalar",repeat:1,T:1},{no:8,name:"quality",kind:"enum",T:()=>["proto.ItemQuality",pe]},{no:11,name:"phase",kind:"scalar",T:5},{no:13,name:"required_profession",kind:"enum",T:()=>["proto.Profession",ie]},{no:12,name:"class_allowlist",kind:"enum",repeat:1,T:()=>["proto.Class",ne]}])}create(e){const t={id:0,effectId:0,name:"",isSpellId:!1,type:0,enchantType:0,stats:[],quality:0,phase:0,requiredProfession:0,classAllowlist:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=e.int32();break;case 2:i.effectId=e.int32();break;case 3:i.name=e.string();break;case 10:i.isSpellId=e.bool();break;case 4:i.type=e.int32();break;case 9:i.enchantType=e.int32();break;case 7:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.stats.push(e.double());else i.stats.push(e.double());break;case 8:i.quality=e.int32();break;case 11:i.phase=e.int32();break;case 13:i.requiredProfession=e.int32();break;case 12:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.classAllowlist.push(e.int32());else i.classAllowlist.push(e.int32());break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(0!==e.id&&t.tag(1,v.Varint).int32(e.id),0!==e.effectId&&t.tag(2,v.Varint).int32(e.effectId),""!==e.name&&t.tag(3,v.LengthDelimited).string(e.name),!1!==e.isSpellId&&t.tag(10,v.Varint).bool(e.isSpellId),0!==e.type&&t.tag(4,v.Varint).int32(e.type),0!==e.enchantType&&t.tag(9,v.Varint).int32(e.enchantType),e.stats.length){t.tag(7,v.LengthDelimited).fork();for(let a=0;a<e.stats.length;a++)t.double(e.stats[a]);t.join()}if(0!==e.quality&&t.tag(8,v.Varint).int32(e.quality),0!==e.phase&&t.tag(11,v.Varint).int32(e.phase),0!==e.requiredProfession&&t.tag(13,v.Varint).int32(e.requiredProfession),e.classAllowlist.length){t.tag(12,v.LengthDelimited).fork();for(let a=0;a<e.classAllowlist.length;a++)t.int32(e.classAllowlist[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ee=new class extends X{constructor(){super("proto.Gem",[{no:1,name:"id",kind:"scalar",T:5},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"stats",kind:"scalar",repeat:1,T:1},{no:4,name:"color",kind:"enum",T:()=>["proto.GemColor",he]},{no:5,name:"phase",kind:"scalar",T:5},{no:6,name:"quality",kind:"enum",T:()=>["proto.ItemQuality",pe]},{no:7,name:"unique",kind:"scalar",T:8},{no:8,name:"required_profession",kind:"enum",T:()=>["proto.Profession",ie]}])}create(e){const t={id:0,name:"",stats:[],color:0,phase:0,quality:0,unique:!1,requiredProfession:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=e.int32();break;case 2:i.name=e.string();break;case 3:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.stats.push(e.double());else i.stats.push(e.double());break;case 4:i.color=e.int32();break;case 5:i.phase=e.int32();break;case 6:i.quality=e.int32();break;case 7:i.unique=e.bool();break;case 8:i.requiredProfession=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(0!==e.id&&t.tag(1,v.Varint).int32(e.id),""!==e.name&&t.tag(2,v.LengthDelimited).string(e.name),e.stats.length){t.tag(3,v.LengthDelimited).fork();for(let a=0;a<e.stats.length;a++)t.double(e.stats[a]);t.join()}0!==e.color&&t.tag(4,v.Varint).int32(e.color),0!==e.phase&&t.tag(5,v.Varint).int32(e.phase),0!==e.quality&&t.tag(6,v.Varint).int32(e.quality),!1!==e.unique&&t.tag(7,v.Varint).bool(e.unique),0!==e.requiredProfession&&t.tag(8,v.Varint).int32(e.requiredProfession);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const je=new class extends X{constructor(){super("proto.RaidTarget",[{no:1,name:"target_index",kind:"scalar",T:5}])}create(e){const t={targetIndex:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.targetIndex=e.int32();else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.targetIndex&&t.tag(1,v.Varint).int32(e.targetIndex);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ue=new class extends X{constructor(){super("proto.ActionID",[{no:1,name:"spell_id",kind:"scalar",oneof:"rawId",T:5},{no:2,name:"item_id",kind:"scalar",oneof:"rawId",T:5},{no:3,name:"other_id",kind:"enum",oneof:"rawId",T:()=>["proto.OtherAction",_e]},{no:4,name:"tag",kind:"scalar",T:5}])}create(e){const t={rawId:{oneofKind:void 0},tag:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rawId={oneofKind:"spellId",spellId:e.int32()};break;case 2:i.rawId={oneofKind:"itemId",itemId:e.int32()};break;case 3:i.rawId={oneofKind:"otherId",otherId:e.int32()};break;case 4:i.tag=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){"spellId"===e.rawId.oneofKind&&t.tag(1,v.Varint).int32(e.rawId.spellId),"itemId"===e.rawId.oneofKind&&t.tag(2,v.Varint).int32(e.rawId.itemId),"otherId"===e.rawId.oneofKind&&t.tag(3,v.Varint).int32(e.rawId.otherId),0!==e.tag&&t.tag(4,v.Varint).int32(e.tag);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Me=new class extends X{constructor(){super("proto.Glyphs",[{no:1,name:"major1",kind:"scalar",T:5},{no:2,name:"major2",kind:"scalar",T:5},{no:3,name:"major3",kind:"scalar",T:5},{no:4,name:"minor1",kind:"scalar",T:5},{no:5,name:"minor2",kind:"scalar",T:5},{no:6,name:"minor3",kind:"scalar",T:5}])}create(e){const t={major1:0,major2:0,major3:0,minor1:0,minor2:0,minor3:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.major1=e.int32();break;case 2:i.major2=e.int32();break;case 3:i.major3=e.int32();break;case 4:i.minor1=e.int32();break;case 5:i.minor2=e.int32();break;case 6:i.minor3=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.major1&&t.tag(1,v.Varint).int32(e.major1),0!==e.major2&&t.tag(2,v.Varint).int32(e.major2),0!==e.major3&&t.tag(3,v.Varint).int32(e.major3),0!==e.minor1&&t.tag(4,v.Varint).int32(e.minor1),0!==e.minor2&&t.tag(5,v.Varint).int32(e.minor2),0!==e.minor3&&t.tag(6,v.Varint).int32(e.minor3);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ae=new class extends X{constructor(){super("proto.Cooldown",[{no:1,name:"id",kind:"message",T:()=>Ue},{no:2,name:"timings",kind:"scalar",repeat:1,T:1}])}create(e){const t={timings:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=Ue.internalBinaryRead(e,e.uint32(),a,i.id);break;case 2:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.timings.push(e.double());else i.timings.push(e.double());break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(e.id&&Ue.internalBinaryWrite(e.id,t.tag(1,v.LengthDelimited).fork(),a).join(),e.timings.length){t.tag(2,v.LengthDelimited).fork();for(let a=0;a<e.timings.length;a++)t.double(e.timings[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Le=new class extends X{constructor(){super("proto.Cooldowns",[{no:1,name:"cooldowns",kind:"message",repeat:1,T:()=>Ae},{no:2,name:"hp_percent_for_defensives",kind:"scalar",T:1}])}create(e){const t={cooldowns:[],hpPercentForDefensives:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.cooldowns.push(Ae.internalBinaryRead(e,e.uint32(),a));break;case 2:i.hpPercentForDefensives=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.cooldowns.length;i++)Ae.internalBinaryWrite(e.cooldowns[i],t.tag(1,v.LengthDelimited).fork(),a).join();0!==e.hpPercentForDefensives&&t.tag(2,v.Bit64).double(e.hpPercentForDefensives);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ze=new class extends X{constructor(){super("proto.HealingModel",[{no:1,name:"hps",kind:"scalar",T:1},{no:2,name:"cadence_seconds",kind:"scalar",T:1}])}create(e){const t={hps:0,cadenceSeconds:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.hps=e.double();break;case 2:i.cadenceSeconds=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.hps&&t.tag(1,v.Bit64).double(e.hps),0!==e.cadenceSeconds&&t.tag(2,v.Bit64).double(e.cadenceSeconds);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const He=new class extends X{constructor(){super("proto.CustomRotation",[{no:1,name:"spells",kind:"message",repeat:1,T:()=>$e}])}create(e){const t={spells:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.spells.push($e.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.spells.length;i++)$e.internalBinaryWrite(e.spells[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const $e=new class extends X{constructor(){super("proto.CustomSpell",[{no:1,name:"spell",kind:"scalar",T:5}])}create(e){const t={spell:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.spell=e.int32();else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.spell&&t.tag(1,v.Varint).int32(e.spell);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var qe=(e=>(e[e.DoNotUse=0]="DoNotUse",e[e.PreCast=1]="PreCast",e[e.AsMajorCd=2]="AsMajorCd",e))(qe||{}),Je=(e=>(e[e.GhoulFrenzy=0]="GhoulFrenzy",e[e.IcyTouch=1]="IcyTouch",e[e.BloodStrikeBT=2]="BloodStrikeBT",e[e.BloodBoilBT=3]="BloodBoilBT",e))(Je||{}),Ke=(e=>(e[e.MaxRuneDowntime=0]="MaxRuneDowntime",e[e.MaxDndUptime=1]="MaxDndUptime",e))(Ke||{}),Ye=(e=>(e[e.FrostFever=0]="FrostFever",e[e.BloodPlague=1]="BloodPlague",e))(Ye||{}),Qe=(e=>(e[e.BloodStrike=0]="BloodStrike",e[e.BloodBoil=1]="BloodBoil",e))(Qe||{}),Xe=(e=>(e[e.Blood=0]="Blood",e[e.Unholy=1]="Unholy",e))(Xe||{}),Ze=(e=>(e[e.DeathknightMajorGlyphNone=0]="DeathknightMajorGlyphNone",e[e.GlyphOfAntiMagicShell=43533]="GlyphOfAntiMagicShell",e[e.GlyphOfBloodStrike=43826]="GlyphOfBloodStrike",e[e.GlyphOfBoneShield=43536]="GlyphOfBoneShield",e[e.GlyphOfChainsOfIce=43537]="GlyphOfChainsOfIce",e[e.GlyphOfDancingRuneWeapon=45799]="GlyphOfDancingRuneWeapon",e[e.GlyphOfDarkCommand=43538]="GlyphOfDarkCommand",e[e.GlyphOfDarkDeath=45804]="GlyphOfDarkDeath",e[e.GlyphOfDeathAndDecay=43542]="GlyphOfDeathAndDecay",e[e.GlyphOfDeathGrip=43541]="GlyphOfDeathGrip",e[e.GlyphOfDeathStrike=43827]="GlyphOfDeathStrike",e[e.GlyphOfDisease=45805]="GlyphOfDisease",e[e.GlyphOfFrostStrike=43543]="GlyphOfFrostStrike",e[e.GlyphOfHeartStrike=43534]="GlyphOfHeartStrike",e[e.GlyphOfHowlingBlast=45806]="GlyphOfHowlingBlast",e[e.GlyphOfHungeringCold=45800]="GlyphOfHungeringCold",e[e.GlyphOfIceboundFortitude=43545]="GlyphOfIceboundFortitude",e[e.GlyphOfIcyTouch=43546]="GlyphOfIcyTouch",e[e.GlyphOfObliterate=43547]="GlyphOfObliterate",e[e.GlyphOfPlagueStrike=43548]="GlyphOfPlagueStrike",e[e.GlyphOfRuneStrike=43550]="GlyphOfRuneStrike",e[e.GlyphOfRuneTap=43825]="GlyphOfRuneTap",e[e.GlyphOfScourgeStrike=43551]="GlyphOfScourgeStrike",e[e.GlyphOfStrangulate=43552]="GlyphOfStrangulate",e[e.GlyphOfTheGhoul=43549]="GlyphOfTheGhoul",e[e.GlyphOfUnbreakableArmor=43553]="GlyphOfUnbreakableArmor",e[e.GlyphOfUnholyBlight=45803]="GlyphOfUnholyBlight",e[e.GlyphOfVampiricBlood=43554]="GlyphOfVampiricBlood",e))(Ze||{}),et=(e=>(e[e.DeathknightMinorGlyphNone=0]="DeathknightMinorGlyphNone",e[e.GlyphOfBloodTap=43535]="GlyphOfBloodTap",e[e.GlyphOfCorpseExplosion=43671]="GlyphOfCorpseExplosion",e[e.GlyphOfDeathSEmbrace=43539]="GlyphOfDeathSEmbrace",e[e.GlyphOfHornOfWinter=43544]="GlyphOfHornOfWinter",e[e.GlyphOfPestilence=43672]="GlyphOfPestilence",e[e.GlyphOfRaiseDead=43673]="GlyphOfRaiseDead",e))(et||{});const tt=new class extends X{constructor(){super("proto.DeathknightTalents",[{no:1,name:"butchery",kind:"scalar",T:5},{no:2,name:"subversion",kind:"scalar",T:5},{no:3,name:"blade_barrier",kind:"scalar",T:5},{no:4,name:"bladed_armor",kind:"scalar",T:5},{no:5,name:"scent_of_blood",kind:"scalar",T:5},{no:6,name:"two_handed_weapon_specialization",kind:"scalar",T:5},{no:7,name:"rune_tap",kind:"scalar",T:8},{no:8,name:"dark_conviction",kind:"scalar",T:5},{no:9,name:"death_rune_mastery",kind:"scalar",T:5},{no:10,name:"improved_rune_tap",kind:"scalar",T:5},{no:11,name:"spell_deflection",kind:"scalar",T:5},{no:12,name:"vendetta",kind:"scalar",T:5},{no:13,name:"bloody_strikes",kind:"scalar",T:5},{no:14,name:"veteran_of_the_third_war",kind:"scalar",T:5},{no:15,name:"mark_of_blood",kind:"scalar",T:8},{no:16,name:"bloody_vengeance",kind:"scalar",T:5},{no:17,name:"abominations_might",kind:"scalar",T:5},{no:18,name:"bloodworms",kind:"scalar",T:5},{no:19,name:"hysteria",kind:"scalar",T:8},{no:20,name:"improved_blood_presence",kind:"scalar",T:5},{no:21,name:"improved_death_strike",kind:"scalar",T:5},{no:22,name:"sudden_doom",kind:"scalar",T:5},{no:23,name:"vampiric_blood",kind:"scalar",T:8},{no:24,name:"will_of_the_necropolis",kind:"scalar",T:5},{no:25,name:"heart_strike",kind:"scalar",T:8},{no:26,name:"might_of_mograine",kind:"scalar",T:5},{no:27,name:"blood_gorged",kind:"scalar",T:5},{no:28,name:"dancing_rune_weapon",kind:"scalar",T:8},{no:29,name:"improved_icy_touch",kind:"scalar",T:5},{no:30,name:"runic_power_mastery",kind:"scalar",T:5},{no:31,name:"toughness",kind:"scalar",T:5},{no:32,name:"icy_reach",kind:"scalar",T:5},{no:33,name:"black_ice",kind:"scalar",T:5},{no:34,name:"nerves_of_cold_steel",kind:"scalar",T:5},{no:35,name:"icy_talons",kind:"scalar",T:5},{no:36,name:"lichborne",kind:"scalar",T:8},{no:37,name:"annihilation",kind:"scalar",T:5},{no:38,name:"killing_machine",kind:"scalar",T:5},{no:39,name:"chill_of_the_grave",kind:"scalar",T:5},{no:40,name:"endless_winter",kind:"scalar",T:5},{no:41,name:"frigid_dreadplate",kind:"scalar",T:5},{no:42,name:"glacier_rot",kind:"scalar",T:5},{no:43,name:"deathchill",kind:"scalar",T:8},{no:44,name:"improved_icy_talons",kind:"scalar",T:8},{no:45,name:"merciless_combat",kind:"scalar",T:5},{no:46,name:"rime",kind:"scalar",T:5},{no:47,name:"chilblains",kind:"scalar",T:5},{no:48,name:"hungering_cold",kind:"scalar",T:8},{no:49,name:"improved_frost_presence",kind:"scalar",T:5},{no:50,name:"threat_of_thassarian",kind:"scalar",T:5},{no:51,name:"blood_of_the_north",kind:"scalar",T:5},{no:52,name:"unbreakable_armor",kind:"scalar",T:8},{no:53,name:"acclimation",kind:"scalar",T:5},{no:54,name:"frost_strike",kind:"scalar",T:8},{no:55,name:"guile_of_gorefiend",kind:"scalar",T:5},{no:56,name:"tundra_stalker",kind:"scalar",T:5},{no:57,name:"howling_blast",kind:"scalar",T:8},{no:58,name:"vicious_strikes",kind:"scalar",T:5},{no:59,name:"virulence",kind:"scalar",T:5},{no:60,name:"anticipation",kind:"scalar",T:5},{no:61,name:"epidemic",kind:"scalar",T:5},{no:62,name:"morbidity",kind:"scalar",T:5},{no:63,name:"unholy_command",kind:"scalar",T:5},{no:64,name:"ravenous_dead",kind:"scalar",T:5},{no:65,name:"outbreak",kind:"scalar",T:5},{no:66,name:"necrosis",kind:"scalar",T:5},{no:67,name:"corpse_explosion",kind:"scalar",T:8},{no:68,name:"on_a_pale_horse",kind:"scalar",T:5},{no:69,name:"blood_caked_blade",kind:"scalar",T:5},{no:70,name:"night_of_the_dead",kind:"scalar",T:5},{no:71,name:"unholy_blight",kind:"scalar",T:8},{no:72,name:"impurity",kind:"scalar",T:5},{no:73,name:"dirge",kind:"scalar",T:5},{no:74,name:"desecration",kind:"scalar",T:5},{no:75,name:"magic_suppression",kind:"scalar",T:5},{no:76,name:"reaping",kind:"scalar",T:5},{no:77,name:"master_of_ghouls",kind:"scalar",T:8},{no:78,name:"desolation",kind:"scalar",T:5},{no:79,name:"anti_magic_zone",kind:"scalar",T:8},{no:80,name:"improved_unholy_presence",kind:"scalar",T:5},{no:81,name:"ghoul_frenzy",kind:"scalar",T:8},{no:82,name:"crypt_fever",kind:"scalar",T:5},{no:83,name:"bone_shield",kind:"scalar",T:8},{no:84,name:"wandering_plague",kind:"scalar",T:5},{no:85,name:"ebon_plaguebringer",kind:"scalar",T:5},{no:86,name:"scourge_strike",kind:"scalar",T:8},{no:87,name:"rage_of_rivendare",kind:"scalar",T:5},{no:88,name:"summon_gargoyle",kind:"scalar",T:8}])}create(e){const t={butchery:0,subversion:0,bladeBarrier:0,bladedArmor:0,scentOfBlood:0,twoHandedWeaponSpecialization:0,runeTap:!1,darkConviction:0,deathRuneMastery:0,improvedRuneTap:0,spellDeflection:0,vendetta:0,bloodyStrikes:0,veteranOfTheThirdWar:0,markOfBlood:!1,bloodyVengeance:0,abominationsMight:0,bloodworms:0,hysteria:!1,improvedBloodPresence:0,improvedDeathStrike:0,suddenDoom:0,vampiricBlood:!1,willOfTheNecropolis:0,heartStrike:!1,mightOfMograine:0,bloodGorged:0,dancingRuneWeapon:!1,improvedIcyTouch:0,runicPowerMastery:0,toughness:0,icyReach:0,blackIce:0,nervesOfColdSteel:0,icyTalons:0,lichborne:!1,annihilation:0,killingMachine:0,chillOfTheGrave:0,endlessWinter:0,frigidDreadplate:0,glacierRot:0,deathchill:!1,improvedIcyTalons:!1,mercilessCombat:0,rime:0,chilblains:0,hungeringCold:!1,improvedFrostPresence:0,threatOfThassarian:0,bloodOfTheNorth:0,unbreakableArmor:!1,acclimation:0,frostStrike:!1,guileOfGorefiend:0,tundraStalker:0,howlingBlast:!1,viciousStrikes:0,virulence:0,anticipation:0,epidemic:0,morbidity:0,unholyCommand:0,ravenousDead:0,outbreak:0,necrosis:0,corpseExplosion:!1,onAPaleHorse:0,bloodCakedBlade:0,nightOfTheDead:0,unholyBlight:!1,impurity:0,dirge:0,desecration:0,magicSuppression:0,reaping:0,masterOfGhouls:!1,desolation:0,antiMagicZone:!1,improvedUnholyPresence:0,ghoulFrenzy:!1,cryptFever:0,boneShield:!1,wanderingPlague:0,ebonPlaguebringer:0,scourgeStrike:!1,rageOfRivendare:0,summonGargoyle:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.butchery=e.int32();break;case 2:i.subversion=e.int32();break;case 3:i.bladeBarrier=e.int32();break;case 4:i.bladedArmor=e.int32();break;case 5:i.scentOfBlood=e.int32();break;case 6:i.twoHandedWeaponSpecialization=e.int32();break;case 7:i.runeTap=e.bool();break;case 8:i.darkConviction=e.int32();break;case 9:i.deathRuneMastery=e.int32();break;case 10:i.improvedRuneTap=e.int32();break;case 11:i.spellDeflection=e.int32();break;case 12:i.vendetta=e.int32();break;case 13:i.bloodyStrikes=e.int32();break;case 14:i.veteranOfTheThirdWar=e.int32();break;case 15:i.markOfBlood=e.bool();break;case 16:i.bloodyVengeance=e.int32();break;case 17:i.abominationsMight=e.int32();break;case 18:i.bloodworms=e.int32();break;case 19:i.hysteria=e.bool();break;case 20:i.improvedBloodPresence=e.int32();break;case 21:i.improvedDeathStrike=e.int32();break;case 22:i.suddenDoom=e.int32();break;case 23:i.vampiricBlood=e.bool();break;case 24:i.willOfTheNecropolis=e.int32();break;case 25:i.heartStrike=e.bool();break;case 26:i.mightOfMograine=e.int32();break;case 27:i.bloodGorged=e.int32();break;case 28:i.dancingRuneWeapon=e.bool();break;case 29:i.improvedIcyTouch=e.int32();break;case 30:i.runicPowerMastery=e.int32();break;case 31:i.toughness=e.int32();break;case 32:i.icyReach=e.int32();break;case 33:i.blackIce=e.int32();break;case 34:i.nervesOfColdSteel=e.int32();break;case 35:i.icyTalons=e.int32();break;case 36:i.lichborne=e.bool();break;case 37:i.annihilation=e.int32();break;case 38:i.killingMachine=e.int32();break;case 39:i.chillOfTheGrave=e.int32();break;case 40:i.endlessWinter=e.int32();break;case 41:i.frigidDreadplate=e.int32();break;case 42:i.glacierRot=e.int32();break;case 43:i.deathchill=e.bool();break;case 44:i.improvedIcyTalons=e.bool();break;case 45:i.mercilessCombat=e.int32();break;case 46:i.rime=e.int32();break;case 47:i.chilblains=e.int32();break;case 48:i.hungeringCold=e.bool();break;case 49:i.improvedFrostPresence=e.int32();break;case 50:i.threatOfThassarian=e.int32();break;case 51:i.bloodOfTheNorth=e.int32();break;case 52:i.unbreakableArmor=e.bool();break;case 53:i.acclimation=e.int32();break;case 54:i.frostStrike=e.bool();break;case 55:i.guileOfGorefiend=e.int32();break;case 56:i.tundraStalker=e.int32();break;case 57:i.howlingBlast=e.bool();break;case 58:i.viciousStrikes=e.int32();break;case 59:i.virulence=e.int32();break;case 60:i.anticipation=e.int32();break;case 61:i.epidemic=e.int32();break;case 62:i.morbidity=e.int32();break;case 63:i.unholyCommand=e.int32();break;case 64:i.ravenousDead=e.int32();break;case 65:i.outbreak=e.int32();break;case 66:i.necrosis=e.int32();break;case 67:i.corpseExplosion=e.bool();break;case 68:i.onAPaleHorse=e.int32();break;case 69:i.bloodCakedBlade=e.int32();break;case 70:i.nightOfTheDead=e.int32();break;case 71:i.unholyBlight=e.bool();break;case 72:i.impurity=e.int32();break;case 73:i.dirge=e.int32();break;case 74:i.desecration=e.int32();break;case 75:i.magicSuppression=e.int32();break;case 76:i.reaping=e.int32();break;case 77:i.masterOfGhouls=e.bool();break;case 78:i.desolation=e.int32();break;case 79:i.antiMagicZone=e.bool();break;case 80:i.improvedUnholyPresence=e.int32();break;case 81:i.ghoulFrenzy=e.bool();break;case 82:i.cryptFever=e.int32();break;case 83:i.boneShield=e.bool();break;case 84:i.wanderingPlague=e.int32();break;case 85:i.ebonPlaguebringer=e.int32();break;case 86:i.scourgeStrike=e.bool();break;case 87:i.rageOfRivendare=e.int32();break;case 88:i.summonGargoyle=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.butchery&&t.tag(1,v.Varint).int32(e.butchery),0!==e.subversion&&t.tag(2,v.Varint).int32(e.subversion),0!==e.bladeBarrier&&t.tag(3,v.Varint).int32(e.bladeBarrier),0!==e.bladedArmor&&t.tag(4,v.Varint).int32(e.bladedArmor),0!==e.scentOfBlood&&t.tag(5,v.Varint).int32(e.scentOfBlood),0!==e.twoHandedWeaponSpecialization&&t.tag(6,v.Varint).int32(e.twoHandedWeaponSpecialization),!1!==e.runeTap&&t.tag(7,v.Varint).bool(e.runeTap),0!==e.darkConviction&&t.tag(8,v.Varint).int32(e.darkConviction),0!==e.deathRuneMastery&&t.tag(9,v.Varint).int32(e.deathRuneMastery),0!==e.improvedRuneTap&&t.tag(10,v.Varint).int32(e.improvedRuneTap),0!==e.spellDeflection&&t.tag(11,v.Varint).int32(e.spellDeflection),0!==e.vendetta&&t.tag(12,v.Varint).int32(e.vendetta),0!==e.bloodyStrikes&&t.tag(13,v.Varint).int32(e.bloodyStrikes),0!==e.veteranOfTheThirdWar&&t.tag(14,v.Varint).int32(e.veteranOfTheThirdWar),!1!==e.markOfBlood&&t.tag(15,v.Varint).bool(e.markOfBlood),0!==e.bloodyVengeance&&t.tag(16,v.Varint).int32(e.bloodyVengeance),0!==e.abominationsMight&&t.tag(17,v.Varint).int32(e.abominationsMight),0!==e.bloodworms&&t.tag(18,v.Varint).int32(e.bloodworms),!1!==e.hysteria&&t.tag(19,v.Varint).bool(e.hysteria),0!==e.improvedBloodPresence&&t.tag(20,v.Varint).int32(e.improvedBloodPresence),0!==e.improvedDeathStrike&&t.tag(21,v.Varint).int32(e.improvedDeathStrike),0!==e.suddenDoom&&t.tag(22,v.Varint).int32(e.suddenDoom),!1!==e.vampiricBlood&&t.tag(23,v.Varint).bool(e.vampiricBlood),0!==e.willOfTheNecropolis&&t.tag(24,v.Varint).int32(e.willOfTheNecropolis),!1!==e.heartStrike&&t.tag(25,v.Varint).bool(e.heartStrike),0!==e.mightOfMograine&&t.tag(26,v.Varint).int32(e.mightOfMograine),0!==e.bloodGorged&&t.tag(27,v.Varint).int32(e.bloodGorged),!1!==e.dancingRuneWeapon&&t.tag(28,v.Varint).bool(e.dancingRuneWeapon),0!==e.improvedIcyTouch&&t.tag(29,v.Varint).int32(e.improvedIcyTouch),0!==e.runicPowerMastery&&t.tag(30,v.Varint).int32(e.runicPowerMastery),0!==e.toughness&&t.tag(31,v.Varint).int32(e.toughness),0!==e.icyReach&&t.tag(32,v.Varint).int32(e.icyReach),0!==e.blackIce&&t.tag(33,v.Varint).int32(e.blackIce),0!==e.nervesOfColdSteel&&t.tag(34,v.Varint).int32(e.nervesOfColdSteel),0!==e.icyTalons&&t.tag(35,v.Varint).int32(e.icyTalons),!1!==e.lichborne&&t.tag(36,v.Varint).bool(e.lichborne),0!==e.annihilation&&t.tag(37,v.Varint).int32(e.annihilation),0!==e.killingMachine&&t.tag(38,v.Varint).int32(e.killingMachine),0!==e.chillOfTheGrave&&t.tag(39,v.Varint).int32(e.chillOfTheGrave),0!==e.endlessWinter&&t.tag(40,v.Varint).int32(e.endlessWinter),0!==e.frigidDreadplate&&t.tag(41,v.Varint).int32(e.frigidDreadplate),0!==e.glacierRot&&t.tag(42,v.Varint).int32(e.glacierRot),!1!==e.deathchill&&t.tag(43,v.Varint).bool(e.deathchill),!1!==e.improvedIcyTalons&&t.tag(44,v.Varint).bool(e.improvedIcyTalons),0!==e.mercilessCombat&&t.tag(45,v.Varint).int32(e.mercilessCombat),0!==e.rime&&t.tag(46,v.Varint).int32(e.rime),0!==e.chilblains&&t.tag(47,v.Varint).int32(e.chilblains),!1!==e.hungeringCold&&t.tag(48,v.Varint).bool(e.hungeringCold),0!==e.improvedFrostPresence&&t.tag(49,v.Varint).int32(e.improvedFrostPresence),0!==e.threatOfThassarian&&t.tag(50,v.Varint).int32(e.threatOfThassarian),0!==e.bloodOfTheNorth&&t.tag(51,v.Varint).int32(e.bloodOfTheNorth),!1!==e.unbreakableArmor&&t.tag(52,v.Varint).bool(e.unbreakableArmor),0!==e.acclimation&&t.tag(53,v.Varint).int32(e.acclimation),!1!==e.frostStrike&&t.tag(54,v.Varint).bool(e.frostStrike),0!==e.guileOfGorefiend&&t.tag(55,v.Varint).int32(e.guileOfGorefiend),0!==e.tundraStalker&&t.tag(56,v.Varint).int32(e.tundraStalker),!1!==e.howlingBlast&&t.tag(57,v.Varint).bool(e.howlingBlast),0!==e.viciousStrikes&&t.tag(58,v.Varint).int32(e.viciousStrikes),0!==e.virulence&&t.tag(59,v.Varint).int32(e.virulence),0!==e.anticipation&&t.tag(60,v.Varint).int32(e.anticipation),0!==e.epidemic&&t.tag(61,v.Varint).int32(e.epidemic),0!==e.morbidity&&t.tag(62,v.Varint).int32(e.morbidity),0!==e.unholyCommand&&t.tag(63,v.Varint).int32(e.unholyCommand),0!==e.ravenousDead&&t.tag(64,v.Varint).int32(e.ravenousDead),0!==e.outbreak&&t.tag(65,v.Varint).int32(e.outbreak),0!==e.necrosis&&t.tag(66,v.Varint).int32(e.necrosis),!1!==e.corpseExplosion&&t.tag(67,v.Varint).bool(e.corpseExplosion),0!==e.onAPaleHorse&&t.tag(68,v.Varint).int32(e.onAPaleHorse),0!==e.bloodCakedBlade&&t.tag(69,v.Varint).int32(e.bloodCakedBlade),0!==e.nightOfTheDead&&t.tag(70,v.Varint).int32(e.nightOfTheDead),!1!==e.unholyBlight&&t.tag(71,v.Varint).bool(e.unholyBlight),0!==e.impurity&&t.tag(72,v.Varint).int32(e.impurity),0!==e.dirge&&t.tag(73,v.Varint).int32(e.dirge),0!==e.desecration&&t.tag(74,v.Varint).int32(e.desecration),0!==e.magicSuppression&&t.tag(75,v.Varint).int32(e.magicSuppression),0!==e.reaping&&t.tag(76,v.Varint).int32(e.reaping),!1!==e.masterOfGhouls&&t.tag(77,v.Varint).bool(e.masterOfGhouls),0!==e.desolation&&t.tag(78,v.Varint).int32(e.desolation),!1!==e.antiMagicZone&&t.tag(79,v.Varint).bool(e.antiMagicZone),0!==e.improvedUnholyPresence&&t.tag(80,v.Varint).int32(e.improvedUnholyPresence),!1!==e.ghoulFrenzy&&t.tag(81,v.Varint).bool(e.ghoulFrenzy),0!==e.cryptFever&&t.tag(82,v.Varint).int32(e.cryptFever),!1!==e.boneShield&&t.tag(83,v.Varint).bool(e.boneShield),0!==e.wanderingPlague&&t.tag(84,v.Varint).int32(e.wanderingPlague),0!==e.ebonPlaguebringer&&t.tag(85,v.Varint).int32(e.ebonPlaguebringer),!1!==e.scourgeStrike&&t.tag(86,v.Varint).bool(e.scourgeStrike),0!==e.rageOfRivendare&&t.tag(87,v.Varint).int32(e.rageOfRivendare),!1!==e.summonGargoyle&&t.tag(88,v.Varint).bool(e.summonGargoyle);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const at=new class extends X{constructor(){super("proto.Deathknight",[{no:1,name:"rotation",kind:"message",T:()=>nt},{no:2,name:"talents",kind:"message",T:()=>tt},{no:3,name:"options",kind:"message",T:()=>it}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=nt.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=tt.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=it.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&nt.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&tt.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&it.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const nt=new class extends X{constructor(){super("proto.Deathknight.Rotation",[{no:1,name:"army_of_the_dead",kind:"enum",T:()=>["proto.Deathknight.Rotation.ArmyOfTheDead",qe]},{no:2,name:"use_death_and_decay",kind:"scalar",T:8},{no:3,name:"bt_ghoul_frenzy",kind:"scalar",T:8},{no:4,name:"disease_refresh_duration",kind:"scalar",T:1},{no:5,name:"refresh_horn_of_winter",kind:"scalar",T:8},{no:6,name:"first_disease",kind:"enum",T:()=>["proto.Deathknight.Rotation.FirstDisease",Ye]},{no:7,name:"death_and_decay_prio",kind:"enum",T:()=>["proto.Deathknight.Rotation.DeathAndDecayPrio",Ke]},{no:8,name:"use_empower_rune_weapon",kind:"scalar",T:8},{no:9,name:"blood_rune_filler",kind:"enum",T:()=>["proto.Deathknight.Rotation.BloodRuneFiller",Qe]},{no:10,name:"starting_presence",kind:"enum",T:()=>["proto.Deathknight.Rotation.StartingPresence",Xe]},{no:11,name:"blood_tap",kind:"enum",T:()=>["proto.Deathknight.Rotation.BloodTap",Je]},{no:12,name:"oblit_delay_duration",kind:"scalar",T:1},{no:13,name:"use_ams",kind:"scalar",T:8},{no:14,name:"avg_ams_success_rate",kind:"scalar",T:1},{no:15,name:"avg_ams_hit",kind:"scalar",T:1},{no:16,name:"auto_rotation",kind:"scalar",T:8}])}create(e){const t={armyOfTheDead:0,useDeathAndDecay:!1,btGhoulFrenzy:!1,diseaseRefreshDuration:0,refreshHornOfWinter:!1,firstDisease:0,deathAndDecayPrio:0,useEmpowerRuneWeapon:!1,bloodRuneFiller:0,startingPresence:0,bloodTap:0,oblitDelayDuration:0,useAms:!1,avgAmsSuccessRate:0,avgAmsHit:0,autoRotation:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.armyOfTheDead=e.int32();break;case 2:i.useDeathAndDecay=e.bool();break;case 3:i.btGhoulFrenzy=e.bool();break;case 4:i.diseaseRefreshDuration=e.double();break;case 5:i.refreshHornOfWinter=e.bool();break;case 6:i.firstDisease=e.int32();break;case 7:i.deathAndDecayPrio=e.int32();break;case 8:i.useEmpowerRuneWeapon=e.bool();break;case 9:i.bloodRuneFiller=e.int32();break;case 10:i.startingPresence=e.int32();break;case 11:i.bloodTap=e.int32();break;case 12:i.oblitDelayDuration=e.double();break;case 13:i.useAms=e.bool();break;case 14:i.avgAmsSuccessRate=e.double();break;case 15:i.avgAmsHit=e.double();break;case 16:i.autoRotation=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.armyOfTheDead&&t.tag(1,v.Varint).int32(e.armyOfTheDead),!1!==e.useDeathAndDecay&&t.tag(2,v.Varint).bool(e.useDeathAndDecay),!1!==e.btGhoulFrenzy&&t.tag(3,v.Varint).bool(e.btGhoulFrenzy),0!==e.diseaseRefreshDuration&&t.tag(4,v.Bit64).double(e.diseaseRefreshDuration),!1!==e.refreshHornOfWinter&&t.tag(5,v.Varint).bool(e.refreshHornOfWinter),0!==e.firstDisease&&t.tag(6,v.Varint).int32(e.firstDisease),0!==e.deathAndDecayPrio&&t.tag(7,v.Varint).int32(e.deathAndDecayPrio),!1!==e.useEmpowerRuneWeapon&&t.tag(8,v.Varint).bool(e.useEmpowerRuneWeapon),0!==e.bloodRuneFiller&&t.tag(9,v.Varint).int32(e.bloodRuneFiller),0!==e.startingPresence&&t.tag(10,v.Varint).int32(e.startingPresence),0!==e.bloodTap&&t.tag(11,v.Varint).int32(e.bloodTap),0!==e.oblitDelayDuration&&t.tag(12,v.Bit64).double(e.oblitDelayDuration),!1!==e.useAms&&t.tag(13,v.Varint).bool(e.useAms),0!==e.avgAmsSuccessRate&&t.tag(14,v.Bit64).double(e.avgAmsSuccessRate),0!==e.avgAmsHit&&t.tag(15,v.Bit64).double(e.avgAmsHit),!1!==e.autoRotation&&t.tag(16,v.Varint).bool(e.autoRotation);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const it=new class extends X{constructor(){super("proto.Deathknight.Options",[{no:1,name:"starting_runic_power",kind:"scalar",T:1},{no:2,name:"pet_uptime",kind:"scalar",T:1},{no:3,name:"precast_ghoul_frenzy",kind:"scalar",T:8},{no:4,name:"precast_horn_of_winter",kind:"scalar",T:8},{no:5,name:"unholy_frenzy_target",kind:"message",T:()=>je}])}create(e){const t={startingRunicPower:0,petUptime:0,precastGhoulFrenzy:!1,precastHornOfWinter:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.startingRunicPower=e.double();break;case 2:i.petUptime=e.double();break;case 3:i.precastGhoulFrenzy=e.bool();break;case 4:i.precastHornOfWinter=e.bool();break;case 5:i.unholyFrenzyTarget=je.internalBinaryRead(e,e.uint32(),a,i.unholyFrenzyTarget);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.startingRunicPower&&t.tag(1,v.Bit64).double(e.startingRunicPower),0!==e.petUptime&&t.tag(2,v.Bit64).double(e.petUptime),!1!==e.precastGhoulFrenzy&&t.tag(3,v.Varint).bool(e.precastGhoulFrenzy),!1!==e.precastHornOfWinter&&t.tag(4,v.Varint).bool(e.precastHornOfWinter),e.unholyFrenzyTarget&&je.internalBinaryWrite(e.unholyFrenzyTarget,t.tag(5,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ot=new class extends X{constructor(){super("proto.TankDeathknight",[{no:1,name:"rotation",kind:"message",T:()=>rt},{no:2,name:"talents",kind:"message",T:()=>tt},{no:3,name:"options",kind:"message",T:()=>st}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=rt.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=tt.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=st.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&rt.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&tt.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&st.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const rt=new class extends X{constructor(){super("proto.TankDeathknight.Rotation",[])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){return n??this.create()}internalBinaryWrite(e,t,a){let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const st=new class extends X{constructor(){super("proto.TankDeathknight.Options",[{no:1,name:"starting_runic_power",kind:"scalar",T:1},{no:2,name:"unholy_frenzy_target",kind:"message",T:()=>je}])}create(e){const t={startingRunicPower:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.startingRunicPower=e.double();break;case 2:i.unholyFrenzyTarget=je.internalBinaryRead(e,e.uint32(),a,i.unholyFrenzyTarget);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.startingRunicPower&&t.tag(1,v.Bit64).double(e.startingRunicPower),e.unholyFrenzyTarget&&je.internalBinaryWrite(e.unholyFrenzyTarget,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var lt=(e=>(e[e.SunderArmorNone=0]="SunderArmorNone",e[e.SunderArmorHelpStack=1]="SunderArmorHelpStack",e[e.SunderArmorMaintain=2]="SunderArmorMaintain",e))(lt||{}),ct=(e=>(e[e.DefaultStance=0]="DefaultStance",e[e.BattleStance=1]="BattleStance",e[e.BerserkerStance=2]="BerserkerStance",e))(ct||{}),dt=(e=>(e[e.DemoShoutChoiceNone=0]="DemoShoutChoiceNone",e[e.DemoShoutChoiceMaintain=1]="DemoShoutChoiceMaintain",e[e.DemoShoutChoiceFiller=2]="DemoShoutChoiceFiller",e))(dt||{}),mt=(e=>(e[e.ThunderClapChoiceNone=0]="ThunderClapChoiceNone",e[e.ThunderClapChoiceMaintain=1]="ThunderClapChoiceMaintain",e[e.ThunderClapChoiceOnCD=2]="ThunderClapChoiceOnCD",e))(mt||{}),pt=(e=>(e[e.NoSpell=0]="NoSpell",e[e.Revenge=1]="Revenge",e[e.ShieldSlam=2]="ShieldSlam",e[e.Devastate=3]="Devastate",e[e.SunderArmor=4]="SunderArmor",e[e.Shout=5]="Shout",e[e.DemoralizingShout=6]="DemoralizingShout",e[e.ThunderClap=7]="ThunderClap",e[e.MortalStrike=8]="MortalStrike",e[e.ConcussionBlow=9]="ConcussionBlow",e[e.Shockwave=10]="Shockwave",e))(pt||{}),ht=(e=>(e[e.WarriorMajorGlyphNone=0]="WarriorMajorGlyphNone",e[e.GlyphOfBarbaricInsults=43420]="GlyphOfBarbaricInsults",e[e.GlyphOfBladestorm=45790]="GlyphOfBladestorm",e[e.GlyphOfBlocking=43425]="GlyphOfBlocking",e[e.GlyphOfBloodthirst=43412]="GlyphOfBloodthirst",e[e.GlyphOfCleaving=43414]="GlyphOfCleaving",e[e.GlyphOfDevastate=43415]="GlyphOfDevastate",e[e.GlyphOfEnragedRegeneration=45794]="GlyphOfEnragedRegeneration",e[e.GlyphOfExecution=43416]="GlyphOfExecution",e[e.GlyphOfHamstring=43417]="GlyphOfHamstring",e[e.GlyphOfHeroicStrike=43418]="GlyphOfHeroicStrike",e[e.GlyphOfIntervene=43419]="GlyphOfIntervene",e[e.GlyphOfLastStand=43426]="GlyphOfLastStand",e[e.GlyphOfMortalStrike=43421]="GlyphOfMortalStrike",e[e.GlyphOfOverpower=43422]="GlyphOfOverpower",e[e.GlyphOfRapidCharge=43413]="GlyphOfRapidCharge",e[e.GlyphOfRending=43423]="GlyphOfRending",e[e.GlyphOfResonatingPower=43430]="GlyphOfResonatingPower",e[e.GlyphOfRevenge=43424]="GlyphOfRevenge",e[e.GlyphOfShieldWall=45797]="GlyphOfShieldWall",e[e.GlyphOfShockwave=45792]="GlyphOfShockwave",e[e.GlyphOfSpellReflection=45795]="GlyphOfSpellReflection",e[e.GlyphOfSunderArmor=43427]="GlyphOfSunderArmor",e[e.GlyphOfSweepingStrikes=43428]="GlyphOfSweepingStrikes",e[e.GlyphOfTaunt=43429]="GlyphOfTaunt",e[e.GlyphOfVictoryRush=43431]="GlyphOfVictoryRush",e[e.GlyphOfVigilance=45793]="GlyphOfVigilance",e[e.GlyphOfWhirlwind=43432]="GlyphOfWhirlwind",e))(ht||{}),gt=(e=>(e[e.WarriorMinorGlyphNone=0]="WarriorMinorGlyphNone",e[e.GlyphOfBattle=43395]="GlyphOfBattle",e[e.GlyphOfBloodrage=43396]="GlyphOfBloodrage",e[e.GlyphOfCharge=43397]="GlyphOfCharge",e[e.GlyphOfCommand=49084]="GlyphOfCommand",e[e.GlyphOfEnduringVictory=43400]="GlyphOfEnduringVictory",e[e.GlyphOfMockingBlow=43398]="GlyphOfMockingBlow",e[e.GlyphOfThunderClap=43399]="GlyphOfThunderClap",e))(gt||{}),ut=(e=>(e[e.WarriorShoutNone=0]="WarriorShoutNone",e[e.WarriorShoutBattle=1]="WarriorShoutBattle",e[e.WarriorShoutCommanding=2]="WarriorShoutCommanding",e))(ut||{});const ft=new class extends X{constructor(){super("proto.WarriorTalents",[{no:1,name:"improved_heroic_strike",kind:"scalar",T:5},{no:2,name:"deflection",kind:"scalar",T:5},{no:3,name:"improved_rend",kind:"scalar",T:5},{no:4,name:"improved_charge",kind:"scalar",T:5},{no:5,name:"iron_will",kind:"scalar",T:5},{no:6,name:"tactical_mastery",kind:"scalar",T:5},{no:7,name:"improved_overpower",kind:"scalar",T:5},{no:8,name:"anger_management",kind:"scalar",T:8},{no:9,name:"impale",kind:"scalar",T:5},{no:10,name:"deep_wounds",kind:"scalar",T:5},{no:11,name:"two_handed_weapon_specialization",kind:"scalar",T:5},{no:12,name:"taste_for_blood",kind:"scalar",T:5},{no:13,name:"poleaxe_specialization",kind:"scalar",T:5},{no:14,name:"sweeping_strikes",kind:"scalar",T:8},{no:15,name:"mace_specialization",kind:"scalar",T:5},{no:16,name:"sword_specialization",kind:"scalar",T:5},{no:17,name:"weapon_mastery",kind:"scalar",T:5},{no:18,name:"improved_hamstring",kind:"scalar",T:5},{no:19,name:"trauma",kind:"scalar",T:5},{no:20,name:"second_wind",kind:"scalar",T:5},{no:21,name:"mortal_strike",kind:"scalar",T:8},{no:22,name:"strength_of_arms",kind:"scalar",T:5},{no:23,name:"improved_slam",kind:"scalar",T:5},{no:24,name:"juggernaut",kind:"scalar",T:8},{no:25,name:"improved_mortal_strike",kind:"scalar",T:5},{no:26,name:"unrelenting_assault",kind:"scalar",T:5},{no:27,name:"sudden_death",kind:"scalar",T:5},{no:28,name:"endless_rage",kind:"scalar",T:8},{no:29,name:"blood_frenzy",kind:"scalar",T:5},{no:30,name:"wrecking_crew",kind:"scalar",T:5},{no:31,name:"bladestorm",kind:"scalar",T:8},{no:32,name:"armored_to_the_teeth",kind:"scalar",T:5},{no:33,name:"booming_voice",kind:"scalar",T:5},{no:34,name:"cruelty",kind:"scalar",T:5},{no:35,name:"improved_demoralizing_shout",kind:"scalar",T:5},{no:36,name:"unbridled_wrath",kind:"scalar",T:5},{no:37,name:"improved_cleave",kind:"scalar",T:5},{no:38,name:"piercing_howl",kind:"scalar",T:8},{no:39,name:"blood_craze",kind:"scalar",T:5},{no:40,name:"commanding_presence",kind:"scalar",T:5},{no:41,name:"dual_wield_specialization",kind:"scalar",T:5},{no:42,name:"improved_execute",kind:"scalar",T:5},{no:43,name:"enrage",kind:"scalar",T:5},{no:44,name:"precision",kind:"scalar",T:5},{no:45,name:"death_wish",kind:"scalar",T:8},{no:46,name:"improved_intercept",kind:"scalar",T:5},{no:47,name:"improved_berserker_rage",kind:"scalar",T:5},{no:48,name:"flurry",kind:"scalar",T:5},{no:49,name:"intensify_rage",kind:"scalar",T:5},{no:50,name:"bloodthirst",kind:"scalar",T:8},{no:51,name:"improved_whirlwind",kind:"scalar",T:5},{no:52,name:"furious_attacks",kind:"scalar",T:5},{no:53,name:"improved_berserker_stance",kind:"scalar",T:5},{no:54,name:"heroic_fury",kind:"scalar",T:8},{no:55,name:"rampage",kind:"scalar",T:8},{no:56,name:"bloodsurge",kind:"scalar",T:5},{no:57,name:"unending_fury",kind:"scalar",T:5},{no:58,name:"titans_grip",kind:"scalar",T:8},{no:59,name:"improved_bloodrage",kind:"scalar",T:5},{no:60,name:"shield_specialization",kind:"scalar",T:5},{no:61,name:"improved_thunder_clap",kind:"scalar",T:5},{no:62,name:"incite",kind:"scalar",T:5},{no:63,name:"anticipation",kind:"scalar",T:5},{no:64,name:"last_stand",kind:"scalar",T:8},{no:65,name:"improved_revenge",kind:"scalar",T:5},{no:66,name:"shield_mastery",kind:"scalar",T:5},{no:67,name:"toughness",kind:"scalar",T:5},{no:68,name:"improved_spell_reflection",kind:"scalar",T:5},{no:69,name:"improved_disarm",kind:"scalar",T:5},{no:70,name:"puncture",kind:"scalar",T:5},{no:71,name:"improved_disciplines",kind:"scalar",T:5},{no:72,name:"concussion_blow",kind:"scalar",T:8},{no:73,name:"gag_order",kind:"scalar",T:5},{no:74,name:"one_handed_weapon_specialization",kind:"scalar",T:5},{no:75,name:"improved_defensive_stance",kind:"scalar",T:5},{no:76,name:"vigilance",kind:"scalar",T:8},{no:77,name:"focused_rage",kind:"scalar",T:5},{no:78,name:"vitality",kind:"scalar",T:5},{no:79,name:"safeguard",kind:"scalar",T:5},{no:80,name:"warbringer",kind:"scalar",T:8},{no:81,name:"devastate",kind:"scalar",T:8},{no:82,name:"critical_block",kind:"scalar",T:5},{no:83,name:"sword_and_board",kind:"scalar",T:5},{no:84,name:"damage_shield",kind:"scalar",T:5},{no:85,name:"shockwave",kind:"scalar",T:8}])}create(e){const t={improvedHeroicStrike:0,deflection:0,improvedRend:0,improvedCharge:0,ironWill:0,tacticalMastery:0,improvedOverpower:0,angerManagement:!1,impale:0,deepWounds:0,twoHandedWeaponSpecialization:0,tasteForBlood:0,poleaxeSpecialization:0,sweepingStrikes:!1,maceSpecialization:0,swordSpecialization:0,weaponMastery:0,improvedHamstring:0,trauma:0,secondWind:0,mortalStrike:!1,strengthOfArms:0,improvedSlam:0,juggernaut:!1,improvedMortalStrike:0,unrelentingAssault:0,suddenDeath:0,endlessRage:!1,bloodFrenzy:0,wreckingCrew:0,bladestorm:!1,armoredToTheTeeth:0,boomingVoice:0,cruelty:0,improvedDemoralizingShout:0,unbridledWrath:0,improvedCleave:0,piercingHowl:!1,bloodCraze:0,commandingPresence:0,dualWieldSpecialization:0,improvedExecute:0,enrage:0,precision:0,deathWish:!1,improvedIntercept:0,improvedBerserkerRage:0,flurry:0,intensifyRage:0,bloodthirst:!1,improvedWhirlwind:0,furiousAttacks:0,improvedBerserkerStance:0,heroicFury:!1,rampage:!1,bloodsurge:0,unendingFury:0,titansGrip:!1,improvedBloodrage:0,shieldSpecialization:0,improvedThunderClap:0,incite:0,anticipation:0,lastStand:!1,improvedRevenge:0,shieldMastery:0,toughness:0,improvedSpellReflection:0,improvedDisarm:0,puncture:0,improvedDisciplines:0,concussionBlow:!1,gagOrder:0,oneHandedWeaponSpecialization:0,improvedDefensiveStance:0,vigilance:!1,focusedRage:0,vitality:0,safeguard:0,warbringer:!1,devastate:!1,criticalBlock:0,swordAndBoard:0,damageShield:0,shockwave:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.improvedHeroicStrike=e.int32();break;case 2:i.deflection=e.int32();break;case 3:i.improvedRend=e.int32();break;case 4:i.improvedCharge=e.int32();break;case 5:i.ironWill=e.int32();break;case 6:i.tacticalMastery=e.int32();break;case 7:i.improvedOverpower=e.int32();break;case 8:i.angerManagement=e.bool();break;case 9:i.impale=e.int32();break;case 10:i.deepWounds=e.int32();break;case 11:i.twoHandedWeaponSpecialization=e.int32();break;case 12:i.tasteForBlood=e.int32();break;case 13:i.poleaxeSpecialization=e.int32();break;case 14:i.sweepingStrikes=e.bool();break;case 15:i.maceSpecialization=e.int32();break;case 16:i.swordSpecialization=e.int32();break;case 17:i.weaponMastery=e.int32();break;case 18:i.improvedHamstring=e.int32();break;case 19:i.trauma=e.int32();break;case 20:i.secondWind=e.int32();break;case 21:i.mortalStrike=e.bool();break;case 22:i.strengthOfArms=e.int32();break;case 23:i.improvedSlam=e.int32();break;case 24:i.juggernaut=e.bool();break;case 25:i.improvedMortalStrike=e.int32();break;case 26:i.unrelentingAssault=e.int32();break;case 27:i.suddenDeath=e.int32();break;case 28:i.endlessRage=e.bool();break;case 29:i.bloodFrenzy=e.int32();break;case 30:i.wreckingCrew=e.int32();break;case 31:i.bladestorm=e.bool();break;case 32:i.armoredToTheTeeth=e.int32();break;case 33:i.boomingVoice=e.int32();break;case 34:i.cruelty=e.int32();break;case 35:i.improvedDemoralizingShout=e.int32();break;case 36:i.unbridledWrath=e.int32();break;case 37:i.improvedCleave=e.int32();break;case 38:i.piercingHowl=e.bool();break;case 39:i.bloodCraze=e.int32();break;case 40:i.commandingPresence=e.int32();break;case 41:i.dualWieldSpecialization=e.int32();break;case 42:i.improvedExecute=e.int32();break;case 43:i.enrage=e.int32();break;case 44:i.precision=e.int32();break;case 45:i.deathWish=e.bool();break;case 46:i.improvedIntercept=e.int32();break;case 47:i.improvedBerserkerRage=e.int32();break;case 48:i.flurry=e.int32();break;case 49:i.intensifyRage=e.int32();break;case 50:i.bloodthirst=e.bool();break;case 51:i.improvedWhirlwind=e.int32();break;case 52:i.furiousAttacks=e.int32();break;case 53:i.improvedBerserkerStance=e.int32();break;case 54:i.heroicFury=e.bool();break;case 55:i.rampage=e.bool();break;case 56:i.bloodsurge=e.int32();break;case 57:i.unendingFury=e.int32();break;case 58:i.titansGrip=e.bool();break;case 59:i.improvedBloodrage=e.int32();break;case 60:i.shieldSpecialization=e.int32();break;case 61:i.improvedThunderClap=e.int32();break;case 62:i.incite=e.int32();break;case 63:i.anticipation=e.int32();break;case 64:i.lastStand=e.bool();break;case 65:i.improvedRevenge=e.int32();break;case 66:i.shieldMastery=e.int32();break;case 67:i.toughness=e.int32();break;case 68:i.improvedSpellReflection=e.int32();break;case 69:i.improvedDisarm=e.int32();break;case 70:i.puncture=e.int32();break;case 71:i.improvedDisciplines=e.int32();break;case 72:i.concussionBlow=e.bool();break;case 73:i.gagOrder=e.int32();break;case 74:i.oneHandedWeaponSpecialization=e.int32();break;case 75:i.improvedDefensiveStance=e.int32();break;case 76:i.vigilance=e.bool();break;case 77:i.focusedRage=e.int32();break;case 78:i.vitality=e.int32();break;case 79:i.safeguard=e.int32();break;case 80:i.warbringer=e.bool();break;case 81:i.devastate=e.bool();break;case 82:i.criticalBlock=e.int32();break;case 83:i.swordAndBoard=e.int32();break;case 84:i.damageShield=e.int32();break;case 85:i.shockwave=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.improvedHeroicStrike&&t.tag(1,v.Varint).int32(e.improvedHeroicStrike),0!==e.deflection&&t.tag(2,v.Varint).int32(e.deflection),0!==e.improvedRend&&t.tag(3,v.Varint).int32(e.improvedRend),0!==e.improvedCharge&&t.tag(4,v.Varint).int32(e.improvedCharge),0!==e.ironWill&&t.tag(5,v.Varint).int32(e.ironWill),0!==e.tacticalMastery&&t.tag(6,v.Varint).int32(e.tacticalMastery),0!==e.improvedOverpower&&t.tag(7,v.Varint).int32(e.improvedOverpower),!1!==e.angerManagement&&t.tag(8,v.Varint).bool(e.angerManagement),0!==e.impale&&t.tag(9,v.Varint).int32(e.impale),0!==e.deepWounds&&t.tag(10,v.Varint).int32(e.deepWounds),0!==e.twoHandedWeaponSpecialization&&t.tag(11,v.Varint).int32(e.twoHandedWeaponSpecialization),0!==e.tasteForBlood&&t.tag(12,v.Varint).int32(e.tasteForBlood),0!==e.poleaxeSpecialization&&t.tag(13,v.Varint).int32(e.poleaxeSpecialization),!1!==e.sweepingStrikes&&t.tag(14,v.Varint).bool(e.sweepingStrikes),0!==e.maceSpecialization&&t.tag(15,v.Varint).int32(e.maceSpecialization),0!==e.swordSpecialization&&t.tag(16,v.Varint).int32(e.swordSpecialization),0!==e.weaponMastery&&t.tag(17,v.Varint).int32(e.weaponMastery),0!==e.improvedHamstring&&t.tag(18,v.Varint).int32(e.improvedHamstring),0!==e.trauma&&t.tag(19,v.Varint).int32(e.trauma),0!==e.secondWind&&t.tag(20,v.Varint).int32(e.secondWind),!1!==e.mortalStrike&&t.tag(21,v.Varint).bool(e.mortalStrike),0!==e.strengthOfArms&&t.tag(22,v.Varint).int32(e.strengthOfArms),0!==e.improvedSlam&&t.tag(23,v.Varint).int32(e.improvedSlam),!1!==e.juggernaut&&t.tag(24,v.Varint).bool(e.juggernaut),0!==e.improvedMortalStrike&&t.tag(25,v.Varint).int32(e.improvedMortalStrike),0!==e.unrelentingAssault&&t.tag(26,v.Varint).int32(e.unrelentingAssault),0!==e.suddenDeath&&t.tag(27,v.Varint).int32(e.suddenDeath),!1!==e.endlessRage&&t.tag(28,v.Varint).bool(e.endlessRage),0!==e.bloodFrenzy&&t.tag(29,v.Varint).int32(e.bloodFrenzy),0!==e.wreckingCrew&&t.tag(30,v.Varint).int32(e.wreckingCrew),!1!==e.bladestorm&&t.tag(31,v.Varint).bool(e.bladestorm),0!==e.armoredToTheTeeth&&t.tag(32,v.Varint).int32(e.armoredToTheTeeth),0!==e.boomingVoice&&t.tag(33,v.Varint).int32(e.boomingVoice),0!==e.cruelty&&t.tag(34,v.Varint).int32(e.cruelty),0!==e.improvedDemoralizingShout&&t.tag(35,v.Varint).int32(e.improvedDemoralizingShout),0!==e.unbridledWrath&&t.tag(36,v.Varint).int32(e.unbridledWrath),0!==e.improvedCleave&&t.tag(37,v.Varint).int32(e.improvedCleave),!1!==e.piercingHowl&&t.tag(38,v.Varint).bool(e.piercingHowl),0!==e.bloodCraze&&t.tag(39,v.Varint).int32(e.bloodCraze),0!==e.commandingPresence&&t.tag(40,v.Varint).int32(e.commandingPresence),0!==e.dualWieldSpecialization&&t.tag(41,v.Varint).int32(e.dualWieldSpecialization),0!==e.improvedExecute&&t.tag(42,v.Varint).int32(e.improvedExecute),0!==e.enrage&&t.tag(43,v.Varint).int32(e.enrage),0!==e.precision&&t.tag(44,v.Varint).int32(e.precision),!1!==e.deathWish&&t.tag(45,v.Varint).bool(e.deathWish),0!==e.improvedIntercept&&t.tag(46,v.Varint).int32(e.improvedIntercept),0!==e.improvedBerserkerRage&&t.tag(47,v.Varint).int32(e.improvedBerserkerRage),0!==e.flurry&&t.tag(48,v.Varint).int32(e.flurry),0!==e.intensifyRage&&t.tag(49,v.Varint).int32(e.intensifyRage),!1!==e.bloodthirst&&t.tag(50,v.Varint).bool(e.bloodthirst),0!==e.improvedWhirlwind&&t.tag(51,v.Varint).int32(e.improvedWhirlwind),0!==e.furiousAttacks&&t.tag(52,v.Varint).int32(e.furiousAttacks),0!==e.improvedBerserkerStance&&t.tag(53,v.Varint).int32(e.improvedBerserkerStance),!1!==e.heroicFury&&t.tag(54,v.Varint).bool(e.heroicFury),!1!==e.rampage&&t.tag(55,v.Varint).bool(e.rampage),0!==e.bloodsurge&&t.tag(56,v.Varint).int32(e.bloodsurge),0!==e.unendingFury&&t.tag(57,v.Varint).int32(e.unendingFury),!1!==e.titansGrip&&t.tag(58,v.Varint).bool(e.titansGrip),0!==e.improvedBloodrage&&t.tag(59,v.Varint).int32(e.improvedBloodrage),0!==e.shieldSpecialization&&t.tag(60,v.Varint).int32(e.shieldSpecialization),0!==e.improvedThunderClap&&t.tag(61,v.Varint).int32(e.improvedThunderClap),0!==e.incite&&t.tag(62,v.Varint).int32(e.incite),0!==e.anticipation&&t.tag(63,v.Varint).int32(e.anticipation),!1!==e.lastStand&&t.tag(64,v.Varint).bool(e.lastStand),0!==e.improvedRevenge&&t.tag(65,v.Varint).int32(e.improvedRevenge),0!==e.shieldMastery&&t.tag(66,v.Varint).int32(e.shieldMastery),0!==e.toughness&&t.tag(67,v.Varint).int32(e.toughness),0!==e.improvedSpellReflection&&t.tag(68,v.Varint).int32(e.improvedSpellReflection),0!==e.improvedDisarm&&t.tag(69,v.Varint).int32(e.improvedDisarm),0!==e.puncture&&t.tag(70,v.Varint).int32(e.puncture),0!==e.improvedDisciplines&&t.tag(71,v.Varint).int32(e.improvedDisciplines),!1!==e.concussionBlow&&t.tag(72,v.Varint).bool(e.concussionBlow),0!==e.gagOrder&&t.tag(73,v.Varint).int32(e.gagOrder),0!==e.oneHandedWeaponSpecialization&&t.tag(74,v.Varint).int32(e.oneHandedWeaponSpecialization),0!==e.improvedDefensiveStance&&t.tag(75,v.Varint).int32(e.improvedDefensiveStance),!1!==e.vigilance&&t.tag(76,v.Varint).bool(e.vigilance),0!==e.focusedRage&&t.tag(77,v.Varint).int32(e.focusedRage),0!==e.vitality&&t.tag(78,v.Varint).int32(e.vitality),0!==e.safeguard&&t.tag(79,v.Varint).int32(e.safeguard),!1!==e.warbringer&&t.tag(80,v.Varint).bool(e.warbringer),!1!==e.devastate&&t.tag(81,v.Varint).bool(e.devastate),0!==e.criticalBlock&&t.tag(82,v.Varint).int32(e.criticalBlock),0!==e.swordAndBoard&&t.tag(83,v.Varint).int32(e.swordAndBoard),0!==e.damageShield&&t.tag(84,v.Varint).int32(e.damageShield),!1!==e.shockwave&&t.tag(85,v.Varint).bool(e.shockwave);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const wt=new class extends X{constructor(){super("proto.Warrior",[{no:1,name:"rotation",kind:"message",T:()=>yt},{no:2,name:"talents",kind:"message",T:()=>ft},{no:3,name:"options",kind:"message",T:()=>kt}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=yt.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ft.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=kt.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&yt.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ft.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&kt.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const yt=new class extends X{constructor(){super("proto.Warrior.Rotation",[{no:1,name:"use_cleave",kind:"scalar",T:8},{no:2,name:"use_rend",kind:"scalar",T:8},{no:18,name:"use_ms",kind:"scalar",T:8},{no:3,name:"use_slam",kind:"scalar",T:8},{no:4,name:"prioritize_ww",kind:"scalar",T:8},{no:5,name:"sunderArmor",kind:"enum",T:()=>["proto.Warrior.Rotation.SunderArmor",lt]},{no:6,name:"maintain_demo_shout",kind:"scalar",T:8},{no:7,name:"maintain_thunder_clap",kind:"scalar",T:8},{no:8,name:"hs_rage_threshold",kind:"scalar",T:1},{no:9,name:"ms_rage_threshold",kind:"scalar",T:1},{no:10,name:"rend_rage_threshold_below",kind:"scalar",T:1},{no:11,name:"slam_rage_threshold",kind:"scalar",T:1},{no:12,name:"rend_cd_threshold",kind:"scalar",T:1},{no:13,name:"use_hs_during_execute",kind:"scalar",T:8},{no:14,name:"use_bt_during_execute",kind:"scalar",T:8},{no:15,name:"spam_execute",kind:"scalar",T:8},{no:16,name:"use_ww_during_execute",kind:"scalar",T:8},{no:17,name:"use_slam_over_execute",kind:"scalar",T:8},{no:19,name:"stance_option",kind:"enum",T:()=>["proto.Warrior.Rotation.StanceOption",ct]}])}create(e){const t={useCleave:!1,useRend:!1,useMs:!1,useSlam:!1,prioritizeWw:!1,sunderArmor:0,maintainDemoShout:!1,maintainThunderClap:!1,hsRageThreshold:0,msRageThreshold:0,rendRageThresholdBelow:0,slamRageThreshold:0,rendCdThreshold:0,useHsDuringExecute:!1,useBtDuringExecute:!1,spamExecute:!1,useWwDuringExecute:!1,useSlamOverExecute:!1,stanceOption:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.useCleave=e.bool();break;case 2:i.useRend=e.bool();break;case 18:i.useMs=e.bool();break;case 3:i.useSlam=e.bool();break;case 4:i.prioritizeWw=e.bool();break;case 5:i.sunderArmor=e.int32();break;case 6:i.maintainDemoShout=e.bool();break;case 7:i.maintainThunderClap=e.bool();break;case 8:i.hsRageThreshold=e.double();break;case 9:i.msRageThreshold=e.double();break;case 10:i.rendRageThresholdBelow=e.double();break;case 11:i.slamRageThreshold=e.double();break;case 12:i.rendCdThreshold=e.double();break;case 13:i.useHsDuringExecute=e.bool();break;case 14:i.useBtDuringExecute=e.bool();break;case 15:i.spamExecute=e.bool();break;case 16:i.useWwDuringExecute=e.bool();break;case 17:i.useSlamOverExecute=e.bool();break;case 19:i.stanceOption=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.useCleave&&t.tag(1,v.Varint).bool(e.useCleave),!1!==e.useRend&&t.tag(2,v.Varint).bool(e.useRend),!1!==e.useMs&&t.tag(18,v.Varint).bool(e.useMs),!1!==e.useSlam&&t.tag(3,v.Varint).bool(e.useSlam),!1!==e.prioritizeWw&&t.tag(4,v.Varint).bool(e.prioritizeWw),0!==e.sunderArmor&&t.tag(5,v.Varint).int32(e.sunderArmor),!1!==e.maintainDemoShout&&t.tag(6,v.Varint).bool(e.maintainDemoShout),!1!==e.maintainThunderClap&&t.tag(7,v.Varint).bool(e.maintainThunderClap),0!==e.hsRageThreshold&&t.tag(8,v.Bit64).double(e.hsRageThreshold),0!==e.msRageThreshold&&t.tag(9,v.Bit64).double(e.msRageThreshold),0!==e.rendRageThresholdBelow&&t.tag(10,v.Bit64).double(e.rendRageThresholdBelow),0!==e.slamRageThreshold&&t.tag(11,v.Bit64).double(e.slamRageThreshold),0!==e.rendCdThreshold&&t.tag(12,v.Bit64).double(e.rendCdThreshold),!1!==e.useHsDuringExecute&&t.tag(13,v.Varint).bool(e.useHsDuringExecute),!1!==e.useBtDuringExecute&&t.tag(14,v.Varint).bool(e.useBtDuringExecute),!1!==e.spamExecute&&t.tag(15,v.Varint).bool(e.spamExecute),!1!==e.useWwDuringExecute&&t.tag(16,v.Varint).bool(e.useWwDuringExecute),!1!==e.useSlamOverExecute&&t.tag(17,v.Varint).bool(e.useSlamOverExecute),0!==e.stanceOption&&t.tag(19,v.Varint).int32(e.stanceOption);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const kt=new class extends X{constructor(){super("proto.Warrior.Options",[{no:1,name:"starting_rage",kind:"scalar",T:1},{no:2,name:"use_recklessness",kind:"scalar",T:8},{no:3,name:"shout",kind:"enum",T:()=>["proto.WarriorShout",ut]}])}create(e){const t={startingRage:0,useRecklessness:!1,shout:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.startingRage=e.double();break;case 2:i.useRecklessness=e.bool();break;case 3:i.shout=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.startingRage&&t.tag(1,v.Bit64).double(e.startingRage),!1!==e.useRecklessness&&t.tag(2,v.Varint).bool(e.useRecklessness),0!==e.shout&&t.tag(3,v.Varint).int32(e.shout);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const bt=new class extends X{constructor(){super("proto.ProtectionWarrior",[{no:1,name:"rotation",kind:"message",T:()=>It},{no:2,name:"talents",kind:"message",T:()=>ft},{no:3,name:"options",kind:"message",T:()=>Tt}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=It.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ft.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Tt.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&It.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ft.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Tt.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const It=new class extends X{constructor(){super("proto.ProtectionWarrior.Rotation",[{no:1,name:"demo_shout_choice",kind:"enum",T:()=>["proto.ProtectionWarrior.Rotation.DemoShoutChoice",dt]},{no:2,name:"thunder_clap_choice",kind:"enum",T:()=>["proto.ProtectionWarrior.Rotation.ThunderClapChoice",mt]},{no:3,name:"custom_rotation",kind:"message",T:()=>He},{no:4,name:"hs_rage_threshold",kind:"scalar",T:1},{no:5,name:"prio_sslam_on_shield_block",kind:"scalar",T:8}])}create(e){const t={demoShoutChoice:0,thunderClapChoice:0,hsRageThreshold:0,prioSslamOnShieldBlock:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.demoShoutChoice=e.int32();break;case 2:i.thunderClapChoice=e.int32();break;case 3:i.customRotation=He.internalBinaryRead(e,e.uint32(),a,i.customRotation);break;case 4:i.hsRageThreshold=e.double();break;case 5:i.prioSslamOnShieldBlock=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.demoShoutChoice&&t.tag(1,v.Varint).int32(e.demoShoutChoice),0!==e.thunderClapChoice&&t.tag(2,v.Varint).int32(e.thunderClapChoice),e.customRotation&&He.internalBinaryWrite(e.customRotation,t.tag(3,v.LengthDelimited).fork(),a).join(),0!==e.hsRageThreshold&&t.tag(4,v.Bit64).double(e.hsRageThreshold),!1!==e.prioSslamOnShieldBlock&&t.tag(5,v.Varint).bool(e.prioSslamOnShieldBlock);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Tt=new class extends X{constructor(){super("proto.ProtectionWarrior.Options",[{no:1,name:"starting_rage",kind:"scalar",T:1},{no:4,name:"shout",kind:"enum",T:()=>["proto.WarriorShout",ut]},{no:5,name:"precast_shout",kind:"scalar",T:8},{no:6,name:"precast_shout_t2",kind:"scalar",T:8},{no:7,name:"precast_shout_sapphire",kind:"scalar",T:8}])}create(e){const t={startingRage:0,shout:0,precastShout:!1,precastShoutT2:!1,precastShoutSapphire:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.startingRage=e.double();break;case 4:i.shout=e.int32();break;case 5:i.precastShout=e.bool();break;case 6:i.precastShoutT2=e.bool();break;case 7:i.precastShoutSapphire=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.startingRage&&t.tag(1,v.Bit64).double(e.startingRage),0!==e.shout&&t.tag(4,v.Varint).int32(e.shout),!1!==e.precastShout&&t.tag(5,v.Varint).bool(e.precastShout),!1!==e.precastShoutT2&&t.tag(6,v.Varint).bool(e.precastShoutT2),!1!==e.precastShoutSapphire&&t.tag(7,v.Varint).bool(e.precastShoutSapphire);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var xt=(e=>(e[e.Manual=0]="Manual",e[e.Automatic=1]="Automatic",e))(xt||{}),St=(e=>(e[e.Affliction=0]="Affliction",e[e.Demonology=1]="Demonology",e[e.Destruction=2]="Destruction",e))(St||{}),vt=(e=>(e[e.UnknownSpell=0]="UnknownSpell",e[e.ShadowBolt=1]="ShadowBolt",e[e.Incinerate=2]="Incinerate",e[e.Seed=3]="Seed",e))(vt||{}),_t=(e=>(e[e.NoCurse=0]="NoCurse",e[e.Elements=1]="Elements",e[e.Weakness=2]="Weakness",e[e.Doom=3]="Doom",e[e.Agony=4]="Agony",e[e.Tongues=5]="Tongues",e))(_t||{}),Ot=(e=>(e[e.NoSecondaryDot=0]="NoSecondaryDot",e[e.Immolate=1]="Immolate",e[e.UnstableAffliction=2]="UnstableAffliction",e))(Ot||{}),Pt=(e=>(e[e.NoSpecSpell=0]="NoSpecSpell",e[e.ChaosBolt=1]="ChaosBolt",e[e.Haunt=2]="Haunt",e))(Pt||{}),Gt=(e=>(e[e.NoSummon=0]="NoSummon",e[e.Imp=1]="Imp",e[e.Voidwalker=2]="Voidwalker",e[e.Succubus=3]="Succubus",e[e.Felhunter=4]="Felhunter",e[e.Felguard=5]="Felguard",e))(Gt||{}),Rt=(e=>(e[e.NoArmor=0]="NoArmor",e[e.FelArmor=1]="FelArmor",e[e.DemonArmor=2]="DemonArmor",e))(Rt||{}),Bt=(e=>(e[e.NoWeaponImbue=0]="NoWeaponImbue",e[e.GrandSpellstone=1]="GrandSpellstone",e[e.GrandFirestone=2]="GrandFirestone",e))(Bt||{}),Nt=(e=>(e[e.WarlockMajorGlyphNone=0]="WarlockMajorGlyphNone",e[e.GlyphOfChaosBolt=45781]="GlyphOfChaosBolt",e[e.GlyphOfConflagrate=42454]="GlyphOfConflagrate",e[e.GlyphOfCorruption=42455]="GlyphOfCorruption",e[e.GlyphOfCurseOfAgony=42456]="GlyphOfCurseOfAgony",e[e.GlyphOfDeathCoil=42457]="GlyphOfDeathCoil",e[e.GlyphOfDemonicCircle=45782]="GlyphOfDemonicCircle",e[e.GlyphOfFear=42458]="GlyphOfFear",e[e.GlyphOfFelguard=42459]="GlyphOfFelguard",e[e.GlyphOfFelhunter=42460]="GlyphOfFelhunter",e[e.GlyphOfHaunt=45779]="GlyphOfHaunt",e[e.GlyphOfHealthFunnel=42461]="GlyphOfHealthFunnel",e[e.GlyphOfHealthstone=42462]="GlyphOfHealthstone",e[e.GlyphOfHowlOfTerror=42463]="GlyphOfHowlOfTerror",e[e.GlyphOfImmolate=42464]="GlyphOfImmolate",e[e.GlyphOfImp=42465]="GlyphOfImp",e[e.GlyphOfIncinerate=42453]="GlyphOfIncinerate",e[e.GlyphOfLifeTap=45785]="GlyphOfLifeTap",e[e.GlyphOfMetamorphosis=45780]="GlyphOfMetamorphosis",e[e.GlyphOfQuickDecay=50077]="GlyphOfQuickDecay",e[e.GlyphOfSearingPain=42466]="GlyphOfSearingPain",e[e.GlyphOfShadowBolt=42467]="GlyphOfShadowBolt",e[e.GlyphOfShadowburn=42468]="GlyphOfShadowburn",e[e.GlyphOfShadowflame=45783]="GlyphOfShadowflame",e[e.GlyphOfSiphonLife=42469]="GlyphOfSiphonLife",e[e.GlyphOfSoulLink=45789]="GlyphOfSoulLink",e[e.GlyphOfSoulstone=42470]="GlyphOfSoulstone",e[e.GlyphOfSuccubus=42471]="GlyphOfSuccubus",e[e.GlyphOfUnstableAffliction=42472]="GlyphOfUnstableAffliction",e[e.GlyphOfVoidwalker=42473]="GlyphOfVoidwalker",e))(Nt||{}),Ft=(e=>(e[e.WarlockMinorGlyphNone=0]="WarlockMinorGlyphNone",e[e.GlyphOfCurseOfExhausion=43392]="GlyphOfCurseOfExhausion",e[e.GlyphOfDrainSoul=43390]="GlyphOfDrainSoul",e[e.GlyphOfEnslaveDemon=43393]="GlyphOfEnslaveDemon",e[e.GlyphOfKilrogg=43391]="GlyphOfKilrogg",e[e.GlyphOfSouls=43394]="GlyphOfSouls",e[e.GlyphOfUnendingBreath=43389]="GlyphOfUnendingBreath",e))(Ft||{});const Wt=new class extends X{constructor(){super("proto.WarlockTalents",[{no:1,name:"improved_curse_of_agony",kind:"scalar",T:5},{no:2,name:"suppression",kind:"scalar",T:5},{no:3,name:"improved_corruption",kind:"scalar",T:5},{no:4,name:"improved_curse_of_weakness",kind:"scalar",T:5},{no:5,name:"improved_drain_soul",kind:"scalar",T:5},{no:6,name:"improved_life_tap",kind:"scalar",T:5},{no:7,name:"soul_siphon",kind:"scalar",T:5},{no:8,name:"improved_fear",kind:"scalar",T:5},{no:9,name:"fel_concentration",kind:"scalar",T:5},{no:10,name:"amplify_curse",kind:"scalar",T:8},{no:11,name:"grim_reach",kind:"scalar",T:5},{no:12,name:"nightfall",kind:"scalar",T:5},{no:13,name:"empowered_corruption",kind:"scalar",T:5},{no:14,name:"shadow_embrace",kind:"scalar",T:5},{no:15,name:"siphon_life",kind:"scalar",T:8},{no:16,name:"curse_of_exhaustion",kind:"scalar",T:8},{no:17,name:"improved_felhunter",kind:"scalar",T:5},{no:18,name:"shadow_mastery",kind:"scalar",T:5},{no:19,name:"eradication",kind:"scalar",T:5},{no:20,name:"contagion",kind:"scalar",T:5},{no:21,name:"dark_pact",kind:"scalar",T:8},{no:22,name:"improved_howl_of_terror",kind:"scalar",T:5},{no:23,name:"malediction",kind:"scalar",T:5},{no:24,name:"deaths_embrace",kind:"scalar",T:5},{no:25,name:"unstable_affliction",kind:"scalar",T:8},{no:26,name:"pandemic",kind:"scalar",T:8},{no:27,name:"everlasting_affliction",kind:"scalar",T:5},{no:28,name:"haunt",kind:"scalar",T:8},{no:29,name:"improved_healthstone",kind:"scalar",T:5},{no:30,name:"improved_imp",kind:"scalar",T:5},{no:31,name:"demonic_embrace",kind:"scalar",T:5},{no:32,name:"fel_synergy",kind:"scalar",T:5},{no:33,name:"improved_health_funnel",kind:"scalar",T:5},{no:34,name:"demonic_brutality",kind:"scalar",T:5},{no:35,name:"fel_vitality",kind:"scalar",T:5},{no:36,name:"improved_sayaad",kind:"scalar",T:5},{no:37,name:"soul_link",kind:"scalar",T:8},{no:38,name:"fel_domination",kind:"scalar",T:8},{no:39,name:"demonic_aegis",kind:"scalar",T:5},{no:40,name:"unholy_power",kind:"scalar",T:5},{no:41,name:"master_summoner",kind:"scalar",T:5},{no:42,name:"mana_feed",kind:"scalar",T:8},{no:43,name:"master_conjuror",kind:"scalar",T:5},{no:44,name:"master_demonologist",kind:"scalar",T:5},{no:45,name:"molten_core",kind:"scalar",T:5},{no:46,name:"demonic_resilience",kind:"scalar",T:5},{no:47,name:"demonic_empowerment",kind:"scalar",T:8},{no:48,name:"demonic_knowledge",kind:"scalar",T:5},{no:49,name:"demonic_tactics",kind:"scalar",T:5},{no:50,name:"decimation",kind:"scalar",T:5},{no:51,name:"improved_demonic_tactics",kind:"scalar",T:5},{no:52,name:"summon_felguard",kind:"scalar",T:8},{no:53,name:"nemesis",kind:"scalar",T:5},{no:54,name:"demonic_pact",kind:"scalar",T:5},{no:55,name:"metamorphosis",kind:"scalar",T:8},{no:56,name:"improved_shadow_bolt",kind:"scalar",T:5},{no:57,name:"bane",kind:"scalar",T:5},{no:58,name:"aftermath",kind:"scalar",T:5},{no:59,name:"molten_skin",kind:"scalar",T:5},{no:60,name:"cataclysm",kind:"scalar",T:5},{no:61,name:"demonic_power",kind:"scalar",T:5},{no:62,name:"shadowburn",kind:"scalar",T:8},{no:63,name:"ruin",kind:"scalar",T:5},{no:64,name:"intensity",kind:"scalar",T:5},{no:65,name:"destructive_reach",kind:"scalar",T:5},{no:66,name:"improved_searing_pain",kind:"scalar",T:5},{no:67,name:"backlash",kind:"scalar",T:5},{no:68,name:"improved_immolate",kind:"scalar",T:5},{no:69,name:"devastation",kind:"scalar",T:8},{no:70,name:"nether_protection",kind:"scalar",T:5},{no:71,name:"emberstorm",kind:"scalar",T:5},{no:72,name:"conflagrate",kind:"scalar",T:8},{no:73,name:"soul_leech",kind:"scalar",T:5},{no:74,name:"pyroclasm",kind:"scalar",T:5},{no:75,name:"shadow_and_flame",kind:"scalar",T:5},{no:76,name:"improved_soul_leech",kind:"scalar",T:5},{no:77,name:"backdraft",kind:"scalar",T:5},{no:78,name:"shadowfury",kind:"scalar",T:8},{no:79,name:"empowered_imp",kind:"scalar",T:5},{no:80,name:"fire_and_brimstone",kind:"scalar",T:5},{no:81,name:"chaos_bolt",kind:"scalar",T:8}])}create(e){const t={improvedCurseOfAgony:0,suppression:0,improvedCorruption:0,improvedCurseOfWeakness:0,improvedDrainSoul:0,improvedLifeTap:0,soulSiphon:0,improvedFear:0,felConcentration:0,amplifyCurse:!1,grimReach:0,nightfall:0,empoweredCorruption:0,shadowEmbrace:0,siphonLife:!1,curseOfExhaustion:!1,improvedFelhunter:0,shadowMastery:0,eradication:0,contagion:0,darkPact:!1,improvedHowlOfTerror:0,malediction:0,deathsEmbrace:0,unstableAffliction:!1,pandemic:!1,everlastingAffliction:0,haunt:!1,improvedHealthstone:0,improvedImp:0,demonicEmbrace:0,felSynergy:0,improvedHealthFunnel:0,demonicBrutality:0,felVitality:0,improvedSayaad:0,soulLink:!1,felDomination:!1,demonicAegis:0,unholyPower:0,masterSummoner:0,manaFeed:!1,masterConjuror:0,masterDemonologist:0,moltenCore:0,demonicResilience:0,demonicEmpowerment:!1,demonicKnowledge:0,demonicTactics:0,decimation:0,improvedDemonicTactics:0,summonFelguard:!1,nemesis:0,demonicPact:0,metamorphosis:!1,improvedShadowBolt:0,bane:0,aftermath:0,moltenSkin:0,cataclysm:0,demonicPower:0,shadowburn:!1,ruin:0,intensity:0,destructiveReach:0,improvedSearingPain:0,backlash:0,improvedImmolate:0,devastation:!1,netherProtection:0,emberstorm:0,conflagrate:!1,soulLeech:0,pyroclasm:0,shadowAndFlame:0,improvedSoulLeech:0,backdraft:0,shadowfury:!1,empoweredImp:0,fireAndBrimstone:0,chaosBolt:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.improvedCurseOfAgony=e.int32();break;case 2:i.suppression=e.int32();break;case 3:i.improvedCorruption=e.int32();break;case 4:i.improvedCurseOfWeakness=e.int32();break;case 5:i.improvedDrainSoul=e.int32();break;case 6:i.improvedLifeTap=e.int32();break;case 7:i.soulSiphon=e.int32();break;case 8:i.improvedFear=e.int32();break;case 9:i.felConcentration=e.int32();break;case 10:i.amplifyCurse=e.bool();break;case 11:i.grimReach=e.int32();break;case 12:i.nightfall=e.int32();break;case 13:i.empoweredCorruption=e.int32();break;case 14:i.shadowEmbrace=e.int32();break;case 15:i.siphonLife=e.bool();break;case 16:i.curseOfExhaustion=e.bool();break;case 17:i.improvedFelhunter=e.int32();break;case 18:i.shadowMastery=e.int32();break;case 19:i.eradication=e.int32();break;case 20:i.contagion=e.int32();break;case 21:i.darkPact=e.bool();break;case 22:i.improvedHowlOfTerror=e.int32();break;case 23:i.malediction=e.int32();break;case 24:i.deathsEmbrace=e.int32();break;case 25:i.unstableAffliction=e.bool();break;case 26:i.pandemic=e.bool();break;case 27:i.everlastingAffliction=e.int32();break;case 28:i.haunt=e.bool();break;case 29:i.improvedHealthstone=e.int32();break;case 30:i.improvedImp=e.int32();break;case 31:i.demonicEmbrace=e.int32();break;case 32:i.felSynergy=e.int32();break;case 33:i.improvedHealthFunnel=e.int32();break;case 34:i.demonicBrutality=e.int32();break;case 35:i.felVitality=e.int32();break;case 36:i.improvedSayaad=e.int32();break;case 37:i.soulLink=e.bool();break;case 38:i.felDomination=e.bool();break;case 39:i.demonicAegis=e.int32();break;case 40:i.unholyPower=e.int32();break;case 41:i.masterSummoner=e.int32();break;case 42:i.manaFeed=e.bool();break;case 43:i.masterConjuror=e.int32();break;case 44:i.masterDemonologist=e.int32();break;case 45:i.moltenCore=e.int32();break;case 46:i.demonicResilience=e.int32();break;case 47:i.demonicEmpowerment=e.bool();break;case 48:i.demonicKnowledge=e.int32();break;case 49:i.demonicTactics=e.int32();break;case 50:i.decimation=e.int32();break;case 51:i.improvedDemonicTactics=e.int32();break;case 52:i.summonFelguard=e.bool();break;case 53:i.nemesis=e.int32();break;case 54:i.demonicPact=e.int32();break;case 55:i.metamorphosis=e.bool();break;case 56:i.improvedShadowBolt=e.int32();break;case 57:i.bane=e.int32();break;case 58:i.aftermath=e.int32();break;case 59:i.moltenSkin=e.int32();break;case 60:i.cataclysm=e.int32();break;case 61:i.demonicPower=e.int32();break;case 62:i.shadowburn=e.bool();break;case 63:i.ruin=e.int32();break;case 64:i.intensity=e.int32();break;case 65:i.destructiveReach=e.int32();break;case 66:i.improvedSearingPain=e.int32();break;case 67:i.backlash=e.int32();break;case 68:i.improvedImmolate=e.int32();break;case 69:i.devastation=e.bool();break;case 70:i.netherProtection=e.int32();break;case 71:i.emberstorm=e.int32();break;case 72:i.conflagrate=e.bool();break;case 73:i.soulLeech=e.int32();break;case 74:i.pyroclasm=e.int32();break;case 75:i.shadowAndFlame=e.int32();break;case 76:i.improvedSoulLeech=e.int32();break;case 77:i.backdraft=e.int32();break;case 78:i.shadowfury=e.bool();break;case 79:i.empoweredImp=e.int32();break;case 80:i.fireAndBrimstone=e.int32();break;case 81:i.chaosBolt=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.improvedCurseOfAgony&&t.tag(1,v.Varint).int32(e.improvedCurseOfAgony),0!==e.suppression&&t.tag(2,v.Varint).int32(e.suppression),0!==e.improvedCorruption&&t.tag(3,v.Varint).int32(e.improvedCorruption),0!==e.improvedCurseOfWeakness&&t.tag(4,v.Varint).int32(e.improvedCurseOfWeakness),0!==e.improvedDrainSoul&&t.tag(5,v.Varint).int32(e.improvedDrainSoul),0!==e.improvedLifeTap&&t.tag(6,v.Varint).int32(e.improvedLifeTap),0!==e.soulSiphon&&t.tag(7,v.Varint).int32(e.soulSiphon),0!==e.improvedFear&&t.tag(8,v.Varint).int32(e.improvedFear),0!==e.felConcentration&&t.tag(9,v.Varint).int32(e.felConcentration),!1!==e.amplifyCurse&&t.tag(10,v.Varint).bool(e.amplifyCurse),0!==e.grimReach&&t.tag(11,v.Varint).int32(e.grimReach),0!==e.nightfall&&t.tag(12,v.Varint).int32(e.nightfall),0!==e.empoweredCorruption&&t.tag(13,v.Varint).int32(e.empoweredCorruption),0!==e.shadowEmbrace&&t.tag(14,v.Varint).int32(e.shadowEmbrace),!1!==e.siphonLife&&t.tag(15,v.Varint).bool(e.siphonLife),!1!==e.curseOfExhaustion&&t.tag(16,v.Varint).bool(e.curseOfExhaustion),0!==e.improvedFelhunter&&t.tag(17,v.Varint).int32(e.improvedFelhunter),0!==e.shadowMastery&&t.tag(18,v.Varint).int32(e.shadowMastery),0!==e.eradication&&t.tag(19,v.Varint).int32(e.eradication),0!==e.contagion&&t.tag(20,v.Varint).int32(e.contagion),!1!==e.darkPact&&t.tag(21,v.Varint).bool(e.darkPact),0!==e.improvedHowlOfTerror&&t.tag(22,v.Varint).int32(e.improvedHowlOfTerror),0!==e.malediction&&t.tag(23,v.Varint).int32(e.malediction),0!==e.deathsEmbrace&&t.tag(24,v.Varint).int32(e.deathsEmbrace),!1!==e.unstableAffliction&&t.tag(25,v.Varint).bool(e.unstableAffliction),!1!==e.pandemic&&t.tag(26,v.Varint).bool(e.pandemic),0!==e.everlastingAffliction&&t.tag(27,v.Varint).int32(e.everlastingAffliction),!1!==e.haunt&&t.tag(28,v.Varint).bool(e.haunt),0!==e.improvedHealthstone&&t.tag(29,v.Varint).int32(e.improvedHealthstone),0!==e.improvedImp&&t.tag(30,v.Varint).int32(e.improvedImp),0!==e.demonicEmbrace&&t.tag(31,v.Varint).int32(e.demonicEmbrace),0!==e.felSynergy&&t.tag(32,v.Varint).int32(e.felSynergy),0!==e.improvedHealthFunnel&&t.tag(33,v.Varint).int32(e.improvedHealthFunnel),0!==e.demonicBrutality&&t.tag(34,v.Varint).int32(e.demonicBrutality),0!==e.felVitality&&t.tag(35,v.Varint).int32(e.felVitality),0!==e.improvedSayaad&&t.tag(36,v.Varint).int32(e.improvedSayaad),!1!==e.soulLink&&t.tag(37,v.Varint).bool(e.soulLink),!1!==e.felDomination&&t.tag(38,v.Varint).bool(e.felDomination),0!==e.demonicAegis&&t.tag(39,v.Varint).int32(e.demonicAegis),0!==e.unholyPower&&t.tag(40,v.Varint).int32(e.unholyPower),0!==e.masterSummoner&&t.tag(41,v.Varint).int32(e.masterSummoner),!1!==e.manaFeed&&t.tag(42,v.Varint).bool(e.manaFeed),0!==e.masterConjuror&&t.tag(43,v.Varint).int32(e.masterConjuror),0!==e.masterDemonologist&&t.tag(44,v.Varint).int32(e.masterDemonologist),0!==e.moltenCore&&t.tag(45,v.Varint).int32(e.moltenCore),0!==e.demonicResilience&&t.tag(46,v.Varint).int32(e.demonicResilience),!1!==e.demonicEmpowerment&&t.tag(47,v.Varint).bool(e.demonicEmpowerment),0!==e.demonicKnowledge&&t.tag(48,v.Varint).int32(e.demonicKnowledge),0!==e.demonicTactics&&t.tag(49,v.Varint).int32(e.demonicTactics),0!==e.decimation&&t.tag(50,v.Varint).int32(e.decimation),0!==e.improvedDemonicTactics&&t.tag(51,v.Varint).int32(e.improvedDemonicTactics),!1!==e.summonFelguard&&t.tag(52,v.Varint).bool(e.summonFelguard),0!==e.nemesis&&t.tag(53,v.Varint).int32(e.nemesis),0!==e.demonicPact&&t.tag(54,v.Varint).int32(e.demonicPact),!1!==e.metamorphosis&&t.tag(55,v.Varint).bool(e.metamorphosis),0!==e.improvedShadowBolt&&t.tag(56,v.Varint).int32(e.improvedShadowBolt),0!==e.bane&&t.tag(57,v.Varint).int32(e.bane),0!==e.aftermath&&t.tag(58,v.Varint).int32(e.aftermath),0!==e.moltenSkin&&t.tag(59,v.Varint).int32(e.moltenSkin),0!==e.cataclysm&&t.tag(60,v.Varint).int32(e.cataclysm),0!==e.demonicPower&&t.tag(61,v.Varint).int32(e.demonicPower),!1!==e.shadowburn&&t.tag(62,v.Varint).bool(e.shadowburn),0!==e.ruin&&t.tag(63,v.Varint).int32(e.ruin),0!==e.intensity&&t.tag(64,v.Varint).int32(e.intensity),0!==e.destructiveReach&&t.tag(65,v.Varint).int32(e.destructiveReach),0!==e.improvedSearingPain&&t.tag(66,v.Varint).int32(e.improvedSearingPain),0!==e.backlash&&t.tag(67,v.Varint).int32(e.backlash),0!==e.improvedImmolate&&t.tag(68,v.Varint).int32(e.improvedImmolate),!1!==e.devastation&&t.tag(69,v.Varint).bool(e.devastation),0!==e.netherProtection&&t.tag(70,v.Varint).int32(e.netherProtection),0!==e.emberstorm&&t.tag(71,v.Varint).int32(e.emberstorm),!1!==e.conflagrate&&t.tag(72,v.Varint).bool(e.conflagrate),0!==e.soulLeech&&t.tag(73,v.Varint).int32(e.soulLeech),0!==e.pyroclasm&&t.tag(74,v.Varint).int32(e.pyroclasm),0!==e.shadowAndFlame&&t.tag(75,v.Varint).int32(e.shadowAndFlame),0!==e.improvedSoulLeech&&t.tag(76,v.Varint).int32(e.improvedSoulLeech),0!==e.backdraft&&t.tag(77,v.Varint).int32(e.backdraft),!1!==e.shadowfury&&t.tag(78,v.Varint).bool(e.shadowfury),0!==e.empoweredImp&&t.tag(79,v.Varint).int32(e.empoweredImp),0!==e.fireAndBrimstone&&t.tag(80,v.Varint).int32(e.fireAndBrimstone),!1!==e.chaosBolt&&t.tag(81,v.Varint).bool(e.chaosBolt);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Vt=new class extends X{constructor(){super("proto.Warlock",[{no:1,name:"rotation",kind:"message",T:()=>Ct},{no:2,name:"talents",kind:"message",T:()=>Wt},{no:3,name:"options",kind:"message",T:()=>Dt}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=Ct.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Wt.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Dt.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&Ct.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Wt.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Dt.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ct=new class extends X{constructor(){super("proto.Warlock.Rotation",[{no:1,name:"preset",kind:"enum",T:()=>["proto.Warlock.Rotation.Preset",xt]},{no:2,name:"curse",kind:"enum",T:()=>["proto.Warlock.Rotation.Curse",_t]},{no:3,name:"primary_spell",kind:"enum",T:()=>["proto.Warlock.Rotation.PrimarySpell",vt]},{no:4,name:"secondary_dot",kind:"enum",T:()=>["proto.Warlock.Rotation.SecondaryDot",Ot]},{no:5,name:"corruption",kind:"scalar",T:8},{no:6,name:"detonate_seed",kind:"scalar",T:8},{no:7,name:"spec_spell",kind:"enum",T:()=>["proto.Warlock.Rotation.SpecSpell",Pt]},{no:8,name:"type",kind:"enum",T:()=>["proto.Warlock.Rotation.Type",St]}])}create(e){const t={preset:0,curse:0,primarySpell:0,secondaryDot:0,corruption:!1,detonateSeed:!1,specSpell:0,type:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.preset=e.int32();break;case 2:i.curse=e.int32();break;case 3:i.primarySpell=e.int32();break;case 4:i.secondaryDot=e.int32();break;case 5:i.corruption=e.bool();break;case 6:i.detonateSeed=e.bool();break;case 7:i.specSpell=e.int32();break;case 8:i.type=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.preset&&t.tag(1,v.Varint).int32(e.preset),0!==e.curse&&t.tag(2,v.Varint).int32(e.curse),0!==e.primarySpell&&t.tag(3,v.Varint).int32(e.primarySpell),0!==e.secondaryDot&&t.tag(4,v.Varint).int32(e.secondaryDot),!1!==e.corruption&&t.tag(5,v.Varint).bool(e.corruption),!1!==e.detonateSeed&&t.tag(6,v.Varint).bool(e.detonateSeed),0!==e.specSpell&&t.tag(7,v.Varint).int32(e.specSpell),0!==e.type&&t.tag(8,v.Varint).int32(e.type);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Dt=new class extends X{constructor(){super("proto.Warlock.Options",[{no:1,name:"armor",kind:"enum",T:()=>["proto.Warlock.Options.Armor",Rt]},{no:2,name:"summon",kind:"enum",T:()=>["proto.Warlock.Options.Summon",Gt]},{no:3,name:"weaponImbue",kind:"enum",T:()=>["proto.Warlock.Options.WeaponImbue",Bt]}])}create(e){const t={armor:0,summon:0,weaponImbue:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.armor=e.int32();break;case 2:i.summon=e.int32();break;case 3:i.weaponImbue=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.armor&&t.tag(1,v.Varint).int32(e.armor),0!==e.summon&&t.tag(2,v.Varint).int32(e.summon),0!==e.weaponImbue&&t.tag(3,v.Varint).int32(e.weaponImbue);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var Et=(e=>(e[e.Unknown=0]="Unknown",e[e.Adaptive=1]="Adaptive",e[e.Manual=2]="Manual",e))(Et||{}),jt=(e=>(e[e.Unknown=0]="Unknown",e[e.Priority=1]="Priority",e[e.Custom=2]="Custom",e))(jt||{}),Ut=(e=>(e[e.None=0]="None",e[e.Earth=1]="Earth",e[e.Frost=2]="Frost",e))(Ut||{}),Mt=(e=>(e[e.ShamanMajorGlyphNone=0]="ShamanMajorGlyphNone",e[e.GlyphOfChainHeal=41517]="GlyphOfChainHeal",e[e.GlyphOfChainLightning=41518]="GlyphOfChainLightning",e[e.GlyphOfEarthShield=45775]="GlyphOfEarthShield",e[e.GlyphOfEarthlivingWeapon=41527]="GlyphOfEarthlivingWeapon",e[e.GlyphOfElementalMastery=41552]="GlyphOfElementalMastery",e[e.GlyphOfFeralSpirit=45771]="GlyphOfFeralSpirit",e[e.GlyphOfFireElementalTotem=41529]="GlyphOfFireElementalTotem",e[e.GlyphOfFireNova=41530]="GlyphOfFireNova",e[e.GlyphOfFlameShock=41531]="GlyphOfFlameShock",e[e.GlyphOfFlametongueWeapon=41532]="GlyphOfFlametongueWeapon",e[e.GlyphOfFrostShock=41547]="GlyphOfFrostShock",e[e.GlyphOfHealingStreamTotem=41533]="GlyphOfHealingStreamTotem",e[e.GlyphOfHealingWave=41534]="GlyphOfHealingWave",e[e.GlyphOfHex=45777]="GlyphOfHex",e[e.GlyphOfLava=41524]="GlyphOfLava",e[e.GlyphOfLavaLash=41540]="GlyphOfLavaLash",e[e.GlyphOfLesserHealingWave=41535]="GlyphOfLesserHealingWave",e[e.GlyphOfLightningBolt=41536]="GlyphOfLightningBolt",e[e.GlyphOfLightningShield=41537]="GlyphOfLightningShield",e[e.GlyphOfManaTide=41538]="GlyphOfManaTide",e[e.GlyphOfRiptide=45772]="GlyphOfRiptide",e[e.GlyphOfShocking=41526]="GlyphOfShocking",e[e.GlyphOfStoneclawTotem=45778]="GlyphOfStoneclawTotem",e[e.GlyphOfStormstrike=41539]="GlyphOfStormstrike",e[e.GlyphOfThunder=45770]="GlyphOfThunder",e[e.GlyphOfTotemOfWrath=45776]="GlyphOfTotemOfWrath",e[e.GlyphOfWaterMastery=41541]="GlyphOfWaterMastery",e[e.GlyphOfWindfuryWeapon=41542]="GlyphOfWindfuryWeapon",e))(Mt||{}),At=(e=>(e[e.ShamanMinorGlyphNone=0]="ShamanMinorGlyphNone",e[e.GlyphOfAstralRecall=43381]="GlyphOfAstralRecall",e[e.GlyphOfGhostWolf=43725]="GlyphOfGhostWolf",e[e.GlyphOfRenewedLife=43385]="GlyphOfRenewedLife",e[e.GlyphOfThunderstorm=44923]="GlyphOfThunderstorm",e[e.GlyphOfWaterBreathing=43344]="GlyphOfWaterBreathing",e[e.GlyphOfWaterShield=43386]="GlyphOfWaterShield",e[e.GlyphOfWaterWalking=43388]="GlyphOfWaterWalking",e))(At||{}),Lt=(e=>(e[e.NoEarthTotem=0]="NoEarthTotem",e[e.StrengthOfEarthTotem=1]="StrengthOfEarthTotem",e[e.TremorTotem=2]="TremorTotem",e))(Lt||{}),zt=(e=>(e[e.NoAirTotem=0]="NoAirTotem",e[e.TranquilAirTotem=1]="TranquilAirTotem",e[e.WindfuryTotem=2]="WindfuryTotem",e[e.WrathOfAirTotem=3]="WrathOfAirTotem",e))(zt||{}),Ht=(e=>(e[e.NoFireTotem=0]="NoFireTotem",e[e.MagmaTotem=1]="MagmaTotem",e[e.SearingTotem=2]="SearingTotem",e[e.TotemOfWrath=3]="TotemOfWrath",e[e.FlametongueTotem=4]="FlametongueTotem",e))(Ht||{}),$t=(e=>(e[e.NoWaterTotem=0]="NoWaterTotem",e[e.ManaSpringTotem=1]="ManaSpringTotem",e))($t||{}),qt=(e=>(e[e.NoShield=0]="NoShield",e[e.WaterShield=1]="WaterShield",e[e.LightningShield=2]="LightningShield",e))(qt||{}),Jt=(e=>(e[e.NoImbue=0]="NoImbue",e[e.WindfuryWeapon=1]="WindfuryWeapon",e[e.FlametongueWeapon=2]="FlametongueWeapon",e[e.FlametongueWeaponDownrank=3]="FlametongueWeaponDownrank",e[e.FrostbrandWeapon=4]="FrostbrandWeapon",e))(Jt||{}),Kt=(e=>(e[e.NoSync=0]="NoSync",e[e.SyncMainhandOffhandSwings=1]="SyncMainhandOffhandSwings",e[e.DelayOffhandSwings=2]="DelayOffhandSwings",e))(Kt||{});const Yt=new class extends X{constructor(){super("proto.ShamanTalents",[{no:1,name:"convection",kind:"scalar",T:5},{no:2,name:"concussion",kind:"scalar",T:5},{no:3,name:"call_of_flame",kind:"scalar",T:5},{no:4,name:"elemental_warding",kind:"scalar",T:5},{no:5,name:"elemental_devastation",kind:"scalar",T:5},{no:6,name:"reverberation",kind:"scalar",T:5},{no:7,name:"elemental_focus",kind:"scalar",T:8},{no:8,name:"elemental_fury",kind:"scalar",T:5},{no:9,name:"improved_fire_nova",kind:"scalar",T:5},{no:10,name:"eye_of_the_storm",kind:"scalar",T:5},{no:11,name:"elemental_reach",kind:"scalar",T:5},{no:12,name:"call_of_thunder",kind:"scalar",T:8},{no:13,name:"unrelenting_storm",kind:"scalar",T:5},{no:14,name:"elemental_precision",kind:"scalar",T:5},{no:15,name:"lightning_mastery",kind:"scalar",T:5},{no:16,name:"elemental_mastery",kind:"scalar",T:8},{no:17,name:"storm_earth_and_fire",kind:"scalar",T:5},{no:18,name:"booming_echoes",kind:"scalar",T:5},{no:19,name:"elemental_oath",kind:"scalar",T:5},{no:20,name:"lightning_overload",kind:"scalar",T:5},{no:21,name:"astral_shift",kind:"scalar",T:5},{no:22,name:"totem_of_wrath",kind:"scalar",T:8},{no:23,name:"lava_flows",kind:"scalar",T:5},{no:24,name:"shamanism",kind:"scalar",T:5},{no:25,name:"thunderstorm",kind:"scalar",T:8},{no:26,name:"enhancing_totems",kind:"scalar",T:5},{no:27,name:"earths_grasp",kind:"scalar",T:5},{no:28,name:"ancestral_knowledge",kind:"scalar",T:5},{no:29,name:"guardian_totems",kind:"scalar",T:5},{no:30,name:"thundering_strikes",kind:"scalar",T:5},{no:31,name:"improved_ghost_wolf",kind:"scalar",T:5},{no:32,name:"improved_shields",kind:"scalar",T:5},{no:33,name:"elemental_weapons",kind:"scalar",T:5},{no:34,name:"shamanistic_focus",kind:"scalar",T:8},{no:35,name:"anticipation",kind:"scalar",T:5},{no:36,name:"flurry",kind:"scalar",T:5},{no:37,name:"toughness",kind:"scalar",T:5},{no:38,name:"improved_windfury_totem",kind:"scalar",T:5},{no:39,name:"spirit_weapons",kind:"scalar",T:8},{no:40,name:"mental_dexterity",kind:"scalar",T:5},{no:41,name:"unleashed_rage",kind:"scalar",T:5},{no:42,name:"weapon_mastery",kind:"scalar",T:5},{no:43,name:"frozen_power",kind:"scalar",T:5},{no:44,name:"dual_wield_specialization",kind:"scalar",T:5},{no:45,name:"dual_wield",kind:"scalar",T:8},{no:46,name:"stormstrike",kind:"scalar",T:8},{no:47,name:"static_shock",kind:"scalar",T:5},{no:48,name:"lava_lash",kind:"scalar",T:8},{no:49,name:"improved_stormstrike",kind:"scalar",T:5},{no:50,name:"mental_quickness",kind:"scalar",T:5},{no:51,name:"shamanistic_rage",kind:"scalar",T:8},{no:52,name:"earthen_power",kind:"scalar",T:5},{no:53,name:"maelstrom_weapon",kind:"scalar",T:5},{no:54,name:"feral_spirit",kind:"scalar",T:8},{no:55,name:"improved_healing_wave",kind:"scalar",T:5},{no:56,name:"totemic_focus",kind:"scalar",T:5},{no:57,name:"improved_reincarnation",kind:"scalar",T:5},{no:58,name:"healing_grace",kind:"scalar",T:5},{no:59,name:"tidal_focus",kind:"scalar",T:5},{no:60,name:"improved_water_shield",kind:"scalar",T:5},{no:61,name:"healing_focus",kind:"scalar",T:5},{no:62,name:"tidal_force",kind:"scalar",T:8},{no:63,name:"ancestral_healing",kind:"scalar",T:5},{no:64,name:"restorative_totems",kind:"scalar",T:5},{no:65,name:"tidal_mastery",kind:"scalar",T:5},{no:66,name:"healing_way",kind:"scalar",T:5},{no:67,name:"natures_swiftness",kind:"scalar",T:8},{no:68,name:"focused_mind",kind:"scalar",T:5},{no:69,name:"purification",kind:"scalar",T:5},{no:70,name:"natures_guardian",kind:"scalar",T:5},{no:71,name:"mana_tide_totem",kind:"scalar",T:8},{no:72,name:"cleanse_spirit",kind:"scalar",T:8},{no:73,name:"blessing_of_the_eternals",kind:"scalar",T:5},{no:74,name:"improved_chain_heal",kind:"scalar",T:5},{no:75,name:"natures_blessing",kind:"scalar",T:5},{no:76,name:"ancestral_awakening",kind:"scalar",T:5},{no:77,name:"earth_shield",kind:"scalar",T:8},{no:78,name:"improved_earth_shield",kind:"scalar",T:5},{no:79,name:"tidal_waves",kind:"scalar",T:5},{no:80,name:"riptide",kind:"scalar",T:8}])}create(e){const t={convection:0,concussion:0,callOfFlame:0,elementalWarding:0,elementalDevastation:0,reverberation:0,elementalFocus:!1,elementalFury:0,improvedFireNova:0,eyeOfTheStorm:0,elementalReach:0,callOfThunder:!1,unrelentingStorm:0,elementalPrecision:0,lightningMastery:0,elementalMastery:!1,stormEarthAndFire:0,boomingEchoes:0,elementalOath:0,lightningOverload:0,astralShift:0,totemOfWrath:!1,lavaFlows:0,shamanism:0,thunderstorm:!1,enhancingTotems:0,earthsGrasp:0,ancestralKnowledge:0,guardianTotems:0,thunderingStrikes:0,improvedGhostWolf:0,improvedShields:0,elementalWeapons:0,shamanisticFocus:!1,anticipation:0,flurry:0,toughness:0,improvedWindfuryTotem:0,spiritWeapons:!1,mentalDexterity:0,unleashedRage:0,weaponMastery:0,frozenPower:0,dualWieldSpecialization:0,dualWield:!1,stormstrike:!1,staticShock:0,lavaLash:!1,improvedStormstrike:0,mentalQuickness:0,shamanisticRage:!1,earthenPower:0,maelstromWeapon:0,feralSpirit:!1,improvedHealingWave:0,totemicFocus:0,improvedReincarnation:0,healingGrace:0,tidalFocus:0,improvedWaterShield:0,healingFocus:0,tidalForce:!1,ancestralHealing:0,restorativeTotems:0,tidalMastery:0,healingWay:0,naturesSwiftness:!1,focusedMind:0,purification:0,naturesGuardian:0,manaTideTotem:!1,cleanseSpirit:!1,blessingOfTheEternals:0,improvedChainHeal:0,naturesBlessing:0,ancestralAwakening:0,earthShield:!1,improvedEarthShield:0,tidalWaves:0,riptide:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.convection=e.int32();break;case 2:i.concussion=e.int32();break;case 3:i.callOfFlame=e.int32();break;case 4:i.elementalWarding=e.int32();break;case 5:i.elementalDevastation=e.int32();break;case 6:i.reverberation=e.int32();break;case 7:i.elementalFocus=e.bool();break;case 8:i.elementalFury=e.int32();break;case 9:i.improvedFireNova=e.int32();break;case 10:i.eyeOfTheStorm=e.int32();break;case 11:i.elementalReach=e.int32();break;case 12:i.callOfThunder=e.bool();break;case 13:i.unrelentingStorm=e.int32();break;case 14:i.elementalPrecision=e.int32();break;case 15:i.lightningMastery=e.int32();break;case 16:i.elementalMastery=e.bool();break;case 17:i.stormEarthAndFire=e.int32();break;case 18:i.boomingEchoes=e.int32();break;case 19:i.elementalOath=e.int32();break;case 20:i.lightningOverload=e.int32();break;case 21:i.astralShift=e.int32();break;case 22:i.totemOfWrath=e.bool();break;case 23:i.lavaFlows=e.int32();break;case 24:i.shamanism=e.int32();break;case 25:i.thunderstorm=e.bool();break;case 26:i.enhancingTotems=e.int32();break;case 27:i.earthsGrasp=e.int32();break;case 28:i.ancestralKnowledge=e.int32();break;case 29:i.guardianTotems=e.int32();break;case 30:i.thunderingStrikes=e.int32();break;case 31:i.improvedGhostWolf=e.int32();break;case 32:i.improvedShields=e.int32();break;case 33:i.elementalWeapons=e.int32();break;case 34:i.shamanisticFocus=e.bool();break;case 35:i.anticipation=e.int32();break;case 36:i.flurry=e.int32();break;case 37:i.toughness=e.int32();break;case 38:i.improvedWindfuryTotem=e.int32();break;case 39:i.spiritWeapons=e.bool();break;case 40:i.mentalDexterity=e.int32();break;case 41:i.unleashedRage=e.int32();break;case 42:i.weaponMastery=e.int32();break;case 43:i.frozenPower=e.int32();break;case 44:i.dualWieldSpecialization=e.int32();break;case 45:i.dualWield=e.bool();break;case 46:i.stormstrike=e.bool();break;case 47:i.staticShock=e.int32();break;case 48:i.lavaLash=e.bool();break;case 49:i.improvedStormstrike=e.int32();break;case 50:i.mentalQuickness=e.int32();break;case 51:i.shamanisticRage=e.bool();break;case 52:i.earthenPower=e.int32();break;case 53:i.maelstromWeapon=e.int32();break;case 54:i.feralSpirit=e.bool();break;case 55:i.improvedHealingWave=e.int32();break;case 56:i.totemicFocus=e.int32();break;case 57:i.improvedReincarnation=e.int32();break;case 58:i.healingGrace=e.int32();break;case 59:i.tidalFocus=e.int32();break;case 60:i.improvedWaterShield=e.int32();break;case 61:i.healingFocus=e.int32();break;case 62:i.tidalForce=e.bool();break;case 63:i.ancestralHealing=e.int32();break;case 64:i.restorativeTotems=e.int32();break;case 65:i.tidalMastery=e.int32();break;case 66:i.healingWay=e.int32();break;case 67:i.naturesSwiftness=e.bool();break;case 68:i.focusedMind=e.int32();break;case 69:i.purification=e.int32();break;case 70:i.naturesGuardian=e.int32();break;case 71:i.manaTideTotem=e.bool();break;case 72:i.cleanseSpirit=e.bool();break;case 73:i.blessingOfTheEternals=e.int32();break;case 74:i.improvedChainHeal=e.int32();break;case 75:i.naturesBlessing=e.int32();break;case 76:i.ancestralAwakening=e.int32();break;case 77:i.earthShield=e.bool();break;case 78:i.improvedEarthShield=e.int32();break;case 79:i.tidalWaves=e.int32();break;case 80:i.riptide=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.convection&&t.tag(1,v.Varint).int32(e.convection),0!==e.concussion&&t.tag(2,v.Varint).int32(e.concussion),0!==e.callOfFlame&&t.tag(3,v.Varint).int32(e.callOfFlame),0!==e.elementalWarding&&t.tag(4,v.Varint).int32(e.elementalWarding),0!==e.elementalDevastation&&t.tag(5,v.Varint).int32(e.elementalDevastation),0!==e.reverberation&&t.tag(6,v.Varint).int32(e.reverberation),!1!==e.elementalFocus&&t.tag(7,v.Varint).bool(e.elementalFocus),0!==e.elementalFury&&t.tag(8,v.Varint).int32(e.elementalFury),0!==e.improvedFireNova&&t.tag(9,v.Varint).int32(e.improvedFireNova),0!==e.eyeOfTheStorm&&t.tag(10,v.Varint).int32(e.eyeOfTheStorm),0!==e.elementalReach&&t.tag(11,v.Varint).int32(e.elementalReach),!1!==e.callOfThunder&&t.tag(12,v.Varint).bool(e.callOfThunder),0!==e.unrelentingStorm&&t.tag(13,v.Varint).int32(e.unrelentingStorm),0!==e.elementalPrecision&&t.tag(14,v.Varint).int32(e.elementalPrecision),0!==e.lightningMastery&&t.tag(15,v.Varint).int32(e.lightningMastery),!1!==e.elementalMastery&&t.tag(16,v.Varint).bool(e.elementalMastery),0!==e.stormEarthAndFire&&t.tag(17,v.Varint).int32(e.stormEarthAndFire),0!==e.boomingEchoes&&t.tag(18,v.Varint).int32(e.boomingEchoes),0!==e.elementalOath&&t.tag(19,v.Varint).int32(e.elementalOath),0!==e.lightningOverload&&t.tag(20,v.Varint).int32(e.lightningOverload),0!==e.astralShift&&t.tag(21,v.Varint).int32(e.astralShift),!1!==e.totemOfWrath&&t.tag(22,v.Varint).bool(e.totemOfWrath),0!==e.lavaFlows&&t.tag(23,v.Varint).int32(e.lavaFlows),0!==e.shamanism&&t.tag(24,v.Varint).int32(e.shamanism),!1!==e.thunderstorm&&t.tag(25,v.Varint).bool(e.thunderstorm),0!==e.enhancingTotems&&t.tag(26,v.Varint).int32(e.enhancingTotems),0!==e.earthsGrasp&&t.tag(27,v.Varint).int32(e.earthsGrasp),0!==e.ancestralKnowledge&&t.tag(28,v.Varint).int32(e.ancestralKnowledge),0!==e.guardianTotems&&t.tag(29,v.Varint).int32(e.guardianTotems),0!==e.thunderingStrikes&&t.tag(30,v.Varint).int32(e.thunderingStrikes),0!==e.improvedGhostWolf&&t.tag(31,v.Varint).int32(e.improvedGhostWolf),0!==e.improvedShields&&t.tag(32,v.Varint).int32(e.improvedShields),0!==e.elementalWeapons&&t.tag(33,v.Varint).int32(e.elementalWeapons),!1!==e.shamanisticFocus&&t.tag(34,v.Varint).bool(e.shamanisticFocus),0!==e.anticipation&&t.tag(35,v.Varint).int32(e.anticipation),0!==e.flurry&&t.tag(36,v.Varint).int32(e.flurry),0!==e.toughness&&t.tag(37,v.Varint).int32(e.toughness),0!==e.improvedWindfuryTotem&&t.tag(38,v.Varint).int32(e.improvedWindfuryTotem),!1!==e.spiritWeapons&&t.tag(39,v.Varint).bool(e.spiritWeapons),0!==e.mentalDexterity&&t.tag(40,v.Varint).int32(e.mentalDexterity),0!==e.unleashedRage&&t.tag(41,v.Varint).int32(e.unleashedRage),0!==e.weaponMastery&&t.tag(42,v.Varint).int32(e.weaponMastery),0!==e.frozenPower&&t.tag(43,v.Varint).int32(e.frozenPower),0!==e.dualWieldSpecialization&&t.tag(44,v.Varint).int32(e.dualWieldSpecialization),!1!==e.dualWield&&t.tag(45,v.Varint).bool(e.dualWield),!1!==e.stormstrike&&t.tag(46,v.Varint).bool(e.stormstrike),0!==e.staticShock&&t.tag(47,v.Varint).int32(e.staticShock),!1!==e.lavaLash&&t.tag(48,v.Varint).bool(e.lavaLash),0!==e.improvedStormstrike&&t.tag(49,v.Varint).int32(e.improvedStormstrike),0!==e.mentalQuickness&&t.tag(50,v.Varint).int32(e.mentalQuickness),!1!==e.shamanisticRage&&t.tag(51,v.Varint).bool(e.shamanisticRage),0!==e.earthenPower&&t.tag(52,v.Varint).int32(e.earthenPower),0!==e.maelstromWeapon&&t.tag(53,v.Varint).int32(e.maelstromWeapon),!1!==e.feralSpirit&&t.tag(54,v.Varint).bool(e.feralSpirit),0!==e.improvedHealingWave&&t.tag(55,v.Varint).int32(e.improvedHealingWave),0!==e.totemicFocus&&t.tag(56,v.Varint).int32(e.totemicFocus),0!==e.improvedReincarnation&&t.tag(57,v.Varint).int32(e.improvedReincarnation),0!==e.healingGrace&&t.tag(58,v.Varint).int32(e.healingGrace),0!==e.tidalFocus&&t.tag(59,v.Varint).int32(e.tidalFocus),0!==e.improvedWaterShield&&t.tag(60,v.Varint).int32(e.improvedWaterShield),0!==e.healingFocus&&t.tag(61,v.Varint).int32(e.healingFocus),!1!==e.tidalForce&&t.tag(62,v.Varint).bool(e.tidalForce),0!==e.ancestralHealing&&t.tag(63,v.Varint).int32(e.ancestralHealing),0!==e.restorativeTotems&&t.tag(64,v.Varint).int32(e.restorativeTotems),0!==e.tidalMastery&&t.tag(65,v.Varint).int32(e.tidalMastery),0!==e.healingWay&&t.tag(66,v.Varint).int32(e.healingWay),!1!==e.naturesSwiftness&&t.tag(67,v.Varint).bool(e.naturesSwiftness),0!==e.focusedMind&&t.tag(68,v.Varint).int32(e.focusedMind),0!==e.purification&&t.tag(69,v.Varint).int32(e.purification),0!==e.naturesGuardian&&t.tag(70,v.Varint).int32(e.naturesGuardian),!1!==e.manaTideTotem&&t.tag(71,v.Varint).bool(e.manaTideTotem),!1!==e.cleanseSpirit&&t.tag(72,v.Varint).bool(e.cleanseSpirit),0!==e.blessingOfTheEternals&&t.tag(73,v.Varint).int32(e.blessingOfTheEternals),0!==e.improvedChainHeal&&t.tag(74,v.Varint).int32(e.improvedChainHeal),0!==e.naturesBlessing&&t.tag(75,v.Varint).int32(e.naturesBlessing),0!==e.ancestralAwakening&&t.tag(76,v.Varint).int32(e.ancestralAwakening),!1!==e.earthShield&&t.tag(77,v.Varint).bool(e.earthShield),0!==e.improvedEarthShield&&t.tag(78,v.Varint).int32(e.improvedEarthShield),0!==e.tidalWaves&&t.tag(79,v.Varint).int32(e.tidalWaves),!1!==e.riptide&&t.tag(80,v.Varint).bool(e.riptide);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Qt=new class extends X{constructor(){super("proto.ShamanTotems",[{no:1,name:"earth",kind:"enum",T:()=>["proto.EarthTotem",Lt]},{no:2,name:"air",kind:"enum",T:()=>["proto.AirTotem",zt]},{no:3,name:"fire",kind:"enum",T:()=>["proto.FireTotem",Ht]},{no:4,name:"water",kind:"enum",T:()=>["proto.WaterTotem",$t]},{no:5,name:"use_mana_tide",kind:"scalar",T:8},{no:6,name:"use_fire_elemental",kind:"scalar",T:8},{no:7,name:"recall_fire_elemental_on_oom",kind:"scalar",T:8},{no:8,name:"recall_totems",kind:"scalar",T:8}])}create(e){const t={earth:0,air:0,fire:0,water:0,useManaTide:!1,useFireElemental:!1,recallFireElementalOnOom:!1,recallTotems:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.earth=e.int32();break;case 2:i.air=e.int32();break;case 3:i.fire=e.int32();break;case 4:i.water=e.int32();break;case 5:i.useManaTide=e.bool();break;case 6:i.useFireElemental=e.bool();break;case 7:i.recallFireElementalOnOom=e.bool();break;case 8:i.recallTotems=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.earth&&t.tag(1,v.Varint).int32(e.earth),0!==e.air&&t.tag(2,v.Varint).int32(e.air),0!==e.fire&&t.tag(3,v.Varint).int32(e.fire),0!==e.water&&t.tag(4,v.Varint).int32(e.water),!1!==e.useManaTide&&t.tag(5,v.Varint).bool(e.useManaTide),!1!==e.useFireElemental&&t.tag(6,v.Varint).bool(e.useFireElemental),!1!==e.recallFireElementalOnOom&&t.tag(7,v.Varint).bool(e.recallFireElementalOnOom),!1!==e.recallTotems&&t.tag(8,v.Varint).bool(e.recallTotems);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Xt=new class extends X{constructor(){super("proto.ElementalShaman",[{no:1,name:"rotation",kind:"message",T:()=>Zt},{no:2,name:"talents",kind:"message",T:()=>Yt},{no:3,name:"options",kind:"message",T:()=>ea}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=Zt.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Yt.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=ea.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&Zt.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Yt.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&ea.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Zt=new class extends X{constructor(){super("proto.ElementalShaman.Rotation",[{no:3,name:"totems",kind:"message",T:()=>Qt},{no:1,name:"type",kind:"enum",T:()=>["proto.ElementalShaman.Rotation.RotationType",Et]},{no:2,name:"in_thunderstorm_range",kind:"scalar",T:8},{no:4,name:"use_fire_nova",kind:"scalar",T:8},{no:9,name:"fn_min_mana_per",kind:"scalar",T:1},{no:5,name:"use_chain_lightning",kind:"scalar",T:8},{no:11,name:"use_cl_only_gap",kind:"scalar",T:8},{no:10,name:"cl_min_mana_per",kind:"scalar",T:1},{no:6,name:"overwrite_flameshock",kind:"scalar",T:8},{no:7,name:"always_crit_lvb",kind:"scalar",T:8},{no:8,name:"use_thunderstorm",kind:"scalar",T:8}])}create(e){const t={type:0,inThunderstormRange:!1,useFireNova:!1,fnMinManaPer:0,useChainLightning:!1,useClOnlyGap:!1,clMinManaPer:0,overwriteFlameshock:!1,alwaysCritLvb:!1,useThunderstorm:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 3:i.totems=Qt.internalBinaryRead(e,e.uint32(),a,i.totems);break;case 1:i.type=e.int32();break;case 2:i.inThunderstormRange=e.bool();break;case 4:i.useFireNova=e.bool();break;case 9:i.fnMinManaPer=e.double();break;case 5:i.useChainLightning=e.bool();break;case 11:i.useClOnlyGap=e.bool();break;case 10:i.clMinManaPer=e.double();break;case 6:i.overwriteFlameshock=e.bool();break;case 7:i.alwaysCritLvb=e.bool();break;case 8:i.useThunderstorm=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.totems&&Qt.internalBinaryWrite(e.totems,t.tag(3,v.LengthDelimited).fork(),a).join(),0!==e.type&&t.tag(1,v.Varint).int32(e.type),!1!==e.inThunderstormRange&&t.tag(2,v.Varint).bool(e.inThunderstormRange),!1!==e.useFireNova&&t.tag(4,v.Varint).bool(e.useFireNova),0!==e.fnMinManaPer&&t.tag(9,v.Bit64).double(e.fnMinManaPer),!1!==e.useChainLightning&&t.tag(5,v.Varint).bool(e.useChainLightning),!1!==e.useClOnlyGap&&t.tag(11,v.Varint).bool(e.useClOnlyGap),0!==e.clMinManaPer&&t.tag(10,v.Bit64).double(e.clMinManaPer),!1!==e.overwriteFlameshock&&t.tag(6,v.Varint).bool(e.overwriteFlameshock),!1!==e.alwaysCritLvb&&t.tag(7,v.Varint).bool(e.alwaysCritLvb),!1!==e.useThunderstorm&&t.tag(8,v.Varint).bool(e.useThunderstorm);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ea=new class extends X{constructor(){super("proto.ElementalShaman.Options",[{no:1,name:"shield",kind:"enum",T:()=>["proto.ShamanShield",qt]},{no:2,name:"bloodlust",kind:"scalar",T:8}])}create(e){const t={shield:0,bloodlust:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.shield=e.int32();break;case 2:i.bloodlust=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.shield&&t.tag(1,v.Varint).int32(e.shield),!1!==e.bloodlust&&t.tag(2,v.Varint).bool(e.bloodlust);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ta=new class extends X{constructor(){super("proto.EnhancementShaman",[{no:1,name:"rotation",kind:"message",T:()=>aa},{no:2,name:"talents",kind:"message",T:()=>Yt},{no:3,name:"options",kind:"message",T:()=>na}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=aa.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Yt.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=na.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&aa.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Yt.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&na.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const aa=new class extends X{constructor(){super("proto.EnhancementShaman.Rotation",[{no:1,name:"totems",kind:"message",T:()=>Qt},{no:2,name:"rotation_type",kind:"enum",T:()=>["proto.EnhancementShaman.Rotation.RotationType",jt]},{no:3,name:"lavaburst_weave",kind:"scalar",T:8},{no:4,name:"lightningbolt_weave",kind:"scalar",T:8},{no:5,name:"maelstromweapon_min_stack",kind:"scalar",T:5},{no:6,name:"weave_reaction_time",kind:"scalar",T:1},{no:7,name:"firenova_mana_threshold",kind:"scalar",T:1},{no:8,name:"shamanistic_rage_mana_threshold",kind:"scalar",T:1},{no:9,name:"weave_flame_shock",kind:"scalar",T:8},{no:10,name:"primary_shock",kind:"enum",T:()=>["proto.EnhancementShaman.Rotation.PrimaryShock",Ut]}])}create(e){const t={rotationType:0,lavaburstWeave:!1,lightningboltWeave:!1,maelstromweaponMinStack:0,weaveReactionTime:0,firenovaManaThreshold:0,shamanisticRageManaThreshold:0,weaveFlameShock:!1,primaryShock:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.totems=Qt.internalBinaryRead(e,e.uint32(),a,i.totems);break;case 2:i.rotationType=e.int32();break;case 3:i.lavaburstWeave=e.bool();break;case 4:i.lightningboltWeave=e.bool();break;case 5:i.maelstromweaponMinStack=e.int32();break;case 6:i.weaveReactionTime=e.double();break;case 7:i.firenovaManaThreshold=e.double();break;case 8:i.shamanisticRageManaThreshold=e.double();break;case 9:i.weaveFlameShock=e.bool();break;case 10:i.primaryShock=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.totems&&Qt.internalBinaryWrite(e.totems,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.rotationType&&t.tag(2,v.Varint).int32(e.rotationType),!1!==e.lavaburstWeave&&t.tag(3,v.Varint).bool(e.lavaburstWeave),!1!==e.lightningboltWeave&&t.tag(4,v.Varint).bool(e.lightningboltWeave),0!==e.maelstromweaponMinStack&&t.tag(5,v.Varint).int32(e.maelstromweaponMinStack),0!==e.weaveReactionTime&&t.tag(6,v.Bit64).double(e.weaveReactionTime),0!==e.firenovaManaThreshold&&t.tag(7,v.Bit64).double(e.firenovaManaThreshold),0!==e.shamanisticRageManaThreshold&&t.tag(8,v.Bit64).double(e.shamanisticRageManaThreshold),!1!==e.weaveFlameShock&&t.tag(9,v.Varint).bool(e.weaveFlameShock),0!==e.primaryShock&&t.tag(10,v.Varint).int32(e.primaryShock);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const na=new class extends X{constructor(){super("proto.EnhancementShaman.Options",[{no:1,name:"shield",kind:"enum",T:()=>["proto.ShamanShield",qt]},{no:2,name:"bloodlust",kind:"scalar",T:8},{no:3,name:"sync_type",kind:"enum",T:()=>["proto.ShamanSyncType",Kt]},{no:4,name:"imbue_mh",kind:"enum",T:()=>["proto.ShamanImbue",Jt]},{no:5,name:"imbue_oh",kind:"enum",T:()=>["proto.ShamanImbue",Jt]}])}create(e){const t={shield:0,bloodlust:!1,syncType:0,imbueMh:0,imbueOh:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.shield=e.int32();break;case 2:i.bloodlust=e.bool();break;case 3:i.syncType=e.int32();break;case 4:i.imbueMh=e.int32();break;case 5:i.imbueOh=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.shield&&t.tag(1,v.Varint).int32(e.shield),!1!==e.bloodlust&&t.tag(2,v.Varint).bool(e.bloodlust),0!==e.syncType&&t.tag(3,v.Varint).int32(e.syncType),0!==e.imbueMh&&t.tag(4,v.Varint).int32(e.imbueMh),0!==e.imbueOh&&t.tag(5,v.Varint).int32(e.imbueOh);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var ia=(e=>(e[e.Never=0]="Never",e[e.Once=1]="Once",e[e.Maintain=2]="Maintain",e[e.Build=3]="Build",e[e.Fill=4]="Fill",e[e.FrequencyUnknown=5]="FrequencyUnknown",e))(ia||{}),oa=(e=>(e[e.RuptureEviscerate=0]="RuptureEviscerate",e[e.EviscerateRupture=1]="EviscerateRupture",e[e.CombatPriorityUnknown=2]="CombatPriorityUnknown",e))(oa||{}),ra=(e=>(e[e.EnvenomRupture=0]="EnvenomRupture",e[e.RuptureEnvenom=1]="RuptureEnvenom",e[e.AssassinationPriorityUnknown=2]="AssassinationPriorityUnknown",e))(ra||{}),sa=(e=>(e[e.NoPoison=0]="NoPoison",e[e.InstantPoison=1]="InstantPoison",e[e.DeadlyPoison=2]="DeadlyPoison",e[e.WoundPoison=3]="WoundPoison",e))(sa||{}),la=(e=>(e[e.RogueMajorGlyphNone=0]="RogueMajorGlyphNone",e[e.GlyphOfAdrenalineRush=42954]="GlyphOfAdrenalineRush",e[e.GlyphOfAmbush=42955]="GlyphOfAmbush",e[e.GlyphOfBackstab=42956]="GlyphOfBackstab",e[e.GlyphOfBladeFlurry=42957]="GlyphOfBladeFlurry",e[e.GlyphOfCloakOfShadows=45769]="GlyphOfCloakOfShadows",e[e.GlyphOfCripplingPoison=42958]="GlyphOfCripplingPoison",e[e.GlyphOfDeadlyThrow=42959]="GlyphOfDeadlyThrow",e[e.GlyphOfEvasion=42960]="GlyphOfEvasion",e[e.GlyphOfEviscerate=42961]="GlyphOfEviscerate",e[e.GlyphOfExposeArmor=42962]="GlyphOfExposeArmor",e[e.GlyphOfFanOfKnives=45766]="GlyphOfFanOfKnives",e[e.GlyphOfFeint=42963]="GlyphOfFeint",e[e.GlyphOfGarrote=42964]="GlyphOfGarrote",e[e.GlyphOfGhostlyStrike=42965]="GlyphOfGhostlyStrike",e[e.GlyphOfGouge=42966]="GlyphOfGouge",e[e.GlyphOfHemorrhage=42967]="GlyphOfHemorrhage",e[e.GlyphOfHungerForBlood=45761]="GlyphOfHungerForBlood",e[e.GlyphOfKillingSpree=45762]="GlyphOfKillingSpree",e[e.GlyphOfMutilate=45768]="GlyphOfMutilate",e[e.GlyphOfPreparation=42968]="GlyphOfPreparation",e[e.GlyphOfRupture=42969]="GlyphOfRupture",e[e.GlyphOfSap=42970]="GlyphOfSap",e[e.GlyphOfShadowDance=45764]="GlyphOfShadowDance",e[e.GlyphOfSinisterStrike=42972]="GlyphOfSinisterStrike",e[e.GlyphOfSliceAndDice=42973]="GlyphOfSliceAndDice",e[e.GlyphOfSprint=42974]="GlyphOfSprint",e[e.GlyphOfTricksOfTheTrade=45767]="GlyphOfTricksOfTheTrade",e[e.GlyphOfVigor=42971]="GlyphOfVigor",e))(la||{}),ca=(e=>(e[e.RogueMinorGlyphNone=0]="RogueMinorGlyphNone",e[e.GlyphOfBlurredSpeed=43379]="GlyphOfBlurredSpeed",e[e.GlyphOfDistract=43376]="GlyphOfDistract",e[e.GlyphOfPickLock=43377]="GlyphOfPickLock",e[e.GlyphOfPickPocket=43343]="GlyphOfPickPocket",e[e.GlyphOfSafeFall=43378]="GlyphOfSafeFall",e[e.GlyphOfVanish=43380]="GlyphOfVanish",e))(ca||{});const da=new class extends X{constructor(){super("proto.RogueTalents",[{no:1,name:"improved_eviscerate",kind:"scalar",T:5},{no:2,name:"remorseless_attacks",kind:"scalar",T:5},{no:3,name:"malice",kind:"scalar",T:5},{no:4,name:"ruthlessness",kind:"scalar",T:5},{no:5,name:"blood_spatter",kind:"scalar",T:5},{no:6,name:"puncturing_wounds",kind:"scalar",T:5},{no:7,name:"vigor",kind:"scalar",T:8},{no:8,name:"improved_expose_armor",kind:"scalar",T:5},{no:9,name:"lethality",kind:"scalar",T:5},{no:10,name:"vile_poisons",kind:"scalar",T:5},{no:11,name:"improved_poisons",kind:"scalar",T:5},{no:12,name:"fleet_footed",kind:"scalar",T:5},{no:13,name:"cold_blood",kind:"scalar",T:8},{no:14,name:"improved_kidney_shot",kind:"scalar",T:5},{no:15,name:"quick_recovery",kind:"scalar",T:5},{no:16,name:"seal_fate",kind:"scalar",T:5},{no:17,name:"murder",kind:"scalar",T:5},{no:18,name:"deadly_brew",kind:"scalar",T:5},{no:19,name:"overkill",kind:"scalar",T:8},{no:20,name:"deadened_nerves",kind:"scalar",T:5},{no:21,name:"focused_attacks",kind:"scalar",T:5},{no:22,name:"find_weakness",kind:"scalar",T:5},{no:23,name:"master_poisoner",kind:"scalar",T:5},{no:24,name:"mutilate",kind:"scalar",T:8},{no:25,name:"turn_the_tables",kind:"scalar",T:5},{no:26,name:"cut_to_the_chase",kind:"scalar",T:5},{no:27,name:"hunger_for_blood",kind:"scalar",T:8},{no:28,name:"improved_gouge",kind:"scalar",T:5},{no:29,name:"improved_sinister_strike",kind:"scalar",T:5},{no:30,name:"dual_wield_specialization",kind:"scalar",T:5},{no:31,name:"improved_slice_and_dice",kind:"scalar",T:5},{no:32,name:"deflection",kind:"scalar",T:5},{no:33,name:"precision",kind:"scalar",T:5},{no:34,name:"endurance",kind:"scalar",T:5},{no:35,name:"riposte",kind:"scalar",T:8},{no:36,name:"close_quarters_combat",kind:"scalar",T:5},{no:37,name:"improved_kick",kind:"scalar",T:5},{no:38,name:"improved_sprint",kind:"scalar",T:5},{no:39,name:"lightning_reflexes",kind:"scalar",T:5},{no:40,name:"aggression",kind:"scalar",T:5},{no:41,name:"mace_specialization",kind:"scalar",T:5},{no:42,name:"blade_flurry",kind:"scalar",T:8},{no:43,name:"hack_and_slash",kind:"scalar",T:5},{no:44,name:"weapon_expertise",kind:"scalar",T:5},{no:45,name:"blade_twisting",kind:"scalar",T:5},{no:46,name:"vitality",kind:"scalar",T:5},{no:47,name:"adrenaline_rush",kind:"scalar",T:8},{no:48,name:"nerves_of_steel",kind:"scalar",T:5},{no:49,name:"throwing_specialization",kind:"scalar",T:5},{no:50,name:"combat_potency",kind:"scalar",T:5},{no:51,name:"unfair_advantage",kind:"scalar",T:5},{no:52,name:"surprise_attacks",kind:"scalar",T:8},{no:53,name:"savage_combat",kind:"scalar",T:5},{no:54,name:"prey_on_the_weak",kind:"scalar",T:5},{no:55,name:"killing_spree",kind:"scalar",T:8},{no:56,name:"relentless_strikes",kind:"scalar",T:5},{no:57,name:"master_of_deception",kind:"scalar",T:5},{no:58,name:"opportunity",kind:"scalar",T:5},{no:59,name:"sleight_of_hand",kind:"scalar",T:5},{no:60,name:"dirty_tricks",kind:"scalar",T:5},{no:61,name:"camouflage",kind:"scalar",T:5},{no:62,name:"elusiveness",kind:"scalar",T:5},{no:63,name:"ghostly_strike",kind:"scalar",T:8},{no:64,name:"serrated_blades",kind:"scalar",T:5},{no:65,name:"setup",kind:"scalar",T:5},{no:66,name:"initiative",kind:"scalar",T:5},{no:67,name:"improved_ambush",kind:"scalar",T:5},{no:68,name:"heightened_senses",kind:"scalar",T:5},{no:69,name:"preparation",kind:"scalar",T:8},{no:70,name:"dirty_deeds",kind:"scalar",T:5},{no:71,name:"hemorrhage",kind:"scalar",T:8},{no:72,name:"master_of_subtlety",kind:"scalar",T:5},{no:73,name:"deadliness",kind:"scalar",T:5},{no:74,name:"enveloping_shadows",kind:"scalar",T:5},{no:75,name:"premeditation",kind:"scalar",T:8},{no:76,name:"cheat_death",kind:"scalar",T:5},{no:77,name:"sinister_calling",kind:"scalar",T:5},{no:78,name:"waylay",kind:"scalar",T:5},{no:79,name:"honor_among_thieves",kind:"scalar",T:5},{no:80,name:"shadowstep",kind:"scalar",T:8},{no:81,name:"filthy_tricks",kind:"scalar",T:5},{no:82,name:"slaughter_from_the_shadows",kind:"scalar",T:5},{no:83,name:"shadow_dance",kind:"scalar",T:8}])}create(e){const t={improvedEviscerate:0,remorselessAttacks:0,malice:0,ruthlessness:0,bloodSpatter:0,puncturingWounds:0,vigor:!1,improvedExposeArmor:0,lethality:0,vilePoisons:0,improvedPoisons:0,fleetFooted:0,coldBlood:!1,improvedKidneyShot:0,quickRecovery:0,sealFate:0,murder:0,deadlyBrew:0,overkill:!1,deadenedNerves:0,focusedAttacks:0,findWeakness:0,masterPoisoner:0,mutilate:!1,turnTheTables:0,cutToTheChase:0,hungerForBlood:!1,improvedGouge:0,improvedSinisterStrike:0,dualWieldSpecialization:0,improvedSliceAndDice:0,deflection:0,precision:0,endurance:0,riposte:!1,closeQuartersCombat:0,improvedKick:0,improvedSprint:0,lightningReflexes:0,aggression:0,maceSpecialization:0,bladeFlurry:!1,hackAndSlash:0,weaponExpertise:0,bladeTwisting:0,vitality:0,adrenalineRush:!1,nervesOfSteel:0,throwingSpecialization:0,combatPotency:0,unfairAdvantage:0,surpriseAttacks:!1,savageCombat:0,preyOnTheWeak:0,killingSpree:!1,relentlessStrikes:0,masterOfDeception:0,opportunity:0,sleightOfHand:0,dirtyTricks:0,camouflage:0,elusiveness:0,ghostlyStrike:!1,serratedBlades:0,setup:0,initiative:0,improvedAmbush:0,heightenedSenses:0,preparation:!1,dirtyDeeds:0,hemorrhage:!1,masterOfSubtlety:0,deadliness:0,envelopingShadows:0,premeditation:!1,cheatDeath:0,sinisterCalling:0,waylay:0,honorAmongThieves:0,shadowstep:!1,filthyTricks:0,slaughterFromTheShadows:0,shadowDance:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.improvedEviscerate=e.int32();break;case 2:i.remorselessAttacks=e.int32();break;case 3:i.malice=e.int32();break;case 4:i.ruthlessness=e.int32();break;case 5:i.bloodSpatter=e.int32();break;case 6:i.puncturingWounds=e.int32();break;case 7:i.vigor=e.bool();break;case 8:i.improvedExposeArmor=e.int32();break;case 9:i.lethality=e.int32();break;case 10:i.vilePoisons=e.int32();break;case 11:i.improvedPoisons=e.int32();break;case 12:i.fleetFooted=e.int32();break;case 13:i.coldBlood=e.bool();break;case 14:i.improvedKidneyShot=e.int32();break;case 15:i.quickRecovery=e.int32();break;case 16:i.sealFate=e.int32();break;case 17:i.murder=e.int32();break;case 18:i.deadlyBrew=e.int32();break;case 19:i.overkill=e.bool();break;case 20:i.deadenedNerves=e.int32();break;case 21:i.focusedAttacks=e.int32();break;case 22:i.findWeakness=e.int32();break;case 23:i.masterPoisoner=e.int32();break;case 24:i.mutilate=e.bool();break;case 25:i.turnTheTables=e.int32();break;case 26:i.cutToTheChase=e.int32();break;case 27:i.hungerForBlood=e.bool();break;case 28:i.improvedGouge=e.int32();break;case 29:i.improvedSinisterStrike=e.int32();break;case 30:i.dualWieldSpecialization=e.int32();break;case 31:i.improvedSliceAndDice=e.int32();break;case 32:i.deflection=e.int32();break;case 33:i.precision=e.int32();break;case 34:i.endurance=e.int32();break;case 35:i.riposte=e.bool();break;case 36:i.closeQuartersCombat=e.int32();break;case 37:i.improvedKick=e.int32();break;case 38:i.improvedSprint=e.int32();break;case 39:i.lightningReflexes=e.int32();break;case 40:i.aggression=e.int32();break;case 41:i.maceSpecialization=e.int32();break;case 42:i.bladeFlurry=e.bool();break;case 43:i.hackAndSlash=e.int32();break;case 44:i.weaponExpertise=e.int32();break;case 45:i.bladeTwisting=e.int32();break;case 46:i.vitality=e.int32();break;case 47:i.adrenalineRush=e.bool();break;case 48:i.nervesOfSteel=e.int32();break;case 49:i.throwingSpecialization=e.int32();break;case 50:i.combatPotency=e.int32();break;case 51:i.unfairAdvantage=e.int32();break;case 52:i.surpriseAttacks=e.bool();break;case 53:i.savageCombat=e.int32();break;case 54:i.preyOnTheWeak=e.int32();break;case 55:i.killingSpree=e.bool();break;case 56:i.relentlessStrikes=e.int32();break;case 57:i.masterOfDeception=e.int32();break;case 58:i.opportunity=e.int32();break;case 59:i.sleightOfHand=e.int32();break;case 60:i.dirtyTricks=e.int32();break;case 61:i.camouflage=e.int32();break;case 62:i.elusiveness=e.int32();break;case 63:i.ghostlyStrike=e.bool();break;case 64:i.serratedBlades=e.int32();break;case 65:i.setup=e.int32();break;case 66:i.initiative=e.int32();break;case 67:i.improvedAmbush=e.int32();break;case 68:i.heightenedSenses=e.int32();break;case 69:i.preparation=e.bool();break;case 70:i.dirtyDeeds=e.int32();break;case 71:i.hemorrhage=e.bool();break;case 72:i.masterOfSubtlety=e.int32();break;case 73:i.deadliness=e.int32();break;case 74:i.envelopingShadows=e.int32();break;case 75:i.premeditation=e.bool();break;case 76:i.cheatDeath=e.int32();break;case 77:i.sinisterCalling=e.int32();break;case 78:i.waylay=e.int32();break;case 79:i.honorAmongThieves=e.int32();break;case 80:i.shadowstep=e.bool();break;case 81:i.filthyTricks=e.int32();break;case 82:i.slaughterFromTheShadows=e.int32();break;case 83:i.shadowDance=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.improvedEviscerate&&t.tag(1,v.Varint).int32(e.improvedEviscerate),0!==e.remorselessAttacks&&t.tag(2,v.Varint).int32(e.remorselessAttacks),0!==e.malice&&t.tag(3,v.Varint).int32(e.malice),0!==e.ruthlessness&&t.tag(4,v.Varint).int32(e.ruthlessness),0!==e.bloodSpatter&&t.tag(5,v.Varint).int32(e.bloodSpatter),0!==e.puncturingWounds&&t.tag(6,v.Varint).int32(e.puncturingWounds),!1!==e.vigor&&t.tag(7,v.Varint).bool(e.vigor),0!==e.improvedExposeArmor&&t.tag(8,v.Varint).int32(e.improvedExposeArmor),0!==e.lethality&&t.tag(9,v.Varint).int32(e.lethality),0!==e.vilePoisons&&t.tag(10,v.Varint).int32(e.vilePoisons),0!==e.improvedPoisons&&t.tag(11,v.Varint).int32(e.improvedPoisons),0!==e.fleetFooted&&t.tag(12,v.Varint).int32(e.fleetFooted),!1!==e.coldBlood&&t.tag(13,v.Varint).bool(e.coldBlood),0!==e.improvedKidneyShot&&t.tag(14,v.Varint).int32(e.improvedKidneyShot),0!==e.quickRecovery&&t.tag(15,v.Varint).int32(e.quickRecovery),0!==e.sealFate&&t.tag(16,v.Varint).int32(e.sealFate),0!==e.murder&&t.tag(17,v.Varint).int32(e.murder),0!==e.deadlyBrew&&t.tag(18,v.Varint).int32(e.deadlyBrew),!1!==e.overkill&&t.tag(19,v.Varint).bool(e.overkill),0!==e.deadenedNerves&&t.tag(20,v.Varint).int32(e.deadenedNerves),0!==e.focusedAttacks&&t.tag(21,v.Varint).int32(e.focusedAttacks),0!==e.findWeakness&&t.tag(22,v.Varint).int32(e.findWeakness),0!==e.masterPoisoner&&t.tag(23,v.Varint).int32(e.masterPoisoner),!1!==e.mutilate&&t.tag(24,v.Varint).bool(e.mutilate),0!==e.turnTheTables&&t.tag(25,v.Varint).int32(e.turnTheTables),0!==e.cutToTheChase&&t.tag(26,v.Varint).int32(e.cutToTheChase),!1!==e.hungerForBlood&&t.tag(27,v.Varint).bool(e.hungerForBlood),0!==e.improvedGouge&&t.tag(28,v.Varint).int32(e.improvedGouge),0!==e.improvedSinisterStrike&&t.tag(29,v.Varint).int32(e.improvedSinisterStrike),0!==e.dualWieldSpecialization&&t.tag(30,v.Varint).int32(e.dualWieldSpecialization),0!==e.improvedSliceAndDice&&t.tag(31,v.Varint).int32(e.improvedSliceAndDice),0!==e.deflection&&t.tag(32,v.Varint).int32(e.deflection),0!==e.precision&&t.tag(33,v.Varint).int32(e.precision),0!==e.endurance&&t.tag(34,v.Varint).int32(e.endurance),!1!==e.riposte&&t.tag(35,v.Varint).bool(e.riposte),0!==e.closeQuartersCombat&&t.tag(36,v.Varint).int32(e.closeQuartersCombat),0!==e.improvedKick&&t.tag(37,v.Varint).int32(e.improvedKick),0!==e.improvedSprint&&t.tag(38,v.Varint).int32(e.improvedSprint),0!==e.lightningReflexes&&t.tag(39,v.Varint).int32(e.lightningReflexes),0!==e.aggression&&t.tag(40,v.Varint).int32(e.aggression),0!==e.maceSpecialization&&t.tag(41,v.Varint).int32(e.maceSpecialization),!1!==e.bladeFlurry&&t.tag(42,v.Varint).bool(e.bladeFlurry),0!==e.hackAndSlash&&t.tag(43,v.Varint).int32(e.hackAndSlash),0!==e.weaponExpertise&&t.tag(44,v.Varint).int32(e.weaponExpertise),0!==e.bladeTwisting&&t.tag(45,v.Varint).int32(e.bladeTwisting),0!==e.vitality&&t.tag(46,v.Varint).int32(e.vitality),!1!==e.adrenalineRush&&t.tag(47,v.Varint).bool(e.adrenalineRush),0!==e.nervesOfSteel&&t.tag(48,v.Varint).int32(e.nervesOfSteel),0!==e.throwingSpecialization&&t.tag(49,v.Varint).int32(e.throwingSpecialization),0!==e.combatPotency&&t.tag(50,v.Varint).int32(e.combatPotency),0!==e.unfairAdvantage&&t.tag(51,v.Varint).int32(e.unfairAdvantage),!1!==e.surpriseAttacks&&t.tag(52,v.Varint).bool(e.surpriseAttacks),0!==e.savageCombat&&t.tag(53,v.Varint).int32(e.savageCombat),0!==e.preyOnTheWeak&&t.tag(54,v.Varint).int32(e.preyOnTheWeak),!1!==e.killingSpree&&t.tag(55,v.Varint).bool(e.killingSpree),0!==e.relentlessStrikes&&t.tag(56,v.Varint).int32(e.relentlessStrikes),0!==e.masterOfDeception&&t.tag(57,v.Varint).int32(e.masterOfDeception),0!==e.opportunity&&t.tag(58,v.Varint).int32(e.opportunity),0!==e.sleightOfHand&&t.tag(59,v.Varint).int32(e.sleightOfHand),0!==e.dirtyTricks&&t.tag(60,v.Varint).int32(e.dirtyTricks),0!==e.camouflage&&t.tag(61,v.Varint).int32(e.camouflage),0!==e.elusiveness&&t.tag(62,v.Varint).int32(e.elusiveness),!1!==e.ghostlyStrike&&t.tag(63,v.Varint).bool(e.ghostlyStrike),0!==e.serratedBlades&&t.tag(64,v.Varint).int32(e.serratedBlades),0!==e.setup&&t.tag(65,v.Varint).int32(e.setup),0!==e.initiative&&t.tag(66,v.Varint).int32(e.initiative),0!==e.improvedAmbush&&t.tag(67,v.Varint).int32(e.improvedAmbush),0!==e.heightenedSenses&&t.tag(68,v.Varint).int32(e.heightenedSenses),!1!==e.preparation&&t.tag(69,v.Varint).bool(e.preparation),0!==e.dirtyDeeds&&t.tag(70,v.Varint).int32(e.dirtyDeeds),!1!==e.hemorrhage&&t.tag(71,v.Varint).bool(e.hemorrhage),0!==e.masterOfSubtlety&&t.tag(72,v.Varint).int32(e.masterOfSubtlety),0!==e.deadliness&&t.tag(73,v.Varint).int32(e.deadliness),0!==e.envelopingShadows&&t.tag(74,v.Varint).int32(e.envelopingShadows),!1!==e.premeditation&&t.tag(75,v.Varint).bool(e.premeditation),0!==e.cheatDeath&&t.tag(76,v.Varint).int32(e.cheatDeath),0!==e.sinisterCalling&&t.tag(77,v.Varint).int32(e.sinisterCalling),0!==e.waylay&&t.tag(78,v.Varint).int32(e.waylay),0!==e.honorAmongThieves&&t.tag(79,v.Varint).int32(e.honorAmongThieves),!1!==e.shadowstep&&t.tag(80,v.Varint).bool(e.shadowstep),0!==e.filthyTricks&&t.tag(81,v.Varint).int32(e.filthyTricks),0!==e.slaughterFromTheShadows&&t.tag(82,v.Varint).int32(e.slaughterFromTheShadows),!1!==e.shadowDance&&t.tag(83,v.Varint).bool(e.shadowDance);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ma=new class extends X{constructor(){super("proto.Rogue",[{no:1,name:"rotation",kind:"message",T:()=>pa},{no:2,name:"talents",kind:"message",T:()=>da},{no:3,name:"options",kind:"message",T:()=>ha}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=pa.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=da.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=ha.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&pa.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&da.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&ha.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const pa=new class extends X{constructor(){super("proto.Rogue.Rotation",[{no:1,name:"expose_armor_frequency",kind:"enum",T:()=>["proto.Rogue.Rotation.Frequency",ia]},{no:2,name:"minimum_combo_points_expose_armor",kind:"scalar",T:5},{no:3,name:"tricks_of_the_trade_frequency",kind:"enum",T:()=>["proto.Rogue.Rotation.Frequency",ia]},{no:4,name:"combat_finisher_priority",kind:"enum",T:()=>["proto.Rogue.Rotation.CombatPriority",oa]},{no:5,name:"assassination_finisher_priority",kind:"enum",T:()=>["proto.Rogue.Rotation.AssassinationPriority",ra]},{no:6,name:"minimum_combo_points_primary_finisher",kind:"scalar",T:5},{no:7,name:"minimum_combo_points_secondary_finisher",kind:"scalar",T:5},{no:8,name:"MultiTargetSliceFrequency",kind:"enum",jsonName:"MultiTargetSliceFrequency",T:()=>["proto.Rogue.Rotation.Frequency",ia]},{no:9,name:"minimum_combo_points_multi_target_slice",kind:"scalar",T:5}])}create(e){const t={exposeArmorFrequency:0,minimumComboPointsExposeArmor:0,tricksOfTheTradeFrequency:0,combatFinisherPriority:0,assassinationFinisherPriority:0,minimumComboPointsPrimaryFinisher:0,minimumComboPointsSecondaryFinisher:0,multiTargetSliceFrequency:0,minimumComboPointsMultiTargetSlice:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.exposeArmorFrequency=e.int32();break;case 2:i.minimumComboPointsExposeArmor=e.int32();break;case 3:i.tricksOfTheTradeFrequency=e.int32();break;case 4:i.combatFinisherPriority=e.int32();break;case 5:i.assassinationFinisherPriority=e.int32();break;case 6:i.minimumComboPointsPrimaryFinisher=e.int32();break;case 7:i.minimumComboPointsSecondaryFinisher=e.int32();break;case 8:i.multiTargetSliceFrequency=e.int32();break;case 9:i.minimumComboPointsMultiTargetSlice=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.exposeArmorFrequency&&t.tag(1,v.Varint).int32(e.exposeArmorFrequency),0!==e.minimumComboPointsExposeArmor&&t.tag(2,v.Varint).int32(e.minimumComboPointsExposeArmor),0!==e.tricksOfTheTradeFrequency&&t.tag(3,v.Varint).int32(e.tricksOfTheTradeFrequency),0!==e.combatFinisherPriority&&t.tag(4,v.Varint).int32(e.combatFinisherPriority),0!==e.assassinationFinisherPriority&&t.tag(5,v.Varint).int32(e.assassinationFinisherPriority),0!==e.minimumComboPointsPrimaryFinisher&&t.tag(6,v.Varint).int32(e.minimumComboPointsPrimaryFinisher),0!==e.minimumComboPointsSecondaryFinisher&&t.tag(7,v.Varint).int32(e.minimumComboPointsSecondaryFinisher),0!==e.multiTargetSliceFrequency&&t.tag(8,v.Varint).int32(e.multiTargetSliceFrequency),0!==e.minimumComboPointsMultiTargetSlice&&t.tag(9,v.Varint).int32(e.minimumComboPointsMultiTargetSlice);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ha=new class extends X{constructor(){super("proto.Rogue.Options",[{no:1,name:"tricks_of_the_trade_target",kind:"message",T:()=>je},{no:2,name:"mh_imbue",kind:"enum",T:()=>["proto.Rogue.Options.PoisonImbue",sa]},{no:3,name:"oh_imbue",kind:"enum",T:()=>["proto.Rogue.Options.PoisonImbue",sa]}])}create(e){const t={mhImbue:0,ohImbue:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.tricksOfTheTradeTarget=je.internalBinaryRead(e,e.uint32(),a,i.tricksOfTheTradeTarget);break;case 2:i.mhImbue=e.int32();break;case 3:i.ohImbue=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.tricksOfTheTradeTarget&&je.internalBinaryWrite(e.tricksOfTheTradeTarget,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.mhImbue&&t.tag(2,v.Varint).int32(e.mhImbue),0!==e.ohImbue&&t.tag(3,v.Varint).int32(e.ohImbue);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var ga=(e=>(e[e.Unknown=0]="Unknown",e[e.Basic=1]="Basic",e[e.Clipping=2]="Clipping",e[e.Ideal=3]="Ideal",e[e.AoE=4]="AoE",e))(ga||{}),ua=(e=>(e[e.NoArmor=0]="NoArmor",e[e.InnerFire=1]="InnerFire",e))(ua||{}),fa=(e=>(e[e.PriestMajorGlyphNone=0]="PriestMajorGlyphNone",e[e.GlyphOfCircleOfHealing=42396]="GlyphOfCircleOfHealing",e[e.GlyphOfDispelMagic=42397]="GlyphOfDispelMagic",e[e.GlyphOfDispersion=45753]="GlyphOfDispersion",e[e.GlyphOfFade=42398]="GlyphOfFade",e[e.GlyphOfFearWard=42399]="GlyphOfFearWard",e[e.GlyphOfFlashHeal=42400]="GlyphOfFlashHeal",e[e.GlyphOfGuardianSpirit=45755]="GlyphOfGuardianSpirit",e[e.GlyphOfHolyNova=42401]="GlyphOfHolyNova",e[e.GlyphOfHymnOfHope=45758]="GlyphOfHymnOfHope",e[e.GlyphOfInnerFire=42402]="GlyphOfInnerFire",e[e.GlyphOfLightwell=42403]="GlyphOfLightwell",e[e.GlyphOfMassDispel=42404]="GlyphOfMassDispel",e[e.GlyphOfMindControl=42405]="GlyphOfMindControl",e[e.GlyphOfMindFlay=42415]="GlyphOfMindFlay",e[e.GlyphOfMindSear=45757]="GlyphOfMindSear",e[e.GlyphOfPainSuppression=45760]="GlyphOfPainSuppression",e[e.GlyphOfPenance=45756]="GlyphOfPenance",e[e.GlyphOfPowerWordShield=42408]="GlyphOfPowerWordShield",e[e.GlyphOfPrayerOfHealing=42409]="GlyphOfPrayerOfHealing",e[e.GlyphOfPsychicScream=42410]="GlyphOfPsychicScream",e[e.GlyphOfRenew=42411]="GlyphOfRenew",e[e.GlyphOfScourgeImprisonment=42412]="GlyphOfScourgeImprisonment",e[e.GlyphOfShadow=42407]="GlyphOfShadow",e[e.GlyphOfShadowWordDeath=42414]="GlyphOfShadowWordDeath",e[e.GlyphOfShadowWordPain=42406]="GlyphOfShadowWordPain",e[e.GlyphOfSmite=42416]="GlyphOfSmite",e[e.GlyphOfSpiritOfRedemption=42417]="GlyphOfSpiritOfRedemption",e))(fa||{}),wa=(e=>(e[e.PriestMinorGlyphNone=0]="PriestMinorGlyphNone",e[e.GlyphOfFading=43342]="GlyphOfFading",e[e.GlyphOfFortitude=43371]="GlyphOfFortitude",e[e.GlyphOfLevitate=43370]="GlyphOfLevitate",e[e.GlyphOfShackleUndead=43373]="GlyphOfShackleUndead",e[e.GlyphOfShadowProtection=43372]="GlyphOfShadowProtection",e[e.GlyphOfShadowfiend=43374]="GlyphOfShadowfiend",e))(wa||{});const ya=new class extends X{constructor(){super("proto.PriestTalents",[{no:1,name:"unbreakable_will",kind:"scalar",T:5},{no:2,name:"twin_disciplines",kind:"scalar",T:5},{no:3,name:"silent_resolve",kind:"scalar",T:5},{no:4,name:"improved_inner_fire",kind:"scalar",T:5},{no:5,name:"improved_power_word_fortitude",kind:"scalar",T:5},{no:6,name:"martyrdom",kind:"scalar",T:5},{no:7,name:"meditation",kind:"scalar",T:5},{no:8,name:"inner_focus",kind:"scalar",T:8},{no:9,name:"improved_power_word_shield",kind:"scalar",T:5},{no:10,name:"absolution",kind:"scalar",T:5},{no:11,name:"mental_agility",kind:"scalar",T:5},{no:12,name:"improved_mana_burn",kind:"scalar",T:5},{no:13,name:"reflective_shield",kind:"scalar",T:5},{no:14,name:"mental_strength",kind:"scalar",T:5},{no:15,name:"soul_warding",kind:"scalar",T:8},{no:16,name:"focused_power",kind:"scalar",T:5},{no:17,name:"enlightenment",kind:"scalar",T:5},{no:18,name:"focused_will",kind:"scalar",T:5},{no:19,name:"power_infusion",kind:"scalar",T:8},{no:20,name:"improved_flash_heal",kind:"scalar",T:5},{no:21,name:"renewed_hope",kind:"scalar",T:5},{no:22,name:"rapture",kind:"scalar",T:5},{no:23,name:"aspiration",kind:"scalar",T:5},{no:24,name:"divine_aegis",kind:"scalar",T:5},{no:25,name:"pain_suppression",kind:"scalar",T:8},{no:26,name:"grace",kind:"scalar",T:5},{no:27,name:"borrowed_time",kind:"scalar",T:5},{no:28,name:"penance",kind:"scalar",T:8},{no:29,name:"healing_focus",kind:"scalar",T:5},{no:30,name:"improved_renew",kind:"scalar",T:5},{no:31,name:"holy_specialization",kind:"scalar",T:5},{no:32,name:"spell_warding",kind:"scalar",T:5},{no:33,name:"divine_fury",kind:"scalar",T:5},{no:34,name:"desperate_prayer",kind:"scalar",T:8},{no:35,name:"blessed_recovery",kind:"scalar",T:5},{no:36,name:"inspiration",kind:"scalar",T:5},{no:37,name:"holy_reach",kind:"scalar",T:5},{no:38,name:"improved_healing",kind:"scalar",T:5},{no:39,name:"searing_light",kind:"scalar",T:5},{no:40,name:"healing_prayers",kind:"scalar",T:5},{no:41,name:"spirit_of_redemption",kind:"scalar",T:8},{no:42,name:"spiritual_guidance",kind:"scalar",T:5},{no:43,name:"surge_of_light",kind:"scalar",T:5},{no:44,name:"spiritual_healing",kind:"scalar",T:5},{no:45,name:"holy_concentration",kind:"scalar",T:5},{no:46,name:"lightwell",kind:"scalar",T:8},{no:47,name:"blessed_resilience",kind:"scalar",T:5},{no:48,name:"body_and_soul",kind:"scalar",T:5},{no:49,name:"empowered_healing",kind:"scalar",T:5},{no:50,name:"serendipity",kind:"scalar",T:5},{no:51,name:"empowered_renew",kind:"scalar",T:5},{no:52,name:"circle_of_healing",kind:"scalar",T:8},{no:53,name:"test_of_faith",kind:"scalar",T:5},{no:54,name:"divine_providence",kind:"scalar",T:5},{no:55,name:"guardian_spirit",kind:"scalar",T:8},{no:56,name:"spirit_tap",kind:"scalar",T:5},{no:57,name:"improved_spirit_tap",kind:"scalar",T:5},{no:58,name:"darkness",kind:"scalar",T:5},{no:59,name:"shadow_affinity",kind:"scalar",T:5},{no:60,name:"improved_shadow_word_pain",kind:"scalar",T:5},{no:61,name:"shadow_focus",kind:"scalar",T:5},{no:62,name:"improved_psychic_scream",kind:"scalar",T:5},{no:63,name:"improved_mind_blast",kind:"scalar",T:5},{no:64,name:"mind_flay",kind:"scalar",T:8},{no:65,name:"veiled_shadows",kind:"scalar",T:5},{no:66,name:"shadow_reach",kind:"scalar",T:5},{no:67,name:"shadow_weaving",kind:"scalar",T:5},{no:68,name:"silence",kind:"scalar",T:8},{no:69,name:"vampiric_embrace",kind:"scalar",T:8},{no:70,name:"improved_vampiric_embrace",kind:"scalar",T:5},{no:71,name:"focused_mind",kind:"scalar",T:5},{no:72,name:"mind_melt",kind:"scalar",T:5},{no:73,name:"improved_devouring_plague",kind:"scalar",T:5},{no:74,name:"shadowform",kind:"scalar",T:8},{no:75,name:"shadow_power",kind:"scalar",T:5},{no:76,name:"improved_shadowform",kind:"scalar",T:5},{no:77,name:"misery",kind:"scalar",T:5},{no:78,name:"psychic_horror",kind:"scalar",T:8},{no:79,name:"vampiric_touch",kind:"scalar",T:8},{no:80,name:"pain_and_suffering",kind:"scalar",T:5},{no:81,name:"twisted_faith",kind:"scalar",T:5},{no:82,name:"dispersion",kind:"scalar",T:8}])}create(e){const t={unbreakableWill:0,twinDisciplines:0,silentResolve:0,improvedInnerFire:0,improvedPowerWordFortitude:0,martyrdom:0,meditation:0,innerFocus:!1,improvedPowerWordShield:0,absolution:0,mentalAgility:0,improvedManaBurn:0,reflectiveShield:0,mentalStrength:0,soulWarding:!1,focusedPower:0,enlightenment:0,focusedWill:0,powerInfusion:!1,improvedFlashHeal:0,renewedHope:0,rapture:0,aspiration:0,divineAegis:0,painSuppression:!1,grace:0,borrowedTime:0,penance:!1,healingFocus:0,improvedRenew:0,holySpecialization:0,spellWarding:0,divineFury:0,desperatePrayer:!1,blessedRecovery:0,inspiration:0,holyReach:0,improvedHealing:0,searingLight:0,healingPrayers:0,spiritOfRedemption:!1,spiritualGuidance:0,surgeOfLight:0,spiritualHealing:0,holyConcentration:0,lightwell:!1,blessedResilience:0,bodyAndSoul:0,empoweredHealing:0,serendipity:0,empoweredRenew:0,circleOfHealing:!1,testOfFaith:0,divineProvidence:0,guardianSpirit:!1,spiritTap:0,improvedSpiritTap:0,darkness:0,shadowAffinity:0,improvedShadowWordPain:0,shadowFocus:0,improvedPsychicScream:0,improvedMindBlast:0,mindFlay:!1,veiledShadows:0,shadowReach:0,shadowWeaving:0,silence:!1,vampiricEmbrace:!1,improvedVampiricEmbrace:0,focusedMind:0,mindMelt:0,improvedDevouringPlague:0,shadowform:!1,shadowPower:0,improvedShadowform:0,misery:0,psychicHorror:!1,vampiricTouch:!1,painAndSuffering:0,twistedFaith:0,dispersion:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.unbreakableWill=e.int32();break;case 2:i.twinDisciplines=e.int32();break;case 3:i.silentResolve=e.int32();break;case 4:i.improvedInnerFire=e.int32();break;case 5:i.improvedPowerWordFortitude=e.int32();break;case 6:i.martyrdom=e.int32();break;case 7:i.meditation=e.int32();break;case 8:i.innerFocus=e.bool();break;case 9:i.improvedPowerWordShield=e.int32();break;case 10:i.absolution=e.int32();break;case 11:i.mentalAgility=e.int32();break;case 12:i.improvedManaBurn=e.int32();break;case 13:i.reflectiveShield=e.int32();break;case 14:i.mentalStrength=e.int32();break;case 15:i.soulWarding=e.bool();break;case 16:i.focusedPower=e.int32();break;case 17:i.enlightenment=e.int32();break;case 18:i.focusedWill=e.int32();break;case 19:i.powerInfusion=e.bool();break;case 20:i.improvedFlashHeal=e.int32();break;case 21:i.renewedHope=e.int32();break;case 22:i.rapture=e.int32();break;case 23:i.aspiration=e.int32();break;case 24:i.divineAegis=e.int32();break;case 25:i.painSuppression=e.bool();break;case 26:i.grace=e.int32();break;case 27:i.borrowedTime=e.int32();break;case 28:i.penance=e.bool();break;case 29:i.healingFocus=e.int32();break;case 30:i.improvedRenew=e.int32();break;case 31:i.holySpecialization=e.int32();break;case 32:i.spellWarding=e.int32();break;case 33:i.divineFury=e.int32();break;case 34:i.desperatePrayer=e.bool();break;case 35:i.blessedRecovery=e.int32();break;case 36:i.inspiration=e.int32();break;case 37:i.holyReach=e.int32();break;case 38:i.improvedHealing=e.int32();break;case 39:i.searingLight=e.int32();break;case 40:i.healingPrayers=e.int32();break;case 41:i.spiritOfRedemption=e.bool();break;case 42:i.spiritualGuidance=e.int32();break;case 43:i.surgeOfLight=e.int32();break;case 44:i.spiritualHealing=e.int32();break;case 45:i.holyConcentration=e.int32();break;case 46:i.lightwell=e.bool();break;case 47:i.blessedResilience=e.int32();break;case 48:i.bodyAndSoul=e.int32();break;case 49:i.empoweredHealing=e.int32();break;case 50:i.serendipity=e.int32();break;case 51:i.empoweredRenew=e.int32();break;case 52:i.circleOfHealing=e.bool();break;case 53:i.testOfFaith=e.int32();break;case 54:i.divineProvidence=e.int32();break;case 55:i.guardianSpirit=e.bool();break;case 56:i.spiritTap=e.int32();break;case 57:i.improvedSpiritTap=e.int32();break;case 58:i.darkness=e.int32();break;case 59:i.shadowAffinity=e.int32();break;case 60:i.improvedShadowWordPain=e.int32();break;case 61:i.shadowFocus=e.int32();break;case 62:i.improvedPsychicScream=e.int32();break;case 63:i.improvedMindBlast=e.int32();break;case 64:i.mindFlay=e.bool();break;case 65:i.veiledShadows=e.int32();break;case 66:i.shadowReach=e.int32();break;case 67:i.shadowWeaving=e.int32();break;case 68:i.silence=e.bool();break;case 69:i.vampiricEmbrace=e.bool();break;case 70:i.improvedVampiricEmbrace=e.int32();break;case 71:i.focusedMind=e.int32();break;case 72:i.mindMelt=e.int32();break;case 73:i.improvedDevouringPlague=e.int32();break;case 74:i.shadowform=e.bool();break;case 75:i.shadowPower=e.int32();break;case 76:i.improvedShadowform=e.int32();break;case 77:i.misery=e.int32();break;case 78:i.psychicHorror=e.bool();break;case 79:i.vampiricTouch=e.bool();break;case 80:i.painAndSuffering=e.int32();break;case 81:i.twistedFaith=e.int32();break;case 82:i.dispersion=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.unbreakableWill&&t.tag(1,v.Varint).int32(e.unbreakableWill),0!==e.twinDisciplines&&t.tag(2,v.Varint).int32(e.twinDisciplines),0!==e.silentResolve&&t.tag(3,v.Varint).int32(e.silentResolve),0!==e.improvedInnerFire&&t.tag(4,v.Varint).int32(e.improvedInnerFire),0!==e.improvedPowerWordFortitude&&t.tag(5,v.Varint).int32(e.improvedPowerWordFortitude),0!==e.martyrdom&&t.tag(6,v.Varint).int32(e.martyrdom),0!==e.meditation&&t.tag(7,v.Varint).int32(e.meditation),!1!==e.innerFocus&&t.tag(8,v.Varint).bool(e.innerFocus),0!==e.improvedPowerWordShield&&t.tag(9,v.Varint).int32(e.improvedPowerWordShield),0!==e.absolution&&t.tag(10,v.Varint).int32(e.absolution),0!==e.mentalAgility&&t.tag(11,v.Varint).int32(e.mentalAgility),0!==e.improvedManaBurn&&t.tag(12,v.Varint).int32(e.improvedManaBurn),0!==e.reflectiveShield&&t.tag(13,v.Varint).int32(e.reflectiveShield),0!==e.mentalStrength&&t.tag(14,v.Varint).int32(e.mentalStrength),!1!==e.soulWarding&&t.tag(15,v.Varint).bool(e.soulWarding),0!==e.focusedPower&&t.tag(16,v.Varint).int32(e.focusedPower),0!==e.enlightenment&&t.tag(17,v.Varint).int32(e.enlightenment),0!==e.focusedWill&&t.tag(18,v.Varint).int32(e.focusedWill),!1!==e.powerInfusion&&t.tag(19,v.Varint).bool(e.powerInfusion),0!==e.improvedFlashHeal&&t.tag(20,v.Varint).int32(e.improvedFlashHeal),0!==e.renewedHope&&t.tag(21,v.Varint).int32(e.renewedHope),0!==e.rapture&&t.tag(22,v.Varint).int32(e.rapture),0!==e.aspiration&&t.tag(23,v.Varint).int32(e.aspiration),0!==e.divineAegis&&t.tag(24,v.Varint).int32(e.divineAegis),!1!==e.painSuppression&&t.tag(25,v.Varint).bool(e.painSuppression),0!==e.grace&&t.tag(26,v.Varint).int32(e.grace),0!==e.borrowedTime&&t.tag(27,v.Varint).int32(e.borrowedTime),!1!==e.penance&&t.tag(28,v.Varint).bool(e.penance),0!==e.healingFocus&&t.tag(29,v.Varint).int32(e.healingFocus),0!==e.improvedRenew&&t.tag(30,v.Varint).int32(e.improvedRenew),0!==e.holySpecialization&&t.tag(31,v.Varint).int32(e.holySpecialization),0!==e.spellWarding&&t.tag(32,v.Varint).int32(e.spellWarding),0!==e.divineFury&&t.tag(33,v.Varint).int32(e.divineFury),!1!==e.desperatePrayer&&t.tag(34,v.Varint).bool(e.desperatePrayer),0!==e.blessedRecovery&&t.tag(35,v.Varint).int32(e.blessedRecovery),0!==e.inspiration&&t.tag(36,v.Varint).int32(e.inspiration),0!==e.holyReach&&t.tag(37,v.Varint).int32(e.holyReach),0!==e.improvedHealing&&t.tag(38,v.Varint).int32(e.improvedHealing),0!==e.searingLight&&t.tag(39,v.Varint).int32(e.searingLight),0!==e.healingPrayers&&t.tag(40,v.Varint).int32(e.healingPrayers),!1!==e.spiritOfRedemption&&t.tag(41,v.Varint).bool(e.spiritOfRedemption),0!==e.spiritualGuidance&&t.tag(42,v.Varint).int32(e.spiritualGuidance),0!==e.surgeOfLight&&t.tag(43,v.Varint).int32(e.surgeOfLight),0!==e.spiritualHealing&&t.tag(44,v.Varint).int32(e.spiritualHealing),0!==e.holyConcentration&&t.tag(45,v.Varint).int32(e.holyConcentration),!1!==e.lightwell&&t.tag(46,v.Varint).bool(e.lightwell),0!==e.blessedResilience&&t.tag(47,v.Varint).int32(e.blessedResilience),0!==e.bodyAndSoul&&t.tag(48,v.Varint).int32(e.bodyAndSoul),0!==e.empoweredHealing&&t.tag(49,v.Varint).int32(e.empoweredHealing),0!==e.serendipity&&t.tag(50,v.Varint).int32(e.serendipity),0!==e.empoweredRenew&&t.tag(51,v.Varint).int32(e.empoweredRenew),!1!==e.circleOfHealing&&t.tag(52,v.Varint).bool(e.circleOfHealing),0!==e.testOfFaith&&t.tag(53,v.Varint).int32(e.testOfFaith),0!==e.divineProvidence&&t.tag(54,v.Varint).int32(e.divineProvidence),!1!==e.guardianSpirit&&t.tag(55,v.Varint).bool(e.guardianSpirit),0!==e.spiritTap&&t.tag(56,v.Varint).int32(e.spiritTap),0!==e.improvedSpiritTap&&t.tag(57,v.Varint).int32(e.improvedSpiritTap),0!==e.darkness&&t.tag(58,v.Varint).int32(e.darkness),0!==e.shadowAffinity&&t.tag(59,v.Varint).int32(e.shadowAffinity),0!==e.improvedShadowWordPain&&t.tag(60,v.Varint).int32(e.improvedShadowWordPain),0!==e.shadowFocus&&t.tag(61,v.Varint).int32(e.shadowFocus),0!==e.improvedPsychicScream&&t.tag(62,v.Varint).int32(e.improvedPsychicScream),0!==e.improvedMindBlast&&t.tag(63,v.Varint).int32(e.improvedMindBlast),!1!==e.mindFlay&&t.tag(64,v.Varint).bool(e.mindFlay),0!==e.veiledShadows&&t.tag(65,v.Varint).int32(e.veiledShadows),0!==e.shadowReach&&t.tag(66,v.Varint).int32(e.shadowReach),0!==e.shadowWeaving&&t.tag(67,v.Varint).int32(e.shadowWeaving),!1!==e.silence&&t.tag(68,v.Varint).bool(e.silence),!1!==e.vampiricEmbrace&&t.tag(69,v.Varint).bool(e.vampiricEmbrace),0!==e.improvedVampiricEmbrace&&t.tag(70,v.Varint).int32(e.improvedVampiricEmbrace),0!==e.focusedMind&&t.tag(71,v.Varint).int32(e.focusedMind),0!==e.mindMelt&&t.tag(72,v.Varint).int32(e.mindMelt),0!==e.improvedDevouringPlague&&t.tag(73,v.Varint).int32(e.improvedDevouringPlague),!1!==e.shadowform&&t.tag(74,v.Varint).bool(e.shadowform),0!==e.shadowPower&&t.tag(75,v.Varint).int32(e.shadowPower),0!==e.improvedShadowform&&t.tag(76,v.Varint).int32(e.improvedShadowform),0!==e.misery&&t.tag(77,v.Varint).int32(e.misery),!1!==e.psychicHorror&&t.tag(78,v.Varint).bool(e.psychicHorror),!1!==e.vampiricTouch&&t.tag(79,v.Varint).bool(e.vampiricTouch),0!==e.painAndSuffering&&t.tag(80,v.Varint).int32(e.painAndSuffering),0!==e.twistedFaith&&t.tag(81,v.Varint).int32(e.twistedFaith),!1!==e.dispersion&&t.tag(82,v.Varint).bool(e.dispersion);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ka=new class extends X{constructor(){super("proto.ShadowPriest",[{no:1,name:"rotation",kind:"message",T:()=>ba},{no:2,name:"talents",kind:"message",T:()=>ya},{no:3,name:"options",kind:"message",T:()=>Ia}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=ba.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ya.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Ia.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&ba.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ya.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Ia.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ba=new class extends X{constructor(){super("proto.ShadowPriest.Rotation",[{no:1,name:"rotation_type",kind:"enum",T:()=>["proto.ShadowPriest.Rotation.RotationType",ga]},{no:2,name:"precast_vt",kind:"scalar",T:8},{no:3,name:"latency",kind:"scalar",T:1}])}create(e){const t={rotationType:0,precastVt:!1,latency:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotationType=e.int32();break;case 2:i.precastVt=e.bool();break;case 3:i.latency=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.rotationType&&t.tag(1,v.Varint).int32(e.rotationType),!1!==e.precastVt&&t.tag(2,v.Varint).bool(e.precastVt),0!==e.latency&&t.tag(3,v.Bit64).double(e.latency);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ia=new class extends X{constructor(){super("proto.ShadowPriest.Options",[{no:1,name:"use_shadowfiend",kind:"scalar",T:8},{no:2,name:"armor",kind:"enum",T:()=>["proto.ShadowPriest.Options.Armor",ua]},{no:4,name:"use_mind_blast",kind:"scalar",T:8},{no:5,name:"use_shadow_word_death",kind:"scalar",T:8}])}create(e){const t={useShadowfiend:!1,armor:0,useMindBlast:!1,useShadowWordDeath:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.useShadowfiend=e.bool();break;case 2:i.armor=e.int32();break;case 4:i.useMindBlast=e.bool();break;case 5:i.useShadowWordDeath=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.useShadowfiend&&t.tag(1,v.Varint).bool(e.useShadowfiend),0!==e.armor&&t.tag(2,v.Varint).int32(e.armor),!1!==e.useMindBlast&&t.tag(4,v.Varint).bool(e.useMindBlast),!1!==e.useShadowWordDeath&&t.tag(5,v.Varint).bool(e.useShadowWordDeath);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ta=new class extends X{constructor(){super("proto.SmitePriest",[{no:1,name:"rotation",kind:"message",T:()=>xa},{no:2,name:"talents",kind:"message",T:()=>ya},{no:3,name:"options",kind:"message",T:()=>Sa}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=xa.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ya.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Sa.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&xa.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ya.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Sa.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const xa=new class extends X{constructor(){super("proto.SmitePriest.Rotation",[{no:2,name:"use_mind_blast",kind:"scalar",T:8},{no:3,name:"use_shadow_word_death",kind:"scalar",T:8},{no:4,name:"use_devouring_plague",kind:"scalar",T:8},{no:5,name:"meme_dream",kind:"scalar",T:8},{no:6,name:"allowed_holy_fire_delay_ms",kind:"scalar",T:1}])}create(e){const t={useMindBlast:!1,useShadowWordDeath:!1,useDevouringPlague:!1,memeDream:!1,allowedHolyFireDelayMs:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 2:i.useMindBlast=e.bool();break;case 3:i.useShadowWordDeath=e.bool();break;case 4:i.useDevouringPlague=e.bool();break;case 5:i.memeDream=e.bool();break;case 6:i.allowedHolyFireDelayMs=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.useMindBlast&&t.tag(2,v.Varint).bool(e.useMindBlast),!1!==e.useShadowWordDeath&&t.tag(3,v.Varint).bool(e.useShadowWordDeath),!1!==e.useDevouringPlague&&t.tag(4,v.Varint).bool(e.useDevouringPlague),!1!==e.memeDream&&t.tag(5,v.Varint).bool(e.memeDream),0!==e.allowedHolyFireDelayMs&&t.tag(6,v.Bit64).double(e.allowedHolyFireDelayMs);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Sa=new class extends X{constructor(){super("proto.SmitePriest.Options",[{no:3,name:"use_inner_fire",kind:"scalar",T:8},{no:1,name:"use_shadowfiend",kind:"scalar",T:8},{no:2,name:"power_infusion_target",kind:"message",T:()=>je}])}create(e){const t={useInnerFire:!1,useShadowfiend:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 3:i.useInnerFire=e.bool();break;case 1:i.useShadowfiend=e.bool();break;case 2:i.powerInfusionTarget=je.internalBinaryRead(e,e.uint32(),a,i.powerInfusionTarget);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.useInnerFire&&t.tag(3,v.Varint).bool(e.useInnerFire),!1!==e.useShadowfiend&&t.tag(1,v.Varint).bool(e.useShadowfiend),e.powerInfusionTarget&&je.internalBinaryWrite(e.powerInfusionTarget,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const va=new class extends X{constructor(){super("proto.HealingPriest",[{no:1,name:"rotation",kind:"message",T:()=>_a},{no:2,name:"talents",kind:"message",T:()=>ya},{no:3,name:"options",kind:"message",T:()=>Oa}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=_a.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ya.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Oa.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&_a.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ya.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Oa.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const _a=new class extends X{constructor(){super("proto.HealingPriest.Rotation",[])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){return n??this.create()}internalBinaryWrite(e,t,a){let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Oa=new class extends X{constructor(){super("proto.HealingPriest.Options",[{no:3,name:"use_inner_fire",kind:"scalar",T:8},{no:1,name:"use_shadowfiend",kind:"scalar",T:8},{no:2,name:"power_infusion_target",kind:"message",T:()=>je}])}create(e){const t={useInnerFire:!1,useShadowfiend:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 3:i.useInnerFire=e.bool();break;case 1:i.useShadowfiend=e.bool();break;case 2:i.powerInfusionTarget=je.internalBinaryRead(e,e.uint32(),a,i.powerInfusionTarget);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.useInnerFire&&t.tag(3,v.Varint).bool(e.useInnerFire),!1!==e.useShadowfiend&&t.tag(1,v.Varint).bool(e.useShadowfiend),e.powerInfusionTarget&&je.internalBinaryWrite(e.powerInfusionTarget,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var Pa=(e=>(e[e.NoSpell=0]="NoSpell",e[e.JudgementOfWisdom=1]="JudgementOfWisdom",e[e.DivineStorm=2]="DivineStorm",e[e.HammerOfWrath=3]="HammerOfWrath",e[e.Consecration=4]="Consecration",e[e.HolyWrath=5]="HolyWrath",e[e.CrusaderStrike=6]="CrusaderStrike",e[e.Exorcism=7]="Exorcism",e[e.DivinePlea=8]="DivinePlea",e))(Pa||{}),Ga=(e=>(e[e.UnknownType=0]="UnknownType",e[e.Standard=1]="Standard",e[e.Custom=2]="Custom",e[e.CastSequence=3]="CastSequence",e))(Ga||{}),Ra=(e=>(e[e.NoSpell=0]="NoSpell",e[e.JudgementOfWisdom=1]="JudgementOfWisdom",e[e.HammerOfWrath=2]="HammerOfWrath",e[e.Consecration=3]="Consecration",e[e.HolyWrath=4]="HolyWrath",e[e.Exorcism=5]="Exorcism",e[e.ShieldOfRighteousness=6]="ShieldOfRighteousness",e[e.AvengersShield=7]="AvengersShield",e[e.HammerOfTheRighteous=8]="HammerOfTheRighteous",e))(Ra||{}),Ba=(e=>(e[e.PaladinMajorGlyphNone=0]="PaladinMajorGlyphNone",e[e.GlyphOfAvengerSShield=41101]="GlyphOfAvengerSShield",e[e.GlyphOfAvengingWrath=41107]="GlyphOfAvengingWrath",e[e.GlyphOfBeaconOfLight=45741]="GlyphOfBeaconOfLight",e[e.GlyphOfCleansing=41104]="GlyphOfCleansing",e[e.GlyphOfConsecration=41099]="GlyphOfConsecration",e[e.GlyphOfCrusaderStrike=41098]="GlyphOfCrusaderStrike",e[e.GlyphOfDivinePlea=45745]="GlyphOfDivinePlea",e[e.GlyphOfDivineStorm=45743]="GlyphOfDivineStorm",e[e.GlyphOfDivinity=41108]="GlyphOfDivinity",e[e.GlyphOfExorcism=41103]="GlyphOfExorcism",e[e.GlyphOfFlashOfLight=41105]="GlyphOfFlashOfLight",e[e.GlyphOfHammerOfJustice=41095]="GlyphOfHammerOfJustice",e[e.GlyphOfHammerOfTheRighteous=45742]="GlyphOfHammerOfTheRighteous",e[e.GlyphOfHammerOfWrath=41097]="GlyphOfHammerOfWrath",e[e.GlyphOfHolyLight=41106]="GlyphOfHolyLight",e[e.GlyphOfHolyShock=45746]="GlyphOfHolyShock",e[e.GlyphOfHolyWrath=43867]="GlyphOfHolyWrath",e[e.GlyphOfJudgement=41092]="GlyphOfJudgement",e[e.GlyphOfRighteousDefense=41100]="GlyphOfRighteousDefense",e[e.GlyphOfSalvation=45747]="GlyphOfSalvation",e[e.GlyphOfSealOfCommand=41094]="GlyphOfSealOfCommand",e[e.GlyphOfSealOfLight=41110]="GlyphOfSealOfLight",e[e.GlyphOfSealOfRighteousness=43868]="GlyphOfSealOfRighteousness",e[e.GlyphOfSealOfVengeance=43869]="GlyphOfSealOfVengeance",e[e.GlyphOfSealOfWisdom=41109]="GlyphOfSealOfWisdom",e[e.GlyphOfShieldOfRighteousness=45744]="GlyphOfShieldOfRighteousness",e[e.GlyphOfSpiritualAttunement=41096]="GlyphOfSpiritualAttunement",e[e.GlyphOfTurnEvil=41102]="GlyphOfTurnEvil",e))(Ba||{}),Na=(e=>(e[e.PaladinMinorGlyphNone=0]="PaladinMinorGlyphNone",e[e.GlyphOfBlessingOfKings=43365]="GlyphOfBlessingOfKings",e[e.GlyphOfBlessingOfMight=43340]="GlyphOfBlessingOfMight",e[e.GlyphOfBlessingOfWisdom=43366]="GlyphOfBlessingOfWisdom",e[e.GlyphOfLayOnHands=43367]="GlyphOfLayOnHands",e[e.GlyphOfSenseUndead=43368]="GlyphOfSenseUndead",e[e.GlyphOfTheWise=43369]="GlyphOfTheWise",e))(Na||{}),Fa=(e=>(e[e.BlessingUnknown=0]="BlessingUnknown",e[e.BlessingOfKings=1]="BlessingOfKings",e[e.BlessingOfMight=2]="BlessingOfMight",e[e.BlessingOfSalvation=3]="BlessingOfSalvation",e[e.BlessingOfWisdom=4]="BlessingOfWisdom",e[e.BlessingOfSanctuary=5]="BlessingOfSanctuary",e[e.BlessingOfLight=6]="BlessingOfLight",e))(Fa||{}),Wa=(e=>(e[e.NoPaladinAura=0]="NoPaladinAura",e[e.DevotionAura=2]="DevotionAura",e[e.RetributionAura=3]="RetributionAura",e))(Wa||{}),Va=(e=>(e[e.Vengeance=0]="Vengeance",e[e.Command=1]="Command",e[e.Righteousness=2]="Righteousness",e))(Va||{}),Ca=(e=>(e[e.JudgementOfWisdom=0]="JudgementOfWisdom",e[e.JudgementOfLight=1]="JudgementOfLight",e))(Ca||{});const Da=new class extends X{constructor(){super("proto.PaladinTalents",[{no:1,name:"spiritual_focus",kind:"scalar",T:5},{no:2,name:"seals_of_the_pure",kind:"scalar",T:5},{no:3,name:"healing_light",kind:"scalar",T:5},{no:4,name:"divine_intellect",kind:"scalar",T:5},{no:5,name:"unyielding_faith",kind:"scalar",T:5},{no:6,name:"aura_mastery",kind:"scalar",T:8},{no:7,name:"illumination",kind:"scalar",T:5},{no:8,name:"improved_lay_on_hands",kind:"scalar",T:5},{no:9,name:"improved_concentration_aura",kind:"scalar",T:5},{no:10,name:"improved_blessing_of_wisdom",kind:"scalar",T:5},{no:11,name:"blessed_hands",kind:"scalar",T:5},{no:12,name:"pure_of_heart",kind:"scalar",T:5},{no:13,name:"divine_favor",kind:"scalar",T:8},{no:14,name:"sanctified_light",kind:"scalar",T:5},{no:15,name:"purifying_power",kind:"scalar",T:5},{no:16,name:"holy_power",kind:"scalar",T:5},{no:17,name:"lights_grace",kind:"scalar",T:5},{no:18,name:"holy_shock",kind:"scalar",T:8},{no:19,name:"blessed_life",kind:"scalar",T:5},{no:20,name:"sacred_cleansing",kind:"scalar",T:5},{no:21,name:"holy_guidance",kind:"scalar",T:5},{no:22,name:"divine_illumination",kind:"scalar",T:8},{no:23,name:"judgements_of_the_pure",kind:"scalar",T:5},{no:24,name:"infusion_of_light",kind:"scalar",T:5},{no:25,name:"enlightened_judgements",kind:"scalar",T:5},{no:26,name:"beacon_of_light",kind:"scalar",T:8},{no:27,name:"divinity",kind:"scalar",T:5},{no:28,name:"divine_strength",kind:"scalar",T:5},{no:29,name:"stoicism",kind:"scalar",T:5},{no:30,name:"guardians_favor",kind:"scalar",T:5},{no:31,name:"anticipation",kind:"scalar",T:5},{no:32,name:"divine_sacrifice",kind:"scalar",T:8},{no:33,name:"improved_righteous_fury",kind:"scalar",T:5},{no:34,name:"toughness",kind:"scalar",T:5},{no:35,name:"divine_guardian",kind:"scalar",T:5},{no:36,name:"improved_hammer_of_justice",kind:"scalar",T:5},{no:37,name:"improved_devotion_aura",kind:"scalar",T:5},{no:38,name:"blessing_of_sanctuary",kind:"scalar",T:8},{no:39,name:"reckoning",kind:"scalar",T:5},{no:40,name:"sacred_duty",kind:"scalar",T:5},{no:41,name:"one_handed_weapon_specialization",kind:"scalar",T:5},{no:42,name:"spiritual_attunement",kind:"scalar",T:5},{no:43,name:"holy_shield",kind:"scalar",T:8},{no:44,name:"ardent_defender",kind:"scalar",T:5},{no:45,name:"redoubt",kind:"scalar",T:5},{no:46,name:"combat_expertise",kind:"scalar",T:5},{no:47,name:"touched_by_the_light",kind:"scalar",T:5},{no:48,name:"avengers_shield",kind:"scalar",T:8},{no:49,name:"guarded_by_the_light",kind:"scalar",T:5},{no:50,name:"shield_of_the_templar",kind:"scalar",T:5},{no:51,name:"judgements_of_the_just",kind:"scalar",T:5},{no:52,name:"hammer_of_the_righteous",kind:"scalar",T:8},{no:53,name:"deflection",kind:"scalar",T:5},{no:54,name:"benediction",kind:"scalar",T:5},{no:55,name:"improved_judgements",kind:"scalar",T:5},{no:56,name:"heart_of_the_crusader",kind:"scalar",T:5},{no:57,name:"improved_blessing_of_might",kind:"scalar",T:5},{no:58,name:"vindication",kind:"scalar",T:5},{no:59,name:"conviction",kind:"scalar",T:5},{no:60,name:"seal_of_command",kind:"scalar",T:8},{no:61,name:"pursuit_of_justice",kind:"scalar",T:5},{no:62,name:"eye_for_an_eye",kind:"scalar",T:5},{no:63,name:"sanctity_of_battle",kind:"scalar",T:5},{no:64,name:"crusade",kind:"scalar",T:5},{no:65,name:"two_handed_weapon_specialization",kind:"scalar",T:5},{no:66,name:"sanctified_retribution",kind:"scalar",T:8},{no:67,name:"vengeance",kind:"scalar",T:5},{no:68,name:"divine_purpose",kind:"scalar",T:5},{no:69,name:"the_art_of_war",kind:"scalar",T:5},{no:70,name:"repentance",kind:"scalar",T:8},{no:71,name:"judgements_of_the_wise",kind:"scalar",T:5},{no:72,name:"fanaticism",kind:"scalar",T:5},{no:73,name:"sanctified_wrath",kind:"scalar",T:5},{no:74,name:"swift_retribution",kind:"scalar",T:5},{no:75,name:"crusader_strike",kind:"scalar",T:8},{no:76,name:"sheath_of_light",kind:"scalar",T:5},{no:77,name:"righteous_vengeance",kind:"scalar",T:5},{no:78,name:"divine_storm",kind:"scalar",T:8}])}create(e){const t={spiritualFocus:0,sealsOfThePure:0,healingLight:0,divineIntellect:0,unyieldingFaith:0,auraMastery:!1,illumination:0,improvedLayOnHands:0,improvedConcentrationAura:0,improvedBlessingOfWisdom:0,blessedHands:0,pureOfHeart:0,divineFavor:!1,sanctifiedLight:0,purifyingPower:0,holyPower:0,lightsGrace:0,holyShock:!1,blessedLife:0,sacredCleansing:0,holyGuidance:0,divineIllumination:!1,judgementsOfThePure:0,infusionOfLight:0,enlightenedJudgements:0,beaconOfLight:!1,divinity:0,divineStrength:0,stoicism:0,guardiansFavor:0,anticipation:0,divineSacrifice:!1,improvedRighteousFury:0,toughness:0,divineGuardian:0,improvedHammerOfJustice:0,improvedDevotionAura:0,blessingOfSanctuary:!1,reckoning:0,sacredDuty:0,oneHandedWeaponSpecialization:0,spiritualAttunement:0,holyShield:!1,ardentDefender:0,redoubt:0,combatExpertise:0,touchedByTheLight:0,avengersShield:!1,guardedByTheLight:0,shieldOfTheTemplar:0,judgementsOfTheJust:0,hammerOfTheRighteous:!1,deflection:0,benediction:0,improvedJudgements:0,heartOfTheCrusader:0,improvedBlessingOfMight:0,vindication:0,conviction:0,sealOfCommand:!1,pursuitOfJustice:0,eyeForAnEye:0,sanctityOfBattle:0,crusade:0,twoHandedWeaponSpecialization:0,sanctifiedRetribution:!1,vengeance:0,divinePurpose:0,theArtOfWar:0,repentance:!1,judgementsOfTheWise:0,fanaticism:0,sanctifiedWrath:0,swiftRetribution:0,crusaderStrike:!1,sheathOfLight:0,righteousVengeance:0,divineStorm:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.spiritualFocus=e.int32();break;case 2:i.sealsOfThePure=e.int32();break;case 3:i.healingLight=e.int32();break;case 4:i.divineIntellect=e.int32();break;case 5:i.unyieldingFaith=e.int32();break;case 6:i.auraMastery=e.bool();break;case 7:i.illumination=e.int32();break;case 8:i.improvedLayOnHands=e.int32();break;case 9:i.improvedConcentrationAura=e.int32();break;case 10:i.improvedBlessingOfWisdom=e.int32();break;case 11:i.blessedHands=e.int32();break;case 12:i.pureOfHeart=e.int32();break;case 13:i.divineFavor=e.bool();break;case 14:i.sanctifiedLight=e.int32();break;case 15:i.purifyingPower=e.int32();break;case 16:i.holyPower=e.int32();break;case 17:i.lightsGrace=e.int32();break;case 18:i.holyShock=e.bool();break;case 19:i.blessedLife=e.int32();break;case 20:i.sacredCleansing=e.int32();break;case 21:i.holyGuidance=e.int32();break;case 22:i.divineIllumination=e.bool();break;case 23:i.judgementsOfThePure=e.int32();break;case 24:i.infusionOfLight=e.int32();break;case 25:i.enlightenedJudgements=e.int32();break;case 26:i.beaconOfLight=e.bool();break;case 27:i.divinity=e.int32();break;case 28:i.divineStrength=e.int32();break;case 29:i.stoicism=e.int32();break;case 30:i.guardiansFavor=e.int32();break;case 31:i.anticipation=e.int32();break;case 32:i.divineSacrifice=e.bool();break;case 33:i.improvedRighteousFury=e.int32();break;case 34:i.toughness=e.int32();break;case 35:i.divineGuardian=e.int32();break;case 36:i.improvedHammerOfJustice=e.int32();break;case 37:i.improvedDevotionAura=e.int32();break;case 38:i.blessingOfSanctuary=e.bool();break;case 39:i.reckoning=e.int32();break;case 40:i.sacredDuty=e.int32();break;case 41:i.oneHandedWeaponSpecialization=e.int32();break;case 42:i.spiritualAttunement=e.int32();break;case 43:i.holyShield=e.bool();break;case 44:i.ardentDefender=e.int32();break;case 45:i.redoubt=e.int32();break;case 46:i.combatExpertise=e.int32();break;case 47:i.touchedByTheLight=e.int32();break;case 48:i.avengersShield=e.bool();break;case 49:i.guardedByTheLight=e.int32();break;case 50:i.shieldOfTheTemplar=e.int32();break;case 51:i.judgementsOfTheJust=e.int32();break;case 52:i.hammerOfTheRighteous=e.bool();break;case 53:i.deflection=e.int32();break;case 54:i.benediction=e.int32();break;case 55:i.improvedJudgements=e.int32();break;case 56:i.heartOfTheCrusader=e.int32();break;case 57:i.improvedBlessingOfMight=e.int32();break;case 58:i.vindication=e.int32();break;case 59:i.conviction=e.int32();break;case 60:i.sealOfCommand=e.bool();break;case 61:i.pursuitOfJustice=e.int32();break;case 62:i.eyeForAnEye=e.int32();break;case 63:i.sanctityOfBattle=e.int32();break;case 64:i.crusade=e.int32();break;case 65:i.twoHandedWeaponSpecialization=e.int32();break;case 66:i.sanctifiedRetribution=e.bool();break;case 67:i.vengeance=e.int32();break;case 68:i.divinePurpose=e.int32();break;case 69:i.theArtOfWar=e.int32();break;case 70:i.repentance=e.bool();break;case 71:i.judgementsOfTheWise=e.int32();break;case 72:i.fanaticism=e.int32();break;case 73:i.sanctifiedWrath=e.int32();break;case 74:i.swiftRetribution=e.int32();break;case 75:i.crusaderStrike=e.bool();break;case 76:i.sheathOfLight=e.int32();break;case 77:i.righteousVengeance=e.int32();break;case 78:i.divineStorm=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.spiritualFocus&&t.tag(1,v.Varint).int32(e.spiritualFocus),0!==e.sealsOfThePure&&t.tag(2,v.Varint).int32(e.sealsOfThePure),0!==e.healingLight&&t.tag(3,v.Varint).int32(e.healingLight),0!==e.divineIntellect&&t.tag(4,v.Varint).int32(e.divineIntellect),0!==e.unyieldingFaith&&t.tag(5,v.Varint).int32(e.unyieldingFaith),!1!==e.auraMastery&&t.tag(6,v.Varint).bool(e.auraMastery),0!==e.illumination&&t.tag(7,v.Varint).int32(e.illumination),0!==e.improvedLayOnHands&&t.tag(8,v.Varint).int32(e.improvedLayOnHands),0!==e.improvedConcentrationAura&&t.tag(9,v.Varint).int32(e.improvedConcentrationAura),0!==e.improvedBlessingOfWisdom&&t.tag(10,v.Varint).int32(e.improvedBlessingOfWisdom),0!==e.blessedHands&&t.tag(11,v.Varint).int32(e.blessedHands),0!==e.pureOfHeart&&t.tag(12,v.Varint).int32(e.pureOfHeart),!1!==e.divineFavor&&t.tag(13,v.Varint).bool(e.divineFavor),0!==e.sanctifiedLight&&t.tag(14,v.Varint).int32(e.sanctifiedLight),0!==e.purifyingPower&&t.tag(15,v.Varint).int32(e.purifyingPower),0!==e.holyPower&&t.tag(16,v.Varint).int32(e.holyPower),0!==e.lightsGrace&&t.tag(17,v.Varint).int32(e.lightsGrace),!1!==e.holyShock&&t.tag(18,v.Varint).bool(e.holyShock),0!==e.blessedLife&&t.tag(19,v.Varint).int32(e.blessedLife),0!==e.sacredCleansing&&t.tag(20,v.Varint).int32(e.sacredCleansing),0!==e.holyGuidance&&t.tag(21,v.Varint).int32(e.holyGuidance),!1!==e.divineIllumination&&t.tag(22,v.Varint).bool(e.divineIllumination),0!==e.judgementsOfThePure&&t.tag(23,v.Varint).int32(e.judgementsOfThePure),0!==e.infusionOfLight&&t.tag(24,v.Varint).int32(e.infusionOfLight),0!==e.enlightenedJudgements&&t.tag(25,v.Varint).int32(e.enlightenedJudgements),!1!==e.beaconOfLight&&t.tag(26,v.Varint).bool(e.beaconOfLight),0!==e.divinity&&t.tag(27,v.Varint).int32(e.divinity),0!==e.divineStrength&&t.tag(28,v.Varint).int32(e.divineStrength),0!==e.stoicism&&t.tag(29,v.Varint).int32(e.stoicism),0!==e.guardiansFavor&&t.tag(30,v.Varint).int32(e.guardiansFavor),0!==e.anticipation&&t.tag(31,v.Varint).int32(e.anticipation),!1!==e.divineSacrifice&&t.tag(32,v.Varint).bool(e.divineSacrifice),0!==e.improvedRighteousFury&&t.tag(33,v.Varint).int32(e.improvedRighteousFury),0!==e.toughness&&t.tag(34,v.Varint).int32(e.toughness),0!==e.divineGuardian&&t.tag(35,v.Varint).int32(e.divineGuardian),0!==e.improvedHammerOfJustice&&t.tag(36,v.Varint).int32(e.improvedHammerOfJustice),0!==e.improvedDevotionAura&&t.tag(37,v.Varint).int32(e.improvedDevotionAura),!1!==e.blessingOfSanctuary&&t.tag(38,v.Varint).bool(e.blessingOfSanctuary),0!==e.reckoning&&t.tag(39,v.Varint).int32(e.reckoning),0!==e.sacredDuty&&t.tag(40,v.Varint).int32(e.sacredDuty),0!==e.oneHandedWeaponSpecialization&&t.tag(41,v.Varint).int32(e.oneHandedWeaponSpecialization),0!==e.spiritualAttunement&&t.tag(42,v.Varint).int32(e.spiritualAttunement),!1!==e.holyShield&&t.tag(43,v.Varint).bool(e.holyShield),0!==e.ardentDefender&&t.tag(44,v.Varint).int32(e.ardentDefender),0!==e.redoubt&&t.tag(45,v.Varint).int32(e.redoubt),0!==e.combatExpertise&&t.tag(46,v.Varint).int32(e.combatExpertise),0!==e.touchedByTheLight&&t.tag(47,v.Varint).int32(e.touchedByTheLight),!1!==e.avengersShield&&t.tag(48,v.Varint).bool(e.avengersShield),0!==e.guardedByTheLight&&t.tag(49,v.Varint).int32(e.guardedByTheLight),0!==e.shieldOfTheTemplar&&t.tag(50,v.Varint).int32(e.shieldOfTheTemplar),0!==e.judgementsOfTheJust&&t.tag(51,v.Varint).int32(e.judgementsOfTheJust),!1!==e.hammerOfTheRighteous&&t.tag(52,v.Varint).bool(e.hammerOfTheRighteous),0!==e.deflection&&t.tag(53,v.Varint).int32(e.deflection),0!==e.benediction&&t.tag(54,v.Varint).int32(e.benediction),0!==e.improvedJudgements&&t.tag(55,v.Varint).int32(e.improvedJudgements),0!==e.heartOfTheCrusader&&t.tag(56,v.Varint).int32(e.heartOfTheCrusader),0!==e.improvedBlessingOfMight&&t.tag(57,v.Varint).int32(e.improvedBlessingOfMight),0!==e.vindication&&t.tag(58,v.Varint).int32(e.vindication),0!==e.conviction&&t.tag(59,v.Varint).int32(e.conviction),!1!==e.sealOfCommand&&t.tag(60,v.Varint).bool(e.sealOfCommand),0!==e.pursuitOfJustice&&t.tag(61,v.Varint).int32(e.pursuitOfJustice),0!==e.eyeForAnEye&&t.tag(62,v.Varint).int32(e.eyeForAnEye),0!==e.sanctityOfBattle&&t.tag(63,v.Varint).int32(e.sanctityOfBattle),0!==e.crusade&&t.tag(64,v.Varint).int32(e.crusade),0!==e.twoHandedWeaponSpecialization&&t.tag(65,v.Varint).int32(e.twoHandedWeaponSpecialization),!1!==e.sanctifiedRetribution&&t.tag(66,v.Varint).bool(e.sanctifiedRetribution),0!==e.vengeance&&t.tag(67,v.Varint).int32(e.vengeance),0!==e.divinePurpose&&t.tag(68,v.Varint).int32(e.divinePurpose),0!==e.theArtOfWar&&t.tag(69,v.Varint).int32(e.theArtOfWar),!1!==e.repentance&&t.tag(70,v.Varint).bool(e.repentance),0!==e.judgementsOfTheWise&&t.tag(71,v.Varint).int32(e.judgementsOfTheWise),0!==e.fanaticism&&t.tag(72,v.Varint).int32(e.fanaticism),0!==e.sanctifiedWrath&&t.tag(73,v.Varint).int32(e.sanctifiedWrath),0!==e.swiftRetribution&&t.tag(74,v.Varint).int32(e.swiftRetribution),!1!==e.crusaderStrike&&t.tag(75,v.Varint).bool(e.crusaderStrike),0!==e.sheathOfLight&&t.tag(76,v.Varint).int32(e.sheathOfLight),0!==e.righteousVengeance&&t.tag(77,v.Varint).int32(e.righteousVengeance),!1!==e.divineStorm&&t.tag(78,v.Varint).bool(e.divineStorm);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ea=new class extends X{constructor(){super("proto.RetributionPaladin",[{no:1,name:"rotation",kind:"message",T:()=>ja},{no:2,name:"talents",kind:"message",T:()=>Da},{no:3,name:"options",kind:"message",T:()=>Ua}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=ja.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Da.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Ua.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&ja.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Da.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Ua.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ja=new class extends X{constructor(){super("proto.RetributionPaladin.Rotation",[{no:1,name:"exo_slack",kind:"scalar",T:5},{no:2,name:"cons_slack",kind:"scalar",T:5},{no:3,name:"divine_plea_percentage",kind:"scalar",T:1},{no:4,name:"holy_wrath_threshold",kind:"scalar",T:5},{no:5,name:"sov_targets",kind:"scalar",T:5},{no:8,name:"custom_rotation",kind:"message",T:()=>He},{no:10,name:"custom_cast_sequence",kind:"message",T:()=>He},{no:9,name:"type",kind:"enum",T:()=>["proto.RetributionPaladin.Rotation.RotationType",Ga]},{no:11,name:"use_divine_plea",kind:"scalar",T:8}])}create(e){const t={exoSlack:0,consSlack:0,divinePleaPercentage:0,holyWrathThreshold:0,sovTargets:0,type:0,useDivinePlea:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.exoSlack=e.int32();break;case 2:i.consSlack=e.int32();break;case 3:i.divinePleaPercentage=e.double();break;case 4:i.holyWrathThreshold=e.int32();break;case 5:i.sovTargets=e.int32();break;case 8:i.customRotation=He.internalBinaryRead(e,e.uint32(),a,i.customRotation);break;case 10:i.customCastSequence=He.internalBinaryRead(e,e.uint32(),a,i.customCastSequence);break;case 9:i.type=e.int32();break;case 11:i.useDivinePlea=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.exoSlack&&t.tag(1,v.Varint).int32(e.exoSlack),0!==e.consSlack&&t.tag(2,v.Varint).int32(e.consSlack),0!==e.divinePleaPercentage&&t.tag(3,v.Bit64).double(e.divinePleaPercentage),0!==e.holyWrathThreshold&&t.tag(4,v.Varint).int32(e.holyWrathThreshold),0!==e.sovTargets&&t.tag(5,v.Varint).int32(e.sovTargets),e.customRotation&&He.internalBinaryWrite(e.customRotation,t.tag(8,v.LengthDelimited).fork(),a).join(),e.customCastSequence&&He.internalBinaryWrite(e.customCastSequence,t.tag(10,v.LengthDelimited).fork(),a).join(),0!==e.type&&t.tag(9,v.Varint).int32(e.type),!1!==e.useDivinePlea&&t.tag(11,v.Varint).bool(e.useDivinePlea);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ua=new class extends X{constructor(){super("proto.RetributionPaladin.Options",[{no:1,name:"judgement",kind:"enum",T:()=>["proto.PaladinJudgement",Ca]},{no:2,name:"seal",kind:"enum",T:()=>["proto.PaladinSeal",Va]},{no:3,name:"aura",kind:"enum",T:()=>["proto.PaladinAura",Wa]},{no:4,name:"damage_taken_per_second",kind:"scalar",T:1},{no:5,name:"use_avenging_wrath",kind:"scalar",T:8}])}create(e){const t={judgement:0,seal:0,aura:0,damageTakenPerSecond:0,useAvengingWrath:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.judgement=e.int32();break;case 2:i.seal=e.int32();break;case 3:i.aura=e.int32();break;case 4:i.damageTakenPerSecond=e.double();break;case 5:i.useAvengingWrath=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.judgement&&t.tag(1,v.Varint).int32(e.judgement),0!==e.seal&&t.tag(2,v.Varint).int32(e.seal),0!==e.aura&&t.tag(3,v.Varint).int32(e.aura),0!==e.damageTakenPerSecond&&t.tag(4,v.Bit64).double(e.damageTakenPerSecond),!1!==e.useAvengingWrath&&t.tag(5,v.Varint).bool(e.useAvengingWrath);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ma=new class extends X{constructor(){super("proto.ProtectionPaladin",[{no:1,name:"rotation",kind:"message",T:()=>Aa},{no:2,name:"talents",kind:"message",T:()=>Da},{no:3,name:"options",kind:"message",T:()=>La}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=Aa.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Da.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=La.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&Aa.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Da.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&La.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Aa=new class extends X{constructor(){super("proto.ProtectionPaladin.Rotation",[{no:1,name:"prioritize_holy_shield",kind:"scalar",T:8},{no:2,name:"custom_rotation",kind:"message",T:()=>He}])}create(e){const t={prioritizeHolyShield:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.prioritizeHolyShield=e.bool();break;case 2:i.customRotation=He.internalBinaryRead(e,e.uint32(),a,i.customRotation);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){!1!==e.prioritizeHolyShield&&t.tag(1,v.Varint).bool(e.prioritizeHolyShield),e.customRotation&&He.internalBinaryWrite(e.customRotation,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const La=new class extends X{constructor(){super("proto.ProtectionPaladin.Options",[{no:1,name:"judgement",kind:"enum",T:()=>["proto.PaladinJudgement",Ca]},{no:2,name:"seal",kind:"enum",T:()=>["proto.PaladinSeal",Va]},{no:3,name:"aura",kind:"enum",T:()=>["proto.PaladinAura",Wa]},{no:4,name:"damage_taken_per_second",kind:"scalar",T:1},{no:5,name:"use_avenging_wrath",kind:"scalar",T:8}])}create(e){const t={judgement:0,seal:0,aura:0,damageTakenPerSecond:0,useAvengingWrath:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.judgement=e.int32();break;case 2:i.seal=e.int32();break;case 3:i.aura=e.int32();break;case 4:i.damageTakenPerSecond=e.double();break;case 5:i.useAvengingWrath=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.judgement&&t.tag(1,v.Varint).int32(e.judgement),0!==e.seal&&t.tag(2,v.Varint).int32(e.seal),0!==e.aura&&t.tag(3,v.Varint).int32(e.aura),0!==e.damageTakenPerSecond&&t.tag(4,v.Bit64).double(e.damageTakenPerSecond),!1!==e.useAvengingWrath&&t.tag(5,v.Varint).bool(e.useAvengingWrath);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var za=(e=>(e[e.Arcane=0]="Arcane",e[e.Fire=1]="Fire",e[e.Frost=2]="Frost",e[e.Aoe=3]="Aoe",e))(za||{}),Ha=(e=>(e[e.Fireball=0]="Fireball",e[e.FrostfireBolt=1]="FrostfireBolt",e))(Ha||{}),$a=(e=>(e[e.ArcaneExplosion=0]="ArcaneExplosion",e[e.Flamestrike=1]="Flamestrike",e[e.Blizzard=2]="Blizzard",e))($a||{}),qa=(e=>(e[e.NoArmor=0]="NoArmor",e[e.MageArmor=1]="MageArmor",e[e.MoltenArmor=2]="MoltenArmor",e))(qa||{}),Ja=(e=>(e[e.MageMajorGlyphNone=0]="MageMajorGlyphNone",e[e.GlyphOfArcaneBarrage=45738]="GlyphOfArcaneBarrage",e[e.GlyphOfArcaneBlast=44955]="GlyphOfArcaneBlast",e[e.GlyphOfArcaneExplosion=42734]="GlyphOfArcaneExplosion",e[e.GlyphOfArcaneMissiles=42735]="GlyphOfArcaneMissiles",e[e.GlyphOfArcanePower=42736]="GlyphOfArcanePower",e[e.GlyphOfBlink=42737]="GlyphOfBlink",e[e.GlyphOfDeepFreeze=45736]="GlyphOfDeepFreeze",e[e.GlyphOfEternalWater=50045]="GlyphOfEternalWater",e[e.GlyphOfEvocation=42738]="GlyphOfEvocation",e[e.GlyphOfFireBlast=42740]="GlyphOfFireBlast",e[e.GlyphOfFireball=42739]="GlyphOfFireball",e[e.GlyphOfFrostNova=42741]="GlyphOfFrostNova",e[e.GlyphOfFrostbolt=42742]="GlyphOfFrostbolt",e[e.GlyphOfFrostfire=44684]="GlyphOfFrostfire",e[e.GlyphOfIceArmor=42743]="GlyphOfIceArmor",e[e.GlyphOfIceBarrier=45740]="GlyphOfIceBarrier",e[e.GlyphOfIceBlock=42744]="GlyphOfIceBlock",e[e.GlyphOfIceLance=42745]="GlyphOfIceLance",e[e.GlyphOfIcyVeins=42746]="GlyphOfIcyVeins",e[e.GlyphOfInvisibility=42748]="GlyphOfInvisibility",e[e.GlyphOfLivingBomb=45737]="GlyphOfLivingBomb",e[e.GlyphOfMageArmor=42749]="GlyphOfMageArmor",e[e.GlyphOfManaGem=42750]="GlyphOfManaGem",e[e.GlyphOfMirrorImage=45739]="GlyphOfMirrorImage",e[e.GlyphOfMoltenArmor=42751]="GlyphOfMoltenArmor",e[e.GlyphOfPolymorph=42752]="GlyphOfPolymorph",e[e.GlyphOfRemoveCurse=42753]="GlyphOfRemoveCurse",e[e.GlyphOfScorch=42747]="GlyphOfScorch",e[e.GlyphOfWaterElemental=42754]="GlyphOfWaterElemental",e))(Ja||{}),Ka=(e=>(e[e.MageMinorGlyphNone=0]="MageMinorGlyphNone",e[e.GlyphOfArcaneIntellect=43339]="GlyphOfArcaneIntellect",e[e.GlyphOfBlastWave=44920]="GlyphOfBlastWave",e[e.GlyphOfFireWard=43357]="GlyphOfFireWard",e[e.GlyphOfFrostArmor=43359]="GlyphOfFrostArmor",e[e.GlyphOfFrostWard=43360]="GlyphOfFrostWard",e[e.GlyphOfSlowFall=43364]="GlyphOfSlowFall",e[e.GlyphOfThePenguin=43361]="GlyphOfThePenguin",e))(Ka||{});const Ya=new class extends X{constructor(){super("proto.MageTalents",[{no:1,name:"arcane_subtlety",kind:"scalar",T:5},{no:2,name:"arcane_focus",kind:"scalar",T:5},{no:3,name:"arcane_stability",kind:"scalar",T:5},{no:4,name:"arcane_fortitude",kind:"scalar",T:5},{no:5,name:"magic_absorption",kind:"scalar",T:5},{no:6,name:"arcane_concentration",kind:"scalar",T:5},{no:7,name:"magic_attunement",kind:"scalar",T:5},{no:8,name:"spell_impact",kind:"scalar",T:5},{no:9,name:"student_of_the_mind",kind:"scalar",T:5},{no:10,name:"focus_magic",kind:"scalar",T:8},{no:11,name:"arcane_shielding",kind:"scalar",T:5},{no:12,name:"improved_counterspell",kind:"scalar",T:5},{no:13,name:"arcane_meditation",kind:"scalar",T:5},{no:14,name:"torment_the_weak",kind:"scalar",T:5},{no:15,name:"improved_blink",kind:"scalar",T:5},{no:16,name:"presence_of_mind",kind:"scalar",T:8},{no:17,name:"arcane_mind",kind:"scalar",T:5},{no:18,name:"prismatic_cloak",kind:"scalar",T:5},{no:19,name:"arcane_instability",kind:"scalar",T:5},{no:20,name:"arcane_potency",kind:"scalar",T:5},{no:21,name:"arcane_empowerment",kind:"scalar",T:5},{no:22,name:"arcane_power",kind:"scalar",T:8},{no:23,name:"incanters_absorption",kind:"scalar",T:5},{no:24,name:"arcane_flows",kind:"scalar",T:5},{no:25,name:"mind_mastery",kind:"scalar",T:5},{no:26,name:"slow",kind:"scalar",T:8},{no:27,name:"missile_barrage",kind:"scalar",T:5},{no:28,name:"netherwind_presence",kind:"scalar",T:5},{no:29,name:"spell_power",kind:"scalar",T:5},{no:30,name:"arcane_barrage",kind:"scalar",T:8},{no:31,name:"improved_fire_blast",kind:"scalar",T:5},{no:32,name:"incineration",kind:"scalar",T:5},{no:33,name:"improved_fireball",kind:"scalar",T:5},{no:34,name:"ignite",kind:"scalar",T:5},{no:35,name:"burning_determination",kind:"scalar",T:5},{no:36,name:"world_in_flames",kind:"scalar",T:5},{no:37,name:"flame_throwing",kind:"scalar",T:5},{no:38,name:"impact",kind:"scalar",T:5},{no:39,name:"pyroblast",kind:"scalar",T:8},{no:40,name:"burning_soul",kind:"scalar",T:5},{no:41,name:"improved_scorch",kind:"scalar",T:5},{no:42,name:"molten_shields",kind:"scalar",T:5},{no:43,name:"master_of_elements",kind:"scalar",T:5},{no:44,name:"playing_with_fire",kind:"scalar",T:5},{no:45,name:"critical_mass",kind:"scalar",T:5},{no:46,name:"blast_wave",kind:"scalar",T:8},{no:47,name:"blazing_speed",kind:"scalar",T:5},{no:48,name:"fire_power",kind:"scalar",T:5},{no:49,name:"pyromaniac",kind:"scalar",T:5},{no:50,name:"combustion",kind:"scalar",T:8},{no:51,name:"molten_fury",kind:"scalar",T:5},{no:52,name:"fiery_payback",kind:"scalar",T:5},{no:53,name:"empowered_fire",kind:"scalar",T:5},{no:54,name:"firestarter",kind:"scalar",T:5},{no:55,name:"dragons_breath",kind:"scalar",T:8},{no:56,name:"hot_streak",kind:"scalar",T:5},{no:57,name:"burnout",kind:"scalar",T:5},{no:58,name:"living_bomb",kind:"scalar",T:8},{no:59,name:"frostbite",kind:"scalar",T:5},{no:60,name:"improved_frostbolt",kind:"scalar",T:5},{no:61,name:"ice_floes",kind:"scalar",T:5},{no:62,name:"ice_shards",kind:"scalar",T:5},{no:63,name:"frost_warding",kind:"scalar",T:5},{no:64,name:"precision",kind:"scalar",T:5},{no:65,name:"permafrost",kind:"scalar",T:5},{no:66,name:"piercing_ice",kind:"scalar",T:5},{no:67,name:"icy_veins",kind:"scalar",T:8},{no:68,name:"improved_blizzard",kind:"scalar",T:5},{no:69,name:"arctic_reach",kind:"scalar",T:5},{no:70,name:"frost_channeling",kind:"scalar",T:5},{no:71,name:"shatter",kind:"scalar",T:5},{no:72,name:"cold_snap",kind:"scalar",T:8},{no:73,name:"improved_cone_of_cold",kind:"scalar",T:5},{no:74,name:"frozen_core",kind:"scalar",T:5},{no:75,name:"cold_as_ice",kind:"scalar",T:5},{no:76,name:"winters_chill",kind:"scalar",T:5},{no:77,name:"shattered_barrier",kind:"scalar",T:5},{no:78,name:"ice_barrier",kind:"scalar",T:8},{no:79,name:"arctic_winds",kind:"scalar",T:5},{no:80,name:"empowered_frostbolt",kind:"scalar",T:5},{no:81,name:"fingers_of_frost",kind:"scalar",T:5},{no:82,name:"brain_freeze",kind:"scalar",T:5},{no:83,name:"summon_water_elemental",kind:"scalar",T:8},{no:84,name:"enduring_winter",kind:"scalar",T:5},{no:85,name:"chilled_to_the_bone",kind:"scalar",T:5},{no:86,name:"deep_freeze",kind:"scalar",T:8}])}create(e){const t={arcaneSubtlety:0,arcaneFocus:0,arcaneStability:0,arcaneFortitude:0,magicAbsorption:0,arcaneConcentration:0,magicAttunement:0,spellImpact:0,studentOfTheMind:0,focusMagic:!1,arcaneShielding:0,improvedCounterspell:0,arcaneMeditation:0,tormentTheWeak:0,improvedBlink:0,presenceOfMind:!1,arcaneMind:0,prismaticCloak:0,arcaneInstability:0,arcanePotency:0,arcaneEmpowerment:0,arcanePower:!1,incantersAbsorption:0,arcaneFlows:0,mindMastery:0,slow:!1,missileBarrage:0,netherwindPresence:0,spellPower:0,arcaneBarrage:!1,improvedFireBlast:0,incineration:0,improvedFireball:0,ignite:0,burningDetermination:0,worldInFlames:0,flameThrowing:0,impact:0,pyroblast:!1,burningSoul:0,improvedScorch:0,moltenShields:0,masterOfElements:0,playingWithFire:0,criticalMass:0,blastWave:!1,blazingSpeed:0,firePower:0,pyromaniac:0,combustion:!1,moltenFury:0,fieryPayback:0,empoweredFire:0,firestarter:0,dragonsBreath:!1,hotStreak:0,burnout:0,livingBomb:!1,frostbite:0,improvedFrostbolt:0,iceFloes:0,iceShards:0,frostWarding:0,precision:0,permafrost:0,piercingIce:0,icyVeins:!1,improvedBlizzard:0,arcticReach:0,frostChanneling:0,shatter:0,coldSnap:!1,improvedConeOfCold:0,frozenCore:0,coldAsIce:0,wintersChill:0,shatteredBarrier:0,iceBarrier:!1,arcticWinds:0,empoweredFrostbolt:0,fingersOfFrost:0,brainFreeze:0,summonWaterElemental:!1,enduringWinter:0,chilledToTheBone:0,deepFreeze:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.arcaneSubtlety=e.int32();break;case 2:i.arcaneFocus=e.int32();break;case 3:i.arcaneStability=e.int32();break;case 4:i.arcaneFortitude=e.int32();break;case 5:i.magicAbsorption=e.int32();break;case 6:i.arcaneConcentration=e.int32();break;case 7:i.magicAttunement=e.int32();break;case 8:i.spellImpact=e.int32();break;case 9:i.studentOfTheMind=e.int32();break;case 10:i.focusMagic=e.bool();break;case 11:i.arcaneShielding=e.int32();break;case 12:i.improvedCounterspell=e.int32();break;case 13:i.arcaneMeditation=e.int32();break;case 14:i.tormentTheWeak=e.int32();break;case 15:i.improvedBlink=e.int32();break;case 16:i.presenceOfMind=e.bool();break;case 17:i.arcaneMind=e.int32();break;case 18:i.prismaticCloak=e.int32();break;case 19:i.arcaneInstability=e.int32();break;case 20:i.arcanePotency=e.int32();break;case 21:i.arcaneEmpowerment=e.int32();break;case 22:i.arcanePower=e.bool();break;case 23:i.incantersAbsorption=e.int32();break;case 24:i.arcaneFlows=e.int32();break;case 25:i.mindMastery=e.int32();break;case 26:i.slow=e.bool();break;case 27:i.missileBarrage=e.int32();break;case 28:i.netherwindPresence=e.int32();break;case 29:i.spellPower=e.int32();break;case 30:i.arcaneBarrage=e.bool();break;case 31:i.improvedFireBlast=e.int32();break;case 32:i.incineration=e.int32();break;case 33:i.improvedFireball=e.int32();break;case 34:i.ignite=e.int32();break;case 35:i.burningDetermination=e.int32();break;case 36:i.worldInFlames=e.int32();break;case 37:i.flameThrowing=e.int32();break;case 38:i.impact=e.int32();break;case 39:i.pyroblast=e.bool();break;case 40:i.burningSoul=e.int32();break;case 41:i.improvedScorch=e.int32();break;case 42:i.moltenShields=e.int32();break;case 43:i.masterOfElements=e.int32();break;case 44:i.playingWithFire=e.int32();break;case 45:i.criticalMass=e.int32();break;case 46:i.blastWave=e.bool();break;case 47:i.blazingSpeed=e.int32();break;case 48:i.firePower=e.int32();break;case 49:i.pyromaniac=e.int32();break;case 50:i.combustion=e.bool();break;case 51:i.moltenFury=e.int32();break;case 52:i.fieryPayback=e.int32();break;case 53:i.empoweredFire=e.int32();break;case 54:i.firestarter=e.int32();break;case 55:i.dragonsBreath=e.bool();break;case 56:i.hotStreak=e.int32();break;case 57:i.burnout=e.int32();break;case 58:i.livingBomb=e.bool();break;case 59:i.frostbite=e.int32();break;case 60:i.improvedFrostbolt=e.int32();break;case 61:i.iceFloes=e.int32();break;case 62:i.iceShards=e.int32();break;case 63:i.frostWarding=e.int32();break;case 64:i.precision=e.int32();break;case 65:i.permafrost=e.int32();break;case 66:i.piercingIce=e.int32();break;case 67:i.icyVeins=e.bool();break;case 68:i.improvedBlizzard=e.int32();break;case 69:i.arcticReach=e.int32();break;case 70:i.frostChanneling=e.int32();break;case 71:i.shatter=e.int32();break;case 72:i.coldSnap=e.bool();break;case 73:i.improvedConeOfCold=e.int32();break;case 74:i.frozenCore=e.int32();break;case 75:i.coldAsIce=e.int32();break;case 76:i.wintersChill=e.int32();break;case 77:i.shatteredBarrier=e.int32();break;case 78:i.iceBarrier=e.bool();break;case 79:i.arcticWinds=e.int32();break;case 80:i.empoweredFrostbolt=e.int32();break;case 81:i.fingersOfFrost=e.int32();break;case 82:i.brainFreeze=e.int32();break;case 83:i.summonWaterElemental=e.bool();break;case 84:i.enduringWinter=e.int32();break;case 85:i.chilledToTheBone=e.int32();break;case 86:i.deepFreeze=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.arcaneSubtlety&&t.tag(1,v.Varint).int32(e.arcaneSubtlety),0!==e.arcaneFocus&&t.tag(2,v.Varint).int32(e.arcaneFocus),0!==e.arcaneStability&&t.tag(3,v.Varint).int32(e.arcaneStability),0!==e.arcaneFortitude&&t.tag(4,v.Varint).int32(e.arcaneFortitude),0!==e.magicAbsorption&&t.tag(5,v.Varint).int32(e.magicAbsorption),0!==e.arcaneConcentration&&t.tag(6,v.Varint).int32(e.arcaneConcentration),0!==e.magicAttunement&&t.tag(7,v.Varint).int32(e.magicAttunement),0!==e.spellImpact&&t.tag(8,v.Varint).int32(e.spellImpact),0!==e.studentOfTheMind&&t.tag(9,v.Varint).int32(e.studentOfTheMind),!1!==e.focusMagic&&t.tag(10,v.Varint).bool(e.focusMagic),0!==e.arcaneShielding&&t.tag(11,v.Varint).int32(e.arcaneShielding),0!==e.improvedCounterspell&&t.tag(12,v.Varint).int32(e.improvedCounterspell),0!==e.arcaneMeditation&&t.tag(13,v.Varint).int32(e.arcaneMeditation),0!==e.tormentTheWeak&&t.tag(14,v.Varint).int32(e.tormentTheWeak),0!==e.improvedBlink&&t.tag(15,v.Varint).int32(e.improvedBlink),!1!==e.presenceOfMind&&t.tag(16,v.Varint).bool(e.presenceOfMind),0!==e.arcaneMind&&t.tag(17,v.Varint).int32(e.arcaneMind),0!==e.prismaticCloak&&t.tag(18,v.Varint).int32(e.prismaticCloak),0!==e.arcaneInstability&&t.tag(19,v.Varint).int32(e.arcaneInstability),0!==e.arcanePotency&&t.tag(20,v.Varint).int32(e.arcanePotency),0!==e.arcaneEmpowerment&&t.tag(21,v.Varint).int32(e.arcaneEmpowerment),!1!==e.arcanePower&&t.tag(22,v.Varint).bool(e.arcanePower),0!==e.incantersAbsorption&&t.tag(23,v.Varint).int32(e.incantersAbsorption),0!==e.arcaneFlows&&t.tag(24,v.Varint).int32(e.arcaneFlows),0!==e.mindMastery&&t.tag(25,v.Varint).int32(e.mindMastery),!1!==e.slow&&t.tag(26,v.Varint).bool(e.slow),0!==e.missileBarrage&&t.tag(27,v.Varint).int32(e.missileBarrage),0!==e.netherwindPresence&&t.tag(28,v.Varint).int32(e.netherwindPresence),0!==e.spellPower&&t.tag(29,v.Varint).int32(e.spellPower),!1!==e.arcaneBarrage&&t.tag(30,v.Varint).bool(e.arcaneBarrage),0!==e.improvedFireBlast&&t.tag(31,v.Varint).int32(e.improvedFireBlast),0!==e.incineration&&t.tag(32,v.Varint).int32(e.incineration),0!==e.improvedFireball&&t.tag(33,v.Varint).int32(e.improvedFireball),0!==e.ignite&&t.tag(34,v.Varint).int32(e.ignite),0!==e.burningDetermination&&t.tag(35,v.Varint).int32(e.burningDetermination),0!==e.worldInFlames&&t.tag(36,v.Varint).int32(e.worldInFlames),0!==e.flameThrowing&&t.tag(37,v.Varint).int32(e.flameThrowing),0!==e.impact&&t.tag(38,v.Varint).int32(e.impact),!1!==e.pyroblast&&t.tag(39,v.Varint).bool(e.pyroblast),0!==e.burningSoul&&t.tag(40,v.Varint).int32(e.burningSoul),0!==e.improvedScorch&&t.tag(41,v.Varint).int32(e.improvedScorch),0!==e.moltenShields&&t.tag(42,v.Varint).int32(e.moltenShields),0!==e.masterOfElements&&t.tag(43,v.Varint).int32(e.masterOfElements),0!==e.playingWithFire&&t.tag(44,v.Varint).int32(e.playingWithFire),0!==e.criticalMass&&t.tag(45,v.Varint).int32(e.criticalMass),!1!==e.blastWave&&t.tag(46,v.Varint).bool(e.blastWave),0!==e.blazingSpeed&&t.tag(47,v.Varint).int32(e.blazingSpeed),0!==e.firePower&&t.tag(48,v.Varint).int32(e.firePower),0!==e.pyromaniac&&t.tag(49,v.Varint).int32(e.pyromaniac),!1!==e.combustion&&t.tag(50,v.Varint).bool(e.combustion),0!==e.moltenFury&&t.tag(51,v.Varint).int32(e.moltenFury),0!==e.fieryPayback&&t.tag(52,v.Varint).int32(e.fieryPayback),0!==e.empoweredFire&&t.tag(53,v.Varint).int32(e.empoweredFire),0!==e.firestarter&&t.tag(54,v.Varint).int32(e.firestarter),!1!==e.dragonsBreath&&t.tag(55,v.Varint).bool(e.dragonsBreath),0!==e.hotStreak&&t.tag(56,v.Varint).int32(e.hotStreak),0!==e.burnout&&t.tag(57,v.Varint).int32(e.burnout),!1!==e.livingBomb&&t.tag(58,v.Varint).bool(e.livingBomb),0!==e.frostbite&&t.tag(59,v.Varint).int32(e.frostbite),0!==e.improvedFrostbolt&&t.tag(60,v.Varint).int32(e.improvedFrostbolt),0!==e.iceFloes&&t.tag(61,v.Varint).int32(e.iceFloes),0!==e.iceShards&&t.tag(62,v.Varint).int32(e.iceShards),0!==e.frostWarding&&t.tag(63,v.Varint).int32(e.frostWarding),0!==e.precision&&t.tag(64,v.Varint).int32(e.precision),0!==e.permafrost&&t.tag(65,v.Varint).int32(e.permafrost),0!==e.piercingIce&&t.tag(66,v.Varint).int32(e.piercingIce),!1!==e.icyVeins&&t.tag(67,v.Varint).bool(e.icyVeins),0!==e.improvedBlizzard&&t.tag(68,v.Varint).int32(e.improvedBlizzard),0!==e.arcticReach&&t.tag(69,v.Varint).int32(e.arcticReach),0!==e.frostChanneling&&t.tag(70,v.Varint).int32(e.frostChanneling),0!==e.shatter&&t.tag(71,v.Varint).int32(e.shatter),!1!==e.coldSnap&&t.tag(72,v.Varint).bool(e.coldSnap),0!==e.improvedConeOfCold&&t.tag(73,v.Varint).int32(e.improvedConeOfCold),0!==e.frozenCore&&t.tag(74,v.Varint).int32(e.frozenCore),0!==e.coldAsIce&&t.tag(75,v.Varint).int32(e.coldAsIce),0!==e.wintersChill&&t.tag(76,v.Varint).int32(e.wintersChill),0!==e.shatteredBarrier&&t.tag(77,v.Varint).int32(e.shatteredBarrier),!1!==e.iceBarrier&&t.tag(78,v.Varint).bool(e.iceBarrier),0!==e.arcticWinds&&t.tag(79,v.Varint).int32(e.arcticWinds),0!==e.empoweredFrostbolt&&t.tag(80,v.Varint).int32(e.empoweredFrostbolt),0!==e.fingersOfFrost&&t.tag(81,v.Varint).int32(e.fingersOfFrost),0!==e.brainFreeze&&t.tag(82,v.Varint).int32(e.brainFreeze),!1!==e.summonWaterElemental&&t.tag(83,v.Varint).bool(e.summonWaterElemental),0!==e.enduringWinter&&t.tag(84,v.Varint).int32(e.enduringWinter),0!==e.chilledToTheBone&&t.tag(85,v.Varint).int32(e.chilledToTheBone),!1!==e.deepFreeze&&t.tag(86,v.Varint).bool(e.deepFreeze);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Qa=new class extends X{constructor(){super("proto.Mage",[{no:1,name:"rotation",kind:"message",T:()=>Xa},{no:2,name:"talents",kind:"message",T:()=>Ya},{no:3,name:"options",kind:"message",T:()=>Za}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=Xa.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=Ya.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Za.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&Xa.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&Ya.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Za.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Xa=new class extends X{constructor(){super("proto.Mage.Rotation",[{no:1,name:"type",kind:"enum",T:()=>["proto.Mage.Rotation.Type",za]},{no:2,name:"min_blast_before_missiles",kind:"scalar",T:5},{no:8,name:"num_4_stack_blasts_to_missiles_gamble",kind:"scalar",T:5},{no:9,name:"num_4_stack_blasts_to_early_missiles",kind:"scalar",T:5},{no:10,name:"extra_blasts_during_first_ap",kind:"scalar",T:5},{no:3,name:"primary_fire_spell",kind:"enum",T:()=>["proto.Mage.Rotation.PrimaryFireSpell",Ha]},{no:4,name:"maintain_improved_scorch",kind:"scalar",T:8},{no:5,name:"num_extra_targets",kind:"scalar",T:5},{no:11,name:"optimize_cds_for_execute",kind:"scalar",T:8},{no:12,name:"cqs_latency",kind:"scalar",T:5},{no:13,name:"lb_before_hotstreak",kind:"scalar",T:8},{no:6,name:"water_elemental_disobey_chance",kind:"scalar",T:1},{no:7,name:"aoe",kind:"enum",T:()=>["proto.Mage.Rotation.AoeRotation",$a]}])}create(e){const t={type:0,minBlastBeforeMissiles:0,num4StackBlastsToMissilesGamble:0,num4StackBlastsToEarlyMissiles:0,extraBlastsDuringFirstAp:0,primaryFireSpell:0,maintainImprovedScorch:!1,numExtraTargets:0,optimizeCdsForExecute:!1,cqsLatency:0,lbBeforeHotstreak:!1,waterElementalDisobeyChance:0,aoe:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.type=e.int32();break;case 2:i.minBlastBeforeMissiles=e.int32();break;case 8:i.num4StackBlastsToMissilesGamble=e.int32();break;case 9:i.num4StackBlastsToEarlyMissiles=e.int32();break;case 10:i.extraBlastsDuringFirstAp=e.int32();break;case 3:i.primaryFireSpell=e.int32();break;case 4:i.maintainImprovedScorch=e.bool();break;case 5:i.numExtraTargets=e.int32();break;case 11:i.optimizeCdsForExecute=e.bool();break;case 12:i.cqsLatency=e.int32();break;case 13:i.lbBeforeHotstreak=e.bool();break;case 6:i.waterElementalDisobeyChance=e.double();break;case 7:i.aoe=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.type&&t.tag(1,v.Varint).int32(e.type),0!==e.minBlastBeforeMissiles&&t.tag(2,v.Varint).int32(e.minBlastBeforeMissiles),0!==e.num4StackBlastsToMissilesGamble&&t.tag(8,v.Varint).int32(e.num4StackBlastsToMissilesGamble),0!==e.num4StackBlastsToEarlyMissiles&&t.tag(9,v.Varint).int32(e.num4StackBlastsToEarlyMissiles),0!==e.extraBlastsDuringFirstAp&&t.tag(10,v.Varint).int32(e.extraBlastsDuringFirstAp),0!==e.primaryFireSpell&&t.tag(3,v.Varint).int32(e.primaryFireSpell),!1!==e.maintainImprovedScorch&&t.tag(4,v.Varint).bool(e.maintainImprovedScorch),0!==e.numExtraTargets&&t.tag(5,v.Varint).int32(e.numExtraTargets),!1!==e.optimizeCdsForExecute&&t.tag(11,v.Varint).bool(e.optimizeCdsForExecute),0!==e.cqsLatency&&t.tag(12,v.Varint).int32(e.cqsLatency),!1!==e.lbBeforeHotstreak&&t.tag(13,v.Varint).bool(e.lbBeforeHotstreak),0!==e.waterElementalDisobeyChance&&t.tag(6,v.Bit64).double(e.waterElementalDisobeyChance),0!==e.aoe&&t.tag(7,v.Varint).int32(e.aoe);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Za=new class extends X{constructor(){super("proto.Mage.Options",[{no:1,name:"armor",kind:"enum",T:()=>["proto.Mage.Options.ArmorType",qa]},{no:2,name:"evocation_ticks",kind:"scalar",T:5},{no:3,name:"focus_magic_percent_uptime",kind:"scalar",T:5}])}create(e){const t={armor:0,evocationTicks:0,focusMagicPercentUptime:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.armor=e.int32();break;case 2:i.evocationTicks=e.int32();break;case 3:i.focusMagicPercentUptime=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.armor&&t.tag(1,v.Varint).int32(e.armor),0!==e.evocationTicks&&t.tag(2,v.Varint).int32(e.evocationTicks),0!==e.focusMagicPercentUptime&&t.tag(3,v.Varint).int32(e.focusMagicPercentUptime);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var en=(e=>(e[e.UnknownType=0]="UnknownType",e[e.SingleTarget=1]="SingleTarget",e[e.Aoe=3]="Aoe",e[e.Custom=2]="Custom",e))(en||{}),tn=(e=>(e[e.NoSting=0]="NoSting",e[e.ScorpidSting=1]="ScorpidSting",e[e.SerpentSting=2]="SerpentSting",e))(tn||{}),an=(e=>(e[e.NoSpell=0]="NoSpell",e[e.SteadyShot=1]="SteadyShot",e[e.ArcaneShot=2]="ArcaneShot",e[e.AimedShot=3]="AimedShot",e[e.MultiShot=4]="MultiShot",e[e.SerpentStingSpell=5]="SerpentStingSpell",e[e.ScorpidStingSpell=6]="ScorpidStingSpell",e[e.KillShot=7]="KillShot",e[e.BlackArrow=8]="BlackArrow",e[e.ChimeraShot=9]="ChimeraShot",e[e.ExplosiveShot=10]="ExplosiveShot",e[e.ExplosiveTrap=11]="ExplosiveTrap",e[e.Volley=12]="Volley",e))(an||{}),nn=(e=>(e[e.AmmoNone=0]="AmmoNone",e[e.IcebladeArrow=1]="IcebladeArrow",e[e.SaroniteRazorheads=2]="SaroniteRazorheads",e[e.TerrorshaftArrow=3]="TerrorshaftArrow",e[e.TimelessArrow=4]="TimelessArrow",e[e.MysteriousArrow=5]="MysteriousArrow",e[e.AdamantiteStinger=6]="AdamantiteStinger",e[e.BlackflightArrow=7]="BlackflightArrow",e))(nn||{}),on=(e=>(e[e.PetNone=0]="PetNone",e[e.Bat=1]="Bat",e[e.Bear=2]="Bear",e[e.BirdOfPrey=3]="BirdOfPrey",e[e.Boar=4]="Boar",e[e.CarrionBird=5]="CarrionBird",e[e.Cat=6]="Cat",e[e.Chimaera=7]="Chimaera",e[e.CoreHound=8]="CoreHound",e[e.Crab=9]="Crab",e[e.Crocolisk=10]="Crocolisk",e[e.Devilsaur=11]="Devilsaur",e[e.Dragonhawk=12]="Dragonhawk",e[e.Gorilla=13]="Gorilla",e[e.Hyena=14]="Hyena",e[e.Moth=15]="Moth",e[e.NetherRay=16]="NetherRay",e[e.Raptor=17]="Raptor",e[e.Ravager=18]="Ravager",e[e.Rhino=19]="Rhino",e[e.Scorpid=20]="Scorpid",e[e.Serpent=21]="Serpent",e[e.Silithid=22]="Silithid",e[e.Spider=23]="Spider",e[e.SpiritBeast=24]="SpiritBeast",e[e.SporeBat=25]="SporeBat",e[e.Tallstrider=26]="Tallstrider",e[e.Turtle=27]="Turtle",e[e.WarpStalker=28]="WarpStalker",e[e.Wasp=29]="Wasp",e[e.WindSerpent=30]="WindSerpent",e[e.Wolf=31]="Wolf",e[e.Worm=32]="Worm",e))(on||{}),rn=(e=>(e[e.HunterMajorGlyphNone=0]="HunterMajorGlyphNone",e[e.GlyphOfAimedShot=42897]="GlyphOfAimedShot",e[e.GlyphOfArcaneShot=42898]="GlyphOfArcaneShot",e[e.GlyphOfAspectOfTheViper=42901]="GlyphOfAspectOfTheViper",e[e.GlyphOfBestialWrath=42902]="GlyphOfBestialWrath",e[e.GlyphOfChimeraShot=45625]="GlyphOfChimeraShot",e[e.GlyphOfDeterrence=42903]="GlyphOfDeterrence",e[e.GlyphOfDisengage=42904]="GlyphOfDisengage",e[e.GlyphOfExplosiveShot=45731]="GlyphOfExplosiveShot",e[e.GlyphOfExplosiveTrap=45733]="GlyphOfExplosiveTrap",e[e.GlyphOfFreezingTrap=42905]="GlyphOfFreezingTrap",e[e.GlyphOfFrostTrap=42906]="GlyphOfFrostTrap",e[e.GlyphOfHuntersMark=42907]="GlyphOfHuntersMark",e[e.GlyphOfImmolationTrap=42908]="GlyphOfImmolationTrap",e[e.GlyphOfKillShot=45732]="GlyphOfKillShot",e[e.GlyphOfMending=42900]="GlyphOfMending",e[e.GlyphOfMultiShot=42910]="GlyphOfMultiShot",e[e.GlyphOfRapidFire=42911]="GlyphOfRapidFire",e[e.GlyphOfRaptorStrike=45735]="GlyphOfRaptorStrike",e[e.GlyphOfScatterShot=45734]="GlyphOfScatterShot",e[e.GlyphOfSerpentSting=42912]="GlyphOfSerpentSting",e[e.GlyphOfSnakeTrap=42913]="GlyphOfSnakeTrap",e[e.GlyphOfSteadyShot=42914]="GlyphOfSteadyShot",e[e.GlyphOfTheBeast=42899]="GlyphOfTheBeast",e[e.GlyphOfTheHawk=42909]="GlyphOfTheHawk",e[e.GlyphOfTrueshotAura=42915]="GlyphOfTrueshotAura",e[e.GlyphOfVolley=42916]="GlyphOfVolley",e[e.GlyphOfWyvernSting=42917]="GlyphOfWyvernSting",e))(rn||{}),sn=(e=>(e[e.HunterMinorGlyphNone=0]="HunterMinorGlyphNone",e[e.GlyphOfFeignDeath=43351]="GlyphOfFeignDeath",e[e.GlyphOfMendPet=43350]="GlyphOfMendPet",e[e.GlyphOfPossessedStrength=43354]="GlyphOfPossessedStrength",e[e.GlyphOfRevivePet=43338]="GlyphOfRevivePet",e[e.GlyphOfScareBeast=43356]="GlyphOfScareBeast",e[e.GlyphOfThePack=43355]="GlyphOfThePack",e))(sn||{});const ln=new class extends X{constructor(){super("proto.HunterTalents",[{no:1,name:"improved_aspect_of_the_hawk",kind:"scalar",T:5},{no:2,name:"endurance_training",kind:"scalar",T:5},{no:3,name:"focused_fire",kind:"scalar",T:5},{no:4,name:"improved_aspect_of_the_monkey",kind:"scalar",T:5},{no:5,name:"thick_hide",kind:"scalar",T:5},{no:6,name:"improved_revive_pet",kind:"scalar",T:5},{no:7,name:"pathfinding",kind:"scalar",T:5},{no:8,name:"aspect_mastery",kind:"scalar",T:8},{no:9,name:"unleashed_fury",kind:"scalar",T:5},{no:10,name:"improved_mend_pet",kind:"scalar",T:5},{no:11,name:"ferocity",kind:"scalar",T:5},{no:12,name:"spirit_bond",kind:"scalar",T:5},{no:13,name:"intimidation",kind:"scalar",T:8},{no:14,name:"bestial_discipline",kind:"scalar",T:5},{no:15,name:"animal_handler",kind:"scalar",T:5},{no:16,name:"frenzy",kind:"scalar",T:5},{no:17,name:"ferocious_inspiration",kind:"scalar",T:5},{no:18,name:"bestial_wrath",kind:"scalar",T:8},{no:19,name:"catlike_reflexes",kind:"scalar",T:5},{no:20,name:"invigoration",kind:"scalar",T:5},{no:21,name:"serpents_swiftness",kind:"scalar",T:5},{no:22,name:"longevity",kind:"scalar",T:5},{no:23,name:"the_beast_within",kind:"scalar",T:8},{no:24,name:"cobra_strikes",kind:"scalar",T:5},{no:25,name:"kindred_spirits",kind:"scalar",T:5},{no:26,name:"beast_mastery",kind:"scalar",T:8},{no:27,name:"improved_concussive_shot",kind:"scalar",T:5},{no:28,name:"focused_aim",kind:"scalar",T:5},{no:29,name:"lethal_shots",kind:"scalar",T:5},{no:30,name:"careful_aim",kind:"scalar",T:5},{no:31,name:"improved_hunters_mark",kind:"scalar",T:5},{no:32,name:"mortal_shots",kind:"scalar",T:5},{no:33,name:"go_for_the_throat",kind:"scalar",T:5},{no:34,name:"improved_arcane_shot",kind:"scalar",T:5},{no:35,name:"aimed_shot",kind:"scalar",T:8},{no:36,name:"rapid_killing",kind:"scalar",T:5},{no:37,name:"improved_stings",kind:"scalar",T:5},{no:38,name:"efficiency",kind:"scalar",T:5},{no:39,name:"concussive_barrage",kind:"scalar",T:5},{no:40,name:"readiness",kind:"scalar",T:8},{no:41,name:"barrage",kind:"scalar",T:5},{no:42,name:"combat_experience",kind:"scalar",T:5},{no:43,name:"ranged_weapon_specialization",kind:"scalar",T:5},{no:44,name:"piercing_shots",kind:"scalar",T:5},{no:45,name:"trueshot_aura",kind:"scalar",T:8},{no:46,name:"improved_barrage",kind:"scalar",T:5},{no:47,name:"master_marksman",kind:"scalar",T:5},{no:48,name:"rapid_recuperation",kind:"scalar",T:5},{no:49,name:"wild_quiver",kind:"scalar",T:5},{no:50,name:"silencing_shot",kind:"scalar",T:8},{no:51,name:"improved_steady_shot",kind:"scalar",T:5},{no:52,name:"marked_for_death",kind:"scalar",T:5},{no:53,name:"chimera_shot",kind:"scalar",T:8},{no:54,name:"improved_tracking",kind:"scalar",T:5},{no:55,name:"hawk_eye",kind:"scalar",T:5},{no:56,name:"savage_strikes",kind:"scalar",T:5},{no:57,name:"surefooted",kind:"scalar",T:5},{no:58,name:"entrapment",kind:"scalar",T:5},{no:59,name:"trap_mastery",kind:"scalar",T:5},{no:60,name:"survival_instincts",kind:"scalar",T:5},{no:61,name:"survivalist",kind:"scalar",T:5},{no:62,name:"scatter_shot",kind:"scalar",T:8},{no:63,name:"deflection",kind:"scalar",T:5},{no:64,name:"survival_tactics",kind:"scalar",T:5},{no:65,name:"t_n_t",kind:"scalar",T:5},{no:66,name:"lock_and_load",kind:"scalar",T:5},{no:67,name:"hunter_vs_wild",kind:"scalar",T:5},{no:68,name:"killer_instinct",kind:"scalar",T:5},{no:69,name:"counterattack",kind:"scalar",T:8},{no:70,name:"lightning_reflexes",kind:"scalar",T:5},{no:71,name:"resourcefulness",kind:"scalar",T:5},{no:72,name:"expose_weakness",kind:"scalar",T:5},{no:73,name:"wyvern_sting",kind:"scalar",T:8},{no:74,name:"thrill_of_the_hunt",kind:"scalar",T:5},{no:75,name:"master_tactician",kind:"scalar",T:5},{no:76,name:"noxious_stings",kind:"scalar",T:5},{no:77,name:"point_of_no_escape",kind:"scalar",T:5},{no:78,name:"black_arrow",kind:"scalar",T:8},{no:79,name:"sniper_training",kind:"scalar",T:5},{no:80,name:"hunting_party",kind:"scalar",T:5},{no:81,name:"explosive_shot",kind:"scalar",T:8}])}create(e){const t={improvedAspectOfTheHawk:0,enduranceTraining:0,focusedFire:0,improvedAspectOfTheMonkey:0,thickHide:0,improvedRevivePet:0,pathfinding:0,aspectMastery:!1,unleashedFury:0,improvedMendPet:0,ferocity:0,spiritBond:0,intimidation:!1,bestialDiscipline:0,animalHandler:0,frenzy:0,ferociousInspiration:0,bestialWrath:!1,catlikeReflexes:0,invigoration:0,serpentsSwiftness:0,longevity:0,theBeastWithin:!1,cobraStrikes:0,kindredSpirits:0,beastMastery:!1,improvedConcussiveShot:0,focusedAim:0,lethalShots:0,carefulAim:0,improvedHuntersMark:0,mortalShots:0,goForTheThroat:0,improvedArcaneShot:0,aimedShot:!1,rapidKilling:0,improvedStings:0,efficiency:0,concussiveBarrage:0,readiness:!1,barrage:0,combatExperience:0,rangedWeaponSpecialization:0,piercingShots:0,trueshotAura:!1,improvedBarrage:0,masterMarksman:0,rapidRecuperation:0,wildQuiver:0,silencingShot:!1,improvedSteadyShot:0,markedForDeath:0,chimeraShot:!1,improvedTracking:0,hawkEye:0,savageStrikes:0,surefooted:0,entrapment:0,trapMastery:0,survivalInstincts:0,survivalist:0,scatterShot:!1,deflection:0,survivalTactics:0,tNT:0,lockAndLoad:0,hunterVsWild:0,killerInstinct:0,counterattack:!1,lightningReflexes:0,resourcefulness:0,exposeWeakness:0,wyvernSting:!1,thrillOfTheHunt:0,masterTactician:0,noxiousStings:0,pointOfNoEscape:0,blackArrow:!1,sniperTraining:0,huntingParty:0,explosiveShot:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.improvedAspectOfTheHawk=e.int32();break;case 2:i.enduranceTraining=e.int32();break;case 3:i.focusedFire=e.int32();break;case 4:i.improvedAspectOfTheMonkey=e.int32();break;case 5:i.thickHide=e.int32();break;case 6:i.improvedRevivePet=e.int32();break;case 7:i.pathfinding=e.int32();break;case 8:i.aspectMastery=e.bool();break;case 9:i.unleashedFury=e.int32();break;case 10:i.improvedMendPet=e.int32();break;case 11:i.ferocity=e.int32();break;case 12:i.spiritBond=e.int32();break;case 13:i.intimidation=e.bool();break;case 14:i.bestialDiscipline=e.int32();break;case 15:i.animalHandler=e.int32();break;case 16:i.frenzy=e.int32();break;case 17:i.ferociousInspiration=e.int32();break;case 18:i.bestialWrath=e.bool();break;case 19:i.catlikeReflexes=e.int32();break;case 20:i.invigoration=e.int32();break;case 21:i.serpentsSwiftness=e.int32();break;case 22:i.longevity=e.int32();break;case 23:i.theBeastWithin=e.bool();break;case 24:i.cobraStrikes=e.int32();break;case 25:i.kindredSpirits=e.int32();break;case 26:i.beastMastery=e.bool();break;case 27:i.improvedConcussiveShot=e.int32();break;case 28:i.focusedAim=e.int32();break;case 29:i.lethalShots=e.int32();break;case 30:i.carefulAim=e.int32();break;case 31:i.improvedHuntersMark=e.int32();break;case 32:i.mortalShots=e.int32();break;case 33:i.goForTheThroat=e.int32();break;case 34:i.improvedArcaneShot=e.int32();break;case 35:i.aimedShot=e.bool();break;case 36:i.rapidKilling=e.int32();break;case 37:i.improvedStings=e.int32();break;case 38:i.efficiency=e.int32();break;case 39:i.concussiveBarrage=e.int32();break;case 40:i.readiness=e.bool();break;case 41:i.barrage=e.int32();break;case 42:i.combatExperience=e.int32();break;case 43:i.rangedWeaponSpecialization=e.int32();break;case 44:i.piercingShots=e.int32();break;case 45:i.trueshotAura=e.bool();break;case 46:i.improvedBarrage=e.int32();break;case 47:i.masterMarksman=e.int32();break;case 48:i.rapidRecuperation=e.int32();break;case 49:i.wildQuiver=e.int32();break;case 50:i.silencingShot=e.bool();break;case 51:i.improvedSteadyShot=e.int32();break;case 52:i.markedForDeath=e.int32();break;case 53:i.chimeraShot=e.bool();break;case 54:i.improvedTracking=e.int32();break;case 55:i.hawkEye=e.int32();break;case 56:i.savageStrikes=e.int32();break;case 57:i.surefooted=e.int32();break;case 58:i.entrapment=e.int32();break;case 59:i.trapMastery=e.int32();break;case 60:i.survivalInstincts=e.int32();break;case 61:i.survivalist=e.int32();break;case 62:i.scatterShot=e.bool();break;case 63:i.deflection=e.int32();break;case 64:i.survivalTactics=e.int32();break;case 65:i.tNT=e.int32();break;case 66:i.lockAndLoad=e.int32();break;case 67:i.hunterVsWild=e.int32();break;case 68:i.killerInstinct=e.int32();break;case 69:i.counterattack=e.bool();break;case 70:i.lightningReflexes=e.int32();break;case 71:i.resourcefulness=e.int32();break;case 72:i.exposeWeakness=e.int32();break;case 73:i.wyvernSting=e.bool();break;case 74:i.thrillOfTheHunt=e.int32();break;case 75:i.masterTactician=e.int32();break;case 76:i.noxiousStings=e.int32();break;case 77:i.pointOfNoEscape=e.int32();break;case 78:i.blackArrow=e.bool();break;case 79:i.sniperTraining=e.int32();break;case 80:i.huntingParty=e.int32();break;case 81:i.explosiveShot=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.improvedAspectOfTheHawk&&t.tag(1,v.Varint).int32(e.improvedAspectOfTheHawk),0!==e.enduranceTraining&&t.tag(2,v.Varint).int32(e.enduranceTraining),0!==e.focusedFire&&t.tag(3,v.Varint).int32(e.focusedFire),0!==e.improvedAspectOfTheMonkey&&t.tag(4,v.Varint).int32(e.improvedAspectOfTheMonkey),0!==e.thickHide&&t.tag(5,v.Varint).int32(e.thickHide),0!==e.improvedRevivePet&&t.tag(6,v.Varint).int32(e.improvedRevivePet),0!==e.pathfinding&&t.tag(7,v.Varint).int32(e.pathfinding),!1!==e.aspectMastery&&t.tag(8,v.Varint).bool(e.aspectMastery),0!==e.unleashedFury&&t.tag(9,v.Varint).int32(e.unleashedFury),0!==e.improvedMendPet&&t.tag(10,v.Varint).int32(e.improvedMendPet),0!==e.ferocity&&t.tag(11,v.Varint).int32(e.ferocity),0!==e.spiritBond&&t.tag(12,v.Varint).int32(e.spiritBond),!1!==e.intimidation&&t.tag(13,v.Varint).bool(e.intimidation),0!==e.bestialDiscipline&&t.tag(14,v.Varint).int32(e.bestialDiscipline),0!==e.animalHandler&&t.tag(15,v.Varint).int32(e.animalHandler),0!==e.frenzy&&t.tag(16,v.Varint).int32(e.frenzy),0!==e.ferociousInspiration&&t.tag(17,v.Varint).int32(e.ferociousInspiration),!1!==e.bestialWrath&&t.tag(18,v.Varint).bool(e.bestialWrath),0!==e.catlikeReflexes&&t.tag(19,v.Varint).int32(e.catlikeReflexes),0!==e.invigoration&&t.tag(20,v.Varint).int32(e.invigoration),0!==e.serpentsSwiftness&&t.tag(21,v.Varint).int32(e.serpentsSwiftness),0!==e.longevity&&t.tag(22,v.Varint).int32(e.longevity),!1!==e.theBeastWithin&&t.tag(23,v.Varint).bool(e.theBeastWithin),0!==e.cobraStrikes&&t.tag(24,v.Varint).int32(e.cobraStrikes),0!==e.kindredSpirits&&t.tag(25,v.Varint).int32(e.kindredSpirits),!1!==e.beastMastery&&t.tag(26,v.Varint).bool(e.beastMastery),0!==e.improvedConcussiveShot&&t.tag(27,v.Varint).int32(e.improvedConcussiveShot),0!==e.focusedAim&&t.tag(28,v.Varint).int32(e.focusedAim),0!==e.lethalShots&&t.tag(29,v.Varint).int32(e.lethalShots),0!==e.carefulAim&&t.tag(30,v.Varint).int32(e.carefulAim),0!==e.improvedHuntersMark&&t.tag(31,v.Varint).int32(e.improvedHuntersMark),0!==e.mortalShots&&t.tag(32,v.Varint).int32(e.mortalShots),0!==e.goForTheThroat&&t.tag(33,v.Varint).int32(e.goForTheThroat),0!==e.improvedArcaneShot&&t.tag(34,v.Varint).int32(e.improvedArcaneShot),!1!==e.aimedShot&&t.tag(35,v.Varint).bool(e.aimedShot),0!==e.rapidKilling&&t.tag(36,v.Varint).int32(e.rapidKilling),0!==e.improvedStings&&t.tag(37,v.Varint).int32(e.improvedStings),0!==e.efficiency&&t.tag(38,v.Varint).int32(e.efficiency),0!==e.concussiveBarrage&&t.tag(39,v.Varint).int32(e.concussiveBarrage),!1!==e.readiness&&t.tag(40,v.Varint).bool(e.readiness),0!==e.barrage&&t.tag(41,v.Varint).int32(e.barrage),0!==e.combatExperience&&t.tag(42,v.Varint).int32(e.combatExperience),0!==e.rangedWeaponSpecialization&&t.tag(43,v.Varint).int32(e.rangedWeaponSpecialization),0!==e.piercingShots&&t.tag(44,v.Varint).int32(e.piercingShots),!1!==e.trueshotAura&&t.tag(45,v.Varint).bool(e.trueshotAura),0!==e.improvedBarrage&&t.tag(46,v.Varint).int32(e.improvedBarrage),0!==e.masterMarksman&&t.tag(47,v.Varint).int32(e.masterMarksman),0!==e.rapidRecuperation&&t.tag(48,v.Varint).int32(e.rapidRecuperation),0!==e.wildQuiver&&t.tag(49,v.Varint).int32(e.wildQuiver),!1!==e.silencingShot&&t.tag(50,v.Varint).bool(e.silencingShot),0!==e.improvedSteadyShot&&t.tag(51,v.Varint).int32(e.improvedSteadyShot),0!==e.markedForDeath&&t.tag(52,v.Varint).int32(e.markedForDeath),!1!==e.chimeraShot&&t.tag(53,v.Varint).bool(e.chimeraShot),0!==e.improvedTracking&&t.tag(54,v.Varint).int32(e.improvedTracking),0!==e.hawkEye&&t.tag(55,v.Varint).int32(e.hawkEye),0!==e.savageStrikes&&t.tag(56,v.Varint).int32(e.savageStrikes),0!==e.surefooted&&t.tag(57,v.Varint).int32(e.surefooted),0!==e.entrapment&&t.tag(58,v.Varint).int32(e.entrapment),0!==e.trapMastery&&t.tag(59,v.Varint).int32(e.trapMastery),0!==e.survivalInstincts&&t.tag(60,v.Varint).int32(e.survivalInstincts),0!==e.survivalist&&t.tag(61,v.Varint).int32(e.survivalist),!1!==e.scatterShot&&t.tag(62,v.Varint).bool(e.scatterShot),0!==e.deflection&&t.tag(63,v.Varint).int32(e.deflection),0!==e.survivalTactics&&t.tag(64,v.Varint).int32(e.survivalTactics),0!==e.tNT&&t.tag(65,v.Varint).int32(e.tNT),0!==e.lockAndLoad&&t.tag(66,v.Varint).int32(e.lockAndLoad),0!==e.hunterVsWild&&t.tag(67,v.Varint).int32(e.hunterVsWild),0!==e.killerInstinct&&t.tag(68,v.Varint).int32(e.killerInstinct),!1!==e.counterattack&&t.tag(69,v.Varint).bool(e.counterattack),0!==e.lightningReflexes&&t.tag(70,v.Varint).int32(e.lightningReflexes),0!==e.resourcefulness&&t.tag(71,v.Varint).int32(e.resourcefulness),0!==e.exposeWeakness&&t.tag(72,v.Varint).int32(e.exposeWeakness),!1!==e.wyvernSting&&t.tag(73,v.Varint).bool(e.wyvernSting),0!==e.thrillOfTheHunt&&t.tag(74,v.Varint).int32(e.thrillOfTheHunt),0!==e.masterTactician&&t.tag(75,v.Varint).int32(e.masterTactician),0!==e.noxiousStings&&t.tag(76,v.Varint).int32(e.noxiousStings),0!==e.pointOfNoEscape&&t.tag(77,v.Varint).int32(e.pointOfNoEscape),!1!==e.blackArrow&&t.tag(78,v.Varint).bool(e.blackArrow),0!==e.sniperTraining&&t.tag(79,v.Varint).int32(e.sniperTraining),0!==e.huntingParty&&t.tag(80,v.Varint).int32(e.huntingParty),!1!==e.explosiveShot&&t.tag(81,v.Varint).bool(e.explosiveShot);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const cn=new class extends X{constructor(){super("proto.HunterPetTalents",[{no:1,name:"cobra_reflexes",kind:"scalar",T:5},{no:2,name:"dive",kind:"scalar",T:8},{no:3,name:"great_stamina",kind:"scalar",T:5},{no:4,name:"natural_armor",kind:"scalar",T:5},{no:5,name:"boars_speed",kind:"scalar",T:8},{no:6,name:"mobility",kind:"scalar",T:5},{no:7,name:"owls_focus",kind:"scalar",T:5},{no:8,name:"spiked_collar",kind:"scalar",T:5},{no:9,name:"culling_the_herd",kind:"scalar",T:5},{no:10,name:"lionhearted",kind:"scalar",T:5},{no:11,name:"carrion_feeder",kind:"scalar",T:8},{no:12,name:"great_resistance",kind:"scalar",T:5},{no:13,name:"cornered",kind:"scalar",T:5},{no:14,name:"feeding_frenzy",kind:"scalar",T:5},{no:15,name:"wolverine_bite",kind:"scalar",T:8},{no:16,name:"roar_of_recovery",kind:"scalar",T:8},{no:17,name:"bullheaded",kind:"scalar",T:8},{no:18,name:"grace_of_the_mantis",kind:"scalar",T:5},{no:19,name:"wild_hunt",kind:"scalar",T:5},{no:20,name:"roar_of_sacrifice",kind:"scalar",T:8},{no:21,name:"improved_cower",kind:"scalar",T:5},{no:22,name:"bloodthirsty",kind:"scalar",T:5},{no:23,name:"heart_of_the_pheonix",kind:"scalar",T:8},{no:24,name:"spiders_bite",kind:"scalar",T:5},{no:25,name:"rabid",kind:"scalar",T:8},{no:26,name:"lick_your_wounds",kind:"scalar",T:8},{no:27,name:"call_of_the_wild",kind:"scalar",T:8},{no:28,name:"shark_attack",kind:"scalar",T:5},{no:29,name:"charge",kind:"scalar",T:8},{no:30,name:"blood_of_the_rhino",kind:"scalar",T:5},{no:31,name:"pet_barding",kind:"scalar",T:5},{no:32,name:"guard_dog",kind:"scalar",T:5},{no:33,name:"thunderstomp",kind:"scalar",T:8},{no:34,name:"last_stand",kind:"scalar",T:8},{no:35,name:"taunt",kind:"scalar",T:8},{no:36,name:"intervene",kind:"scalar",T:8},{no:37,name:"silverback",kind:"scalar",T:5}])}create(e){const t={cobraReflexes:0,dive:!1,greatStamina:0,naturalArmor:0,boarsSpeed:!1,mobility:0,owlsFocus:0,spikedCollar:0,cullingTheHerd:0,lionhearted:0,carrionFeeder:!1,greatResistance:0,cornered:0,feedingFrenzy:0,wolverineBite:!1,roarOfRecovery:!1,bullheaded:!1,graceOfTheMantis:0,wildHunt:0,roarOfSacrifice:!1,improvedCower:0,bloodthirsty:0,heartOfThePheonix:!1,spidersBite:0,rabid:!1,lickYourWounds:!1,callOfTheWild:!1,sharkAttack:0,charge:!1,bloodOfTheRhino:0,petBarding:0,guardDog:0,thunderstomp:!1,lastStand:!1,taunt:!1,intervene:!1,silverback:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.cobraReflexes=e.int32();break;case 2:i.dive=e.bool();break;case 3:i.greatStamina=e.int32();break;case 4:i.naturalArmor=e.int32();break;case 5:i.boarsSpeed=e.bool();break;case 6:i.mobility=e.int32();break;case 7:i.owlsFocus=e.int32();break;case 8:i.spikedCollar=e.int32();break;case 9:i.cullingTheHerd=e.int32();break;case 10:i.lionhearted=e.int32();break;case 11:i.carrionFeeder=e.bool();break;case 12:i.greatResistance=e.int32();break;case 13:i.cornered=e.int32();break;case 14:i.feedingFrenzy=e.int32();break;case 15:i.wolverineBite=e.bool();break;case 16:i.roarOfRecovery=e.bool();break;case 17:i.bullheaded=e.bool();break;case 18:i.graceOfTheMantis=e.int32();break;case 19:i.wildHunt=e.int32();break;case 20:i.roarOfSacrifice=e.bool();break;case 21:i.improvedCower=e.int32();break;case 22:i.bloodthirsty=e.int32();break;case 23:i.heartOfThePheonix=e.bool();break;case 24:i.spidersBite=e.int32();break;case 25:i.rabid=e.bool();break;case 26:i.lickYourWounds=e.bool();break;case 27:i.callOfTheWild=e.bool();break;case 28:i.sharkAttack=e.int32();break;case 29:i.charge=e.bool();break;case 30:i.bloodOfTheRhino=e.int32();break;case 31:i.petBarding=e.int32();break;case 32:i.guardDog=e.int32();break;case 33:i.thunderstomp=e.bool();break;case 34:i.lastStand=e.bool();break;case 35:i.taunt=e.bool();break;case 36:i.intervene=e.bool();break;case 37:i.silverback=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.cobraReflexes&&t.tag(1,v.Varint).int32(e.cobraReflexes),!1!==e.dive&&t.tag(2,v.Varint).bool(e.dive),0!==e.greatStamina&&t.tag(3,v.Varint).int32(e.greatStamina),0!==e.naturalArmor&&t.tag(4,v.Varint).int32(e.naturalArmor),!1!==e.boarsSpeed&&t.tag(5,v.Varint).bool(e.boarsSpeed),0!==e.mobility&&t.tag(6,v.Varint).int32(e.mobility),0!==e.owlsFocus&&t.tag(7,v.Varint).int32(e.owlsFocus),0!==e.spikedCollar&&t.tag(8,v.Varint).int32(e.spikedCollar),0!==e.cullingTheHerd&&t.tag(9,v.Varint).int32(e.cullingTheHerd),0!==e.lionhearted&&t.tag(10,v.Varint).int32(e.lionhearted),!1!==e.carrionFeeder&&t.tag(11,v.Varint).bool(e.carrionFeeder),0!==e.greatResistance&&t.tag(12,v.Varint).int32(e.greatResistance),0!==e.cornered&&t.tag(13,v.Varint).int32(e.cornered),0!==e.feedingFrenzy&&t.tag(14,v.Varint).int32(e.feedingFrenzy),!1!==e.wolverineBite&&t.tag(15,v.Varint).bool(e.wolverineBite),!1!==e.roarOfRecovery&&t.tag(16,v.Varint).bool(e.roarOfRecovery),!1!==e.bullheaded&&t.tag(17,v.Varint).bool(e.bullheaded),0!==e.graceOfTheMantis&&t.tag(18,v.Varint).int32(e.graceOfTheMantis),0!==e.wildHunt&&t.tag(19,v.Varint).int32(e.wildHunt),!1!==e.roarOfSacrifice&&t.tag(20,v.Varint).bool(e.roarOfSacrifice),0!==e.improvedCower&&t.tag(21,v.Varint).int32(e.improvedCower),0!==e.bloodthirsty&&t.tag(22,v.Varint).int32(e.bloodthirsty),!1!==e.heartOfThePheonix&&t.tag(23,v.Varint).bool(e.heartOfThePheonix),0!==e.spidersBite&&t.tag(24,v.Varint).int32(e.spidersBite),!1!==e.rabid&&t.tag(25,v.Varint).bool(e.rabid),!1!==e.lickYourWounds&&t.tag(26,v.Varint).bool(e.lickYourWounds),!1!==e.callOfTheWild&&t.tag(27,v.Varint).bool(e.callOfTheWild),0!==e.sharkAttack&&t.tag(28,v.Varint).int32(e.sharkAttack),!1!==e.charge&&t.tag(29,v.Varint).bool(e.charge),0!==e.bloodOfTheRhino&&t.tag(30,v.Varint).int32(e.bloodOfTheRhino),0!==e.petBarding&&t.tag(31,v.Varint).int32(e.petBarding),0!==e.guardDog&&t.tag(32,v.Varint).int32(e.guardDog),!1!==e.thunderstomp&&t.tag(33,v.Varint).bool(e.thunderstomp),!1!==e.lastStand&&t.tag(34,v.Varint).bool(e.lastStand),!1!==e.taunt&&t.tag(35,v.Varint).bool(e.taunt),!1!==e.intervene&&t.tag(36,v.Varint).bool(e.intervene),0!==e.silverback&&t.tag(37,v.Varint).int32(e.silverback);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const dn=new class extends X{constructor(){super("proto.Hunter",[{no:1,name:"rotation",kind:"message",T:()=>mn},{no:2,name:"talents",kind:"message",T:()=>ln},{no:3,name:"options",kind:"message",T:()=>pn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=mn.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=ln.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=pn.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&mn.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&ln.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&pn.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const mn=new class extends X{constructor(){super("proto.Hunter.Rotation",[{no:9,name:"type",kind:"enum",T:()=>["proto.Hunter.Rotation.RotationType",en]},{no:5,name:"sting",kind:"enum",T:()=>["proto.Hunter.Rotation.StingType",tn]},{no:1,name:"trap_weave",kind:"scalar",T:8},{no:2,name:"time_to_trap_weave_ms",kind:"scalar",T:1},{no:8,name:"custom_rotation",kind:"message",T:()=>He},{no:6,name:"viper_start_mana_percent",kind:"scalar",T:1},{no:7,name:"viper_stop_mana_percent",kind:"scalar",T:1}])}create(e){const t={type:0,sting:0,trapWeave:!1,timeToTrapWeaveMs:0,viperStartManaPercent:0,viperStopManaPercent:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 9:i.type=e.int32();break;case 5:i.sting=e.int32();break;case 1:i.trapWeave=e.bool();break;case 2:i.timeToTrapWeaveMs=e.double();break;case 8:i.customRotation=He.internalBinaryRead(e,e.uint32(),a,i.customRotation);break;case 6:i.viperStartManaPercent=e.double();break;case 7:i.viperStopManaPercent=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.type&&t.tag(9,v.Varint).int32(e.type),0!==e.sting&&t.tag(5,v.Varint).int32(e.sting),!1!==e.trapWeave&&t.tag(1,v.Varint).bool(e.trapWeave),0!==e.timeToTrapWeaveMs&&t.tag(2,v.Bit64).double(e.timeToTrapWeaveMs),e.customRotation&&He.internalBinaryWrite(e.customRotation,t.tag(8,v.LengthDelimited).fork(),a).join(),0!==e.viperStartManaPercent&&t.tag(6,v.Bit64).double(e.viperStartManaPercent),0!==e.viperStopManaPercent&&t.tag(7,v.Bit64).double(e.viperStopManaPercent);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const pn=new class extends X{constructor(){super("proto.Hunter.Options",[{no:1,name:"ammo",kind:"enum",T:()=>["proto.Hunter.Options.Ammo",nn]},{no:2,name:"pet_type",kind:"enum",T:()=>["proto.Hunter.Options.PetType",on]},{no:3,name:"pet_talents",kind:"message",T:()=>cn},{no:4,name:"pet_uptime",kind:"scalar",T:1},{no:7,name:"sniper_training_uptime",kind:"scalar",T:1},{no:5,name:"use_hunters_mark",kind:"scalar",T:8}])}create(e){const t={ammo:0,petType:0,petUptime:0,sniperTrainingUptime:0,useHuntersMark:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.ammo=e.int32();break;case 2:i.petType=e.int32();break;case 3:i.petTalents=cn.internalBinaryRead(e,e.uint32(),a,i.petTalents);break;case 4:i.petUptime=e.double();break;case 7:i.sniperTrainingUptime=e.double();break;case 5:i.useHuntersMark=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.ammo&&t.tag(1,v.Varint).int32(e.ammo),0!==e.petType&&t.tag(2,v.Varint).int32(e.petType),e.petTalents&&cn.internalBinaryWrite(e.petTalents,t.tag(3,v.LengthDelimited).fork(),a).join(),0!==e.petUptime&&t.tag(4,v.Bit64).double(e.petUptime),0!==e.sniperTrainingUptime&&t.tag(7,v.Bit64).double(e.sniperTrainingUptime),!1!==e.useHuntersMark&&t.tag(5,v.Varint).bool(e.useHuntersMark);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var hn=(e=>(e[e.Unknown=0]="Unknown",e[e.Adaptive=1]="Adaptive",e))(hn||{}),gn=(e=>(e[e.None=0]="None",e[e.Mangle=1]="Mangle",e[e.Lacerate=2]="Lacerate",e))(gn||{}),un=(e=>(e[e.Emperical=0]="Emperical",e[e.Analytical=1]="Analytical",e))(un||{}),fn=(e=>(e[e.SwipeNone=0]="SwipeNone",e[e.SwipeWithEnoughAP=1]="SwipeWithEnoughAP",e[e.SwipeSpam=2]="SwipeSpam",e))(fn||{}),wn=(e=>(e[e.DruidMajorGlyphNone=0]="DruidMajorGlyphNone",e[e.GlyphOfBarkskin=45623]="GlyphOfBarkskin",e[e.GlyphOfBerserk=45601]="GlyphOfBerserk",e[e.GlyphOfClaw=48720]="GlyphOfClaw",e[e.GlyphOfEntanglingRoots=40924]="GlyphOfEntanglingRoots",e[e.GlyphOfFocus=44928]="GlyphOfFocus",e[e.GlyphOfFrenziedRegeneration=40896]="GlyphOfFrenziedRegeneration",e[e.GlyphOfGrowling=40899]="GlyphOfGrowling",e[e.GlyphOfHealingTouch=40914]="GlyphOfHealingTouch",e[e.GlyphOfHurricane=40920]="GlyphOfHurricane",e[e.GlyphOfInnervate=40908]="GlyphOfInnervate",e[e.GlyphOfInsectSwarm=40919]="GlyphOfInsectSwarm",e[e.GlyphOfLifebloom=40915]="GlyphOfLifebloom",e[e.GlyphOfMangle=40900]="GlyphOfMangle",e[e.GlyphOfMaul=40897]="GlyphOfMaul",e[e.GlyphOfMonsoon=45622]="GlyphOfMonsoon",e[e.GlyphOfMoonfire=40923]="GlyphOfMoonfire",e[e.GlyphOfNourish=45603]="GlyphOfNourish",e[e.GlyphOfRake=40903]="GlyphOfRake",e[e.GlyphOfRapidRejuvenation=50125]="GlyphOfRapidRejuvenation",e[e.GlyphOfRebirth=40909]="GlyphOfRebirth",e[e.GlyphOfRegrowth=40912]="GlyphOfRegrowth",e[e.GlyphOfRejuvenation=40913]="GlyphOfRejuvenation",e[e.GlyphOfRip=40902]="GlyphOfRip",e[e.GlyphOfSavageRoar=45604]="GlyphOfSavageRoar",e[e.GlyphOfShred=40901]="GlyphOfShred",e[e.GlyphOfStarfall=40921]="GlyphOfStarfall",e[e.GlyphOfStarfire=40916]="GlyphOfStarfire",e[e.GlyphOfSurvivalInstincts=46372]="GlyphOfSurvivalInstincts",e[e.GlyphOfSwiftmend=40906]="GlyphOfSwiftmend",e[e.GlyphOfWildGrowth=45602]="GlyphOfWildGrowth",e[e.GlyphOfWrath=40922]="GlyphOfWrath",e))(wn||{}),yn=(e=>(e[e.DruidMinorGlyphNone=0]="DruidMinorGlyphNone",e[e.GlyphOfAquaticForm=43316]="GlyphOfAquaticForm",e[e.GlyphOfChallengingRoar=43334]="GlyphOfChallengingRoar",e[e.GlyphOfDash=43674]="GlyphOfDash",e[e.GlyphOfTheWild=43335]="GlyphOfTheWild",e[e.GlyphOfThorns=43332]="GlyphOfThorns",e[e.GlyphOfTyphoon=44922]="GlyphOfTyphoon",e[e.GlyphOfUnburdenedRebirth=43331]="GlyphOfUnburdenedRebirth",e))(yn||{});const kn=new class extends X{constructor(){super("proto.DruidTalents",[{no:1,name:"starlight_wrath",kind:"scalar",T:5},{no:2,name:"genesis",kind:"scalar",T:5},{no:3,name:"moonglow",kind:"scalar",T:5},{no:4,name:"natures_majesty",kind:"scalar",T:5},{no:5,name:"improved_moonfire",kind:"scalar",T:5},{no:6,name:"brambles",kind:"scalar",T:5},{no:7,name:"natures_grace",kind:"scalar",T:5},{no:8,name:"natures_splendor",kind:"scalar",T:8},{no:9,name:"natures_reach",kind:"scalar",T:5},{no:10,name:"vengeance",kind:"scalar",T:5},{no:11,name:"celestial_focus",kind:"scalar",T:5},{no:12,name:"lunar_guidance",kind:"scalar",T:5},{no:13,name:"insect_swarm",kind:"scalar",T:8},{no:14,name:"improved_insect_swarm",kind:"scalar",T:5},{no:15,name:"dreamstate",kind:"scalar",T:5},{no:16,name:"moonfury",kind:"scalar",T:5},{no:17,name:"balance_of_power",kind:"scalar",T:5},{no:18,name:"moonkin_form",kind:"scalar",T:8},{no:19,name:"improved_moonkin_form",kind:"scalar",T:5},{no:20,name:"improved_faerie_fire",kind:"scalar",T:5},{no:21,name:"owlkin_frenzy",kind:"scalar",T:5},{no:22,name:"wrath_of_cenarius",kind:"scalar",T:5},{no:23,name:"eclipse",kind:"scalar",T:5},{no:24,name:"typhoon",kind:"scalar",T:8},{no:25,name:"force_of_nature",kind:"scalar",T:8},{no:26,name:"gale_winds",kind:"scalar",T:5},{no:27,name:"earth_and_moon",kind:"scalar",T:5},{no:28,name:"starfall",kind:"scalar",T:8},{no:29,name:"ferocity",kind:"scalar",T:5},{no:30,name:"feral_aggression",kind:"scalar",T:5},{no:31,name:"feral_instinct",kind:"scalar",T:5},{no:32,name:"savage_fury",kind:"scalar",T:5},{no:33,name:"thick_hide",kind:"scalar",T:5},{no:34,name:"feral_swiftness",kind:"scalar",T:5},{no:35,name:"survival_instincts",kind:"scalar",T:8},{no:36,name:"sharpened_claws",kind:"scalar",T:5},{no:37,name:"shredding_attacks",kind:"scalar",T:5},{no:38,name:"predatory_strikes",kind:"scalar",T:5},{no:39,name:"primal_fury",kind:"scalar",T:5},{no:40,name:"primal_precision",kind:"scalar",T:5},{no:41,name:"brutal_impact",kind:"scalar",T:5},{no:42,name:"feral_charge",kind:"scalar",T:8},{no:43,name:"nurturing_instinct",kind:"scalar",T:5},{no:44,name:"natural_reaction",kind:"scalar",T:5},{no:45,name:"heart_of_the_wild",kind:"scalar",T:5},{no:46,name:"survival_of_the_fittest",kind:"scalar",T:5},{no:47,name:"leader_of_the_pack",kind:"scalar",T:8},{no:48,name:"improved_leader_of_the_pack",kind:"scalar",T:5},{no:49,name:"primal_tenacity",kind:"scalar",T:5},{no:50,name:"protector_of_the_pack",kind:"scalar",T:5},{no:51,name:"predatory_instincts",kind:"scalar",T:5},{no:52,name:"infected_wounds",kind:"scalar",T:5},{no:53,name:"king_of_the_jungle",kind:"scalar",T:5},{no:54,name:"mangle",kind:"scalar",T:8},{no:55,name:"improved_mangle",kind:"scalar",T:5},{no:56,name:"rend_and_tear",kind:"scalar",T:5},{no:57,name:"primal_gore",kind:"scalar",T:8},{no:58,name:"berserk",kind:"scalar",T:8},{no:59,name:"improved_mark_of_the_wild",kind:"scalar",T:5},{no:60,name:"natures_focus",kind:"scalar",T:5},{no:61,name:"furor",kind:"scalar",T:5},{no:62,name:"naturalist",kind:"scalar",T:5},{no:63,name:"subtlety",kind:"scalar",T:5},{no:64,name:"natural_shapeshifter",kind:"scalar",T:5},{no:65,name:"intensity",kind:"scalar",T:5},{no:66,name:"omen_of_clarity",kind:"scalar",T:8},{no:67,name:"master_shapeshifter",kind:"scalar",T:5},{no:68,name:"tranquil_spirit",kind:"scalar",T:5},{no:69,name:"improved_rejuvenation",kind:"scalar",T:5},{no:70,name:"natures_swiftness",kind:"scalar",T:8},{no:71,name:"gift_of_nature",kind:"scalar",T:5},{no:72,name:"improved_tranquility",kind:"scalar",T:5},{no:73,name:"empowered_touch",kind:"scalar",T:5},{no:74,name:"natures_bounty",kind:"scalar",T:5},{no:75,name:"living_spirit",kind:"scalar",T:5},{no:76,name:"swiftmend",kind:"scalar",T:8},{no:77,name:"natural_perfection",kind:"scalar",T:5},{no:78,name:"empowered_rejuvenation",kind:"scalar",T:5},{no:79,name:"living_seed",kind:"scalar",T:5},{no:80,name:"revitalize",kind:"scalar",T:5},{no:81,name:"tree_of_life",kind:"scalar",T:8},{no:82,name:"improved_tree_of_life",kind:"scalar",T:5},{no:83,name:"improved_barkskin",kind:"scalar",T:5},{no:84,name:"gift_of_the_earthmother",kind:"scalar",T:5},{no:85,name:"wild_growth",kind:"scalar",T:8}])}create(e){const t={starlightWrath:0,genesis:0,moonglow:0,naturesMajesty:0,improvedMoonfire:0,brambles:0,naturesGrace:0,naturesSplendor:!1,naturesReach:0,vengeance:0,celestialFocus:0,lunarGuidance:0,insectSwarm:!1,improvedInsectSwarm:0,dreamstate:0,moonfury:0,balanceOfPower:0,moonkinForm:!1,improvedMoonkinForm:0,improvedFaerieFire:0,owlkinFrenzy:0,wrathOfCenarius:0,eclipse:0,typhoon:!1,forceOfNature:!1,galeWinds:0,earthAndMoon:0,starfall:!1,ferocity:0,feralAggression:0,feralInstinct:0,savageFury:0,thickHide:0,feralSwiftness:0,survivalInstincts:!1,sharpenedClaws:0,shreddingAttacks:0,predatoryStrikes:0,primalFury:0,primalPrecision:0,brutalImpact:0,feralCharge:!1,nurturingInstinct:0,naturalReaction:0,heartOfTheWild:0,survivalOfTheFittest:0,leaderOfThePack:!1,improvedLeaderOfThePack:0,primalTenacity:0,protectorOfThePack:0,predatoryInstincts:0,infectedWounds:0,kingOfTheJungle:0,mangle:!1,improvedMangle:0,rendAndTear:0,primalGore:!1,berserk:!1,improvedMarkOfTheWild:0,naturesFocus:0,furor:0,naturalist:0,subtlety:0,naturalShapeshifter:0,intensity:0,omenOfClarity:!1,masterShapeshifter:0,tranquilSpirit:0,improvedRejuvenation:0,naturesSwiftness:!1,giftOfNature:0,improvedTranquility:0,empoweredTouch:0,naturesBounty:0,livingSpirit:0,swiftmend:!1,naturalPerfection:0,empoweredRejuvenation:0,livingSeed:0,revitalize:0,treeOfLife:!1,improvedTreeOfLife:0,improvedBarkskin:0,giftOfTheEarthmother:0,wildGrowth:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.starlightWrath=e.int32();break;case 2:i.genesis=e.int32();break;case 3:i.moonglow=e.int32();break;case 4:i.naturesMajesty=e.int32();break;case 5:i.improvedMoonfire=e.int32();break;case 6:i.brambles=e.int32();break;case 7:i.naturesGrace=e.int32();break;case 8:i.naturesSplendor=e.bool();break;case 9:i.naturesReach=e.int32();break;case 10:i.vengeance=e.int32();break;case 11:i.celestialFocus=e.int32();break;case 12:i.lunarGuidance=e.int32();break;case 13:i.insectSwarm=e.bool();break;case 14:i.improvedInsectSwarm=e.int32();break;case 15:i.dreamstate=e.int32();break;case 16:i.moonfury=e.int32();break;case 17:i.balanceOfPower=e.int32();break;case 18:i.moonkinForm=e.bool();break;case 19:i.improvedMoonkinForm=e.int32();break;case 20:i.improvedFaerieFire=e.int32();break;case 21:i.owlkinFrenzy=e.int32();break;case 22:i.wrathOfCenarius=e.int32();break;case 23:i.eclipse=e.int32();break;case 24:i.typhoon=e.bool();break;case 25:i.forceOfNature=e.bool();break;case 26:i.galeWinds=e.int32();break;case 27:i.earthAndMoon=e.int32();break;case 28:i.starfall=e.bool();break;case 29:i.ferocity=e.int32();break;case 30:i.feralAggression=e.int32();break;case 31:i.feralInstinct=e.int32();break;case 32:i.savageFury=e.int32();break;case 33:i.thickHide=e.int32();break;case 34:i.feralSwiftness=e.int32();break;case 35:i.survivalInstincts=e.bool();break;case 36:i.sharpenedClaws=e.int32();break;case 37:i.shreddingAttacks=e.int32();break;case 38:i.predatoryStrikes=e.int32();break;case 39:i.primalFury=e.int32();break;case 40:i.primalPrecision=e.int32();break;case 41:i.brutalImpact=e.int32();break;case 42:i.feralCharge=e.bool();break;case 43:i.nurturingInstinct=e.int32();break;case 44:i.naturalReaction=e.int32();break;case 45:i.heartOfTheWild=e.int32();break;case 46:i.survivalOfTheFittest=e.int32();break;case 47:i.leaderOfThePack=e.bool();break;case 48:i.improvedLeaderOfThePack=e.int32();break;case 49:i.primalTenacity=e.int32();break;case 50:i.protectorOfThePack=e.int32();break;case 51:i.predatoryInstincts=e.int32();break;case 52:i.infectedWounds=e.int32();break;case 53:i.kingOfTheJungle=e.int32();break;case 54:i.mangle=e.bool();break;case 55:i.improvedMangle=e.int32();break;case 56:i.rendAndTear=e.int32();break;case 57:i.primalGore=e.bool();break;case 58:i.berserk=e.bool();break;case 59:i.improvedMarkOfTheWild=e.int32();break;case 60:i.naturesFocus=e.int32();break;case 61:i.furor=e.int32();break;case 62:i.naturalist=e.int32();break;case 63:i.subtlety=e.int32();break;case 64:i.naturalShapeshifter=e.int32();break;case 65:i.intensity=e.int32();break;case 66:i.omenOfClarity=e.bool();break;case 67:i.masterShapeshifter=e.int32();break;case 68:i.tranquilSpirit=e.int32();break;case 69:i.improvedRejuvenation=e.int32();break;case 70:i.naturesSwiftness=e.bool();break;case 71:i.giftOfNature=e.int32();break;case 72:i.improvedTranquility=e.int32();break;case 73:i.empoweredTouch=e.int32();break;case 74:i.naturesBounty=e.int32();break;case 75:i.livingSpirit=e.int32();break;case 76:i.swiftmend=e.bool();break;case 77:i.naturalPerfection=e.int32();break;case 78:i.empoweredRejuvenation=e.int32();break;case 79:i.livingSeed=e.int32();break;case 80:i.revitalize=e.int32();break;case 81:i.treeOfLife=e.bool();break;case 82:i.improvedTreeOfLife=e.int32();break;case 83:i.improvedBarkskin=e.int32();break;case 84:i.giftOfTheEarthmother=e.int32();break;case 85:i.wildGrowth=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.starlightWrath&&t.tag(1,v.Varint).int32(e.starlightWrath),0!==e.genesis&&t.tag(2,v.Varint).int32(e.genesis),0!==e.moonglow&&t.tag(3,v.Varint).int32(e.moonglow),0!==e.naturesMajesty&&t.tag(4,v.Varint).int32(e.naturesMajesty),0!==e.improvedMoonfire&&t.tag(5,v.Varint).int32(e.improvedMoonfire),0!==e.brambles&&t.tag(6,v.Varint).int32(e.brambles),0!==e.naturesGrace&&t.tag(7,v.Varint).int32(e.naturesGrace),!1!==e.naturesSplendor&&t.tag(8,v.Varint).bool(e.naturesSplendor),0!==e.naturesReach&&t.tag(9,v.Varint).int32(e.naturesReach),0!==e.vengeance&&t.tag(10,v.Varint).int32(e.vengeance),0!==e.celestialFocus&&t.tag(11,v.Varint).int32(e.celestialFocus),0!==e.lunarGuidance&&t.tag(12,v.Varint).int32(e.lunarGuidance),!1!==e.insectSwarm&&t.tag(13,v.Varint).bool(e.insectSwarm),0!==e.improvedInsectSwarm&&t.tag(14,v.Varint).int32(e.improvedInsectSwarm),0!==e.dreamstate&&t.tag(15,v.Varint).int32(e.dreamstate),0!==e.moonfury&&t.tag(16,v.Varint).int32(e.moonfury),0!==e.balanceOfPower&&t.tag(17,v.Varint).int32(e.balanceOfPower),!1!==e.moonkinForm&&t.tag(18,v.Varint).bool(e.moonkinForm),0!==e.improvedMoonkinForm&&t.tag(19,v.Varint).int32(e.improvedMoonkinForm),0!==e.improvedFaerieFire&&t.tag(20,v.Varint).int32(e.improvedFaerieFire),0!==e.owlkinFrenzy&&t.tag(21,v.Varint).int32(e.owlkinFrenzy),0!==e.wrathOfCenarius&&t.tag(22,v.Varint).int32(e.wrathOfCenarius),0!==e.eclipse&&t.tag(23,v.Varint).int32(e.eclipse),!1!==e.typhoon&&t.tag(24,v.Varint).bool(e.typhoon),!1!==e.forceOfNature&&t.tag(25,v.Varint).bool(e.forceOfNature),0!==e.galeWinds&&t.tag(26,v.Varint).int32(e.galeWinds),0!==e.earthAndMoon&&t.tag(27,v.Varint).int32(e.earthAndMoon),!1!==e.starfall&&t.tag(28,v.Varint).bool(e.starfall),0!==e.ferocity&&t.tag(29,v.Varint).int32(e.ferocity),0!==e.feralAggression&&t.tag(30,v.Varint).int32(e.feralAggression),0!==e.feralInstinct&&t.tag(31,v.Varint).int32(e.feralInstinct),0!==e.savageFury&&t.tag(32,v.Varint).int32(e.savageFury),0!==e.thickHide&&t.tag(33,v.Varint).int32(e.thickHide),0!==e.feralSwiftness&&t.tag(34,v.Varint).int32(e.feralSwiftness),!1!==e.survivalInstincts&&t.tag(35,v.Varint).bool(e.survivalInstincts),0!==e.sharpenedClaws&&t.tag(36,v.Varint).int32(e.sharpenedClaws),0!==e.shreddingAttacks&&t.tag(37,v.Varint).int32(e.shreddingAttacks),0!==e.predatoryStrikes&&t.tag(38,v.Varint).int32(e.predatoryStrikes),0!==e.primalFury&&t.tag(39,v.Varint).int32(e.primalFury),0!==e.primalPrecision&&t.tag(40,v.Varint).int32(e.primalPrecision),0!==e.brutalImpact&&t.tag(41,v.Varint).int32(e.brutalImpact),!1!==e.feralCharge&&t.tag(42,v.Varint).bool(e.feralCharge),0!==e.nurturingInstinct&&t.tag(43,v.Varint).int32(e.nurturingInstinct),0!==e.naturalReaction&&t.tag(44,v.Varint).int32(e.naturalReaction),0!==e.heartOfTheWild&&t.tag(45,v.Varint).int32(e.heartOfTheWild),0!==e.survivalOfTheFittest&&t.tag(46,v.Varint).int32(e.survivalOfTheFittest),!1!==e.leaderOfThePack&&t.tag(47,v.Varint).bool(e.leaderOfThePack),0!==e.improvedLeaderOfThePack&&t.tag(48,v.Varint).int32(e.improvedLeaderOfThePack),0!==e.primalTenacity&&t.tag(49,v.Varint).int32(e.primalTenacity),0!==e.protectorOfThePack&&t.tag(50,v.Varint).int32(e.protectorOfThePack),0!==e.predatoryInstincts&&t.tag(51,v.Varint).int32(e.predatoryInstincts),0!==e.infectedWounds&&t.tag(52,v.Varint).int32(e.infectedWounds),0!==e.kingOfTheJungle&&t.tag(53,v.Varint).int32(e.kingOfTheJungle),!1!==e.mangle&&t.tag(54,v.Varint).bool(e.mangle),0!==e.improvedMangle&&t.tag(55,v.Varint).int32(e.improvedMangle),0!==e.rendAndTear&&t.tag(56,v.Varint).int32(e.rendAndTear),!1!==e.primalGore&&t.tag(57,v.Varint).bool(e.primalGore),!1!==e.berserk&&t.tag(58,v.Varint).bool(e.berserk),0!==e.improvedMarkOfTheWild&&t.tag(59,v.Varint).int32(e.improvedMarkOfTheWild),0!==e.naturesFocus&&t.tag(60,v.Varint).int32(e.naturesFocus),0!==e.furor&&t.tag(61,v.Varint).int32(e.furor),0!==e.naturalist&&t.tag(62,v.Varint).int32(e.naturalist),0!==e.subtlety&&t.tag(63,v.Varint).int32(e.subtlety),0!==e.naturalShapeshifter&&t.tag(64,v.Varint).int32(e.naturalShapeshifter),0!==e.intensity&&t.tag(65,v.Varint).int32(e.intensity),!1!==e.omenOfClarity&&t.tag(66,v.Varint).bool(e.omenOfClarity),0!==e.masterShapeshifter&&t.tag(67,v.Varint).int32(e.masterShapeshifter),0!==e.tranquilSpirit&&t.tag(68,v.Varint).int32(e.tranquilSpirit),0!==e.improvedRejuvenation&&t.tag(69,v.Varint).int32(e.improvedRejuvenation),!1!==e.naturesSwiftness&&t.tag(70,v.Varint).bool(e.naturesSwiftness),0!==e.giftOfNature&&t.tag(71,v.Varint).int32(e.giftOfNature),0!==e.improvedTranquility&&t.tag(72,v.Varint).int32(e.improvedTranquility),0!==e.empoweredTouch&&t.tag(73,v.Varint).int32(e.empoweredTouch),0!==e.naturesBounty&&t.tag(74,v.Varint).int32(e.naturesBounty),0!==e.livingSpirit&&t.tag(75,v.Varint).int32(e.livingSpirit),!1!==e.swiftmend&&t.tag(76,v.Varint).bool(e.swiftmend),0!==e.naturalPerfection&&t.tag(77,v.Varint).int32(e.naturalPerfection),0!==e.empoweredRejuvenation&&t.tag(78,v.Varint).int32(e.empoweredRejuvenation),0!==e.livingSeed&&t.tag(79,v.Varint).int32(e.livingSeed),0!==e.revitalize&&t.tag(80,v.Varint).int32(e.revitalize),!1!==e.treeOfLife&&t.tag(81,v.Varint).bool(e.treeOfLife),0!==e.improvedTreeOfLife&&t.tag(82,v.Varint).int32(e.improvedTreeOfLife),0!==e.improvedBarkskin&&t.tag(83,v.Varint).int32(e.improvedBarkskin),0!==e.giftOfTheEarthmother&&t.tag(84,v.Varint).int32(e.giftOfTheEarthmother),!1!==e.wildGrowth&&t.tag(85,v.Varint).bool(e.wildGrowth);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const bn=new class extends X{constructor(){super("proto.BalanceDruid",[{no:1,name:"rotation",kind:"message",T:()=>In},{no:2,name:"talents",kind:"message",T:()=>kn},{no:3,name:"options",kind:"message",T:()=>Tn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=In.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=kn.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Tn.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&In.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&kn.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Tn.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const In=new class extends X{constructor(){super("proto.BalanceDruid.Rotation",[{no:1,name:"type",kind:"enum",T:()=>["proto.BalanceDruid.Rotation.Type",hn]},{no:2,name:"use_battle_res",kind:"scalar",T:8},{no:3,name:"use_is",kind:"scalar",T:8},{no:4,name:"use_mf",kind:"scalar",T:8},{no:5,name:"mf_inside_eclipse_threshold",kind:"scalar",T:2},{no:6,name:"is_inside_eclipse_threshold",kind:"scalar",T:2},{no:7,name:"mcd_inside_lunar_threshold",kind:"scalar",T:2},{no:8,name:"mcd_inside_solar_threshold",kind:"scalar",T:2}])}create(e){const t={type:0,useBattleRes:!1,useIs:!1,useMf:!1,mfInsideEclipseThreshold:0,isInsideEclipseThreshold:0,mcdInsideLunarThreshold:0,mcdInsideSolarThreshold:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.type=e.int32();break;case 2:i.useBattleRes=e.bool();break;case 3:i.useIs=e.bool();break;case 4:i.useMf=e.bool();break;case 5:i.mfInsideEclipseThreshold=e.float();break;case 6:i.isInsideEclipseThreshold=e.float();break;case 7:i.mcdInsideLunarThreshold=e.float();break;case 8:i.mcdInsideSolarThreshold=e.float();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.type&&t.tag(1,v.Varint).int32(e.type),!1!==e.useBattleRes&&t.tag(2,v.Varint).bool(e.useBattleRes),!1!==e.useIs&&t.tag(3,v.Varint).bool(e.useIs),!1!==e.useMf&&t.tag(4,v.Varint).bool(e.useMf),0!==e.mfInsideEclipseThreshold&&t.tag(5,v.Bit32).float(e.mfInsideEclipseThreshold),0!==e.isInsideEclipseThreshold&&t.tag(6,v.Bit32).float(e.isInsideEclipseThreshold),0!==e.mcdInsideLunarThreshold&&t.tag(7,v.Bit32).float(e.mcdInsideLunarThreshold),0!==e.mcdInsideSolarThreshold&&t.tag(8,v.Bit32).float(e.mcdInsideSolarThreshold);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Tn=new class extends X{constructor(){super("proto.BalanceDruid.Options",[{no:1,name:"innervate_target",kind:"message",T:()=>je}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.innervateTarget=je.internalBinaryRead(e,e.uint32(),a,i.innervateTarget);else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.innervateTarget&&je.internalBinaryWrite(e.innervateTarget,t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const xn=new class extends X{constructor(){super("proto.FeralDruid",[{no:1,name:"rotation",kind:"message",T:()=>Sn},{no:2,name:"talents",kind:"message",T:()=>kn},{no:3,name:"options",kind:"message",T:()=>vn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=Sn.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=kn.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=vn.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&Sn.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&kn.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&vn.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Sn=new class extends X{constructor(){super("proto.FeralDruid.Rotation",[{no:1,name:"bear_weave_type",kind:"enum",T:()=>["proto.FeralDruid.Rotation.BearweaveType",gn]},{no:2,name:"maintain_faerie_fire",kind:"scalar",T:8},{no:3,name:"min_combos_for_rip",kind:"scalar",T:5},{no:4,name:"use_rake",kind:"scalar",T:8},{no:5,name:"use_bite",kind:"scalar",T:8},{no:6,name:"mangle_spam",kind:"scalar",T:8},{no:7,name:"bite_time",kind:"scalar",T:2},{no:8,name:"min_combos_for_bite",kind:"scalar",T:5},{no:9,name:"berserk_bite_thresh",kind:"scalar",T:5},{no:10,name:"powerbear",kind:"scalar",T:8},{no:11,name:"max_roar_clip",kind:"scalar",T:2},{no:12,name:"bite_mode_type",kind:"enum",T:()=>["proto.FeralDruid.Rotation.BiteModeType",un]},{no:13,name:"hot_uptime",kind:"scalar",T:2}])}create(e){const t={bearWeaveType:0,maintainFaerieFire:!1,minCombosForRip:0,useRake:!1,useBite:!1,mangleSpam:!1,biteTime:0,minCombosForBite:0,berserkBiteThresh:0,powerbear:!1,maxRoarClip:0,biteModeType:0,hotUptime:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.bearWeaveType=e.int32();break;case 2:i.maintainFaerieFire=e.bool();break;case 3:i.minCombosForRip=e.int32();break;case 4:i.useRake=e.bool();break;case 5:i.useBite=e.bool();break;case 6:i.mangleSpam=e.bool();break;case 7:i.biteTime=e.float();break;case 8:i.minCombosForBite=e.int32();break;case 9:i.berserkBiteThresh=e.int32();break;case 10:i.powerbear=e.bool();break;case 11:i.maxRoarClip=e.float();break;case 12:i.biteModeType=e.int32();break;case 13:i.hotUptime=e.float();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.bearWeaveType&&t.tag(1,v.Varint).int32(e.bearWeaveType),!1!==e.maintainFaerieFire&&t.tag(2,v.Varint).bool(e.maintainFaerieFire),0!==e.minCombosForRip&&t.tag(3,v.Varint).int32(e.minCombosForRip),!1!==e.useRake&&t.tag(4,v.Varint).bool(e.useRake),!1!==e.useBite&&t.tag(5,v.Varint).bool(e.useBite),!1!==e.mangleSpam&&t.tag(6,v.Varint).bool(e.mangleSpam),0!==e.biteTime&&t.tag(7,v.Bit32).float(e.biteTime),0!==e.minCombosForBite&&t.tag(8,v.Varint).int32(e.minCombosForBite),0!==e.berserkBiteThresh&&t.tag(9,v.Varint).int32(e.berserkBiteThresh),!1!==e.powerbear&&t.tag(10,v.Varint).bool(e.powerbear),0!==e.maxRoarClip&&t.tag(11,v.Bit32).float(e.maxRoarClip),0!==e.biteModeType&&t.tag(12,v.Varint).int32(e.biteModeType),0!==e.hotUptime&&t.tag(13,v.Bit32).float(e.hotUptime);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const vn=new class extends X{constructor(){super("proto.FeralDruid.Options",[{no:1,name:"innervate_target",kind:"message",T:()=>je},{no:2,name:"latency_ms",kind:"scalar",T:5}])}create(e){const t={latencyMs:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.innervateTarget=je.internalBinaryRead(e,e.uint32(),a,i.innervateTarget);break;case 2:i.latencyMs=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.innervateTarget&&je.internalBinaryWrite(e.innervateTarget,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.latencyMs&&t.tag(2,v.Varint).int32(e.latencyMs);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const _n=new class extends X{constructor(){super("proto.FeralTankDruid",[{no:1,name:"rotation",kind:"message",T:()=>On},{no:2,name:"talents",kind:"message",T:()=>kn},{no:3,name:"options",kind:"message",T:()=>Pn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.rotation=On.internalBinaryRead(e,e.uint32(),a,i.rotation);break;case 2:i.talents=kn.internalBinaryRead(e,e.uint32(),a,i.talents);break;case 3:i.options=Pn.internalBinaryRead(e,e.uint32(),a,i.options);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.rotation&&On.internalBinaryWrite(e.rotation,t.tag(1,v.LengthDelimited).fork(),a).join(),e.talents&&kn.internalBinaryWrite(e.talents,t.tag(2,v.LengthDelimited).fork(),a).join(),e.options&&Pn.internalBinaryWrite(e.options,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const On=new class extends X{constructor(){super("proto.FeralTankDruid.Rotation",[{no:1,name:"maul_rage_threshold",kind:"scalar",T:5},{no:2,name:"maintain_demoralizing_roar",kind:"scalar",T:8},{no:3,name:"maintain_faerie_fire",kind:"scalar",T:8},{no:4,name:"swipe",kind:"enum",T:()=>["proto.FeralTankDruid.Rotation.Swipe",fn]},{no:5,name:"swipe_ap_threshold",kind:"scalar",T:1}])}create(e){const t={maulRageThreshold:0,maintainDemoralizingRoar:!1,maintainFaerieFire:!1,swipe:0,swipeApThreshold:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.maulRageThreshold=e.int32();break;case 2:i.maintainDemoralizingRoar=e.bool();break;case 3:i.maintainFaerieFire=e.bool();break;case 4:i.swipe=e.int32();break;case 5:i.swipeApThreshold=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.maulRageThreshold&&t.tag(1,v.Varint).int32(e.maulRageThreshold),!1!==e.maintainDemoralizingRoar&&t.tag(2,v.Varint).bool(e.maintainDemoralizingRoar),!1!==e.maintainFaerieFire&&t.tag(3,v.Varint).bool(e.maintainFaerieFire),0!==e.swipe&&t.tag(4,v.Varint).int32(e.swipe),0!==e.swipeApThreshold&&t.tag(5,v.Bit64).double(e.swipeApThreshold);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Pn=new class extends X{constructor(){super("proto.FeralTankDruid.Options",[{no:1,name:"innervate_target",kind:"message",T:()=>je},{no:2,name:"starting_rage",kind:"scalar",T:1}])}create(e){const t={startingRage:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.innervateTarget=je.internalBinaryRead(e,e.uint32(),a,i.innervateTarget);break;case 2:i.startingRage=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.innervateTarget&&je.internalBinaryWrite(e.innervateTarget,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.startingRage&&t.tag(2,v.Bit64).double(e.startingRage);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};var Gn=(e=>(e[e.ResourceTypeNone=0]="ResourceTypeNone",e[e.ResourceTypeMana=1]="ResourceTypeMana",e[e.ResourceTypeEnergy=2]="ResourceTypeEnergy",e[e.ResourceTypeRage=3]="ResourceTypeRage",e[e.ResourceTypeComboPoints=4]="ResourceTypeComboPoints",e[e.ResourceTypeFocus=5]="ResourceTypeFocus",e[e.ResourceTypeHealth=6]="ResourceTypeHealth",e[e.ResourceTypeRunicPower=7]="ResourceTypeRunicPower",e[e.ResourceTypeBloodRune=8]="ResourceTypeBloodRune",e[e.ResourceTypeFrostRune=9]="ResourceTypeFrostRune",e[e.ResourceTypeUnholyRune=10]="ResourceTypeUnholyRune",e[e.ResourceTypeDeathRune=11]="ResourceTypeDeathRune",e))(Gn||{});const Rn=new class extends X{constructor(){super("proto.Player",[{no:16,name:"name",kind:"scalar",T:9},{no:1,name:"race",kind:"enum",T:()=>["proto.Race",ee]},{no:24,name:"shatt_faction",kind:"enum",T:()=>["proto.ShattrathFaction",ae]},{no:2,name:"class",kind:"enum",T:()=>["proto.Class",ne]},{no:3,name:"equipment",kind:"message",T:()=>Ve},{no:4,name:"consumes",kind:"message",T:()=>Re},{no:5,name:"bonus_stats",kind:"scalar",repeat:1,T:1},{no:15,name:"buffs",kind:"message",T:()=>Ge},{no:6,name:"balance_druid",kind:"message",oneof:"spec",T:()=>bn},{no:22,name:"feral_druid",kind:"message",oneof:"spec",T:()=>xn},{no:26,name:"feral_tank_druid",kind:"message",oneof:"spec",T:()=>_n},{no:7,name:"hunter",kind:"message",oneof:"spec",T:()=>dn},{no:8,name:"mage",kind:"message",oneof:"spec",T:()=>Qa},{no:9,name:"retribution_paladin",kind:"message",oneof:"spec",T:()=>Ea},{no:25,name:"protection_paladin",kind:"message",oneof:"spec",T:()=>Ma},{no:34,name:"healing_priest",kind:"message",oneof:"spec",T:()=>va},{no:10,name:"shadow_priest",kind:"message",oneof:"spec",T:()=>ka},{no:20,name:"smite_priest",kind:"message",oneof:"spec",T:()=>Ta},{no:11,name:"rogue",kind:"message",oneof:"spec",T:()=>ma},{no:12,name:"elemental_shaman",kind:"message",oneof:"spec",T:()=>Xt},{no:18,name:"enhancement_shaman",kind:"message",oneof:"spec",T:()=>ta},{no:13,name:"warlock",kind:"message",oneof:"spec",T:()=>Vt},{no:14,name:"warrior",kind:"message",oneof:"spec",T:()=>wt},{no:21,name:"protection_warrior",kind:"message",oneof:"spec",T:()=>bt},{no:31,name:"deathknight",kind:"message",oneof:"spec",T:()=>at},{no:32,name:"tank_deathknight",kind:"message",oneof:"spec",T:()=>ot},{no:17,name:"talentsString",kind:"scalar",T:9},{no:28,name:"glyphs",kind:"message",T:()=>Me},{no:29,name:"profession1",kind:"enum",T:()=>["proto.Profession",ie]},{no:30,name:"profession2",kind:"enum",T:()=>["proto.Profession",ie]},{no:19,name:"cooldowns",kind:"message",T:()=>Le},{no:23,name:"in_front_of_target",kind:"scalar",T:8},{no:33,name:"distance_from_target",kind:"scalar",T:1},{no:27,name:"healing_model",kind:"message",T:()=>ze}])}create(e){const t={name:"",race:0,shattFaction:0,class:0,bonusStats:[],spec:{oneofKind:void 0},talentsString:"",profession1:0,profession2:0,inFrontOfTarget:!1,distanceFromTarget:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 16:i.name=e.string();break;case 1:i.race=e.int32();break;case 24:i.shattFaction=e.int32();break;case 2:i.class=e.int32();break;case 3:i.equipment=Ve.internalBinaryRead(e,e.uint32(),a,i.equipment);break;case 4:i.consumes=Re.internalBinaryRead(e,e.uint32(),a,i.consumes);break;case 5:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.bonusStats.push(e.double());else i.bonusStats.push(e.double());break;case 15:i.buffs=Ge.internalBinaryRead(e,e.uint32(),a,i.buffs);break;case 6:i.spec={oneofKind:"balanceDruid",balanceDruid:bn.internalBinaryRead(e,e.uint32(),a,i.spec.balanceDruid)};break;case 22:i.spec={oneofKind:"feralDruid",feralDruid:xn.internalBinaryRead(e,e.uint32(),a,i.spec.feralDruid)};break;case 26:i.spec={oneofKind:"feralTankDruid",feralTankDruid:_n.internalBinaryRead(e,e.uint32(),a,i.spec.feralTankDruid)};break;case 7:i.spec={oneofKind:"hunter",hunter:dn.internalBinaryRead(e,e.uint32(),a,i.spec.hunter)};break;case 8:i.spec={oneofKind:"mage",mage:Qa.internalBinaryRead(e,e.uint32(),a,i.spec.mage)};break;case 9:i.spec={oneofKind:"retributionPaladin",retributionPaladin:Ea.internalBinaryRead(e,e.uint32(),a,i.spec.retributionPaladin)};break;case 25:i.spec={oneofKind:"protectionPaladin",protectionPaladin:Ma.internalBinaryRead(e,e.uint32(),a,i.spec.protectionPaladin)};break;case 34:i.spec={oneofKind:"healingPriest",healingPriest:va.internalBinaryRead(e,e.uint32(),a,i.spec.healingPriest)};break;case 10:i.spec={oneofKind:"shadowPriest",shadowPriest:ka.internalBinaryRead(e,e.uint32(),a,i.spec.shadowPriest)};break;case 20:i.spec={oneofKind:"smitePriest",smitePriest:Ta.internalBinaryRead(e,e.uint32(),a,i.spec.smitePriest)};break;case 11:i.spec={oneofKind:"rogue",rogue:ma.internalBinaryRead(e,e.uint32(),a,i.spec.rogue)};break;case 12:i.spec={oneofKind:"elementalShaman",elementalShaman:Xt.internalBinaryRead(e,e.uint32(),a,i.spec.elementalShaman)};break;case 18:i.spec={oneofKind:"enhancementShaman",enhancementShaman:ta.internalBinaryRead(e,e.uint32(),a,i.spec.enhancementShaman)};break;case 13:i.spec={oneofKind:"warlock",warlock:Vt.internalBinaryRead(e,e.uint32(),a,i.spec.warlock)};break;case 14:i.spec={oneofKind:"warrior",warrior:wt.internalBinaryRead(e,e.uint32(),a,i.spec.warrior)};break;case 21:i.spec={oneofKind:"protectionWarrior",protectionWarrior:bt.internalBinaryRead(e,e.uint32(),a,i.spec.protectionWarrior)};break;case 31:i.spec={oneofKind:"deathknight",deathknight:at.internalBinaryRead(e,e.uint32(),a,i.spec.deathknight)};break;case 32:i.spec={oneofKind:"tankDeathknight",tankDeathknight:ot.internalBinaryRead(e,e.uint32(),a,i.spec.tankDeathknight)};break;case 17:i.talentsString=e.string();break;case 28:i.glyphs=Me.internalBinaryRead(e,e.uint32(),a,i.glyphs);break;case 29:i.profession1=e.int32();break;case 30:i.profession2=e.int32();break;case 19:i.cooldowns=Le.internalBinaryRead(e,e.uint32(),a,i.cooldowns);break;case 23:i.inFrontOfTarget=e.bool();break;case 33:i.distanceFromTarget=e.double();break;case 27:i.healingModel=ze.internalBinaryRead(e,e.uint32(),a,i.healingModel);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(""!==e.name&&t.tag(16,v.LengthDelimited).string(e.name),0!==e.race&&t.tag(1,v.Varint).int32(e.race),0!==e.shattFaction&&t.tag(24,v.Varint).int32(e.shattFaction),0!==e.class&&t.tag(2,v.Varint).int32(e.class),e.equipment&&Ve.internalBinaryWrite(e.equipment,t.tag(3,v.LengthDelimited).fork(),a).join(),e.consumes&&Re.internalBinaryWrite(e.consumes,t.tag(4,v.LengthDelimited).fork(),a).join(),e.bonusStats.length){t.tag(5,v.LengthDelimited).fork();for(let a=0;a<e.bonusStats.length;a++)t.double(e.bonusStats[a]);t.join()}e.buffs&&Ge.internalBinaryWrite(e.buffs,t.tag(15,v.LengthDelimited).fork(),a).join(),"balanceDruid"===e.spec.oneofKind&&bn.internalBinaryWrite(e.spec.balanceDruid,t.tag(6,v.LengthDelimited).fork(),a).join(),"feralDruid"===e.spec.oneofKind&&xn.internalBinaryWrite(e.spec.feralDruid,t.tag(22,v.LengthDelimited).fork(),a).join(),"feralTankDruid"===e.spec.oneofKind&&_n.internalBinaryWrite(e.spec.feralTankDruid,t.tag(26,v.LengthDelimited).fork(),a).join(),"hunter"===e.spec.oneofKind&&dn.internalBinaryWrite(e.spec.hunter,t.tag(7,v.LengthDelimited).fork(),a).join(),"mage"===e.spec.oneofKind&&Qa.internalBinaryWrite(e.spec.mage,t.tag(8,v.LengthDelimited).fork(),a).join(),"retributionPaladin"===e.spec.oneofKind&&Ea.internalBinaryWrite(e.spec.retributionPaladin,t.tag(9,v.LengthDelimited).fork(),a).join(),"protectionPaladin"===e.spec.oneofKind&&Ma.internalBinaryWrite(e.spec.protectionPaladin,t.tag(25,v.LengthDelimited).fork(),a).join(),"healingPriest"===e.spec.oneofKind&&va.internalBinaryWrite(e.spec.healingPriest,t.tag(34,v.LengthDelimited).fork(),a).join(),"shadowPriest"===e.spec.oneofKind&&ka.internalBinaryWrite(e.spec.shadowPriest,t.tag(10,v.LengthDelimited).fork(),a).join(),"smitePriest"===e.spec.oneofKind&&Ta.internalBinaryWrite(e.spec.smitePriest,t.tag(20,v.LengthDelimited).fork(),a).join(),"rogue"===e.spec.oneofKind&&ma.internalBinaryWrite(e.spec.rogue,t.tag(11,v.LengthDelimited).fork(),a).join(),"elementalShaman"===e.spec.oneofKind&&Xt.internalBinaryWrite(e.spec.elementalShaman,t.tag(12,v.LengthDelimited).fork(),a).join(),"enhancementShaman"===e.spec.oneofKind&&ta.internalBinaryWrite(e.spec.enhancementShaman,t.tag(18,v.LengthDelimited).fork(),a).join(),"warlock"===e.spec.oneofKind&&Vt.internalBinaryWrite(e.spec.warlock,t.tag(13,v.LengthDelimited).fork(),a).join(),"warrior"===e.spec.oneofKind&&wt.internalBinaryWrite(e.spec.warrior,t.tag(14,v.LengthDelimited).fork(),a).join(),"protectionWarrior"===e.spec.oneofKind&&bt.internalBinaryWrite(e.spec.protectionWarrior,t.tag(21,v.LengthDelimited).fork(),a).join(),"deathknight"===e.spec.oneofKind&&at.internalBinaryWrite(e.spec.deathknight,t.tag(31,v.LengthDelimited).fork(),a).join(),"tankDeathknight"===e.spec.oneofKind&&ot.internalBinaryWrite(e.spec.tankDeathknight,t.tag(32,v.LengthDelimited).fork(),a).join(),""!==e.talentsString&&t.tag(17,v.LengthDelimited).string(e.talentsString),e.glyphs&&Me.internalBinaryWrite(e.glyphs,t.tag(28,v.LengthDelimited).fork(),a).join(),0!==e.profession1&&t.tag(29,v.Varint).int32(e.profession1),0!==e.profession2&&t.tag(30,v.Varint).int32(e.profession2),e.cooldowns&&Le.internalBinaryWrite(e.cooldowns,t.tag(19,v.LengthDelimited).fork(),a).join(),!1!==e.inFrontOfTarget&&t.tag(23,v.Varint).bool(e.inFrontOfTarget),0!==e.distanceFromTarget&&t.tag(33,v.Bit64).double(e.distanceFromTarget),e.healingModel&&ze.internalBinaryWrite(e.healingModel,t.tag(27,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Bn=new class extends X{constructor(){super("proto.Party",[{no:1,name:"players",kind:"message",repeat:1,T:()=>Rn},{no:2,name:"buffs",kind:"message",T:()=>Pe}])}create(e){const t={players:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.players.push(Rn.internalBinaryRead(e,e.uint32(),a));break;case 2:i.buffs=Pe.internalBinaryRead(e,e.uint32(),a,i.buffs);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.players.length;i++)Rn.internalBinaryWrite(e.players[i],t.tag(1,v.LengthDelimited).fork(),a).join();e.buffs&&Pe.internalBinaryWrite(e.buffs,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Nn=new class extends X{constructor(){super("proto.Raid",[{no:1,name:"parties",kind:"message",repeat:1,T:()=>Bn},{no:2,name:"buffs",kind:"message",T:()=>Oe},{no:5,name:"debuffs",kind:"message",T:()=>Be},{no:4,name:"tanks",kind:"message",repeat:1,T:()=>je},{no:3,name:"stagger_stormstrikes",kind:"scalar",T:8},{no:6,name:"target_dummies",kind:"scalar",T:5}])}create(e){const t={parties:[],tanks:[],staggerStormstrikes:!1,targetDummies:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.parties.push(Bn.internalBinaryRead(e,e.uint32(),a));break;case 2:i.buffs=Oe.internalBinaryRead(e,e.uint32(),a,i.buffs);break;case 5:i.debuffs=Be.internalBinaryRead(e,e.uint32(),a,i.debuffs);break;case 4:i.tanks.push(je.internalBinaryRead(e,e.uint32(),a));break;case 3:i.staggerStormstrikes=e.bool();break;case 6:i.targetDummies=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.parties.length;i++)Bn.internalBinaryWrite(e.parties[i],t.tag(1,v.LengthDelimited).fork(),a).join();e.buffs&&Oe.internalBinaryWrite(e.buffs,t.tag(2,v.LengthDelimited).fork(),a).join(),e.debuffs&&Be.internalBinaryWrite(e.debuffs,t.tag(5,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.tanks.length;i++)je.internalBinaryWrite(e.tanks[i],t.tag(4,v.LengthDelimited).fork(),a).join();!1!==e.staggerStormstrikes&&t.tag(3,v.Varint).bool(e.staggerStormstrikes),0!==e.targetDummies&&t.tag(6,v.Varint).int32(e.targetDummies);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Fn=new class extends X{constructor(){super("proto.SimOptions",[{no:1,name:"iterations",kind:"scalar",T:5},{no:2,name:"random_seed",kind:"scalar",T:3,L:0},{no:3,name:"debug",kind:"scalar",T:8},{no:6,name:"debug_first_iteration",kind:"scalar",T:8},{no:5,name:"is_test",kind:"scalar",T:8}])}create(e){const t={iterations:0,randomSeed:0n,debug:!1,debugFirstIteration:!1,isTest:!1};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.iterations=e.int32();break;case 2:i.randomSeed=e.int64().toBigInt();break;case 3:i.debug=e.bool();break;case 6:i.debugFirstIteration=e.bool();break;case 5:i.isTest=e.bool();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.iterations&&t.tag(1,v.Varint).int32(e.iterations),0n!==e.randomSeed&&t.tag(2,v.Varint).int64(e.randomSeed),!1!==e.debug&&t.tag(3,v.Varint).bool(e.debug),!1!==e.debugFirstIteration&&t.tag(6,v.Varint).bool(e.debugFirstIteration),!1!==e.isTest&&t.tag(5,v.Varint).bool(e.isTest);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Wn=new class extends X{constructor(){super("proto.ActionMetrics",[{no:1,name:"id",kind:"message",T:()=>Ue},{no:2,name:"is_melee",kind:"scalar",T:8},{no:3,name:"targets",kind:"message",repeat:1,T:()=>Vn}])}create(e){const t={isMelee:!1,targets:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=Ue.internalBinaryRead(e,e.uint32(),a,i.id);break;case 2:i.isMelee=e.bool();break;case 3:i.targets.push(Vn.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.id&&Ue.internalBinaryWrite(e.id,t.tag(1,v.LengthDelimited).fork(),a).join(),!1!==e.isMelee&&t.tag(2,v.Varint).bool(e.isMelee);for(let i=0;i<e.targets.length;i++)Vn.internalBinaryWrite(e.targets[i],t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Vn=new class extends X{constructor(){super("proto.TargetedActionMetrics",[{no:12,name:"unit_index",kind:"scalar",T:5},{no:1,name:"casts",kind:"scalar",T:5},{no:2,name:"hits",kind:"scalar",T:5},{no:3,name:"crits",kind:"scalar",T:5},{no:4,name:"misses",kind:"scalar",T:5},{no:5,name:"dodges",kind:"scalar",T:5},{no:6,name:"parries",kind:"scalar",T:5},{no:7,name:"blocks",kind:"scalar",T:5},{no:8,name:"glances",kind:"scalar",T:5},{no:9,name:"damage",kind:"scalar",T:1},{no:10,name:"threat",kind:"scalar",T:1},{no:11,name:"healing",kind:"scalar",T:1},{no:13,name:"shielding",kind:"scalar",T:1}])}create(e){const t={unitIndex:0,casts:0,hits:0,crits:0,misses:0,dodges:0,parries:0,blocks:0,glances:0,damage:0,threat:0,healing:0,shielding:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 12:i.unitIndex=e.int32();break;case 1:i.casts=e.int32();break;case 2:i.hits=e.int32();break;case 3:i.crits=e.int32();break;case 4:i.misses=e.int32();break;case 5:i.dodges=e.int32();break;case 6:i.parries=e.int32();break;case 7:i.blocks=e.int32();break;case 8:i.glances=e.int32();break;case 9:i.damage=e.double();break;case 10:i.threat=e.double();break;case 11:i.healing=e.double();break;case 13:i.shielding=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.unitIndex&&t.tag(12,v.Varint).int32(e.unitIndex),0!==e.casts&&t.tag(1,v.Varint).int32(e.casts),0!==e.hits&&t.tag(2,v.Varint).int32(e.hits),0!==e.crits&&t.tag(3,v.Varint).int32(e.crits),0!==e.misses&&t.tag(4,v.Varint).int32(e.misses),0!==e.dodges&&t.tag(5,v.Varint).int32(e.dodges),0!==e.parries&&t.tag(6,v.Varint).int32(e.parries),0!==e.blocks&&t.tag(7,v.Varint).int32(e.blocks),0!==e.glances&&t.tag(8,v.Varint).int32(e.glances),0!==e.damage&&t.tag(9,v.Bit64).double(e.damage),0!==e.threat&&t.tag(10,v.Bit64).double(e.threat),0!==e.healing&&t.tag(11,v.Bit64).double(e.healing),0!==e.shielding&&t.tag(13,v.Bit64).double(e.shielding);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Cn=new class extends X{constructor(){super("proto.AuraMetrics",[{no:1,name:"id",kind:"message",T:()=>Ue},{no:2,name:"uptime_seconds_avg",kind:"scalar",T:1},{no:3,name:"uptime_seconds_stdev",kind:"scalar",T:1},{no:4,name:"procs_avg",kind:"scalar",T:1}])}create(e){const t={uptimeSecondsAvg:0,uptimeSecondsStdev:0,procsAvg:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=Ue.internalBinaryRead(e,e.uint32(),a,i.id);break;case 2:i.uptimeSecondsAvg=e.double();break;case 3:i.uptimeSecondsStdev=e.double();break;case 4:i.procsAvg=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.id&&Ue.internalBinaryWrite(e.id,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.uptimeSecondsAvg&&t.tag(2,v.Bit64).double(e.uptimeSecondsAvg),0!==e.uptimeSecondsStdev&&t.tag(3,v.Bit64).double(e.uptimeSecondsStdev),0!==e.procsAvg&&t.tag(4,v.Bit64).double(e.procsAvg);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Dn=new class extends X{constructor(){super("proto.ResourceMetrics",[{no:1,name:"id",kind:"message",T:()=>Ue},{no:2,name:"type",kind:"enum",T:()=>["proto.ResourceType",Gn]},{no:3,name:"events",kind:"scalar",T:5},{no:4,name:"gain",kind:"scalar",T:1},{no:5,name:"actual_gain",kind:"scalar",T:1}])}create(e){const t={type:0,events:0,gain:0,actualGain:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=Ue.internalBinaryRead(e,e.uint32(),a,i.id);break;case 2:i.type=e.int32();break;case 3:i.events=e.int32();break;case 4:i.gain=e.double();break;case 5:i.actualGain=e.double();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.id&&Ue.internalBinaryWrite(e.id,t.tag(1,v.LengthDelimited).fork(),a).join(),0!==e.type&&t.tag(2,v.Varint).int32(e.type),0!==e.events&&t.tag(3,v.Varint).int32(e.events),0!==e.gain&&t.tag(4,v.Bit64).double(e.gain),0!==e.actualGain&&t.tag(5,v.Bit64).double(e.actualGain);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const En=new class extends X{constructor(){super("proto.DistributionMetrics",[{no:1,name:"avg",kind:"scalar",T:1},{no:2,name:"stdev",kind:"scalar",T:1},{no:3,name:"max",kind:"scalar",T:1},{no:5,name:"maxSeed",kind:"scalar",T:3,L:0},{no:6,name:"min",kind:"scalar",T:1},{no:7,name:"minSeed",kind:"scalar",T:3,L:0},{no:4,name:"hist",kind:"map",K:5,V:{kind:"scalar",T:5}}])}create(e){const t={avg:0,stdev:0,max:0,maxSeed:0n,min:0,minSeed:0n,hist:{}};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.avg=e.double();break;case 2:i.stdev=e.double();break;case 3:i.max=e.double();break;case 5:i.maxSeed=e.int64().toBigInt();break;case 6:i.min=e.double();break;case 7:i.minSeed=e.int64().toBigInt();break;case 4:this.binaryReadMap4(i.hist,e,a);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}binaryReadMap4(e,t,a){let n,i,o=t.uint32(),r=t.pos+o;for(;t.pos<r;){let[e,a]=t.tag();switch(e){case 1:n=t.int32();break;case 2:i=t.int32();break;default:throw new globalThis.Error("unknown map entry field for field proto.DistributionMetrics.hist")}}e[n??0]=i??0}internalBinaryWrite(e,t,a){0!==e.avg&&t.tag(1,v.Bit64).double(e.avg),0!==e.stdev&&t.tag(2,v.Bit64).double(e.stdev),0!==e.max&&t.tag(3,v.Bit64).double(e.max),0n!==e.maxSeed&&t.tag(5,v.Varint).int64(e.maxSeed),0!==e.min&&t.tag(6,v.Bit64).double(e.min),0n!==e.minSeed&&t.tag(7,v.Varint).int64(e.minSeed);for(let i of Object.keys(e.hist))t.tag(4,v.LengthDelimited).fork().tag(1,v.Varint).int32(parseInt(i)).tag(2,v.Varint).int32(e.hist[i]).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const jn=new class extends X{constructor(){super("proto.UnitMetrics",[{no:9,name:"name",kind:"scalar",T:9},{no:13,name:"unit_index",kind:"scalar",T:5},{no:1,name:"dps",kind:"message",T:()=>En},{no:8,name:"threat",kind:"message",T:()=>En},{no:11,name:"dtps",kind:"message",T:()=>En},{no:14,name:"hps",kind:"message",T:()=>En},{no:3,name:"seconds_oom_avg",kind:"scalar",T:1},{no:12,name:"chance_of_death",kind:"scalar",T:1},{no:5,name:"actions",kind:"message",repeat:1,T:()=>Wn},{no:6,name:"auras",kind:"message",repeat:1,T:()=>Cn},{no:10,name:"resources",kind:"message",repeat:1,T:()=>Dn},{no:7,name:"pets",kind:"message",repeat:1,T:()=>jn}])}create(e){const t={name:"",unitIndex:0,secondsOomAvg:0,chanceOfDeath:0,actions:[],auras:[],resources:[],pets:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 9:i.name=e.string();break;case 13:i.unitIndex=e.int32();break;case 1:i.dps=En.internalBinaryRead(e,e.uint32(),a,i.dps);break;case 8:i.threat=En.internalBinaryRead(e,e.uint32(),a,i.threat);break;case 11:i.dtps=En.internalBinaryRead(e,e.uint32(),a,i.dtps);break;case 14:i.hps=En.internalBinaryRead(e,e.uint32(),a,i.hps);break;case 3:i.secondsOomAvg=e.double();break;case 12:i.chanceOfDeath=e.double();break;case 5:i.actions.push(Wn.internalBinaryRead(e,e.uint32(),a));break;case 6:i.auras.push(Cn.internalBinaryRead(e,e.uint32(),a));break;case 10:i.resources.push(Dn.internalBinaryRead(e,e.uint32(),a));break;case 7:i.pets.push(jn.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.name&&t.tag(9,v.LengthDelimited).string(e.name),0!==e.unitIndex&&t.tag(13,v.Varint).int32(e.unitIndex),e.dps&&En.internalBinaryWrite(e.dps,t.tag(1,v.LengthDelimited).fork(),a).join(),e.threat&&En.internalBinaryWrite(e.threat,t.tag(8,v.LengthDelimited).fork(),a).join(),e.dtps&&En.internalBinaryWrite(e.dtps,t.tag(11,v.LengthDelimited).fork(),a).join(),e.hps&&En.internalBinaryWrite(e.hps,t.tag(14,v.LengthDelimited).fork(),a).join(),0!==e.secondsOomAvg&&t.tag(3,v.Bit64).double(e.secondsOomAvg),0!==e.chanceOfDeath&&t.tag(12,v.Bit64).double(e.chanceOfDeath);for(let i=0;i<e.actions.length;i++)Wn.internalBinaryWrite(e.actions[i],t.tag(5,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.auras.length;i++)Cn.internalBinaryWrite(e.auras[i],t.tag(6,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.resources.length;i++)Dn.internalBinaryWrite(e.resources[i],t.tag(10,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.pets.length;i++)jn.internalBinaryWrite(e.pets[i],t.tag(7,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Un=new class extends X{constructor(){super("proto.PartyMetrics",[{no:1,name:"dps",kind:"message",T:()=>En},{no:3,name:"hps",kind:"message",T:()=>En},{no:2,name:"players",kind:"message",repeat:1,T:()=>jn}])}create(e){const t={players:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.dps=En.internalBinaryRead(e,e.uint32(),a,i.dps);break;case 3:i.hps=En.internalBinaryRead(e,e.uint32(),a,i.hps);break;case 2:i.players.push(jn.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.dps&&En.internalBinaryWrite(e.dps,t.tag(1,v.LengthDelimited).fork(),a).join(),e.hps&&En.internalBinaryWrite(e.hps,t.tag(3,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.players.length;i++)jn.internalBinaryWrite(e.players[i],t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Mn=new class extends X{constructor(){super("proto.RaidMetrics",[{no:1,name:"dps",kind:"message",T:()=>En},{no:3,name:"hps",kind:"message",T:()=>En},{no:2,name:"parties",kind:"message",repeat:1,T:()=>Un}])}create(e){const t={parties:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.dps=En.internalBinaryRead(e,e.uint32(),a,i.dps);break;case 3:i.hps=En.internalBinaryRead(e,e.uint32(),a,i.hps);break;case 2:i.parties.push(Un.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.dps&&En.internalBinaryWrite(e.dps,t.tag(1,v.LengthDelimited).fork(),a).join(),e.hps&&En.internalBinaryWrite(e.hps,t.tag(3,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.parties.length;i++)Un.internalBinaryWrite(e.parties[i],t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const An=new class extends X{constructor(){super("proto.EncounterMetrics",[{no:1,name:"targets",kind:"message",repeat:1,T:()=>jn}])}create(e){const t={targets:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.targets.push(jn.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.targets.length;i++)jn.internalBinaryWrite(e.targets[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Ln=new class extends X{constructor(){super("proto.RaidSimRequest",[{no:1,name:"raid",kind:"message",T:()=>Nn},{no:2,name:"encounter",kind:"message",T:()=>Fe},{no:3,name:"sim_options",kind:"message",T:()=>Fn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.raid=Nn.internalBinaryRead(e,e.uint32(),a,i.raid);break;case 2:i.encounter=Fe.internalBinaryRead(e,e.uint32(),a,i.encounter);break;case 3:i.simOptions=Fn.internalBinaryRead(e,e.uint32(),a,i.simOptions);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raid&&Nn.internalBinaryWrite(e.raid,t.tag(1,v.LengthDelimited).fork(),a).join(),e.encounter&&Fe.internalBinaryWrite(e.encounter,t.tag(2,v.LengthDelimited).fork(),a).join(),e.simOptions&&Fn.internalBinaryWrite(e.simOptions,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const zn=new class extends X{constructor(){super("proto.RaidSimResult",[{no:1,name:"raid_metrics",kind:"message",T:()=>Mn},{no:2,name:"encounter_metrics",kind:"message",T:()=>An},{no:3,name:"logs",kind:"scalar",T:9},{no:4,name:"first_iteration_duration",kind:"scalar",T:1},{no:6,name:"avg_iteration_duration",kind:"scalar",T:1},{no:5,name:"error_result",kind:"scalar",T:9}])}create(e){const t={logs:"",firstIterationDuration:0,avgIterationDuration:0,errorResult:""};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.raidMetrics=Mn.internalBinaryRead(e,e.uint32(),a,i.raidMetrics);break;case 2:i.encounterMetrics=An.internalBinaryRead(e,e.uint32(),a,i.encounterMetrics);break;case 3:i.logs=e.string();break;case 4:i.firstIterationDuration=e.double();break;case 6:i.avgIterationDuration=e.double();break;case 5:i.errorResult=e.string();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raidMetrics&&Mn.internalBinaryWrite(e.raidMetrics,t.tag(1,v.LengthDelimited).fork(),a).join(),e.encounterMetrics&&An.internalBinaryWrite(e.encounterMetrics,t.tag(2,v.LengthDelimited).fork(),a).join(),""!==e.logs&&t.tag(3,v.LengthDelimited).string(e.logs),0!==e.firstIterationDuration&&t.tag(4,v.Bit64).double(e.firstIterationDuration),0!==e.avgIterationDuration&&t.tag(6,v.Bit64).double(e.avgIterationDuration),""!==e.errorResult&&t.tag(5,v.LengthDelimited).string(e.errorResult);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Hn=new class extends X{constructor(){super("proto.GearListRequest",[])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){return n??this.create()}internalBinaryWrite(e,t,a){let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const $n=new class extends X{constructor(){super("proto.GearListResult",[{no:1,name:"items",kind:"message",repeat:1,T:()=>Ce},{no:2,name:"enchants",kind:"message",repeat:1,T:()=>De},{no:3,name:"gems",kind:"message",repeat:1,T:()=>Ee},{no:4,name:"encounters",kind:"message",repeat:1,T:()=>Jn}])}create(e){const t={items:[],enchants:[],gems:[],encounters:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.items.push(Ce.internalBinaryRead(e,e.uint32(),a));break;case 2:i.enchants.push(De.internalBinaryRead(e,e.uint32(),a));break;case 3:i.gems.push(Ee.internalBinaryRead(e,e.uint32(),a));break;case 4:i.encounters.push(Jn.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.items.length;i++)Ce.internalBinaryWrite(e.items[i],t.tag(1,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.enchants.length;i++)De.internalBinaryWrite(e.enchants[i],t.tag(2,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.gems.length;i++)Ee.internalBinaryWrite(e.gems[i],t.tag(3,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.encounters.length;i++)Jn.internalBinaryWrite(e.encounters[i],t.tag(4,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const qn=new class extends X{constructor(){super("proto.PresetTarget",[{no:1,name:"path",kind:"scalar",T:9},{no:2,name:"target",kind:"message",T:()=>Ne}])}create(e){const t={path:""};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.path=e.string();break;case 2:i.target=Ne.internalBinaryRead(e,e.uint32(),a,i.target);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.path&&t.tag(1,v.LengthDelimited).string(e.path),e.target&&Ne.internalBinaryWrite(e.target,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Jn=new class extends X{constructor(){super("proto.PresetEncounter",[{no:1,name:"path",kind:"scalar",T:9},{no:2,name:"targets",kind:"message",repeat:1,T:()=>qn}])}create(e){const t={path:"",targets:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.path=e.string();break;case 2:i.targets.push(qn.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.path&&t.tag(1,v.LengthDelimited).string(e.path);for(let i=0;i<e.targets.length;i++)qn.internalBinaryWrite(e.targets[i],t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Kn=new class extends X{constructor(){super("proto.ComputeStatsRequest",[{no:1,name:"raid",kind:"message",T:()=>Nn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.raid=Nn.internalBinaryRead(e,e.uint32(),a,i.raid);else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raid&&Nn.internalBinaryWrite(e.raid,t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Yn=new class extends X{constructor(){super("proto.PlayerStats",[{no:6,name:"base_stats",kind:"scalar",repeat:1,T:1},{no:1,name:"gear_stats",kind:"scalar",repeat:1,T:1},{no:7,name:"talents_stats",kind:"scalar",repeat:1,T:1},{no:8,name:"buffs_stats",kind:"scalar",repeat:1,T:1},{no:9,name:"consumes_stats",kind:"scalar",repeat:1,T:1},{no:2,name:"final_stats",kind:"scalar",repeat:1,T:1},{no:3,name:"sets",kind:"scalar",repeat:2,T:9},{no:4,name:"buffs",kind:"message",T:()=>Ge},{no:5,name:"cooldowns",kind:"message",repeat:1,T:()=>Ue}])}create(e){const t={baseStats:[],gearStats:[],talentsStats:[],buffsStats:[],consumesStats:[],finalStats:[],sets:[],cooldowns:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 6:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.baseStats.push(e.double());else i.baseStats.push(e.double());break;case 1:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.gearStats.push(e.double());else i.gearStats.push(e.double());break;case 7:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.talentsStats.push(e.double());else i.talentsStats.push(e.double());break;case 8:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.buffsStats.push(e.double());else i.buffsStats.push(e.double());break;case 9:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.consumesStats.push(e.double());else i.consumesStats.push(e.double());break;case 2:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.finalStats.push(e.double());else i.finalStats.push(e.double());break;case 3:i.sets.push(e.string());break;case 4:i.buffs=Ge.internalBinaryRead(e,e.uint32(),a,i.buffs);break;case 5:i.cooldowns.push(Ue.internalBinaryRead(e,e.uint32(),a));break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(e.baseStats.length){t.tag(6,v.LengthDelimited).fork();for(let a=0;a<e.baseStats.length;a++)t.double(e.baseStats[a]);t.join()}if(e.gearStats.length){t.tag(1,v.LengthDelimited).fork();for(let a=0;a<e.gearStats.length;a++)t.double(e.gearStats[a]);t.join()}if(e.talentsStats.length){t.tag(7,v.LengthDelimited).fork();for(let a=0;a<e.talentsStats.length;a++)t.double(e.talentsStats[a]);t.join()}if(e.buffsStats.length){t.tag(8,v.LengthDelimited).fork();for(let a=0;a<e.buffsStats.length;a++)t.double(e.buffsStats[a]);t.join()}if(e.consumesStats.length){t.tag(9,v.LengthDelimited).fork();for(let a=0;a<e.consumesStats.length;a++)t.double(e.consumesStats[a]);t.join()}if(e.finalStats.length){t.tag(2,v.LengthDelimited).fork();for(let a=0;a<e.finalStats.length;a++)t.double(e.finalStats[a]);t.join()}for(let i=0;i<e.sets.length;i++)t.tag(3,v.LengthDelimited).string(e.sets[i]);e.buffs&&Ge.internalBinaryWrite(e.buffs,t.tag(4,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.cooldowns.length;i++)Ue.internalBinaryWrite(e.cooldowns[i],t.tag(5,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Qn=new class extends X{constructor(){super("proto.PartyStats",[{no:1,name:"players",kind:"message",repeat:1,T:()=>Yn}])}create(e){const t={players:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.players.push(Yn.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.players.length;i++)Yn.internalBinaryWrite(e.players[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Xn=new class extends X{constructor(){super("proto.RaidStats",[{no:1,name:"parties",kind:"message",repeat:1,T:()=>Qn}])}create(e){const t={parties:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.parties.push(Qn.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.parties.length;i++)Qn.internalBinaryWrite(e.parties[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const Zn=new class extends X{constructor(){super("proto.ComputeStatsResult",[{no:1,name:"raid_stats",kind:"message",T:()=>Xn},{no:2,name:"error_result",kind:"scalar",T:9}])}create(e){const t={errorResult:""};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.raidStats=Xn.internalBinaryRead(e,e.uint32(),a,i.raidStats);break;case 2:i.errorResult=e.string();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raidStats&&Xn.internalBinaryWrite(e.raidStats,t.tag(1,v.LengthDelimited).fork(),a).join(),""!==e.errorResult&&t.tag(2,v.LengthDelimited).string(e.errorResult);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ei=new class extends X{constructor(){super("proto.StatWeightsRequest",[{no:1,name:"player",kind:"message",T:()=>Rn},{no:2,name:"raid_buffs",kind:"message",T:()=>Oe},{no:3,name:"party_buffs",kind:"message",T:()=>Pe},{no:9,name:"debuffs",kind:"message",T:()=>Be},{no:4,name:"encounter",kind:"message",T:()=>Fe},{no:5,name:"sim_options",kind:"message",T:()=>Fn},{no:8,name:"tanks",kind:"message",repeat:1,T:()=>je},{no:6,name:"stats_to_weigh",kind:"enum",repeat:1,T:()=>["proto.Stat",oe]},{no:7,name:"ep_reference_stat",kind:"enum",T:()=>["proto.Stat",oe]}])}create(e){const t={tanks:[],statsToWeigh:[],epReferenceStat:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.player=Rn.internalBinaryRead(e,e.uint32(),a,i.player);break;case 2:i.raidBuffs=Oe.internalBinaryRead(e,e.uint32(),a,i.raidBuffs);break;case 3:i.partyBuffs=Pe.internalBinaryRead(e,e.uint32(),a,i.partyBuffs);break;case 9:i.debuffs=Be.internalBinaryRead(e,e.uint32(),a,i.debuffs);break;case 4:i.encounter=Fe.internalBinaryRead(e,e.uint32(),a,i.encounter);break;case 5:i.simOptions=Fn.internalBinaryRead(e,e.uint32(),a,i.simOptions);break;case 8:i.tanks.push(je.internalBinaryRead(e,e.uint32(),a));break;case 6:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.statsToWeigh.push(e.int32());else i.statsToWeigh.push(e.int32());break;case 7:i.epReferenceStat=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.player&&Rn.internalBinaryWrite(e.player,t.tag(1,v.LengthDelimited).fork(),a).join(),e.raidBuffs&&Oe.internalBinaryWrite(e.raidBuffs,t.tag(2,v.LengthDelimited).fork(),a).join(),e.partyBuffs&&Pe.internalBinaryWrite(e.partyBuffs,t.tag(3,v.LengthDelimited).fork(),a).join(),e.debuffs&&Be.internalBinaryWrite(e.debuffs,t.tag(9,v.LengthDelimited).fork(),a).join(),e.encounter&&Fe.internalBinaryWrite(e.encounter,t.tag(4,v.LengthDelimited).fork(),a).join(),e.simOptions&&Fn.internalBinaryWrite(e.simOptions,t.tag(5,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.tanks.length;i++)je.internalBinaryWrite(e.tanks[i],t.tag(8,v.LengthDelimited).fork(),a).join();if(e.statsToWeigh.length){t.tag(6,v.LengthDelimited).fork();for(let a=0;a<e.statsToWeigh.length;a++)t.int32(e.statsToWeigh[a]);t.join()}0!==e.epReferenceStat&&t.tag(7,v.Varint).int32(e.epReferenceStat);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ti=new class extends X{constructor(){super("proto.StatWeightsResult",[{no:1,name:"dps",kind:"message",T:()=>ai},{no:4,name:"hps",kind:"message",T:()=>ai},{no:2,name:"tps",kind:"message",T:()=>ai},{no:3,name:"dtps",kind:"message",T:()=>ai}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.dps=ai.internalBinaryRead(e,e.uint32(),a,i.dps);break;case 4:i.hps=ai.internalBinaryRead(e,e.uint32(),a,i.hps);break;case 2:i.tps=ai.internalBinaryRead(e,e.uint32(),a,i.tps);break;case 3:i.dtps=ai.internalBinaryRead(e,e.uint32(),a,i.dtps);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.dps&&ai.internalBinaryWrite(e.dps,t.tag(1,v.LengthDelimited).fork(),a).join(),e.hps&&ai.internalBinaryWrite(e.hps,t.tag(4,v.LengthDelimited).fork(),a).join(),e.tps&&ai.internalBinaryWrite(e.tps,t.tag(2,v.LengthDelimited).fork(),a).join(),e.dtps&&ai.internalBinaryWrite(e.dtps,t.tag(3,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ai=new class extends X{constructor(){super("proto.StatWeightValues",[{no:1,name:"weights",kind:"scalar",repeat:1,T:1},{no:2,name:"weights_stdev",kind:"scalar",repeat:1,T:1},{no:3,name:"ep_values",kind:"scalar",repeat:1,T:1},{no:4,name:"ep_values_stdev",kind:"scalar",repeat:1,T:1}])}create(e){const t={weights:[],weightsStdev:[],epValues:[],epValuesStdev:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.weights.push(e.double());else i.weights.push(e.double());break;case 2:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.weightsStdev.push(e.double());else i.weightsStdev.push(e.double());break;case 3:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.epValues.push(e.double());else i.epValues.push(e.double());break;case 4:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.epValuesStdev.push(e.double());else i.epValuesStdev.push(e.double());break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(e.weights.length){t.tag(1,v.LengthDelimited).fork();for(let a=0;a<e.weights.length;a++)t.double(e.weights[a]);t.join()}if(e.weightsStdev.length){t.tag(2,v.LengthDelimited).fork();for(let a=0;a<e.weightsStdev.length;a++)t.double(e.weightsStdev[a]);t.join()}if(e.epValues.length){t.tag(3,v.LengthDelimited).fork();for(let a=0;a<e.epValues.length;a++)t.double(e.epValues[a]);t.join()}if(e.epValuesStdev.length){t.tag(4,v.LengthDelimited).fork();for(let a=0;a<e.epValuesStdev.length;a++)t.double(e.epValuesStdev[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};new class extends X{constructor(){super("proto.AsyncAPIResult",[{no:1,name:"progress_id",kind:"scalar",T:9}])}create(e){const t={progressId:""};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.progressId=e.string();else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.progressId&&t.tag(1,v.LengthDelimited).string(e.progressId);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ni=new class extends X{constructor(){super("proto.ProgressMetrics",[{no:1,name:"completed_iterations",kind:"scalar",T:5},{no:2,name:"total_iterations",kind:"scalar",T:5},{no:3,name:"completed_sims",kind:"scalar",T:5},{no:4,name:"total_sims",kind:"scalar",T:5},{no:8,name:"presim_running",kind:"scalar",T:8},{no:5,name:"dps",kind:"scalar",T:1},{no:9,name:"hps",kind:"scalar",T:1},{no:6,name:"final_raid_result",kind:"message",T:()=>zn},{no:7,name:"final_weight_result",kind:"message",T:()=>ti}])}create(e){const t={completedIterations:0,totalIterations:0,completedSims:0,totalSims:0,presimRunning:!1,dps:0,hps:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.completedIterations=e.int32();break;case 2:i.totalIterations=e.int32();break;case 3:i.completedSims=e.int32();break;case 4:i.totalSims=e.int32();break;case 8:i.presimRunning=e.bool();break;case 5:i.dps=e.double();break;case 9:i.hps=e.double();break;case 6:i.finalRaidResult=zn.internalBinaryRead(e,e.uint32(),a,i.finalRaidResult);break;case 7:i.finalWeightResult=ti.internalBinaryRead(e,e.uint32(),a,i.finalWeightResult);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.completedIterations&&t.tag(1,v.Varint).int32(e.completedIterations),0!==e.totalIterations&&t.tag(2,v.Varint).int32(e.totalIterations),0!==e.completedSims&&t.tag(3,v.Varint).int32(e.completedSims),0!==e.totalSims&&t.tag(4,v.Varint).int32(e.totalSims),!1!==e.presimRunning&&t.tag(8,v.Varint).bool(e.presimRunning),0!==e.dps&&t.tag(5,v.Bit64).double(e.dps),0!==e.hps&&t.tag(9,v.Bit64).double(e.hps),e.finalRaidResult&&zn.internalBinaryWrite(e.finalRaidResult,t.tag(6,v.LengthDelimited).fork(),a).join(),e.finalWeightResult&&ti.internalBinaryWrite(e.finalWeightResult,t.tag(7,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ii=new class extends X{constructor(){super("proto.SimSettings",[{no:1,name:"iterations",kind:"scalar",T:5},{no:2,name:"phase",kind:"scalar",T:5},{no:3,name:"fixed_rng_seed",kind:"scalar",T:3,L:0},{no:8,name:"show_damage_metrics",kind:"scalar",T:8},{no:4,name:"show_threat_metrics",kind:"scalar",T:8},{no:7,name:"show_healing_metrics",kind:"scalar",T:8},{no:5,name:"show_experimental",kind:"scalar",T:8},{no:6,name:"faction",kind:"enum",T:()=>["proto.Faction",te]}])}create(e){const t={iterations:0,phase:0,fixedRngSeed:0n,showDamageMetrics:!1,showThreatMetrics:!1,showHealingMetrics:!1,showExperimental:!1,faction:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.iterations=e.int32();break;case 2:i.phase=e.int32();break;case 3:i.fixedRngSeed=e.int64().toBigInt();break;case 8:i.showDamageMetrics=e.bool();break;case 4:i.showThreatMetrics=e.bool();break;case 7:i.showHealingMetrics=e.bool();break;case 5:i.showExperimental=e.bool();break;case 6:i.faction=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){0!==e.iterations&&t.tag(1,v.Varint).int32(e.iterations),0!==e.phase&&t.tag(2,v.Varint).int32(e.phase),0n!==e.fixedRngSeed&&t.tag(3,v.Varint).int64(e.fixedRngSeed),!1!==e.showDamageMetrics&&t.tag(8,v.Varint).bool(e.showDamageMetrics),!1!==e.showThreatMetrics&&t.tag(4,v.Varint).bool(e.showThreatMetrics),!1!==e.showHealingMetrics&&t.tag(7,v.Varint).bool(e.showHealingMetrics),!1!==e.showExperimental&&t.tag(5,v.Varint).bool(e.showExperimental),0!==e.faction&&t.tag(6,v.Varint).int32(e.faction);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const oi=new class extends X{constructor(){super("proto.IndividualSimSettings",[{no:5,name:"settings",kind:"message",T:()=>ii},{no:1,name:"raid_buffs",kind:"message",T:()=>Oe},{no:8,name:"debuffs",kind:"message",T:()=>Be},{no:7,name:"tanks",kind:"message",repeat:1,T:()=>je},{no:2,name:"party_buffs",kind:"message",T:()=>Pe},{no:3,name:"player",kind:"message",T:()=>Rn},{no:4,name:"encounter",kind:"message",T:()=>Fe},{no:6,name:"ep_weights",kind:"scalar",repeat:1,T:1},{no:9,name:"target_dummies",kind:"scalar",T:5}])}create(e){const t={tanks:[],epWeights:[],targetDummies:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 5:i.settings=ii.internalBinaryRead(e,e.uint32(),a,i.settings);break;case 1:i.raidBuffs=Oe.internalBinaryRead(e,e.uint32(),a,i.raidBuffs);break;case 8:i.debuffs=Be.internalBinaryRead(e,e.uint32(),a,i.debuffs);break;case 7:i.tanks.push(je.internalBinaryRead(e,e.uint32(),a));break;case 2:i.partyBuffs=Pe.internalBinaryRead(e,e.uint32(),a,i.partyBuffs);break;case 3:i.player=Rn.internalBinaryRead(e,e.uint32(),a,i.player);break;case 4:i.encounter=Fe.internalBinaryRead(e,e.uint32(),a,i.encounter);break;case 6:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.epWeights.push(e.double());else i.epWeights.push(e.double());break;case 9:i.targetDummies=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.settings&&ii.internalBinaryWrite(e.settings,t.tag(5,v.LengthDelimited).fork(),a).join(),e.raidBuffs&&Oe.internalBinaryWrite(e.raidBuffs,t.tag(1,v.LengthDelimited).fork(),a).join(),e.debuffs&&Be.internalBinaryWrite(e.debuffs,t.tag(8,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.tanks.length;i++)je.internalBinaryWrite(e.tanks[i],t.tag(7,v.LengthDelimited).fork(),a).join();if(e.partyBuffs&&Pe.internalBinaryWrite(e.partyBuffs,t.tag(2,v.LengthDelimited).fork(),a).join(),e.player&&Rn.internalBinaryWrite(e.player,t.tag(3,v.LengthDelimited).fork(),a).join(),e.encounter&&Fe.internalBinaryWrite(e.encounter,t.tag(4,v.LengthDelimited).fork(),a).join(),e.epWeights.length){t.tag(6,v.LengthDelimited).fork();for(let a=0;a<e.epWeights.length;a++)t.double(e.epWeights[a]);t.join()}0!==e.targetDummies&&t.tag(9,v.Varint).int32(e.targetDummies);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ri=new class extends X{constructor(){super("proto.SavedGearSet",[{no:1,name:"gear",kind:"message",T:()=>Ve},{no:2,name:"bonus_stats",kind:"scalar",repeat:1,T:1}])}create(e){const t={bonusStats:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.gear=Ve.internalBinaryRead(e,e.uint32(),a,i.gear);break;case 2:if(n===v.LengthDelimited)for(let t=e.int32()+e.pos;e.pos<t;)i.bonusStats.push(e.double());else i.bonusStats.push(e.double());break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(e.gear&&Ve.internalBinaryWrite(e.gear,t.tag(1,v.LengthDelimited).fork(),a).join(),e.bonusStats.length){t.tag(2,v.LengthDelimited).fork();for(let a=0;a<e.bonusStats.length;a++)t.double(e.bonusStats[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const si=new class extends X{constructor(){super("proto.SavedSettings",[{no:1,name:"raid_buffs",kind:"message",T:()=>Oe},{no:2,name:"party_buffs",kind:"message",T:()=>Pe},{no:7,name:"debuffs",kind:"message",T:()=>Be},{no:3,name:"player_buffs",kind:"message",T:()=>Ge},{no:4,name:"consumes",kind:"message",T:()=>Re},{no:5,name:"race",kind:"enum",T:()=>["proto.Race",ee]},{no:6,name:"cooldowns",kind:"message",T:()=>Le}])}create(e){const t={race:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.raidBuffs=Oe.internalBinaryRead(e,e.uint32(),a,i.raidBuffs);break;case 2:i.partyBuffs=Pe.internalBinaryRead(e,e.uint32(),a,i.partyBuffs);break;case 7:i.debuffs=Be.internalBinaryRead(e,e.uint32(),a,i.debuffs);break;case 3:i.playerBuffs=Ge.internalBinaryRead(e,e.uint32(),a,i.playerBuffs);break;case 4:i.consumes=Re.internalBinaryRead(e,e.uint32(),a,i.consumes);break;case 5:i.race=e.int32();break;case 6:i.cooldowns=Le.internalBinaryRead(e,e.uint32(),a,i.cooldowns);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raidBuffs&&Oe.internalBinaryWrite(e.raidBuffs,t.tag(1,v.LengthDelimited).fork(),a).join(),e.partyBuffs&&Pe.internalBinaryWrite(e.partyBuffs,t.tag(2,v.LengthDelimited).fork(),a).join(),e.debuffs&&Be.internalBinaryWrite(e.debuffs,t.tag(7,v.LengthDelimited).fork(),a).join(),e.playerBuffs&&Ge.internalBinaryWrite(e.playerBuffs,t.tag(3,v.LengthDelimited).fork(),a).join(),e.consumes&&Re.internalBinaryWrite(e.consumes,t.tag(4,v.LengthDelimited).fork(),a).join(),0!==e.race&&t.tag(5,v.Varint).int32(e.race),e.cooldowns&&Le.internalBinaryWrite(e.cooldowns,t.tag(6,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const li=new class extends X{constructor(){super("proto.SavedTalents",[{no:1,name:"talents_string",kind:"scalar",T:9},{no:2,name:"glyphs",kind:"message",T:()=>Me}])}create(e){const t={talentsString:""};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.talentsString=e.string();break;case 2:i.glyphs=Me.internalBinaryRead(e,e.uint32(),a,i.glyphs);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.talentsString&&t.tag(1,v.LengthDelimited).string(e.talentsString),e.glyphs&&Me.internalBinaryWrite(e.glyphs,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ci=new class extends X{constructor(){super("proto.BuffBot",[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"raid_index",kind:"scalar",T:5},{no:3,name:"innervate_assignment",kind:"message",T:()=>je},{no:4,name:"power_infusion_assignment",kind:"message",T:()=>je},{no:5,name:"tricks_of_the_trade_assignment",kind:"message",T:()=>je},{no:6,name:"unholy_frenzy_assignment",kind:"message",T:()=>je}])}create(e){const t={id:"",raidIndex:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.id=e.string();break;case 2:i.raidIndex=e.int32();break;case 3:i.innervateAssignment=je.internalBinaryRead(e,e.uint32(),a,i.innervateAssignment);break;case 4:i.powerInfusionAssignment=je.internalBinaryRead(e,e.uint32(),a,i.powerInfusionAssignment);break;case 5:i.tricksOfTheTradeAssignment=je.internalBinaryRead(e,e.uint32(),a,i.tricksOfTheTradeAssignment);break;case 6:i.unholyFrenzyAssignment=je.internalBinaryRead(e,e.uint32(),a,i.unholyFrenzyAssignment);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){""!==e.id&&t.tag(1,v.LengthDelimited).string(e.id),0!==e.raidIndex&&t.tag(2,v.Varint).int32(e.raidIndex),e.innervateAssignment&&je.internalBinaryWrite(e.innervateAssignment,t.tag(3,v.LengthDelimited).fork(),a).join(),e.powerInfusionAssignment&&je.internalBinaryWrite(e.powerInfusionAssignment,t.tag(4,v.LengthDelimited).fork(),a).join(),e.tricksOfTheTradeAssignment&&je.internalBinaryWrite(e.tricksOfTheTradeAssignment,t.tag(5,v.LengthDelimited).fork(),a).join(),e.unholyFrenzyAssignment&&je.internalBinaryWrite(e.unholyFrenzyAssignment,t.tag(6,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const di=new class extends X{constructor(){super("proto.BlessingsAssignment",[{no:1,name:"blessings",kind:"enum",repeat:1,T:()=>["proto.Blessings",Fa]}])}create(e){const t={blessings:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)if(n===v.LengthDelimited)for(let a=e.int32()+e.pos;e.pos<a;)i.blessings.push(e.int32());else i.blessings.push(e.int32());else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){if(e.blessings.length){t.tag(1,v.LengthDelimited).fork();for(let a=0;a<e.blessings.length;a++)t.int32(e.blessings[a]);t.join()}let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const mi=new class extends X{constructor(){super("proto.BlessingsAssignments",[{no:1,name:"paladins",kind:"message",repeat:1,T:()=>di}])}create(e){const t={paladins:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.paladins.push(di.internalBinaryRead(e,e.uint32(),a));else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){for(let i=0;i<e.paladins.length;i++)di.internalBinaryWrite(e.paladins[i],t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const pi=new class extends X{constructor(){super("proto.SavedEncounter",[{no:1,name:"encounter",kind:"message",T:()=>Fe}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();if(1===t)i.encounter=Fe.internalBinaryRead(e,e.uint32(),a,i.encounter);else{let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.encounter&&Fe.internalBinaryWrite(e.encounter,t.tag(1,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const hi=new class extends X{constructor(){super("proto.SavedRaid",[{no:1,name:"raid",kind:"message",T:()=>Nn},{no:2,name:"buff_bots",kind:"message",repeat:1,T:()=>ci},{no:3,name:"blessings",kind:"message",T:()=>mi},{no:4,name:"faction",kind:"enum",T:()=>["proto.Faction",te]},{no:5,name:"phase",kind:"scalar",T:5}])}create(e){const t={buffBots:[],faction:0,phase:0};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.raid=Nn.internalBinaryRead(e,e.uint32(),a,i.raid);break;case 2:i.buffBots.push(ci.internalBinaryRead(e,e.uint32(),a));break;case 3:i.blessings=mi.internalBinaryRead(e,e.uint32(),a,i.blessings);break;case 4:i.faction=e.int32();break;case 5:i.phase=e.int32();break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.raid&&Nn.internalBinaryWrite(e.raid,t.tag(1,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.buffBots.length;i++)ci.internalBinaryWrite(e.buffBots[i],t.tag(2,v.LengthDelimited).fork(),a).join();e.blessings&&mi.internalBinaryWrite(e.blessings,t.tag(3,v.LengthDelimited).fork(),a).join(),0!==e.faction&&t.tag(4,v.Varint).int32(e.faction),0!==e.phase&&t.tag(5,v.Varint).int32(e.phase);let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const gi=new class extends X{constructor(){super("proto.RaidSimSettings",[{no:5,name:"settings",kind:"message",T:()=>ii},{no:1,name:"raid",kind:"message",T:()=>Nn},{no:2,name:"buff_bots",kind:"message",repeat:1,T:()=>ci},{no:3,name:"blessings",kind:"message",T:()=>mi},{no:4,name:"encounter",kind:"message",T:()=>Fe}])}create(e){const t={buffBots:[]};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 5:i.settings=ii.internalBinaryRead(e,e.uint32(),a,i.settings);break;case 1:i.raid=Nn.internalBinaryRead(e,e.uint32(),a,i.raid);break;case 2:i.buffBots.push(ci.internalBinaryRead(e,e.uint32(),a));break;case 3:i.blessings=mi.internalBinaryRead(e,e.uint32(),a,i.blessings);break;case 4:i.encounter=Fe.internalBinaryRead(e,e.uint32(),a,i.encounter);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.settings&&ii.internalBinaryWrite(e.settings,t.tag(5,v.LengthDelimited).fork(),a).join(),e.raid&&Nn.internalBinaryWrite(e.raid,t.tag(1,v.LengthDelimited).fork(),a).join();for(let i=0;i<e.buffBots.length;i++)ci.internalBinaryWrite(e.buffBots[i],t.tag(2,v.LengthDelimited).fork(),a).join();e.blessings&&mi.internalBinaryWrite(e.blessings,t.tag(3,v.LengthDelimited).fork(),a).join(),e.encounter&&Fe.internalBinaryWrite(e.encounter,t.tag(4,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const ui=new class extends X{constructor(){super("proto.SimRun",[{no:1,name:"request",kind:"message",T:()=>Ln},{no:2,name:"result",kind:"message",T:()=>zn}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.request=Ln.internalBinaryRead(e,e.uint32(),a,i.request);break;case 2:i.result=zn.internalBinaryRead(e,e.uint32(),a,i.result);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.request&&Ln.internalBinaryWrite(e.request,t.tag(1,v.LengthDelimited).fork(),a).join(),e.result&&zn.internalBinaryWrite(e.result,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const fi=new class extends X{constructor(){super("proto.SimRunData",[{no:1,name:"run",kind:"message",T:()=>ui},{no:2,name:"reference_run",kind:"message",T:()=>ui}])}create(e){const t={};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.run=ui.internalBinaryRead(e,e.uint32(),a,i.run);break;case 2:i.referenceRun=ui.internalBinaryRead(e,e.uint32(),a,i.referenceRun);break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){e.run&&ui.internalBinaryWrite(e.run,t.tag(1,v.LengthDelimited).fork(),a).join(),e.referenceRun&&ui.internalBinaryWrite(e.referenceRun,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}};const wi=new class extends X{constructor(){super("proto.DetailedResultsUpdate",[{no:1,name:"run_data",kind:"message",oneof:"data",T:()=>fi},{no:2,name:"settings",kind:"message",oneof:"data",T:()=>ii}])}create(e){const t={data:{oneofKind:void 0}};return Object.defineProperty(t,G,{enumerable:!1,value:this}),void 0!==e&&q(this,t,e),t}internalBinaryRead(e,t,a,n){let i=n??this.create(),o=e.pos+t;for(;e.pos<o;){let[t,n]=e.tag();switch(t){case 1:i.data={oneofKind:"runData",runData:fi.internalBinaryRead(e,e.uint32(),a,i.data.runData)};break;case 2:i.data={oneofKind:"settings",settings:ii.internalBinaryRead(e,e.uint32(),a,i.data.settings)};break;default:let o=a.readUnknownField;if("throw"===o)throw new globalThis.Error(`Unknown field ${t} (wire type ${n}) for ${this.typeName}`);let r=e.skip(n);!1!==o&&(!0===o?T.onRead:o)(this.typeName,i,t,n,r)}}return i}internalBinaryWrite(e,t,a){"runData"===e.data.oneofKind&&fi.internalBinaryWrite(e.data.runData,t.tag(1,v.LengthDelimited).fork(),a).join(),"settings"===e.data.oneofKind&&ii.internalBinaryWrite(e.data.settings,t.tag(2,v.LengthDelimited).fork(),a).join();let n=a.writeUnknownFields;return!1!==n&&(1==n?T.onWrite:n)(this.typeName,e,t),t}},yi=1,ki="wotlk",bi=window.location.pathname.split("/"),Ii=bi.findIndex((e=>"wotlk"==e));function Ti(e,t){return e<t?-1:t<e?1:0}function xi(e){return e.reduce(((e,t)=>e+t),0)}function Si(e){return e.reduce(((e,t,a,n)=>t>n[e]?a:e),0)}function vi(e,t,a){[e[t],e[a]]=[e[a],e[t]]}function _i(e,t,a){return a=a||((e,t)=>e==t),e.length==t.length&&e.every(((e,n)=>a(e,t[n])))}function Oi(e,t){t=t||((e,t)=>e==t);const a=[];return e.forEach((e=>{null==a.find((a=>t(a,e)))&&a.push(e)})),a}function Pi(e,t){const a={};return e.forEach((e=>{const n=t(e);a[n]?a[n].push(e):a[n]=[e]})),a}function Gi(e,t){return 1.645*e/Math.sqrt(t)}function Ri(e){return Object.keys(e).filter((t=>!isNaN(Number(e[t])))).map((t=>parseInt(e[t])))}function Bi(e){return 2==e.button}function Ni(e,t){if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(e)){let a=e.substring(1).split("");3==a.length&&(a=[a[0],a[0],a[1],a[1],a[2],a[2]]);const n="0x"+a.join("");return"rgba("+[n>>16&255,n>>8&255,255&n].join(",")+","+t+")"}throw new Error("Invalid hex color: "+e)}function Fi(e,t){const a="data:text/json;charset=utf-8,"+encodeURIComponent(e),n=document.createElement("a");n.setAttribute("href",a),n.setAttribute("download",t),document.body.appendChild(n),n.click(),n.remove()}function Wi(e,t,a,n){const i=a-t,o=i.toFixed(n);i>=0?(e.textContent="+"+o,e.classList.remove("negative"),e.classList.add("positive")):(e.textContent=""+o,e.classList.remove("positive"),e.classList.add("negative"))}function Vi(e,t){return 0==t?[]:1==t?e.map((e=>[e])):e.map(((a,n)=>{const i=e.slice();i.splice(n,1);return Vi(i,t-1).map((e=>[a].concat(e)))})).flat()}function Ci(e,t){if(0==t)return[];if(1==t)return e.map((e=>[e]));{const a=Ci(e,t-1);return e.map((e=>a.map((t=>{const a=t.slice();return a.push(e),a})))).flat()}}function Di(e,t){return Oi(Ci(e,t).map((e=>e.sort())),((e,t)=>e.every(((e,a)=>e==t[a]))))}-1!=Ii&&bi[Ii+1];const Ei=Ri(he).filter((e=>e!=he.GemColorUnknown)),ji=[he.GemColorRed,he.GemColorYellow,he.GemColorBlue],Ui=[he.GemColorGreen,he.GemColorPurple,he.GemColorOrange],Mi=new Map;function Ai(e,t){return e==t||Mi.has(t)&&Mi.get(t).includes(e)}function Li(e,t){return Ai(e.color,t)}function zi(e,t){return e.color==he.GemColorMeta==(t==he.GemColorMeta)}function Hi(e,t){return!e.unique&&e.requiredProfession==ie.ProfessionUnknown&&(null==t||e.phase<=t)}Mi.set(he.GemColorMeta,[he.GemColorMeta]),Mi.set(he.GemColorBlue,[he.GemColorBlue,he.GemColorPurple,he.GemColorGreen,he.GemColorPrismatic]),Mi.set(he.GemColorRed,[he.GemColorRed,he.GemColorPurple,he.GemColorOrange,he.GemColorPrismatic]),Mi.set(he.GemColorYellow,[he.GemColorYellow,he.GemColorOrange,he.GemColorGreen,he.GemColorPrismatic]),Mi.set(he.GemColorPrismatic,[he.GemColorRed,he.GemColorOrange,he.GemColorYellow,he.GemColorGreen,he.GemColorBlue,he.GemColorPurple,he.GemColorPrismatic]);class $i{constructor(e,t,a,n,i,o,r){this.id=e,this.description=t,this.minRed=a,this.minYellow=n,this.minBlue=i,this.compareColorGreater=o,this.compareColorLesser=r,qi.set(this.id,this)}isMet(e,t,a){if(!(e>=this.minRed&&t>=this.minYellow&&a>=this.minBlue))return!1;if(this.compareColorGreater==he.GemColorUnknown)return!0;return $i.getNumInCategory(this.compareColorGreater,e,t,a)>$i.getNumInCategory(this.compareColorLesser,e,t,a)}isCompareColorCondition(){return 0==this.minRed&&0==this.minYellow&&0==this.minBlue}isOneOfEach(){return 1==this.minRed&&1==this.minYellow&&1==this.minBlue}isTwoAndOne(){return[this.minRed,this.minYellow,this.minBlue].includes(2)}isThreeOfAColor(){return 3==this.minRed||3==this.minYellow||3==this.minBlue}static getNumInCategory(e,t,a,n){if(e==he.GemColorRed)return t;if(e==he.GemColorYellow)return a;if(e==he.GemColorBlue)return n;throw new Error("Invalid gem color for category check: "+e)}static fromMinColors(e,t,a,n,i){return new $i(e,t,a,n,i,he.GemColorUnknown,he.GemColorUnknown)}static fromCompareColors(e,t,a,n){return new $i(e,t,0,0,0,a,n)}}const qi=new Map;function Ji(e){if(!qi.has(e))throw new Error("Missing meta gem condition for gem: "+e);return qi.get(e)}function Ki(e){return Ji(e.id).description}const Yi=$i.fromMinColors(41285,"Requires at least 2 Blue Gems.",0,0,2);$i.fromMinColors(41307,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(41333,"Requires at least 3 Red Gems.",3,0,0),$i.fromMinColors(41335,"Requires at least 2 Red Gems and at least 1 Yellow Gem.",2,1,0),$i.fromMinColors(41337,"Requires at least 2 Blue Gems and at least 1 Red Gem.",1,0,2),$i.fromMinColors(41339,"Requires at least 2 Yellow Gems and at least 1 Red Gem.",1,2,0),$i.fromMinColors(41375,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(41376,"Requires at least 2 Red Gems.",2,0,0),$i.fromMinColors(41378,"Requires at least 2 Yellow Gems and at least 1 Blue Gem.",0,2,1),$i.fromMinColors(41379,"Requires at least 2 Red Gems and at least 1 Blue Gem.",2,0,1),$i.fromMinColors(41380,"Requires at least 2 Blue Gems and at least 1 Red Gem.",1,0,2),$i.fromMinColors(41381,"Requires at least 2 Yellow Gems and at least 1 Blue Gem.",0,2,1),$i.fromMinColors(41382,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(41385,"Requires at least 2 Blue Gems and at least 1 Red Gem.",1,0,2),$i.fromMinColors(41389,"Requires at least 2 Red Gems and at least 1 Yellow Gem.",2,1,0),$i.fromMinColors(41395,"Requires at least 2 Red Gems and at least 1 Blue Gem.",2,0,1),$i.fromMinColors(41396,"Requires at least 2 Red Gems and at least 1 Blue Gem.",2,0,1),$i.fromMinColors(41397,"Requires at least 3 Blue Gems.",0,0,3),$i.fromMinColors(41398,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(41400,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(41401,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(44076,"Requires at least 2 Yellow Gems and at least 1 Red Gem.",1,2,0),$i.fromMinColors(44078,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(44081,"Requires at least 2 Red Gems and at least 1 Blue Gem.",2,0,1),$i.fromMinColors(44082,"Requires at least 2 Blue Gems and at least 1 Red Gem.",1,0,2),$i.fromMinColors(44084,"Requires at least 2 Yellow Gems and at least 1 Blue Gem.",0,2,1),$i.fromMinColors(44087,"Requires at least 3 Blue Gems.",0,0,3),$i.fromMinColors(44088,"Requires at least 2 Blue Gems and at least 1 Yellow Gem.",0,1,2),$i.fromMinColors(44089,"Requires at least 1 Red Gem, at least 1 Yellow Gem, and at least 1 Blue Gem.",1,1,1),$i.fromMinColors(25899,"Requires at least 2 Red Gems, at least 2 Yellow Gems, and at least 2 Blue Gems.",2,2,2);const Qi=$i.fromMinColors(34220,"Requires at least 2 Blue Gems.",0,0,2);$i.fromMinColors(25890,"Requires at least 2 Red Gems, at least 2 Yellow Gems, and at least 2 Blue Gems.",2,2,2),$i.fromMinColors(35503,"Requires at least 3 Red Gems.",3,0,0),$i.fromMinColors(35501,"Requires at least 2 Blue Gems and at least 1 Yellow Gem.",0,1,2),$i.fromMinColors(32641,"Requires at least 3 Yellow Gems.",0,3,0),$i.fromMinColors(25901,"Requires at least 2 Red Gems, at least 2 Yellow Gems, and at least 2 Blue Gems.",2,2,2),$i.fromMinColors(25896,"Requires at least 3 Blue Gems.",0,0,3),$i.fromMinColors(32409,"Requires at least 2 Red Gems, at least 2 Yellow Gems, and at least 2 Blue Gems.",2,2,2),$i.fromMinColors(25894,"Requires at least 2 Yellow Gems and at least 1 Red Gem.",1,2,0),$i.fromMinColors(28557,"Requires at least 2 Yellow Gems and at least 1 Red Gem.",1,2,0),$i.fromMinColors(28556,"Requires at least 2 Yellow Gems and at least 1 Red Gem.",1,2,0),$i.fromMinColors(25898,"Requires at least 5 Blue Gems.",0,0,5),$i.fromMinColors(32410,"Requires at least 2 Red Gems, at least 2 Yellow Gems, and at least 2 Blue Gems.",2,2,2),$i.fromCompareColors(25897,"Requires more Red Gems than Blue Gems.",he.GemColorRed,he.GemColorBlue),$i.fromCompareColors(25895,"Requires more Red Gems than Yellow Gems.",he.GemColorRed,he.GemColorYellow),$i.fromCompareColors(25893,"Requires more Blue Gems than Yellow Gems.",he.GemColorBlue,he.GemColorYellow),$i.fromCompareColors(32640,"Requires more Blue Gems than Yellow Gems.",he.GemColorBlue,he.GemColorYellow);const Xi={[he.GemColorBlue]:"socket-color-blue",[he.GemColorMeta]:"socket-color-meta",[he.GemColorRed]:"socket-color-red",[he.GemColorYellow]:"socket-color-yellow",[he.GemColorPrismatic]:"socket-color-prismatic"};function Zi(e,t){if(Object.values(Xi).forEach((t=>e.classList.remove(t))),!Xi[t])throw new Error("No css class for gem socket color: "+t);e.classList.add(Xi[t])}const eo={[he.GemColorBlue]:"https://wow.zamimg.com/images/icons/socket-blue.gif",[he.GemColorMeta]:"https://wow.zamimg.com/images/icons/socket-meta.gif",[he.GemColorRed]:"https://wow.zamimg.com/images/icons/socket-red.gif",[he.GemColorYellow]:"https://wow.zamimg.com/images/icons/socket-yellow.gif",[he.GemColorPrismatic]:"https://wow.zamimg.com/images/icons/socket-prismatic.gif"};function to(e){if(eo[e])return eo[e];throw new Error("No empty socket url for gem socket color: "+e)}const ao=Ri(Z).length,no=[Z.SpecBalanceDruid,Z.SpecFeralDruid,Z.SpecFeralTankDruid,Z.SpecHunter,Z.SpecMage,Z.SpecRetributionPaladin,Z.SpecProtectionPaladin,Z.SpecHealingPriest,Z.SpecShadowPriest,Z.SpecSmitePriest,Z.SpecRogue,Z.SpecElementalShaman,Z.SpecEnhancementShaman,Z.SpecWarlock,Z.SpecWarrior,Z.SpecProtectionWarrior,Z.SpecDeathknight,Z.SpecTankDeathknight],io={[Z.SpecBalanceDruid]:"Balance Druid",[Z.SpecElementalShaman]:"Elemental Shaman",[Z.SpecEnhancementShaman]:"Enhancement Shaman",[Z.SpecFeralDruid]:"Feral Druid",[Z.SpecFeralTankDruid]:"Feral Tank Druid",[Z.SpecHunter]:"Hunter",[Z.SpecMage]:"Mage",[Z.SpecRogue]:"Rogue",[Z.SpecRetributionPaladin]:"Retribution Paladin",[Z.SpecProtectionPaladin]:"Protection Paladin",[Z.SpecHealingPriest]:"Priest",[Z.SpecShadowPriest]:"Shadow Priest",[Z.SpecSmitePriest]:"Smite Priest",[Z.SpecWarlock]:"Warlock",[Z.SpecWarrior]:"Warrior",[Z.SpecProtectionWarrior]:"Protection Warrior",[Z.SpecDeathknight]:"Death Knight",[Z.SpecTankDeathknight]:"Death Knight Tank"},oo={[ne.ClassUnknown]:"#fff",[ne.ClassDruid]:"#ff7d0a",[ne.ClassHunter]:"#abd473",[ne.ClassMage]:"#69ccf0",[ne.ClassPaladin]:"#f58cba",[ne.ClassPriest]:"#fff",[ne.ClassRogue]:"#fff569",[ne.ClassShaman]:"#2459ff",[ne.ClassWarlock]:"#9482c9",[ne.ClassWarrior]:"#c79c6e",[ne.ClassDeathknight]:"#c41e3a"},ro={[Z.SpecBalanceDruid]:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_starfall.jpg",[Z.SpecElementalShaman]:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg",[Z.SpecEnhancementShaman]:"https://wow.zamimg.com/images/wow/icons/large/ability_shaman_stormstrike.jpg",[Z.SpecFeralDruid]:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_catform.jpg",[Z.SpecFeralTankDruid]:"https://wow.zamimg.com/images/wow/icons/large/ability_racial_bearform.jpg",[Z.SpecHunter]:"https://wow.zamimg.com/images/wow/icons/large/ability_marksmanship.jpg",[Z.SpecMage]:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_magicalsentry.jpg",[Z.SpecRogue]:"https://wow.zamimg.com/images/wow/icons/large/classicon_rogue.jpg",[Z.SpecRetributionPaladin]:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_auraoflight.jpg",[Z.SpecProtectionPaladin]:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_devotionaura.jpg",[Z.SpecHealingPriest]:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_guardianspirit.jpg",[Z.SpecShadowPriest]:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowwordpain.jpg",[Z.SpecSmitePriest]:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_holysmite.jpg",[Z.SpecWarlock]:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_metamorphosis.jpg",[Z.SpecWarrior]:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_innerrage.jpg",[Z.SpecProtectionWarrior]:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_defensivestance.jpg",[Z.SpecDeathknight]:"https://wow.zamimg.com/images/wow/icons/medium/class_deathknight.jpg",[Z.SpecTankDeathknight]:"https://wow.zamimg.com/images/wow/icons/medium/class_deathknight.jpg"},so={[ne.ClassUnknown]:[],[ne.ClassDruid]:["https://wow.zamimg.com/images/wow/icons/medium/spell_nature_starfall.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_racial_bearform.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_nature_healingtouch.jpg"],[ne.ClassHunter]:["https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_beasttaming.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_marksmanship.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_swiftstrike.jpg"],[ne.ClassMage]:["https://wow.zamimg.com/images/wow/icons/medium/spell_holy_magicalsentry.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_fire_firebolt02.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_frost_frostbolt02.jpg"],[ne.ClassPaladin]:["https://wow.zamimg.com/images/wow/icons/medium/spell_holy_holybolt.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_holy_devotionaura.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_holy_auraoflight.jpg"],[ne.ClassPriest]:["https://wow.zamimg.com/images/wow/icons/medium/spell_holy_powerinfusion.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_holy_holybolt.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_shadow_shadowwordpain.jpg"],[ne.ClassRogue]:["https://wow.zamimg.com/images/wow/icons/medium/ability_rogue_eviscerate.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_backstab.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_stealth.jpg"],[ne.ClassShaman]:["https://wow.zamimg.com/images/wow/icons/medium/spell_nature_lightning.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_shaman_stormstrike.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_nature_magicimmunity.jpg"],[ne.ClassWarlock]:["https://wow.zamimg.com/images/wow/icons/medium/spell_shadow_deathcoil.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_shadow_metamorphosis.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_shadow_rainoffire.jpg"],[ne.ClassWarrior]:["https://wow.zamimg.com/images/wow/icons/medium/ability_warrior_savageblow.jpg","https://wow.zamimg.com/images/wow/icons/medium/ability_warrior_innerrage.jpg","https://wow.zamimg.com/images/wow/icons/medium/inv_shield_06.jpg"],[ne.ClassDeathknight]:["https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_bloodpresence.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_frostpresence.jpg","https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_unholypresence.jpg"]},lo={[Z.SpecBalanceDruid]:"/wotlk/assets/img/balance_druid_icon.png",[Z.SpecElementalShaman]:"/wotlk/assets/img/elemental_shaman_icon.png",[Z.SpecEnhancementShaman]:"/wotlk/assets/img/enhancement_shaman_icon.png",[Z.SpecFeralDruid]:"/wotlk/assets/img/feral_druid_icon.png",[Z.SpecFeralTankDruid]:"/wotlk/assets/img/feral_druid_tank_icon.png",[Z.SpecHunter]:"/wotlk/assets/img/hunter_icon.png",[Z.SpecMage]:"/wotlk/assets/img/mage_icon.png",[Z.SpecRogue]:"/wotlk/assets/img/rogue_icon.png",[Z.SpecRetributionPaladin]:"/wotlk/assets/img/retribution_icon.png",[Z.SpecProtectionPaladin]:"/wotlk/assets/img/protection_paladin_icon.png",[Z.SpecHealingPriest]:"/wotlk/assets/img/shadow_priest_icon.png",[Z.SpecShadowPriest]:"/wotlk/assets/img/shadow_priest_icon.png",[Z.SpecSmitePriest]:"/wotlk/assets/img/smite_priest_icon.png",[Z.SpecWarlock]:"/wotlk/assets/img/warlock_icon.png",[Z.SpecWarrior]:"/wotlk/assets/img/warrior_icon.png",[Z.SpecProtectionWarrior]:"/wotlk/assets/img/protection_warrior_icon.png",[Z.SpecDeathknight]:"/wotlk/assets/img/death_knight_icon.png",[Z.SpecTankDeathknight]:"/wotlk/assets/img/death_knight_icon.png"},co="/wotlk/assets/img/raid_icon.png";function mo(e){return e.split("-").map((e=>xi([...e].map((e=>parseInt(e))))))}function po(e){return xi(mo(e))}function ho(e){return Si(mo(e))||0}function go(e,t){const a=ho(t);return so[bo[e]][a]}const uo=new URL(`${window.location.protocol}//${window.location.host}/wotlk/SPEC/`);function fo(e){let t=Z[e];return t=t.substring("Spec".length),t=function(e){let t=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));return t.startsWith("_")&&(t=t.substring(1)),t}(t),uo.toString().replace("SPEC",t)}const wo=new URL(`${window.location.protocol}//${window.location.host}/wotlk/raid/`).toString(),yo={[Z.SpecBalanceDruid]:{rotationCreate:()=>In.create(),rotationEquals:(e,t)=>In.equals(e,t),rotationCopy:e=>In.clone(e),rotationToJson:e=>In.toJson(e),rotationFromJson:e=>In.fromJson(e),rotationFromPlayer:e=>"balanceDruid"==e.spec.oneofKind&&e.spec.balanceDruid.rotation||In.create(),talentsCreate:()=>kn.create(),talentsEquals:(e,t)=>kn.equals(e,t),talentsCopy:e=>kn.clone(e),talentsToJson:e=>kn.toJson(e),talentsFromJson:e=>kn.fromJson(e),talentsFromPlayer:e=>"balanceDruid"==e.spec.oneofKind&&e.spec.balanceDruid.talents||kn.create(),optionsCreate:()=>Tn.create(),optionsEquals:(e,t)=>Tn.equals(e,t),optionsCopy:e=>Tn.clone(e),optionsToJson:e=>Tn.toJson(e),optionsFromJson:e=>Tn.fromJson(e),optionsFromPlayer:e=>"balanceDruid"==e.spec.oneofKind&&e.spec.balanceDruid.options||Tn.create()},[Z.SpecElementalShaman]:{rotationCreate:()=>Zt.create(),rotationEquals:(e,t)=>Zt.equals(e,t),rotationCopy:e=>Zt.clone(e),rotationToJson:e=>Zt.toJson(e),rotationFromJson:e=>Zt.fromJson(e),rotationFromPlayer:e=>"elementalShaman"==e.spec.oneofKind&&e.spec.elementalShaman.rotation||Zt.create(),talentsCreate:()=>Yt.create(),talentsEquals:(e,t)=>Yt.equals(e,t),talentsCopy:e=>Yt.clone(e),talentsToJson:e=>Yt.toJson(e),talentsFromJson:e=>Yt.fromJson(e),talentsFromPlayer:e=>"elementalShaman"==e.spec.oneofKind&&e.spec.elementalShaman.talents||Yt.create(),optionsCreate:()=>ea.create(),optionsEquals:(e,t)=>ea.equals(e,t),optionsCopy:e=>ea.clone(e),optionsToJson:e=>ea.toJson(e),optionsFromJson:e=>ea.fromJson(e),optionsFromPlayer:e=>"elementalShaman"==e.spec.oneofKind&&e.spec.elementalShaman.options||ea.create()},[Z.SpecEnhancementShaman]:{rotationCreate:()=>aa.create(),rotationEquals:(e,t)=>aa.equals(e,t),rotationCopy:e=>aa.clone(e),rotationToJson:e=>aa.toJson(e),rotationFromJson:e=>aa.fromJson(e),rotationFromPlayer:e=>"enhancementShaman"==e.spec.oneofKind&&e.spec.enhancementShaman.rotation||aa.create(),talentsCreate:()=>Yt.create(),talentsEquals:(e,t)=>Yt.equals(e,t),talentsCopy:e=>Yt.clone(e),talentsToJson:e=>Yt.toJson(e),talentsFromJson:e=>Yt.fromJson(e),talentsFromPlayer:e=>"enhancementShaman"==e.spec.oneofKind&&e.spec.enhancementShaman.talents||Yt.create(),optionsCreate:()=>na.create(),optionsEquals:(e,t)=>na.equals(e,t),optionsCopy:e=>na.clone(e),optionsToJson:e=>na.toJson(e),optionsFromJson:e=>na.fromJson(e),optionsFromPlayer:e=>"enhancementShaman"==e.spec.oneofKind&&e.spec.enhancementShaman.options||na.create()},[Z.SpecFeralDruid]:{rotationCreate:()=>Sn.create(),rotationEquals:(e,t)=>Sn.equals(e,t),rotationCopy:e=>Sn.clone(e),rotationToJson:e=>Sn.toJson(e),rotationFromJson:e=>Sn.fromJson(e),rotationFromPlayer:e=>"feralDruid"==e.spec.oneofKind&&e.spec.feralDruid.rotation||Sn.create(),talentsCreate:()=>kn.create(),talentsEquals:(e,t)=>kn.equals(e,t),talentsCopy:e=>kn.clone(e),talentsToJson:e=>kn.toJson(e),talentsFromJson:e=>kn.fromJson(e),talentsFromPlayer:e=>"feralDruid"==e.spec.oneofKind&&e.spec.feralDruid.talents||kn.create(),optionsCreate:()=>vn.create(),optionsEquals:(e,t)=>vn.equals(e,t),optionsCopy:e=>vn.clone(e),optionsToJson:e=>vn.toJson(e),optionsFromJson:e=>vn.fromJson(e),optionsFromPlayer:e=>"feralDruid"==e.spec.oneofKind&&e.spec.feralDruid.options||vn.create()},[Z.SpecFeralTankDruid]:{rotationCreate:()=>On.create(),rotationEquals:(e,t)=>On.equals(e,t),rotationCopy:e=>On.clone(e),rotationToJson:e=>On.toJson(e),rotationFromJson:e=>On.fromJson(e),rotationFromPlayer:e=>"feralTankDruid"==e.spec.oneofKind&&e.spec.feralTankDruid.rotation||On.create(),talentsCreate:()=>kn.create(),talentsEquals:(e,t)=>kn.equals(e,t),talentsCopy:e=>kn.clone(e),talentsToJson:e=>kn.toJson(e),talentsFromJson:e=>kn.fromJson(e),talentsFromPlayer:e=>"feralTankDruid"==e.spec.oneofKind&&e.spec.feralTankDruid.talents||kn.create(),optionsCreate:()=>Pn.create(),optionsEquals:(e,t)=>Pn.equals(e,t),optionsCopy:e=>Pn.clone(e),optionsToJson:e=>Pn.toJson(e),optionsFromJson:e=>Pn.fromJson(e),optionsFromPlayer:e=>"feralTankDruid"==e.spec.oneofKind&&e.spec.feralTankDruid.options||Pn.create()},[Z.SpecHunter]:{rotationCreate:()=>mn.create(),rotationEquals:(e,t)=>mn.equals(e,t),rotationCopy:e=>mn.clone(e),rotationToJson:e=>mn.toJson(e),rotationFromJson:e=>mn.fromJson(e),rotationFromPlayer:e=>"hunter"==e.spec.oneofKind&&e.spec.hunter.rotation||mn.create(),talentsCreate:()=>ln.create(),talentsEquals:(e,t)=>ln.equals(e,t),talentsCopy:e=>ln.clone(e),talentsToJson:e=>ln.toJson(e),talentsFromJson:e=>ln.fromJson(e),talentsFromPlayer:e=>"hunter"==e.spec.oneofKind&&e.spec.hunter.talents||ln.create(),optionsCreate:()=>pn.create(),optionsEquals:(e,t)=>pn.equals(e,t),optionsCopy:e=>pn.clone(e),optionsToJson:e=>pn.toJson(e),optionsFromJson:e=>pn.fromJson(e),optionsFromPlayer:e=>"hunter"==e.spec.oneofKind&&e.spec.hunter.options||pn.create()},[Z.SpecMage]:{rotationCreate:()=>Xa.create(),rotationEquals:(e,t)=>Xa.equals(e,t),rotationCopy:e=>Xa.clone(e),rotationToJson:e=>Xa.toJson(e),rotationFromJson:e=>Xa.fromJson(e),rotationFromPlayer:e=>"mage"==e.spec.oneofKind&&e.spec.mage.rotation||Xa.create(),talentsCreate:()=>Ya.create(),talentsEquals:(e,t)=>Ya.equals(e,t),talentsCopy:e=>Ya.clone(e),talentsToJson:e=>Ya.toJson(e),talentsFromJson:e=>Ya.fromJson(e),talentsFromPlayer:e=>"mage"==e.spec.oneofKind&&e.spec.mage.talents||Ya.create(),optionsCreate:()=>Za.create(),optionsEquals:(e,t)=>Za.equals(e,t),optionsCopy:e=>Za.clone(e),optionsToJson:e=>Za.toJson(e),optionsFromJson:e=>Za.fromJson(e),optionsFromPlayer:e=>"mage"==e.spec.oneofKind&&e.spec.mage.options||Za.create()},[Z.SpecRetributionPaladin]:{rotationCreate:()=>ja.create(),rotationEquals:(e,t)=>ja.equals(e,t),rotationCopy:e=>ja.clone(e),rotationToJson:e=>ja.toJson(e),rotationFromJson:e=>ja.fromJson(e),rotationFromPlayer:e=>"retributionPaladin"==e.spec.oneofKind&&e.spec.retributionPaladin.rotation||ja.create(),talentsCreate:()=>Da.create(),talentsEquals:(e,t)=>Da.equals(e,t),talentsCopy:e=>Da.clone(e),talentsToJson:e=>Da.toJson(e),talentsFromJson:e=>Da.fromJson(e),talentsFromPlayer:e=>"retributionPaladin"==e.spec.oneofKind&&e.spec.retributionPaladin.talents||Da.create(),optionsCreate:()=>Ua.create(),optionsEquals:(e,t)=>Ua.equals(e,t),optionsCopy:e=>Ua.clone(e),optionsToJson:e=>Ua.toJson(e),optionsFromJson:e=>Ua.fromJson(e),optionsFromPlayer:e=>"retributionPaladin"==e.spec.oneofKind&&e.spec.retributionPaladin.options||Ua.create()},[Z.SpecProtectionPaladin]:{rotationCreate:()=>Aa.create(),rotationEquals:(e,t)=>Aa.equals(e,t),rotationCopy:e=>Aa.clone(e),rotationToJson:e=>Aa.toJson(e),rotationFromJson:e=>Aa.fromJson(e),rotationFromPlayer:e=>"protectionPaladin"==e.spec.oneofKind&&e.spec.protectionPaladin.rotation||Aa.create(),talentsCreate:()=>Da.create(),talentsEquals:(e,t)=>Da.equals(e,t),talentsCopy:e=>Da.clone(e),talentsToJson:e=>Da.toJson(e),talentsFromJson:e=>Da.fromJson(e),talentsFromPlayer:e=>"protectionPaladin"==e.spec.oneofKind&&e.spec.protectionPaladin.talents||Da.create(),optionsCreate:()=>La.create(),optionsEquals:(e,t)=>La.equals(e,t),optionsCopy:e=>La.clone(e),optionsToJson:e=>La.toJson(e),optionsFromJson:e=>La.fromJson(e),optionsFromPlayer:e=>"protectionPaladin"==e.spec.oneofKind&&e.spec.protectionPaladin.options||La.create()},[Z.SpecRogue]:{rotationCreate:()=>pa.create(),rotationEquals:(e,t)=>pa.equals(e,t),rotationCopy:e=>pa.clone(e),rotationToJson:e=>pa.toJson(e),rotationFromJson:e=>pa.fromJson(e),rotationFromPlayer:e=>"rogue"==e.spec.oneofKind&&e.spec.rogue.rotation||pa.create(),talentsCreate:()=>da.create(),talentsEquals:(e,t)=>da.equals(e,t),talentsCopy:e=>da.clone(e),talentsToJson:e=>da.toJson(e),talentsFromJson:e=>da.fromJson(e),talentsFromPlayer:e=>"rogue"==e.spec.oneofKind&&e.spec.rogue.talents||da.create(),optionsCreate:()=>ha.create(),optionsEquals:(e,t)=>ha.equals(e,t),optionsCopy:e=>ha.clone(e),optionsToJson:e=>ha.toJson(e),optionsFromJson:e=>ha.fromJson(e),optionsFromPlayer:e=>"rogue"==e.spec.oneofKind&&e.spec.rogue.options||ha.create()},[Z.SpecHealingPriest]:{rotationCreate:()=>_a.create(),rotationEquals:(e,t)=>_a.equals(e,t),rotationCopy:e=>_a.clone(e),rotationToJson:e=>_a.toJson(e),rotationFromJson:e=>_a.fromJson(e),rotationFromPlayer:e=>"healingPriest"==e.spec.oneofKind&&e.spec.healingPriest.rotation||_a.create(),talentsCreate:()=>ya.create(),talentsEquals:(e,t)=>ya.equals(e,t),talentsCopy:e=>ya.clone(e),talentsToJson:e=>ya.toJson(e),talentsFromJson:e=>ya.fromJson(e),talentsFromPlayer:e=>"healingPriest"==e.spec.oneofKind&&e.spec.healingPriest.talents||ya.create(),optionsCreate:()=>Oa.create(),optionsEquals:(e,t)=>Oa.equals(e,t),optionsCopy:e=>Oa.clone(e),optionsToJson:e=>Oa.toJson(e),optionsFromJson:e=>Oa.fromJson(e),optionsFromPlayer:e=>"healingPriest"==e.spec.oneofKind&&e.spec.healingPriest.options||Oa.create()},[Z.SpecShadowPriest]:{rotationCreate:()=>ba.create(),rotationEquals:(e,t)=>ba.equals(e,t),rotationCopy:e=>ba.clone(e),rotationToJson:e=>ba.toJson(e),rotationFromJson:e=>ba.fromJson(e),rotationFromPlayer:e=>"shadowPriest"==e.spec.oneofKind&&e.spec.shadowPriest.rotation||ba.create(),talentsCreate:()=>ya.create(),talentsEquals:(e,t)=>ya.equals(e,t),talentsCopy:e=>ya.clone(e),talentsToJson:e=>ya.toJson(e),talentsFromJson:e=>ya.fromJson(e),talentsFromPlayer:e=>"shadowPriest"==e.spec.oneofKind&&e.spec.shadowPriest.talents||ya.create(),optionsCreate:()=>Ia.create(),optionsEquals:(e,t)=>Ia.equals(e,t),optionsCopy:e=>Ia.clone(e),optionsToJson:e=>Ia.toJson(e),optionsFromJson:e=>Ia.fromJson(e),optionsFromPlayer:e=>"shadowPriest"==e.spec.oneofKind&&e.spec.shadowPriest.options||Ia.create()},[Z.SpecSmitePriest]:{rotationCreate:()=>xa.create(),rotationEquals:(e,t)=>xa.equals(e,t),rotationCopy:e=>xa.clone(e),rotationToJson:e=>xa.toJson(e),rotationFromJson:e=>xa.fromJson(e),rotationFromPlayer:e=>"smitePriest"==e.spec.oneofKind&&e.spec.smitePriest.rotation||xa.create(),talentsCreate:()=>ya.create(),talentsEquals:(e,t)=>ya.equals(e,t),talentsCopy:e=>ya.clone(e),talentsToJson:e=>ya.toJson(e),talentsFromJson:e=>ya.fromJson(e),talentsFromPlayer:e=>"smitePriest"==e.spec.oneofKind&&e.spec.smitePriest.talents||ya.create(),optionsCreate:()=>Sa.create(),optionsEquals:(e,t)=>Sa.equals(e,t),optionsCopy:e=>Sa.clone(e),optionsToJson:e=>Sa.toJson(e),optionsFromJson:e=>Sa.fromJson(e),optionsFromPlayer:e=>"smitePriest"==e.spec.oneofKind&&e.spec.smitePriest.options||Sa.create()},[Z.SpecWarlock]:{rotationCreate:()=>Ct.create(),rotationEquals:(e,t)=>Ct.equals(e,t),rotationCopy:e=>Ct.clone(e),rotationToJson:e=>Ct.toJson(e),rotationFromJson:e=>Ct.fromJson(e),rotationFromPlayer:e=>"warlock"==e.spec.oneofKind&&e.spec.warlock.rotation||Ct.create(),talentsCreate:()=>Wt.create(),talentsEquals:(e,t)=>Wt.equals(e,t),talentsCopy:e=>Wt.clone(e),talentsToJson:e=>Wt.toJson(e),talentsFromJson:e=>Wt.fromJson(e),talentsFromPlayer:e=>"warlock"==e.spec.oneofKind&&e.spec.warlock.talents||Wt.create(),optionsCreate:()=>Dt.create(),optionsEquals:(e,t)=>Dt.equals(e,t),optionsCopy:e=>Dt.clone(e),optionsToJson:e=>Dt.toJson(e),optionsFromJson:e=>Dt.fromJson(e),optionsFromPlayer:e=>"warlock"==e.spec.oneofKind&&e.spec.warlock.options||Dt.create()},[Z.SpecWarrior]:{rotationCreate:()=>yt.create(),rotationEquals:(e,t)=>yt.equals(e,t),rotationCopy:e=>yt.clone(e),rotationToJson:e=>yt.toJson(e),rotationFromJson:e=>yt.fromJson(e),rotationFromPlayer:e=>"warrior"==e.spec.oneofKind&&e.spec.warrior.rotation||yt.create(),talentsCreate:()=>ft.create(),talentsEquals:(e,t)=>ft.equals(e,t),talentsCopy:e=>ft.clone(e),talentsToJson:e=>ft.toJson(e),talentsFromJson:e=>ft.fromJson(e),talentsFromPlayer:e=>"warrior"==e.spec.oneofKind&&e.spec.warrior.talents||ft.create(),optionsCreate:()=>kt.create(),optionsEquals:(e,t)=>kt.equals(e,t),optionsCopy:e=>kt.clone(e),optionsToJson:e=>kt.toJson(e),optionsFromJson:e=>kt.fromJson(e),optionsFromPlayer:e=>"warrior"==e.spec.oneofKind&&e.spec.warrior.options||kt.create()},[Z.SpecProtectionWarrior]:{rotationCreate:()=>It.create(),rotationEquals:(e,t)=>It.equals(e,t),rotationCopy:e=>It.clone(e),rotationToJson:e=>It.toJson(e),rotationFromJson:e=>It.fromJson(e),rotationFromPlayer:e=>"protectionWarrior"==e.spec.oneofKind&&e.spec.protectionWarrior.rotation||It.create(),talentsCreate:()=>ft.create(),talentsEquals:(e,t)=>ft.equals(e,t),talentsCopy:e=>ft.clone(e),talentsToJson:e=>ft.toJson(e),talentsFromJson:e=>ft.fromJson(e),talentsFromPlayer:e=>"protectionWarrior"==e.spec.oneofKind&&e.spec.protectionWarrior.talents||ft.create(),optionsCreate:()=>Tt.create(),optionsEquals:(e,t)=>Tt.equals(e,t),optionsCopy:e=>Tt.clone(e),optionsToJson:e=>Tt.toJson(e),optionsFromJson:e=>Tt.fromJson(e),optionsFromPlayer:e=>"protectionWarrior"==e.spec.oneofKind&&e.spec.protectionWarrior.options||Tt.create()},[Z.SpecDeathknight]:{rotationCreate:()=>nt.create(),rotationEquals:(e,t)=>nt.equals(e,t),rotationCopy:e=>nt.clone(e),rotationToJson:e=>nt.toJson(e),rotationFromJson:e=>nt.fromJson(e),rotationFromPlayer:e=>"deathknight"==e.spec.oneofKind&&e.spec.deathknight.rotation||nt.create(),talentsCreate:()=>tt.create(),talentsEquals:(e,t)=>tt.equals(e,t),talentsCopy:e=>tt.clone(e),talentsToJson:e=>tt.toJson(e),talentsFromJson:e=>tt.fromJson(e),talentsFromPlayer:e=>"deathknight"==e.spec.oneofKind&&e.spec.deathknight.talents||tt.create(),optionsCreate:()=>it.create(),optionsEquals:(e,t)=>it.equals(e,t),optionsCopy:e=>it.clone(e),optionsToJson:e=>it.toJson(e),optionsFromJson:e=>it.fromJson(e),optionsFromPlayer:e=>"deathknight"==e.spec.oneofKind&&e.spec.deathknight.options||it.create()},[Z.SpecTankDeathknight]:{rotationCreate:()=>rt.create(),rotationEquals:(e,t)=>rt.equals(e,t),rotationCopy:e=>rt.clone(e),rotationToJson:e=>rt.toJson(e),rotationFromJson:e=>rt.fromJson(e),rotationFromPlayer:e=>"tankDeathknight"==e.spec.oneofKind&&e.spec.tankDeathknight.rotation||rt.create(),talentsCreate:()=>tt.create(),talentsEquals:(e,t)=>tt.equals(e,t),talentsCopy:e=>tt.clone(e),talentsToJson:e=>tt.toJson(e),talentsFromJson:e=>tt.fromJson(e),talentsFromPlayer:e=>"tankDeathknight"==e.spec.oneofKind&&e.spec.tankDeathknight.talents||tt.create(),optionsCreate:()=>st.create(),optionsEquals:(e,t)=>st.equals(e,t),optionsCopy:e=>st.clone(e),optionsToJson:e=>st.toJson(e),optionsFromJson:e=>st.fromJson(e),optionsFromPlayer:e=>"tankDeathknight"==e.spec.oneofKind&&e.spec.tankDeathknight.options||st.create()}},ko={[ee.RaceUnknown]:te.Unknown,[ee.RaceBloodElf]:te.Horde,[ee.RaceDraenei]:te.Alliance,[ee.RaceDwarf]:te.Alliance,[ee.RaceGnome]:te.Alliance,[ee.RaceHuman]:te.Alliance,[ee.RaceNightElf]:te.Alliance,[ee.RaceOrc]:te.Horde,[ee.RaceTauren]:te.Horde,[ee.RaceTroll]:te.Horde,[ee.RaceUndead]:te.Horde},bo={[Z.SpecBalanceDruid]:ne.ClassDruid,[Z.SpecFeralDruid]:ne.ClassDruid,[Z.SpecFeralTankDruid]:ne.ClassDruid,[Z.SpecHunter]:ne.ClassHunter,[Z.SpecMage]:ne.ClassMage,[Z.SpecRogue]:ne.ClassRogue,[Z.SpecRetributionPaladin]:ne.ClassPaladin,[Z.SpecProtectionPaladin]:ne.ClassPaladin,[Z.SpecHealingPriest]:ne.ClassPriest,[Z.SpecShadowPriest]:ne.ClassPriest,[Z.SpecSmitePriest]:ne.ClassPriest,[Z.SpecElementalShaman]:ne.ClassShaman,[Z.SpecEnhancementShaman]:ne.ClassShaman,[Z.SpecWarlock]:ne.ClassWarlock,[Z.SpecWarrior]:ne.ClassWarrior,[Z.SpecProtectionWarrior]:ne.ClassWarrior,[Z.SpecDeathknight]:ne.ClassDeathknight,[Z.SpecTankDeathknight]:ne.ClassDeathknight},Io=[ee.RaceNightElf,ee.RaceTauren],To=[ee.RaceBloodElf,ee.RaceDraenei,ee.RaceDwarf,ee.RaceNightElf,ee.RaceOrc,ee.RaceTauren,ee.RaceTroll],xo=[ee.RaceBloodElf,ee.RaceDraenei,ee.RaceGnome,ee.RaceHuman,ee.RaceTroll,ee.RaceUndead],So=[ee.RaceBloodElf,ee.RaceDraenei,ee.RaceDwarf,ee.RaceHuman],vo=[ee.RaceBloodElf,ee.RaceDraenei,ee.RaceDwarf,ee.RaceHuman,ee.RaceNightElf,ee.RaceTroll,ee.RaceUndead],_o=[ee.RaceBloodElf,ee.RaceDwarf,ee.RaceGnome,ee.RaceHuman,ee.RaceNightElf,ee.RaceOrc,ee.RaceTroll,ee.RaceUndead],Oo=[ee.RaceDraenei,ee.RaceOrc,ee.RaceTauren,ee.RaceTroll],Po=[ee.RaceBloodElf,ee.RaceGnome,ee.RaceHuman,ee.RaceOrc,ee.RaceUndead],Go=[ee.RaceDraenei,ee.RaceDwarf,ee.RaceGnome,ee.RaceHuman,ee.RaceNightElf,ee.RaceOrc,ee.RaceTauren,ee.RaceTroll,ee.RaceUndead],Ro=[ee.RaceBloodElf,ee.RaceDraenei,ee.RaceDwarf,ee.RaceGnome,ee.RaceHuman,ee.RaceNightElf,ee.RaceOrc,ee.RaceTauren,ee.RaceTroll,ee.RaceUndead],Bo={[Z.SpecBalanceDruid]:Io,[Z.SpecElementalShaman]:Oo,[Z.SpecEnhancementShaman]:Oo,[Z.SpecFeralDruid]:Io,[Z.SpecFeralTankDruid]:Io,[Z.SpecHunter]:To,[Z.SpecMage]:xo,[Z.SpecRetributionPaladin]:So,[Z.SpecProtectionPaladin]:So,[Z.SpecRogue]:_o,[Z.SpecHealingPriest]:vo,[Z.SpecShadowPriest]:vo,[Z.SpecSmitePriest]:vo,[Z.SpecWarlock]:Po,[Z.SpecWarrior]:Go,[Z.SpecProtectionWarrior]:Go,[Z.SpecDeathknight]:Ro,[Z.SpecTankDeathknight]:Ro},No=[Z.SpecEnhancementShaman,Z.SpecHunter,Z.SpecRogue,Z.SpecWarrior,Z.SpecProtectionWarrior,Z.SpecDeathknight,Z.SpecTankDeathknight],Fo=[Z.SpecFeralTankDruid,Z.SpecProtectionPaladin,Z.SpecProtectionWarrior,Z.SpecTankDeathknight];function Wo(e){return Fo.includes(e)}const Vo=[Z.SpecHealingPriest];function Co(e){return Vo.includes(e)}const Do={[Z.SpecBalanceDruid]:"__wotlk_balance_druid",[Z.SpecElementalShaman]:"__wotlk_elemental_shaman",[Z.SpecEnhancementShaman]:"__wotlk_enhacement_shaman",[Z.SpecFeralDruid]:"__wotlk_feral_druid",[Z.SpecFeralTankDruid]:"__wotlk_feral_tank_druid",[Z.SpecHunter]:"__wotlk_hunter",[Z.SpecMage]:"__wotlk_mage",[Z.SpecRetributionPaladin]:"__wotlk_retribution_paladin",[Z.SpecProtectionPaladin]:"__wotlk_protection_paladin",[Z.SpecRogue]:"__wotlk_rogue",[Z.SpecHealingPriest]:"__wotlk_healing_priest",[Z.SpecShadowPriest]:"__wotlk_shadow_priest",[Z.SpecSmitePriest]:"__wotlk_smite_priest",[Z.SpecWarlock]:"__wotlk_warlock",[Z.SpecWarrior]:"__wotlk_warrior",[Z.SpecProtectionWarrior]:"__wotlk_protection_warrior",[Z.SpecDeathknight]:"__wotlk_deathknight",[Z.SpecTankDeathknight]:"__wotlk_tank_deathknight"};function Eo(e,t,a,n,i){const o=Rn.clone(t);switch(e){case Z.SpecBalanceDruid:return o.spec={oneofKind:"balanceDruid",balanceDruid:bn.create({rotation:a,talents:n,options:i})},o;case Z.SpecElementalShaman:return o.spec={oneofKind:"elementalShaman",elementalShaman:Xt.create({rotation:a,talents:n,options:i})},o;case Z.SpecEnhancementShaman:return o.spec={oneofKind:"enhancementShaman",enhancementShaman:ta.create({rotation:a,talents:n,options:i})},o;case Z.SpecFeralDruid:return o.spec={oneofKind:"feralDruid",feralDruid:xn.create({rotation:a,talents:n,options:i})},o;case Z.SpecFeralTankDruid:return o.spec={oneofKind:"feralTankDruid",feralTankDruid:_n.create({rotation:a,talents:n,options:i})},o;case Z.SpecHunter:return o.spec={oneofKind:"hunter",hunter:dn.create({rotation:a,talents:n,options:i})},o;case Z.SpecMage:return o.spec={oneofKind:"mage",mage:Qa.create({rotation:a,talents:n,options:i})},o;case Z.SpecRetributionPaladin:return o.spec={oneofKind:"retributionPaladin",retributionPaladin:Ea.create({rotation:a,talents:n,options:i})},o;case Z.SpecProtectionPaladin:return o.spec={oneofKind:"protectionPaladin",protectionPaladin:Ma.create({rotation:a,talents:n,options:i})},o;case Z.SpecRogue:return o.spec={oneofKind:"rogue",rogue:ma.create({rotation:a,talents:n,options:i})},o;case Z.SpecHealingPriest:return o.spec={oneofKind:"healingPriest",healingPriest:va.create({rotation:a,talents:n,options:i})},o;case Z.SpecShadowPriest:return o.spec={oneofKind:"shadowPriest",shadowPriest:ka.create({rotation:a,talents:n,options:i})},o;case Z.SpecSmitePriest:return o.spec={oneofKind:"smitePriest",smitePriest:Ta.create({rotation:a,talents:n,options:i})},o;case Z.SpecWarlock:return o.spec={oneofKind:"warlock",warlock:Vt.create({rotation:a,talents:n,options:i})},o;case Z.SpecWarrior:return o.spec={oneofKind:"warrior",warrior:wt.create({rotation:a,talents:n,options:i})},o;case Z.SpecProtectionWarrior:return o.spec={oneofKind:"protectionWarrior",protectionWarrior:bt.create({rotation:a,talents:n,options:i})},o;case Z.SpecDeathknight:return o.spec={oneofKind:"deathknight",deathknight:at.create({rotation:a,talents:n,options:i})},o;case Z.SpecTankDeathknight:return o.spec={oneofKind:"tankDeathknight",tankDeathknight:ot.create({rotation:a,talents:n,options:i})},o}}function jo(e){const t=Ri(Z);for(let a=0;a<t.length;a++){const n=t[a];let i=Z[n];if(i=i.substring("Spec".length),i=i.charAt(0).toLowerCase()+i.slice(1),e.spec.oneofKind==i)return n}throw new Error("Unable to parse spec from player proto: "+JSON.stringify(Rn.toJson(e),null,2))}const Uo={[ne.ClassUnknown]:se.ArmorTypeUnknown,[ne.ClassDruid]:se.ArmorTypeLeather,[ne.ClassHunter]:se.ArmorTypeMail,[ne.ClassMage]:se.ArmorTypeCloth,[ne.ClassPaladin]:se.ArmorTypePlate,[ne.ClassPriest]:se.ArmorTypeCloth,[ne.ClassRogue]:se.ArmorTypeLeather,[ne.ClassShaman]:se.ArmorTypeMail,[ne.ClassWarlock]:se.ArmorTypeCloth,[ne.ClassWarrior]:se.ArmorTypePlate,[ne.ClassDeathknight]:se.ArmorTypePlate},Mo={[ne.ClassUnknown]:[],[ne.ClassDruid]:[de.RangedWeaponTypeIdol],[ne.ClassHunter]:[de.RangedWeaponTypeBow,de.RangedWeaponTypeCrossbow,de.RangedWeaponTypeGun,de.RangedWeaponTypeThrown],[ne.ClassMage]:[de.RangedWeaponTypeWand],[ne.ClassPaladin]:[de.RangedWeaponTypeLibram],[ne.ClassPriest]:[de.RangedWeaponTypeWand],[ne.ClassRogue]:[de.RangedWeaponTypeBow,de.RangedWeaponTypeCrossbow,de.RangedWeaponTypeGun,de.RangedWeaponTypeThrown],[ne.ClassShaman]:[de.RangedWeaponTypeTotem],[ne.ClassWarlock]:[de.RangedWeaponTypeWand],[ne.ClassWarrior]:[de.RangedWeaponTypeBow,de.RangedWeaponTypeCrossbow,de.RangedWeaponTypeGun,de.RangedWeaponTypeThrown],[ne.ClassDeathknight]:[de.RangedWeaponTypeSigil]},Ao={[ne.ClassUnknown]:[],[ne.ClassDruid]:[{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeFist},{weaponType:le.WeaponTypeMace,canUseTwoHand:!0},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0}],[ne.ClassHunter]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!0},{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeFist},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypePolearm,canUseTwoHand:!0},{weaponType:le.WeaponTypeSword,canUseTwoHand:!0},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0}],[ne.ClassMage]:[{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0},{weaponType:le.WeaponTypeSword}],[ne.ClassPaladin]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!0},{weaponType:le.WeaponTypeMace,canUseTwoHand:!0},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypePolearm,canUseTwoHand:!0},{weaponType:le.WeaponTypeShield},{weaponType:le.WeaponTypeSword,canUseTwoHand:!0}],[ne.ClassPriest]:[{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeMace},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0}],[ne.ClassRogue]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!1},{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeFist},{weaponType:le.WeaponTypeMace},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeSword}],[ne.ClassShaman]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!0},{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeFist},{weaponType:le.WeaponTypeMace,canUseTwoHand:!0},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeShield},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0}],[ne.ClassWarlock]:[{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0},{weaponType:le.WeaponTypeSword}],[ne.ClassWarrior]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!0},{weaponType:le.WeaponTypeDagger},{weaponType:le.WeaponTypeFist},{weaponType:le.WeaponTypeMace,canUseTwoHand:!0},{weaponType:le.WeaponTypeOffHand},{weaponType:le.WeaponTypePolearm,canUseTwoHand:!0},{weaponType:le.WeaponTypeShield},{weaponType:le.WeaponTypeStaff,canUseTwoHand:!0},{weaponType:le.WeaponTypeSword,canUseTwoHand:!0}],[ne.ClassDeathknight]:[{weaponType:le.WeaponTypeAxe,canUseTwoHand:!0},{weaponType:le.WeaponTypeMace,canUseTwoHand:!0},{weaponType:le.WeaponTypePolearm,canUseTwoHand:!0},{weaponType:le.WeaponTypeSword,canUseTwoHand:!0}]};function Lo(e){return[le.WeaponTypeAxe,le.WeaponTypeDagger,le.WeaponTypePolearm,le.WeaponTypeSword].includes(e)}function zo(e){return[le.WeaponTypeFist,le.WeaponTypeMace,le.WeaponTypeStaff].includes(e)}const Ho={[Z.SpecBalanceDruid]:(e,t)=>e.id==Qi.id?2*(.795*t.getStat(oe.StatSpellPower)+603)*(t.getStat(oe.StatSpellCrit)/2208)*.045/.795:0,[Z.SpecElementalShaman]:(e,t)=>e.id==Qi.id?2*(.795*t.getStat(oe.StatSpellPower)+603)*(t.getStat(oe.StatSpellCrit)/2208)*.045/.795:0,[Z.SpecWarlock]:(e,t)=>e.id==Yi.id?84:e.id==Qi.id?80:0};const $o={[re.ItemTypeUnknown]:[],[re.ItemTypeHead]:[me.ItemSlotHead],[re.ItemTypeNeck]:[me.ItemSlotNeck],[re.ItemTypeShoulder]:[me.ItemSlotShoulder],[re.ItemTypeBack]:[me.ItemSlotBack],[re.ItemTypeChest]:[me.ItemSlotChest],[re.ItemTypeWrist]:[me.ItemSlotWrist],[re.ItemTypeHands]:[me.ItemSlotHands],[re.ItemTypeWaist]:[me.ItemSlotWaist],[re.ItemTypeLegs]:[me.ItemSlotLegs],[re.ItemTypeFeet]:[me.ItemSlotFeet],[re.ItemTypeFinger]:[me.ItemSlotFinger1,me.ItemSlotFinger2],[re.ItemTypeTrinket]:[me.ItemSlotTrinket1,me.ItemSlotTrinket2],[re.ItemTypeRanged]:[me.ItemSlotRanged]};function qo(e){if($o[e.type])return $o[e.type];if(e.type==re.ItemTypeWeapon)return e.handType==ce.HandTypeMainHand?[me.ItemSlotMainHand]:e.handType==ce.HandTypeOffHand?[me.ItemSlotOffHand]:[me.ItemSlotMainHand,me.ItemSlotOffHand];throw new Error("Could not find item slots for item: "+Ce.toJsonString(e))}function Jo(e){if($o[e.type])return $o[e.type];if(e.type==re.ItemTypeWeapon)return[me.ItemSlotMainHand,me.ItemSlotOffHand];throw new Error("Could not find item slots for enchant: "+De.toJsonString(e))}function Ko(e,t){const a=(n=Jo(e),i=qo(t),n.filter((e=>i.includes(e))));var n,i;return 0!=a.length&&((e.enchantType!=ve.EnchantTypeTwoHand||t.handType==ce.HandTypeTwoHand)&&(e.enchantType==ve.EnchantTypeShield==(t.weaponType==le.WeaponTypeShield)&&(t.weaponType!=le.WeaponTypeOffHand&&!(a.includes(me.ItemSlotRanged)&&![de.RangedWeaponTypeBow,de.RangedWeaponTypeCrossbow,de.RangedWeaponTypeGun].includes(t.rangedWeaponType)))))}const Yo=-1;function Qo(e){return je.create({targetIndex:e})}function Xo(){return Qo(-1)}function Zo(e,t){const a=function(e){const t=mi.create();for(let a=0;a<e;a++)t.paladins.push(di.create({blessings:new Array(ao).fill(Fa.BlessingUnknown)}));return t}(e);for(let n=0;n<t.length;n++){const e=t[n].spec,i=t[n].blessings;for(let t=0;t<i.length&&!(t>=a.paladins.length);t++)a.paladins[t].blessings[e]=i[t]}return a}function er(e){return Zo(e,[{spec:Z.SpecBalanceDruid,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecFeralDruid,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfWisdom]},{spec:Z.SpecFeralTankDruid,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfSanctuary]},{spec:Z.SpecHunter,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfWisdom]},{spec:Z.SpecMage,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecRetributionPaladin,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfWisdom]},{spec:Z.SpecProtectionPaladin,blessings:[Fa.BlessingOfKings,Fa.BlessingOfSanctuary,Fa.BlessingOfWisdom,Fa.BlessingOfMight]},{spec:Z.SpecHealingPriest,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecShadowPriest,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecSmitePriest,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecRogue,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight]},{spec:Z.SpecElementalShaman,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecEnhancementShaman,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfWisdom]},{spec:Z.SpecWarlock,blessings:[Fa.BlessingOfKings,Fa.BlessingOfWisdom]},{spec:Z.SpecWarrior,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight]},{spec:Z.SpecProtectionWarrior,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfSanctuary]},{spec:Z.SpecDeathknight,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight,Fa.BlessingOfSalvation]},{spec:Z.SpecTankDeathknight,blessings:[Fa.BlessingOfKings,Fa.BlessingOfMight]}])}const tr=[Gn.ResourceTypeHealth,Gn.ResourceTypeMana,Gn.ResourceTypeEnergy,Gn.ResourceTypeRage,Gn.ResourceTypeComboPoints,Gn.ResourceTypeFocus,Gn.ResourceTypeRunicPower,Gn.ResourceTypeBloodRune,Gn.ResourceTypeFrostRune,Gn.ResourceTypeUnholyRune,Gn.ResourceTypeDeathRune],ar=class{constructor(e,t,a,n,i,o,r){switch(this.itemId=e,this.spellId=t,this.otherId=a,this.tag=n,a){case _e.OtherActionNone:break;case _e.OtherActionWait:i="Wait",r="https://wow.zamimg.com/images/wow/icons/large/inv_misc_pocketwatch_01.jpg";break;case _e.OtherActionManaRegen:o="Mana Tick",r=sr[Gn.ResourceTypeMana],1==n?o+=" (Casting)":2==n&&(o+=" (Not Casting)");break;case _e.OtherActionEnergyRegen:i="Energy Tick",r=sr[Gn.ResourceTypeEnergy];break;case _e.OtherActionFocusRegen:i="Focus Tick",r=sr[Gn.ResourceTypeFocus];break;case _e.OtherActionManaGain:i="Mana Gain",r=sr[Gn.ResourceTypeMana];break;case _e.OtherActionRageGain:i="Rage Gain",r=sr[Gn.ResourceTypeRage];break;case _e.OtherActionAttack:o="Attack",r="https://wow.zamimg.com/images/wow/icons/large/inv_sword_04.jpg",1==n?o+=" (Main Hand)":2==n&&(o+=" (Off Hand)");break;case _e.OtherActionShoot:o="Shoot",r="https://wow.zamimg.com/images/wow/icons/large/ability_marksmanship.jpg";break;case _e.OtherActionPet:break;case _e.OtherActionRefund:i="Refund",r="https://wow.zamimg.com/images/wow/icons/large/inv_misc_coin_01.jpg";break;case _e.OtherActionDamageTaken:i="Damage Taken",r="https://wow.zamimg.com/images/wow/icons/large/inv_sword_04.jpg";break;case _e.OtherActionHealingModel:i="Incoming HPS",r="https://wow.zamimg.com/images/wow/icons/large/spell_holy_renew.jpg";break;case _e.OtherActionBloodRuneGain:i="Blood Rune Gain",r="https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_deathstrike.jpg";break;case _e.OtherActionFrostRuneGain:i="Frost Rune Gain",r="https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_deathstrike2.jpg";break;case _e.OtherActionUnholyRuneGain:i="Unholy Rune Gain",r="https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_empowerruneblade.jpg";break;case _e.OtherActionDeathRuneGain:i="Death Rune Gain",r="https://wow.zamimg.com/images/wow/icons/medium/spell_deathknight_empowerruneblade.jpg"}this.baseName=i,this.name=o||i,this.iconUrl=r}anyId(){return this.itemId||this.spellId||this.otherId}equals(e){return this.equalsIgnoringTag(e)&&this.tag==e.tag}equalsIgnoringTag(e){return this.itemId==e.itemId&&this.spellId==e.spellId&&this.otherId==e.otherId}setBackground(e){this.iconUrl&&(e.style.backgroundImage=`url('${this.iconUrl}')`)}static makeItemUrl(e){return"https://wowhead.com/wotlk/item="+e}static makeSpellUrl(e){return"https://wowhead.com/wotlk/spell="+e}setWowheadHref(e){this.itemId?e.href=ar.makeItemUrl(this.itemId):this.spellId&&(e.href=ar.makeSpellUrl(this.spellId))}setBackgroundAndHref(e){this.setBackground(e),this.setWowheadHref(e)}async fillAndSet(e,t,a){const n=await this.fill();return t&&n.setWowheadHref(e),a&&n.setBackground(e),n}async fill(e){if(this.name||this.iconUrl)return this;if(this.otherId)return this;const t=await ar.getTooltipData(this),a=t.name;let n=a;switch(a){case"Arcane Blast":1==this.tag?n+=" (No Stacks)":2==this.tag?n+=" (1 Stack)":this.tag>2&&(n+=` (${this.tag-1} Stacks)`);break;case"Fireball":case"Flamestrike":case"Pyroblast":this.tag&&(n+=" (DoT)");break;case"Mind Flay":1==this.tag?n+=" (1 Tick)":2==this.tag?n+=" (2 Tick)":3==this.tag&&(n+=" (3 Tick)");break;case"Envenom":case"Eviscerate":case"Expose Armor":case"Rupture":case"Slice and Dice":this.tag&&(n+=` (${this.tag} CP)`);break;case"Instant Poison IX":case"Wound Poison VII":1==this.tag?n+=" (Deadly)":2==this.tag&&(n+=" (Shiv)");break;case"Fan of Knives":case"Killing Spree":case"Frost Strike":case"Plague Strike":case"Blood Strike":case"Death Strike":case"Obliterate":case"Blood-Caked Strike":case"Lightning Speed":case"Windfury Weapon":1==this.tag?n+=" (Main Hand)":2==this.tag&&(n+=" (Off Hand)");break;case"Tricks of the Trade":1==this.tag&&(n+=" (Not Self)");break;case"Chain Lightning":case"Lightning Bolt":6==this.tag?n+=" (LO)":this.tag&&(n+=` (${this.tag} MW)`);break;case"Holy Vengeance":1==this.tag?n+=" (Swing Roll)":2==this.tag&&(n+=" (DoT)");break;case"Holy Shield":1==this.tag&&(n+=" (Proc)");break;case"Bloodlust":case"Ferocious Inspiration":case"Innervate":case"Mana Tide Totem":case"Power Infusion":-1!=this.tag&&(this.tag===e?n+=" (self)":n+=` (from #${this.tag+1})`);break;case"Darkmoon Card: Crusade":1==this.tag?n+=" (Melee)":2==this.tag&&(n+=" (Spell)");break;case"Scourge Strike":1==this.tag?n+=" (Physical)":2==this.tag&&(n+=" (Shadow)");break;case"Battle Shout":1==this.tag&&(n+=" (Snapshot)");break;case"Seed of Corruption":0==this.tag?n+=" (DoT)":1==this.tag&&(n+=" (Explosion)");break;case"Thunderfury":1==this.tag?n+=" (ST)":2==this.tag&&(n+=" (MT)");break;default:this.tag&&(n+=" (??)")}const i=this.toProtoString(),o=ir[i]||null;let r=ar.makeIconUrl(t.icon);if(o){const e=await ar.getTooltipData(o);r=ar.makeIconUrl(e.icon)}return new ar(this.itemId,this.spellId,this.otherId,this.tag,a,n,r)}toString(){return this.toStringIgnoringTag()+(this.tag?"-"+this.tag:"")}toStringIgnoringTag(){if(this.itemId)return"item-"+this.itemId;if(this.spellId)return"spell-"+this.spellId;if(this.otherId)return"other-"+this.otherId;throw new Error("Empty action id!")}toProto(){const e=Ue.create({tag:this.tag});return this.itemId?e.rawId={oneofKind:"itemId",itemId:this.itemId}:this.spellId?e.rawId={oneofKind:"spellId",spellId:this.spellId}:this.otherId&&(e.rawId={oneofKind:"otherId",otherId:this.otherId}),e}toProtoString(){return Ue.toJsonString(this.toProto())}withoutTag(){return new ar(this.itemId,this.spellId,this.otherId,0,this.baseName,this.baseName,this.iconUrl)}static fromEmpty(){return new ar(0,0,_e.OtherActionNone,0,"","","")}static fromItemId(e,t){return new ar(e,0,_e.OtherActionNone,t||0,"","","")}static fromSpellId(e,t){return new ar(0,e,_e.OtherActionNone,t||0,"","","")}static fromOtherId(e,t){return new ar(0,0,e,t||0,"","","")}static fromPetName(e){return or[e]||new ar(0,0,_e.OtherActionPet,0,e,e,rr[e]||"")}static fromItem(e){return ar.fromItemId(function(e){return e.wowheadId||e.id}(e))}static fromProto(e){return"spellId"==e.rawId.oneofKind?ar.fromSpellId(e.rawId.spellId,e.tag):"itemId"==e.rawId.oneofKind?ar.fromItemId(e.rawId.itemId,e.tag):"otherId"==e.rawId.oneofKind?ar.fromOtherId(e.rawId.otherId,e.tag):ar.fromEmpty()}static fromLogString(e){const t=e.match(/{((SpellID)|(ItemID)|(OtherID)): (\d+)(, Tag: (-?\d+))?}/);if(t){const e=t[1],a=parseInt(t[5]);return new ar("ItemID"==e?a:0,"SpellID"==e?a:0,"OtherID"==e?a:0,t[7]?parseInt(t[7]):0,"","","")}return console.warn("Failed to parse action id from log: "+e),ar.fromEmpty()}static makeIconUrl(e){return`https://wow.zamimg.com/images/wow/icons/large/${e}.jpg`}static async getDb(e){return ar.dbCache.has(e)||ar.dbCache.set(e,fetch(e).then((e=>e.json())).then((e=>{const t={};return e.forEach((e=>{t[e.ID]=e})),t}))),ar.dbCache.get(e)}static async getDbTooltipDataHelper(e,t){const a=await ar.getDb(t);return a[e]?{name:a[e].Name,icon:a[e].Icon}:{name:"",icon:""}}static async getWowheadTooltipDataHelper(e,t,a){if(!a.has(e)){const i=`https://wowhead.com/wotlk/tooltip/${t}/${e}`;try{const t=await fetch(i);a.set(e,t.json())}catch(n){console.error("Error while fetching url: "+i+"\n\n"+n),a.set(e,Promise.resolve({name:"",icon:"",tooltip:""}))}}return a.get(e)}static async getWotlkdbTooltipDataHelper(e,t,a){if(!a.has(e)){const i=`https://wotlkdb.com/?${t}=${e}&power`;try{const t=await fetch(i),n=await t.text(),o=n.match(/name_enus: '(.*?)'/g),r=n.match(/icon: '(.*?)'/g),s=n.match(/tooltip_enus: '(.*?)'/g);a.set(e,Promise.resolve({name:o?o[1]:"",icon:r?r[1]:"",tooltip:s?s[1]:""}))}catch(n){console.error("Error while fetching url: "+i+"\n\n"+n),a.set(e,Promise.resolve({name:"",icon:"",tooltip:""}))}}return a.get(e)}static async getItemTooltipData(e){return await ar.getDbTooltipDataHelper(e,"/wotlk/assets/item_data/all_items_db.json")}static async getSpellTooltipData(e){return await ar.getDbTooltipDataHelper(e,"/wotlk/assets/spell_data/all_spells_db.json")}static async getTooltipData(e){return e.itemId?await ar.getItemTooltipData(e.itemId):await ar.getSpellTooltipData(e.spellId)}};let nr=ar;nr.dbCache=new Map;const ir={};ir[nr.fromSpellId(37212).toProtoString()]=nr.fromItemId(29035),ir[nr.fromSpellId(37223).toProtoString()]=nr.fromItemId(29040),ir[nr.fromSpellId(37447).toProtoString()]=nr.fromItemId(30720),ir[nr.fromSpellId(37443).toProtoString()]=nr.fromItemId(30196);const or={"Gnomish Flame Turret":nr.fromItemId(23841),"Mirror Image":nr.fromSpellId(55342),"Water Elemental":nr.fromSpellId(31687),"Greater Fire Elemental":nr.fromSpellId(2894),Shadowfiend:nr.fromSpellId(34433),"Spirit Wolf 1":nr.fromSpellId(51533),"Spirit Wolf 2":nr.fromSpellId(51533),"Rune Weapon":nr.fromSpellId(49028),Bloodworm:nr.fromSpellId(50452)},rr={Bat:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_bat.jpg",Bear:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_bear.jpg","Bird of Prey":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_owl.jpg",Boar:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_boar.jpg","Carrion Bird":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_vulture.jpg",Cat:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_cat.jpg",Chimaera:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_chimera.jpg","Core Hound":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_corehound.jpg",Crab:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_crab.jpg",Crocolisk:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_crocolisk.jpg",Devilsaur:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_devilsaur.jpg",Dragonhawk:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_dragonhawk.jpg",Felguard:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelguard.jpg",Felhunter:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelhunter.jpg",Gargoyle:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_pet_bat.jpg",Ghoul:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_raisedead.jpg","Army of the Dead":"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_armyofthedead.jpg",Gorilla:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_gorilla.jpg",Hyena:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_hyena.jpg",Imp:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonimp.jpg","Mirror Image":"https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg",Moth:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_moth.jpg","Nether Ray":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_netherray.jpg",Owl:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_owl.jpg",Raptor:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_raptor.jpg",Ravager:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_ravager.jpg",Rhino:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_rhino.jpg",Scorpid:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_scorpid.jpg",Serpent:"https://wow.zamimg.com/images/wow/icons/medium/spell_nature_guardianward.jpg",Silithid:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_silithid.jpg",Spider:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_spider.jpg","Spirit Beast":"https://wow.zamimg.com/images/wow/icons/medium/ability_druid_primalprecision.jpg","Spore Bat":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_sporebat.jpg",Succubus:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonsuccubus.jpg",Tallstrider:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_tallstrider.jpg",Turtle:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_turtle.jpg","Warp Stalker":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_warpstalker.jpg",Wasp:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_wasp.jpg","Wind Serpent":"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_windserpent.jpg",Wolf:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_wolf.jpg",Worm:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_pet_worm.jpg"},sr={[Gn.ResourceTypeNone]:"",[Gn.ResourceTypeHealth]:"https://wow.zamimg.com/images/wow/icons/medium/inv_elemental_mote_life01.jpg",[Gn.ResourceTypeMana]:"https://wow.zamimg.com/images/wow/icons/medium/inv_elemental_mote_mana.jpg",[Gn.ResourceTypeEnergy]:"https://wow.zamimg.com/images/wow/icons/medium/spell_shadow_shadowworddominate.jpg",[Gn.ResourceTypeRage]:"https://wow.zamimg.com/images/wow/icons/medium/spell_misc_emotionangry.jpg",[Gn.ResourceTypeComboPoints]:"https://wow.zamimg.com/images/wow/icons/medium/inv_mace_2h_pvp410_c_01.jpg",[Gn.ResourceTypeFocus]:"https://wow.zamimg.com/images/wow/icons/medium/ability_hunter_focusfire.jpg",[Gn.ResourceTypeRunicPower]:"https://wow.zamimg.com/images/wow/icons/medium/inv_sword_62.jpg",[Gn.ResourceTypeBloodRune]:"/wotlk/assets/img/blood_rune.png",[Gn.ResourceTypeFrostRune]:"/wotlk/assets/img/frost_rune.png",[Gn.ResourceTypeUnholyRune]:"/wotlk/assets/img/unholy_rune.png",[Gn.ResourceTypeDeathRune]:"/wotlk/assets/img/death_rune.png"},lr=Ri(oe).length;class cr{constructor(e){this.stats=e?.slice(0,lr)||[],this.stats.length<lr&&(this.stats=this.stats.concat(new Array(lr-(e?.length||0)).fill(0)));for(let t=0;t<lr;t++)null==this.stats[t]&&(this.stats[t]=0)}equals(e){return this.stats.every(((t,a)=>t==e.getStat(a)))}getStat(e){return this.stats[e]}withStat(e,t){const a=this.stats.slice();return a[e]=t,new cr(a)}addStat(e,t){return this.withStat(e,this.getStat(e)+t)}add(e){return new cr(this.stats.map(((t,a)=>t+e.stats[a])))}subtract(e){return new cr(this.stats.map(((t,a)=>t-e.stats[a])))}computeEP(e){let t=0;return this.stats.forEach(((a,n)=>{t+=a*e.stats[n]})),t}asArray(){return this.stats.slice()}toJson(){return this.asArray()}static fromJson(e){return new cr(e)}static fromMap(e){const t=new Array(lr).fill(0);return Object.entries(e).forEach((e=>{const[a,n]=e;t[Number(a)]=n})),new cr(t)}}function dr(e){return(e.weaponDamageMin+e.weaponDamageMax)/2/(e.weaponSpeed||1)}class mr{constructor(e,t,a){this._item=e,this._enchant=t||null,this._gems=a||[],this.numPossibleSockets=this.numSockets(!0),this._gems.length<this.numPossibleSockets&&(this._gems=this._gems.concat(new Array(this.numPossibleSockets-this._gems.length).fill(null)))}get item(){return Ce.clone(this._item)}get enchant(){return this._enchant?De.clone(this._enchant):null}get gems(){return this._gems.map((e=>null==e?null:Ee.clone(e)))}equals(e){if(!Ce.equals(this._item,e.item))return!1;if(null==this._enchant!=(null==e.enchant))return!1;if(this._enchant&&e.enchant&&!De.equals(this._enchant,e.enchant))return!1;if(this._gems.length!=e.gems.length)return!1;for(let t=0;t<this._gems.length;t++){if(null==this._gems[t]!=(null==e.gems[t]))return!1;if(this._gems[t]&&e.gems[t]&&!Ee.equals(this._gems[t],e.gems[t]))return!1}return!0}withItem(e){let t=null;this._enchant&&Ko(this._enchant,e)&&(t=this._enchant);const a=new Array(e.gemSockets.length).fill(null);return this._gems.slice(0,this._item.gemSockets.length).filter((e=>null!=e)).forEach((t=>{const n=e.gemSockets.findIndex(((e,n)=>!a[n]&&Li(t,e))),i=e.gemSockets.findIndex(((e,n)=>!a[n]&&zi(t,e)));-1!=n?a[n]=t:-1!=i&&(a[i]=t)})),this.couldHaveExtraSocket()&&a.push(this._gems[this._gems.length-1]),new mr(e,t,a)}withEnchant(e){return new mr(this._item,e,this._gems)}withGemHelper(e,t){if(this._gems.length<=t)throw new Error("No gem socket with index "+t);const a=this._gems.slice();return a[t]=e,new mr(this._item,this._enchant,a)}withGem(e,t){let a=this;return e&&e.unique&&(a=a.removeGemsWithId(e.id)),a.withGemHelper(e,t)}removeGemsWithId(e){let t=this;for(let a=0;a<t._gems.length;a++)t._gems[a]?.id==e&&(t=t.withGemHelper(null,a));return t}asActionId(){return nr.fromItemId(this._item.id)}asSpec(){return We.create({id:this._item.id,enchant:this._enchant?.id,gems:this._gems.map((e=>e?.id||0))})}meetsSocketBonus(){return this._item.gemSockets.every(((e,t)=>this._gems[t]&&Li(this._gems[t],e)))}socketBonusStats(){return this.meetsSocketBonus()?new cr(this._item.socketBonus):new cr}couldHaveExtraSocket(){return[re.ItemTypeWaist,re.ItemTypeWrist,re.ItemTypeHands].includes(this.item.type)}hasExtraSocket(e){return this.item.type==re.ItemTypeWaist||e&&[re.ItemTypeWrist,re.ItemTypeHands].includes(this.item.type)}numSockets(e){return this._item.gemSockets.length+(this.hasExtraSocket(e)?1:0)}hasExtraGem(){return this._gems.length>this.item.gemSockets.length}allSocketColors(){return this.couldHaveExtraSocket()?this._item.gemSockets.concat([he.GemColorPrismatic]):this._item.gemSockets}curSocketColors(e){return this.hasExtraSocket(e)?this._item.gemSockets.concat([he.GemColorPrismatic]):this._item.gemSockets}curGems(e){return this._gems.filter((e=>null!=e)).slice(0,this.numSockets(e))}getFailedProfessionRequirements(e){let t=[];return this._item.requiredProfession==ie.ProfessionUnknown||e.includes(this._item.requiredProfession)||t.push(this._item),null==this._enchant||this._enchant.requiredProfession==ie.ProfessionUnknown||e.includes(this._enchant.requiredProfession)||t.push(this._enchant),this._gems.forEach((a=>{null==a||a.requiredProfession==ie.ProfessionUnknown||e.includes(a.requiredProfession)||t.push(a)})),t}}class pr{constructor(e){Ri(me).forEach((t=>{e[t]||(e[t]=null)})),this.gear=e}equals(e){return this.asArray().every(((t,a)=>{return n=t,i=e.getEquippedItem(a),o=(e,t)=>e.equals(t),null==n&&null==i||null!=n&&null!=i&&(o||((e,t)=>n==i))(n,i);var n,i,o}))}withEquippedItem(e,t,a){const n=this.asMap();var i,o,r;return t&&(t.gems.filter((e=>e?.unique)).forEach((e=>{Ri(me).map((e=>Number(e))).forEach((t=>{n[t]=n[t]?.removeGemsWithId(e.id)||null}))})),t.item.unique&&Ri(me).map((e=>Number(e))).forEach((e=>{n[e]?.item.id==t.item.id&&(n[e]=null)}))),n[e]=t,i=n[me.ItemSlotMainHand]?.item,o=n[me.ItemSlotOffHand]?.item,r=a,null==i||null==o||i.handType!=ce.HandTypeTwoHand||r||(e==me.ItemSlotOffHand?n[me.ItemSlotMainHand]=null:n[me.ItemSlotOffHand]=null),new pr(n)}getEquippedItem(e){return this.gear[e]}getTrinkets(){return[this.getEquippedItem(me.ItemSlotTrinket1),this.getEquippedItem(me.ItemSlotTrinket2)]}hasTrinket(e){return this.getTrinkets().map((e=>e?.item.id)).includes(e)}asMap(){const e={};return Ri(me).map((e=>Number(e))).forEach((t=>{e[t]=this.getEquippedItem(t)})),e}asArray(){return Object.values(this.gear)}asSpec(){return Ve.create({items:this.asArray().map((e=>e?e.asSpec():We.create()))})}getAllGems(e){return this.asArray().map((t=>null==t?[]:t.curGems(e))).flat()}getNonMetaGems(e){return this.getAllGems(e).filter((e=>e.color!=he.GemColorMeta))}statsFromGems(e){let t=new cr;const a=this.getAllGems(e);for(let i=0;i<a.length;i++)t=t.add(new cr(a[i].stats));const n=this.asArray().filter((e=>null!=e));for(let i=0;i<n.length;i++)t=t.add(n[i].socketBonusStats());return t}getGemsOfColor(e,t){return this.getAllGems(t).filter((t=>t.color==e))}getJCGems(e){return this.getAllGems(e).filter((e=>e.requiredProfession==ie.Jewelcrafting))}getMetaGem(){return this.getGemsOfColor(he.GemColorMeta,!0)[0]||null}gemColorCounts(e){const t=this.getAllGems(e);return{red:t.filter((e=>Li(e,he.GemColorRed))).length,yellow:t.filter((e=>Li(e,he.GemColorYellow))).length,blue:t.filter((e=>Li(e,he.GemColorBlue))).length}}hasActiveMetaGem(e){const t=this.getMetaGem();if(!t)return!1;const a=this.gemColorCounts(e);return this.getAllGems(e),function(e,t,a,n){return Ji(e.id).isMet(t,a,n)}(t,a.red,a.yellow,a.blue)}hasInactiveMetaGem(e){return null!=this.getMetaGem()&&!this.hasActiveMetaGem(e)}withoutMetaGem(){const e=this.getEquippedItem(me.ItemSlotHead),t=this.getMetaGem();return e&&t?this.withEquippedItem(me.ItemSlotHead,e.removeGemsWithId(t.id),!0):this}withoutBlacksmithSockets(){let e=this;const t=this.getEquippedItem(me.ItemSlotWrist);t&&(e=e.withEquippedItem(me.ItemSlotWrist,t.withGem(null,t.numPossibleSockets-1),!0));const a=this.getEquippedItem(me.ItemSlotHands);return a&&(e=e.withEquippedItem(me.ItemSlotHands,a.withGem(null,a.numPossibleSockets-1),!0)),e}hasBluntMHWeapon(){const e=this.getEquippedItem(me.ItemSlotMainHand);return null!=e&&zo(e.item.weaponType)}hasSharpMHWeapon(){const e=this.getEquippedItem(me.ItemSlotMainHand);return null!=e&&Lo(e.item.weaponType)}hasBluntOHWeapon(){const e=this.getEquippedItem(me.ItemSlotOffHand);return null!=e&&zo(e.item.weaponType)}hasSharpOHWeapon(){const e=this.getEquippedItem(me.ItemSlotOffHand);return null!=e&&Lo(e.item.weaponType)}getFailedProfessionRequirements(e){return this.asArray().filter((e=>null!=e)).map((t=>t.getFailedProfessionRequirements(e))).flat()}}const hr={[ee.RaceUnknown]:"None",[ee.RaceBloodElf]:"Blood Elf",[ee.RaceDraenei]:"Draenei",[ee.RaceDwarf]:"Dwarf",[ee.RaceGnome]:"Gnome",[ee.RaceHuman]:"Human",[ee.RaceNightElf]:"Night Elf",[ee.RaceOrc]:"Orc",[ee.RaceTauren]:"Tauren",[ee.RaceTroll]:"Troll",[ee.RaceUndead]:"Undead"};function gr(e){const t=e.toLowerCase().replaceAll(" ","");for(const a in hr){const e=parseInt(a);if(hr[e].toLowerCase().replaceAll(" ","")==t)return e}return ee.RaceUnknown}const ur={[ne.ClassUnknown]:"None",[ne.ClassDruid]:"Druid",[ne.ClassHunter]:"Hunter",[ne.ClassMage]:"Mage",[ne.ClassPaladin]:"Paladin",[ne.ClassPriest]:"Priest",[ne.ClassRogue]:"Rogue",[ne.ClassShaman]:"Shaman",[ne.ClassWarlock]:"Warlock",[ne.ClassWarrior]:"Warrior",[ne.ClassDeathknight]:"Death Knight"};function fr(e){const t=e.toLowerCase();for(const a in ur){const e=parseInt(a);if(ur[e].toLowerCase().replace(/\s+/g,"")==t)return e}return ne.ClassUnknown}const wr={[ie.ProfessionUnknown]:"None",[ie.Alchemy]:"Alchemy",[ie.Blacksmithing]:"Blacksmithing",[ie.Enchanting]:"Enchanting",[ie.Engineering]:"Engineering",[ie.Herbalism]:"Herbalism",[ie.Inscription]:"Inscription",[ie.Jewelcrafting]:"Jewelcrafting",[ie.Leatherworking]:"Leatherworking",[ie.Mining]:"Mining",[ie.Skinning]:"Skinning",[ie.Tailoring]:"Tailoring"},yr=[oe.StatHealth,oe.StatArmor,oe.StatStamina,oe.StatStrength,oe.StatAgility,oe.StatIntellect,oe.StatSpirit,oe.StatSpellPower,oe.StatHealingPower,oe.StatArcaneSpellPower,oe.StatFireSpellPower,oe.StatFrostSpellPower,oe.StatHolySpellPower,oe.StatNatureSpellPower,oe.StatShadowSpellPower,oe.StatSpellHit,oe.StatSpellCrit,oe.StatSpellHaste,oe.StatSpellPenetration,oe.StatMP5,oe.StatAttackPower,oe.StatRangedAttackPower,oe.StatMeleeHit,oe.StatMeleeCrit,oe.StatMeleeHaste,oe.StatArmorPenetration,oe.StatExpertise,oe.StatMana,oe.StatEnergy,oe.StatRage,oe.StatDefense,oe.StatBlock,oe.StatBlockValue,oe.StatDodge,oe.StatParry,oe.StatResilience,oe.StatArcaneResistance,oe.StatFireResistance,oe.StatFrostResistance,oe.StatNatureResistance,oe.StatShadowResistance],kr={[oe.StatStrength]:"Strength",[oe.StatAgility]:"Agility",[oe.StatStamina]:"Stamina",[oe.StatIntellect]:"Intellect",[oe.StatSpirit]:"Spirit",[oe.StatSpellPower]:"Spell Dmg",[oe.StatHealingPower]:"Healing Power",[oe.StatArcaneSpellPower]:"Arcane Dmg",[oe.StatFireSpellPower]:"Fire Dmg",[oe.StatFrostSpellPower]:"Frost Dmg",[oe.StatHolySpellPower]:"Holy Dmg",[oe.StatNatureSpellPower]:"Nature Dmg",[oe.StatShadowSpellPower]:"Shadow Dmg",[oe.StatMP5]:"MP5",[oe.StatSpellHit]:"Spell Hit",[oe.StatSpellCrit]:"Spell Crit",[oe.StatSpellHaste]:"Spell Haste",[oe.StatSpellPenetration]:"Spell Pen",[oe.StatAttackPower]:"Attack Power",[oe.StatMeleeHit]:"Melee Hit",[oe.StatMeleeCrit]:"Melee Crit",[oe.StatMeleeHaste]:"Melee Haste",[oe.StatArmorPenetration]:"Armor Pen",[oe.StatExpertise]:"Expertise",[oe.StatMana]:"Mana",[oe.StatEnergy]:"Energy",[oe.StatRage]:"Rage",[oe.StatArmor]:"Armor",[oe.StatRangedAttackPower]:"Ranged AP",[oe.StatDefense]:"Defense",[oe.StatBlock]:"Block",[oe.StatBlockValue]:"Block Value",[oe.StatDodge]:"Dodge",[oe.StatParry]:"Parry",[oe.StatResilience]:"Resilience",[oe.StatHealth]:"Health",[oe.StatArcaneResistance]:"Arcane Resistance",[oe.StatFireResistance]:"Fire Resistance",[oe.StatFrostResistance]:"Frost Resistance",[oe.StatNatureResistance]:"Nature Resistance",[oe.StatShadowResistance]:"Shadow Resistance"},br={[me.ItemSlotHead]:"Head",[me.ItemSlotNeck]:"Neck",[me.ItemSlotShoulder]:"Shoulders",[me.ItemSlotBack]:"Back",[me.ItemSlotChest]:"Chest",[me.ItemSlotWrist]:"Wrist",[me.ItemSlotHands]:"Hands",[me.ItemSlotWaist]:"Waist",[me.ItemSlotLegs]:"Legs",[me.ItemSlotFeet]:"Feet",[me.ItemSlotFinger1]:"Finger 1",[me.ItemSlotFinger2]:"Finger 2",[me.ItemSlotTrinket1]:"Trinket 1",[me.ItemSlotTrinket2]:"Trinket 2",[me.ItemSlotMainHand]:"Main Hand",[me.ItemSlotOffHand]:"Off Hand",[me.ItemSlotRanged]:"Ranged"},Ir={[Gn.ResourceTypeNone]:"None",[Gn.ResourceTypeHealth]:"Health",[Gn.ResourceTypeMana]:"Mana",[Gn.ResourceTypeEnergy]:"Energy",[Gn.ResourceTypeRage]:"Rage",[Gn.ResourceTypeComboPoints]:"Combo Points",[Gn.ResourceTypeFocus]:"Focus",[Gn.ResourceTypeRunicPower]:"Runic Power",[Gn.ResourceTypeBloodRune]:"Blood Rune",[Gn.ResourceTypeFrostRune]:"Frost Rune",[Gn.ResourceTypeUnholyRune]:"Unholy Rune",[Gn.ResourceTypeDeathRune]:"Death Rune"};Gn.ResourceTypeNone,Gn.ResourceTypeHealth,Gn.ResourceTypeMana,Gn.ResourceTypeEnergy,Gn.ResourceTypeRage,Gn.ResourceTypeComboPoints,Gn.ResourceTypeFocus,Gn.ResourceTypeRunicPower,Gn.ResourceTypeBloodRune,Gn.ResourceTypeFrostRune,Gn.ResourceTypeUnholyRune,Gn.ResourceTypeDeathRune;const Tr={[ae.ShattrathFactionAldor]:"Aldor",[ae.ShattrathFactionScryer]:"Scryer"},xr=class{constructor(e,t,a,n,i){this.name=e,this.ownerName=t,this.index=a,this.isTarget=n,this.isPet=i}equals(e){return this.isTarget==e.isTarget&&this.isPet==e.isPet&&this.index==e.index&&this.name==e.name}toString(){return this.isTarget?"Target "+(this.index+1):this.isPet?`${this.ownerName} (#${this.index+1}) - ${this.name}`:`${this.name} (#${this.index+1})`}static parseAll(e){return Array.from(e.matchAll(xr.parseRegex)).map((e=>{if(e[1])return new xr(e[1],"",parseInt(e[2])-1,!0,!1);if(e[3])return new xr(e[6],e[4],parseInt(e[5])-1,!1,!0);if(e[7])return new xr(e[8],"",parseInt(e[9])-1,!1,!1);throw new Error("Invalid Entity match")}))}};let Sr=xr;Sr.parseRegex=/\[(Target (\d+))|(([a-zA-Z0-9]+) \(#(\d+)\) - ([a-zA-Z0-9\s]+))|(([a-zA-Z0-9]+) \(#(\d+)\))\]/g;class vr{constructor(e){this.raw=e.raw,this.logIndex=e.logIndex,this.timestamp=e.timestamp,this.source=e.source,this.target=e.target,this.actionId=e.actionId,this.threat=e.threat,this.activeAuras=[]}toString(){return this.raw}toStringPrefix(){const e=`[${this.timestamp.toFixed(2)}]`;return this.source?`${e} [${this.source}]`:e}static async parseAll(e){const t=e.logs.split("\n");return Promise.all(t.map(((e,t)=>{const a={raw:e,logIndex:t,timestamp:0,source:null,target:null,actionId:null,threat:0},n=e.match(/ \(Threat: (-?[0-9]+\.[0-9]+)\)/);n&&(a.threat=parseFloat(n[1]),e=e.substring(0,n.index));let i=e.match(/\[([0-9]+\.[0-9]+)\]\w*(.*)/);if(!i||!i[1])return new vr(a);a.timestamp=parseFloat(i[1]);let o=i[2];const r=Sr.parseAll(o);return a.source=r[0]||null,a.target=r[1]||null,_r.parse(a)||Fr.parse(a)||Rr.parse(a)||Br.parse(a)||Vr.parse(a)||Cr.parse(a)||Dr.parse(a)||jr.parse(a)||Promise.resolve(new vr(a))})))}isDamageDealt(){return this instanceof _r}isResourceChanged(){return this instanceof Fr}isAuraEvent(){return this instanceof Rr}isAuraStacksChange(){return this instanceof Br}isMajorCooldownUsed(){return this instanceof Vr}isCastBegan(){return this instanceof Cr}isCastCompleted(){return this instanceof Dr}isStatChange(){return this instanceof jr}static groupDuplicateTimestamps(e){const t=[];let a=[];return e.forEach((e=>{0==a.length||e.timestamp==a[0].timestamp?a.push(e):(t.push(a),a=[e])})),a.length>0&&t.push(a),t}}class _r extends vr{constructor(e,t,a,n,i,o,r,s,l,c,d,m,p){super(e),this.amount=t,this.miss=a,this.glance=o,this.dodge=r,this.parry=s,this.block=l,this.hit=!a&&!n,this.crit=n,this.crush=i,this.tick=c,this.partialResist1_4=d,this.partialResist2_4=m,this.partialResist3_4=p}resultString(){let e=this.miss?"Miss":this.dodge?"Dodge":this.parry?"Parry":this.glance?"Glance":this.block?this.crit?"Critical Block":"Block":this.crit?"Crit":this.crush?"Crush":this.tick?"Tick":"Hit";return e+=" "+this.target,this.miss||this.dodge||this.parry||(e+=` for ${this.amount.toFixed(2)}`,this.partialResist1_4?e+=" (25% Resist)":this.partialResist2_4?e+=" (50% Resist)":this.partialResist3_4&&(e+=" (75% Resist)"),e+="."),e}toString(){const e=this.source?.isTarget?"":` (${this.threat.toFixed(2)} Threat)`;return`${this.toStringPrefix()} ${this.actionId.name} ${this.resultString()}${e}`}static parse(e){const t=e.raw.match(/] (.*?) (tick )?((Miss)|(Hit)|(CriticalBlock)|(Crit)|(Crush)|(Glance)|(Dodge)|(Parry)|(Block))( \((\d+)% Resist\))?( for (\d+\.\d+) damage)?/);return t?nr.fromLogString(t[1]).fill(e.source?.index).then((a=>{e.actionId=a;let n=0;return t[16]&&(n=parseFloat(t[16])),new _r(e,n,"Miss"==t[3],"Crit"==t[3]||"CriticalBlock"==t[3],"Crush"==t[3],"Glance"==t[3],"Dodge"==t[3],"Parry"==t[3],"Block"==t[3]||"CriticalBlock"==t[3],Boolean(t[2])&&t[2].includes("tick"),"25"==t[14],"50"==t[14],"75"==t[14])})):null}}const Or=class extends vr{constructor(e,t,a){super(e),this.dps=t,this.damageLogs=a}static fromLogs(e){const t=vr.groupDuplicateTimestamps(e);let a=[],n=0;return t.map((e=>{e.forEach((e=>{a.push(e),n+=e.amount}));const t=a.findIndex((t=>{const a=t.timestamp>e[0].timestamp-Or.DPS_WINDOW;return a||(n-=t.amount),a}));a=-1==t?[]:a.slice(t);const i=n/Or.DPS_WINDOW;return isNaN(i)&&console.warn("NaN dps!"),new Or({raw:"",logIndex:e[0].logIndex,timestamp:e[0].timestamp,source:e[0].source,target:null,actionId:null,threat:0},i,e)}))}};let Pr=Or;Pr.DPS_WINDOW=15;class Gr extends vr{constructor(e,t,a,n){super(e),this.threatBefore=t,this.threatAfter=a,this.logs=n}static fromLogs(e){const t=vr.groupDuplicateTimestamps(e.filter((e=>0!=e.threat)));let a=0;return t.map((e=>{const t=xi(e.map((e=>e.threat))),n=new Gr({raw:"",logIndex:e[0].logIndex,timestamp:e[0].timestamp,source:e[0].source,target:e[0].target,actionId:null,threat:t},a,a+t,e);return a+=t,n}))}}class Rr extends vr{constructor(e,t,a,n){super(e),this.isGained=t,this.isFaded=a,this.isRefreshed=n}toString(){return`${this.toStringPrefix()} Aura ${this.isGained?"gained":this.isFaded?"faded":"refreshed"}: ${this.actionId.name}.`}static parse(e){const t=e.raw.match(/Aura ((gained)|(faded)|(refreshed)): (.*)/);return t&&t[5]?nr.fromLogString(t[5]).fill(e.source?.index).then((a=>{e.actionId=a;const n=t[1];return new Rr(e,"gained"==n,"faded"==n,"refreshed"==n)})):null}}class Br extends vr{constructor(e,t,a){super(e),this.oldStacks=t,this.newStacks=a}toString(){return`${this.toStringPrefix()} ${this.actionId.name} stacks: ${this.oldStacks} --\x3e ${this.newStacks}.`}static parse(e){const t=e.raw.match(/(.*) stacks: ([0-9]+) --> ([0-9]+)/);return t&&t[1]?nr.fromLogString(t[1]).fill(e.source?.index).then((a=>(e.actionId=a,new Br(e,parseInt(t[2]),parseInt(t[3]))))):null}}class Nr extends vr{constructor(e,t,a){super(e),this.gainedAt=e.timestamp,this.fadedAt=t,this.stacksChange=a}static fromLogs(e,t,a){let n=[];const i=[];return e.forEach((e=>{if(!e.source||!e.source.equals(t))return;if(e.isAuraStacksChange()){const t=n.findIndex((t=>t.gained.actionId.equals(e.actionId)));return-1==t?void console.warn("Unmatched aura stacks change log: "+e.actionId.name):void n[t].stacks.push(e)}if(!e.isAuraEvent())return;if(e.isGained)return void n.push({gained:e,stacks:[]});const a=n.findIndex((t=>t.gained.actionId.equals(e.actionId)));if(-1==a)return void console.warn("Unmatched aura faded log: "+e.actionId.name);const{gained:o,stacks:r}=n.splice(a,1)[0];i.push(new Nr({raw:e.raw,logIndex:o.logIndex,timestamp:o.timestamp,source:e.source,target:e.target,actionId:o.actionId,threat:o.threat},e.timestamp,r)),e.isRefreshed&&n.push({gained:e,stacks:[]})})),n.forEach((e=>{const{gained:t,stacks:n}=e;i.push(new Nr({raw:t.raw,logIndex:t.logIndex,timestamp:t.timestamp,source:t.source,target:t.target,actionId:t.actionId,threat:t.threat},a,n))})),i.sort(((e,t)=>e.gainedAt-t.gainedAt)),i}static populateActiveAuras(e,t){let a=[],n=0;e.forEach((e=>{for(;n<t.length&&t[n].gainedAt<=e.timestamp;)a.push(t[n]),n++;a=a.filter((t=>t.fadedAt>e.timestamp));const i=a.slice();i.sort(((e,t)=>Ti(e.actionId.name,t.actionId.name))),e.activeAuras=i}))}}class Fr extends vr{constructor(e,t,a,n,i){super(e),this.resourceType=t,this.valueBefore=a,this.valueAfter=n,this.isSpend=i}toString(){const e=(this.valueAfter-this.valueBefore)*(this.isSpend?-1:1),t=this.resourceType==Gn.ResourceTypeHealth?this.isSpend?"Lost":"Recovered":this.isSpend?"Spent":"Gained";return`${this.toStringPrefix()} ${t} ${e.toFixed(1)} ${Ir[this.resourceType]} from ${this.actionId.name}. (${this.valueBefore.toFixed(1)} --\x3e ${this.valueAfter.toFixed(1)})`}resultString(){const e=this.valueAfter-this.valueBefore;return e<0?e.toFixed(1):"+"+e.toFixed(1)}static parse(e){const t=e.raw.match(/((Gained)|(Spent)) \d+\.?\d* ((health)|(mana)|(energy)|(focus)|(rage)|(combo points)|(runic power)|(blood rune)|(frost rune)|(unholy rune)|(death rune)) from (.*) \((\d+\.?\d*) --> (\d+\.?\d*)\)/);if(t){const a=function(e){for(const[t,a]of Object.entries(Ir))if(a.toLowerCase()==e.toLowerCase())return Number(t);return Gn.ResourceTypeNone}(t[4]);return nr.fromLogString(t[16]).fill(e.source?.index).then((n=>(e.actionId=n,new Fr(e,a,parseFloat(t[17]),parseFloat(t[18]),"Spent"==t[1]))))}return null}}class Wr extends vr{constructor(e,t,a,n,i){super(e),this.resourceType=t,this.valueBefore=a,this.valueAfter=n,this.logs=i}toString(){return`${this.toStringPrefix()} ${Ir[this.resourceType]}: ${this.valueBefore.toFixed(1)} --\x3e ${this.valueAfter.toFixed(1)}`}static fromLogs(e){const t=e.filter((e=>e.isResourceChanged())),a={};return Ri(Gn).filter((e=>e!=Gn.ResourceTypeNone)).forEach((e=>{const n=t.filter((t=>t.resourceType==e)),i=vr.groupDuplicateTimestamps(n);a[e]=i.map((t=>new Wr({raw:"",logIndex:t[0].logIndex,timestamp:t[0].timestamp,source:t[0].source,target:t[0].target,actionId:null,threat:0},e,t[0].valueBefore,t[t.length-1].valueAfter,t)))})),a}}class Vr extends vr{constructor(e){super(e)}toString(){return`${this.toStringPrefix()} Major cooldown used: ${this.actionId.name}.`}static parse(e){const t=e.raw.match(/Major cooldown used: (.*)/);return t?nr.fromLogString(t[1]).fill(e.source?.index).then((t=>(e.actionId=t,new Vr(e)))):null}}class Cr extends vr{constructor(e,t,a){super(e),this.manaCost=t,this.castTime=a}toString(){return`${this.toStringPrefix()} Casting ${this.actionId.name} (Cast time = ${this.castTime.toFixed(2)}s, Cost = ${this.manaCost.toFixed(1)}).`}static parse(e){const t=e.raw.match(/Casting (.*) \(Cost = (\d+\.?\d*), Cast Time = (\d+\.?\d*)(m?s)\)/);if(t){let a=parseFloat(t[3]);return"ms"==t[4]&&(a/=1e3),nr.fromLogString(t[1]).fill(e.source?.index).then((n=>(e.actionId=n,new Cr(e,parseFloat(t[2]),a))))}return null}}class Dr extends vr{constructor(e){super(e)}toString(){return`${this.toStringPrefix()} Completed cast ${this.actionId.name}.`}static parse(e){const t=e.raw.match(/Completed cast (.*)/);return t?nr.fromLogString(t[1]).fill(e.source?.index).then((t=>(e.actionId=t,new Dr(e)))):null}}class Er extends vr{constructor(e,t,a){super({raw:e.raw,logIndex:e.logIndex,timestamp:e.timestamp,source:e.source,target:e.target,actionId:t?.actionId||e.actionId,threat:t?.threat||e.threat}),this.castTime=e.castTime,this.castBeganLog=e,this.castCompletedLog=t,this.damageDealtLogs=a,this.castCompletedLog&&1==this.damageDealtLogs.length&&this.castCompletedLog.timestamp<this.damageDealtLogs[0].timestamp&&!this.damageDealtLogs[0].tick?this.travelTime=this.damageDealtLogs[0].timestamp-this.castCompletedLog.timestamp:this.travelTime=0}toString(){return`${this.toStringPrefix()} Casting ${this.actionId.name} (Cast time = ${this.castTime.toFixed(2)}s).`}static fromLogs(e){const t=e.filter((e=>e.isCastBegan())),a=e.filter((e=>e.isCastCompleted())),n=e.filter((e=>e.isDamageDealt())),i=e=>30451==e.spellId?e.toStringIgnoringTag():e.toString(),o=Pi(t,(e=>i(e.actionId))),r=Pi(a,(e=>i(e.actionId))),s=Pi(n,(e=>i(e.actionId))),l=[];return Object.keys(o).forEach((e=>{const t=o[e],a=r[e],n=s[e];t[0].actionId;let i=0;for(let o=0;o<t.length;o++){const e=t[o],r=a[o]||null,s=a[o+1]||null;let c=[];for(;n&&i<n.length&&(!s||n[i].timestamp<s.timestamp);)c.push(n[i]),i++;l.push(new Er(e,r,c))}})),l.sort(((e,t)=>e.timestamp-t.timestamp)),l}}class jr extends vr{constructor(e,t,a){super(e),this.isGain=t,this.stats=a}toString(){return this.isGain?`${this.toStringPrefix()} Gained ${this.stats} from ${this.actionId.name}.`:`${this.toStringPrefix()} Lost ${this.stats} from fading ${this.actionId.name}.`}static parse(e){const t=e.raw.match(/((Gained)|(Lost)) ({.*}) from (fading )?(.*)/);return t?nr.fromLogString(t[6]).fill(e.source?.index).then((a=>{e.actionId=a;const n="Lost"==t[1]?-1:1;return new jr(e,1==n,t[4])})):null}}class Ur{constructor(e,t,a){this.rootElem=a||document.createElement("div"),this.rootElem.classList.add(t),e&&e.appendChild(this.rootElem)}}class Mr{constructor(e){this.listeners=[],this.firedEvents=[],this.frozenEvents=[],this.label=e||""}on(e){return this.listeners.push(e),{dispose:()=>this.off(e)}}off(e){const t=this.listeners.indexOf(e);-1!=t&&this.listeners.splice(t,1)}once(e){const t=(a,n)=>{this.off(t),e(a,n)};return this.on(t)}emit(e,t){this.firedEvents.find((t=>t.eventID==e))||(this.firedEvents.push({eventID:e,error:new Error("Original event")}),Ar>0?(0==this.frozenEvents.length&&Lr.push(this),this.frozenEvents.push({eventID:e,event:t})):this.fireEventInternal(e,t))}fireEventInternal(e,t){this.listeners.forEach((a=>a(e,t)))}static freezeAllAndDo(e){Ar++;try{e()}catch(t){console.error("Caught error in freezeAllAndDo: "+t)}finally{if(Ar--,Ar>0)return;const e=Lr.slice();Lr=[],e.forEach((e=>{const t=e.frozenEvents.slice();e.frozenEvents=[],t.forEach((t=>e.fireEventInternal(t.eventID,t.event)))}))}}static nextEventID(){return zr++}static onAny(e,t){const a=new Mr(t);return e.forEach((e=>e.on((e=>a.emit(e))))),a}}let Ar=0,Lr=[],zr=0;class Hr extends Ur{constructor(e,t,a,n){if(super(e,"input-root",n.rootElem),this.changeEmitter=new Mr,this.inputConfig=n,this.modObject=a,this.rootElem.classList.add(t),n.extraCssClasses&&this.rootElem.classList.add(...n.extraCssClasses),n.label){const e=document.createElement("div");e.classList.add("input-label-div"),this.rootElem.appendChild(e);const t=document.createElement("span");if(t.classList.add("input-label"),t.textContent=n.label,e.appendChild(t),n.labelTooltip){const t=document.createElement("span");t.classList.add("input-tooltip","fa","fa-info-circle"),tippy(t,{content:n.labelTooltip,allowHTML:!0}),e.appendChild(t)}}n.changedEvent(this.modObject).on((e=>{this.setInputValue(n.getValue(this.modObject)),this.update()}))}update(){!this.inputConfig.enableWhen||this.inputConfig.enableWhen(this.modObject)?(this.rootElem.classList.remove("disabled"),this.getInputElem().removeAttribute("disabled")):(this.rootElem.classList.add("disabled"),this.getInputElem().setAttribute("disabled",""));!this.inputConfig.showWhen||this.inputConfig.showWhen(this.modObject)?this.rootElem.classList.remove("hide"):this.rootElem.classList.add("hide")}init(){this.inputConfig.defaultValue?this.setInputValue(this.inputConfig.defaultValue):this.setInputValue(this.inputConfig.getValue(this.modObject)),this.update()}inputChanged(e){this.inputConfig.setValue(e,this.modObject,this.getInputValue()),this.changeEmitter.emit(e)}setValue(e,t){this.inputConfig.setValue(e,this.modObject,t)}}class $r extends Hr{constructor(e,t,a){super(e,"talents-picker-root",t,a),this.pointsPerRow=a.pointsPerRow,this.maxPoints=a.maxPoints,this.numRows=Math.max(...a.trees.map((e=>e.talents.map((e=>e.location.rowIdx)).flat())).flat())+1,this.trees=a.trees.map((e=>new qr(this.rootElem,e,this))),this.trees.forEach((e=>e.talents.forEach((e=>e.setPoints(0,!1))))),this.init()}getInputElem(){return this.rootElem}getInputValue(){return this.trees.map((e=>e.getTalentsString())).join("-").replace(/-+$/g,"")}setInputValue(e){const t=e.split("-");this.trees.forEach(((e,a)=>e.setTalentsString(t[a]||""))),this.updateTrees()}updateTrees(){this.isFull()?this.rootElem.classList.add("talents-full"):this.rootElem.classList.remove("talents-full"),this.trees.forEach((e=>e.update()))}get numPoints(){return xi(this.trees.map((e=>e.numPoints)))}isFull(){return this.numPoints>=this.maxPoints}setMaxPoints(e){e!=this.maxPoints&&(this.maxPoints=e,this.updateTrees())}}class qr extends Ur{constructor(e,t,a){super(e,"talent-tree-picker-root"),this.config=t,this.numPoints=0,this.picker=a,this.rootElem.innerHTML='\n    <div class="talent-tree-header">\n      <span class="talent-tree-title"></span>\n      <span class="talent-tree-reset fa fa-times"></span>\n    </div>\n    <div class="talent-tree-main">\n    </div>\n    ',this.title=this.rootElem.getElementsByClassName("talent-tree-title")[0];const n=this.rootElem.getElementsByClassName("talent-tree-main")[0];n.style.backgroundImage=`url('${t.backgroundUrl}')`,n.style.gridTemplateRows=`repeat(${this.picker.numRows}, 1fr)`;const i=Math.min(70/this.picker.numRows,10);n.style.height=i*this.picker.numRows+"vh",n.style.width=4*i+"vh",this.talents=t.talents.map((e=>new Jr(n,e,this))),this.talents.forEach((e=>{e.config.prereqLocation&&(this.getTalent(e.config.prereqLocation).config.prereqOfLocation=e.config.location)}));this.rootElem.getElementsByClassName("talent-tree-reset")[0].addEventListener("click",(e=>{this.talents.forEach((e=>e.setPoints(0,!1))),this.picker.inputChanged(Mr.nextEventID())}))}update(){this.title.textContent=this.config.name+" ("+this.numPoints+")",this.talents.forEach((e=>e.update()))}getTalent(e){const t=this.talents.find((t=>t.getRow()==e.rowIdx&&t.getCol()==e.colIdx));if(!t)throw new Error("No talent found with location: "+e);return t}getTalentsString(){return this.talents.map((e=>String(e.getPoints()))).join("").replace(/0+$/g,"")}setTalentsString(e){this.talents.forEach(((t,a)=>t.setPoints(Number(e.charAt(a)),!1)))}}class Jr extends Ur{constructor(e,t,a){super(e,"talent-picker-root",document.createElement("a")),this.config=t,this.tree=a,this.rootElem.style.gridRow=String(this.config.location.rowIdx+1),this.rootElem.style.gridColumn=String(this.config.location.colIdx+1),this.rootElem.dataset.maxPoints=String(this.config.maxPoints),this.rootElem.dataset.wowhead="noimage",this.pointsDisplay=document.createElement("span"),this.pointsDisplay.classList.add("talent-picker-points"),this.rootElem.appendChild(this.pointsDisplay),this.rootElem.addEventListener("click",(e=>{e.preventDefault()})),this.rootElem.addEventListener("contextmenu",(e=>{e.preventDefault()})),this.rootElem.addEventListener("touchstart",(e=>{e.preventDefault(),this.longTouchTimer=window.setTimeout((()=>{this.setPoints(0,!0),this.tree.picker.inputChanged(Mr.nextEventID()),this.longTouchTimer=void 0}),750)})),this.rootElem.addEventListener("touchend",(e=>{if(e.preventDefault(),null!=this.longTouchTimer){clearTimeout(this.longTouchTimer),this.longTouchTimer=void 0;var t=this.getPoints()+1;this.config.maxPoints<t&&(t=0),this.setPoints(t,!0),this.tree.picker.inputChanged(Mr.nextEventID())}})),this.rootElem.addEventListener("mousedown",(e=>{Bi(e)?this.setPoints(this.getPoints()-1,!0):this.setPoints(this.getPoints()+1,!0),this.tree.picker.inputChanged(Mr.nextEventID())}))}getRow(){return this.config.location.rowIdx}getCol(){return this.config.location.colIdx}getPoints(){const e=Number(this.rootElem.dataset.points);return isNaN(e)?0:e}isFull(){return this.getPoints()>=this.config.maxPoints}canSetPoints(e){const t=this.getPoints();if(e>t){const a=e-t;if(this.tree.picker.numPoints+a>this.tree.picker.maxPoints)return!1;if(this.tree.numPoints<this.getRow()*this.tree.picker.pointsPerRow)return!1;if(this.config.prereqLocation&&!this.tree.getTalent(this.config.prereqLocation).isFull())return!1}else{const a=t-e,n=[...Array(this.tree.picker.numRows).keys()].map((e=>this.tree.talents.filter((t=>t.getRow()==e)))).map((e=>xi(e.map((e=>e.getPoints())))));n[this.getRow()]-=a;const i=n.map(((e,t)=>xi(n.slice(0,t+1))));if(!this.tree.talents.every((e=>0==e.getPoints()||0==e.getRow()||i[e.getRow()-1]>=e.getRow()*this.tree.picker.pointsPerRow)))return!1;if(this.config.prereqOfLocation&&this.tree.getTalent(this.config.prereqOfLocation).getPoints()>0)return!1}return!0}setPoints(e,t){const a=this.getPoints();if(e=Math.max(0,e),e=Math.min(this.config.maxPoints,e),t&&!this.canSetPoints(e))return;this.tree.numPoints+=e-a,this.rootElem.dataset.points=String(e),this.pointsDisplay.textContent=e+"/"+this.config.maxPoints,this.isFull()?this.rootElem.classList.add("talent-full"):this.rootElem.classList.remove("talent-full");const n=this.getSpellIdForPoints(e);nr.fromSpellId(n).fill().then((e=>{e.setWowheadHref(this.rootElem),this.rootElem.style.backgroundImage=`url('${e.iconUrl}')`}))}getSpellIdForPoints(e){const t=Math.max(0,e-1);if(this.config.spellIds[t])return this.config.spellIds[t];throw new Error("No rank "+e+" for talent "+this.config.fieldName)}update(){this.canSetPoints(this.getPoints()+1)?this.rootElem.classList.add("talent-picker-can-add"):this.rootElem.classList.remove("talent-picker-can-add")}}function Kr(e){return e.forEach((e=>{e.talents.forEach(((t,a)=>{if(0!=a){const n=e.talents[a-1];if(t.location.rowIdx<n.location.rowIdx||t.location.rowIdx==n.location.rowIdx&&t.location.colIdx<=n.location.colIdx)throw new Error("Out-of-order talent: "+t.fieldName)}if(t.spellIds.length<t.maxPoints){let e=t.spellIds[t.spellIds.length-1];for(let a=t.spellIds.length;a<t.maxPoints;a++)e++,t.spellIds.push(e)}}))})),e}const Yr=Kr([{name:"Balance",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/283.jpg",talents:[{fieldName:"starlightWrath",location:{rowIdx:0,colIdx:1},spellIds:[16814,16815,16816,16817,16818],maxPoints:5},{fieldName:"genesis",location:{rowIdx:0,colIdx:2},spellIds:[57810,57811,57812,57813,57814],maxPoints:5},{fieldName:"moonglow",location:{rowIdx:1,colIdx:0},spellIds:[16845,16846,16847],maxPoints:3},{fieldName:"naturesMajesty",location:{rowIdx:1,colIdx:1},spellIds:[35363,35364],maxPoints:2},{fieldName:"improvedMoonfire",location:{rowIdx:1,colIdx:3},spellIds:[16821,16822],maxPoints:2},{fieldName:"brambles",location:{rowIdx:2,colIdx:0},spellIds:[16836,16839,16840],maxPoints:3},{fieldName:"naturesGrace",location:{rowIdx:2,colIdx:1},spellIds:[16880,61345,61346],maxPoints:3,prereqLocation:{rowIdx:1,colIdx:1}},{fieldName:"naturesSplendor",location:{rowIdx:2,colIdx:2},spellIds:[57865],maxPoints:1},{fieldName:"naturesReach",location:{rowIdx:2,colIdx:3},spellIds:[16819,16820],maxPoints:2},{fieldName:"vengeance",location:{rowIdx:3,colIdx:1},spellIds:[16909,16910,16911,16912,16913],maxPoints:5},{fieldName:"celestialFocus",location:{rowIdx:3,colIdx:2},spellIds:[16850,16923,16924],maxPoints:3},{fieldName:"lunarGuidance",location:{rowIdx:4,colIdx:0},spellIds:[33589,33590,33591],maxPoints:3},{fieldName:"insectSwarm",location:{rowIdx:4,colIdx:1},spellIds:[5570],maxPoints:1},{fieldName:"improvedInsectSwarm",location:{rowIdx:4,colIdx:2},spellIds:[57849,57850,57851],maxPoints:3,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"dreamstate",location:{rowIdx:5,colIdx:0},spellIds:[33597,33599,33956],maxPoints:3},{fieldName:"moonfury",location:{rowIdx:5,colIdx:1},spellIds:[16896,16897,16899],maxPoints:3},{fieldName:"balanceOfPower",location:{rowIdx:5,colIdx:2},spellIds:[33592,33596],maxPoints:2},{fieldName:"moonkinForm",location:{rowIdx:6,colIdx:1},spellIds:[24858],maxPoints:1},{fieldName:"improvedMoonkinForm",location:{rowIdx:6,colIdx:2},spellIds:[48384,48395,48396],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"improvedFaerieFire",location:{rowIdx:6,colIdx:3},spellIds:[33600,33601,33602],maxPoints:3},{fieldName:"owlkinFrenzy",location:{rowIdx:7,colIdx:0},spellIds:[48389,48392,48393],maxPoints:3},{fieldName:"wrathOfCenarius",location:{rowIdx:7,colIdx:2},spellIds:[33603,33604,33605,33606,33607],maxPoints:5},{fieldName:"eclipse",location:{rowIdx:8,colIdx:0},spellIds:[48516,48521,48525],maxPoints:3},{fieldName:"typhoon",location:{rowIdx:8,colIdx:1},spellIds:[50516],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"forceOfNature",location:{rowIdx:8,colIdx:2},spellIds:[33831],maxPoints:1},{fieldName:"galeWinds",location:{rowIdx:8,colIdx:3},spellIds:[48488,48514],maxPoints:2},{fieldName:"earthAndMoon",location:{rowIdx:9,colIdx:1},spellIds:[48506,48510,48511],maxPoints:3},{fieldName:"starfall",location:{rowIdx:10,colIdx:1},spellIds:[48505],maxPoints:1}]},{name:"Feral Combat",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/281.jpg",talents:[{fieldName:"ferocity",location:{rowIdx:0,colIdx:1},spellIds:[16934,16935,16936,16937,16938],maxPoints:5},{fieldName:"feralAggression",location:{rowIdx:0,colIdx:2},spellIds:[16858,16859,16860,16861,16862],maxPoints:5},{fieldName:"feralInstinct",location:{rowIdx:1,colIdx:0},spellIds:[16947,16948,16949],maxPoints:3},{fieldName:"savageFury",location:{rowIdx:1,colIdx:1},spellIds:[16998,16999],maxPoints:2},{fieldName:"thickHide",location:{rowIdx:1,colIdx:2},spellIds:[16929,16930,16931],maxPoints:3},{fieldName:"feralSwiftness",location:{rowIdx:2,colIdx:0},spellIds:[17002,24866],maxPoints:2},{fieldName:"survivalInstincts",location:{rowIdx:2,colIdx:1},spellIds:[61336],maxPoints:1},{fieldName:"sharpenedClaws",location:{rowIdx:2,colIdx:2},spellIds:[16942,16943,16944],maxPoints:3},{fieldName:"shreddingAttacks",location:{rowIdx:3,colIdx:0},spellIds:[16966,16968],maxPoints:2},{fieldName:"predatoryStrikes",location:{rowIdx:3,colIdx:1},spellIds:[16972,16974,16975],maxPoints:3},{fieldName:"primalFury",location:{rowIdx:3,colIdx:2},spellIds:[37116,37117],maxPoints:2,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"primalPrecision",location:{rowIdx:3,colIdx:3},spellIds:[48409,48410],maxPoints:2},{fieldName:"brutalImpact",location:{rowIdx:4,colIdx:0},spellIds:[16940,16941],maxPoints:2},{fieldName:"feralCharge",location:{rowIdx:4,colIdx:2},spellIds:[49377],maxPoints:1},{fieldName:"nurturingInstinct",location:{rowIdx:4,colIdx:3},spellIds:[33872,33873],maxPoints:2},{fieldName:"naturalReaction",location:{rowIdx:5,colIdx:0},spellIds:[57878,57880,57881],maxPoints:3},{fieldName:"heartOfTheWild",location:{rowIdx:5,colIdx:1},spellIds:[17003,17004,17005,17006,24894],maxPoints:5,prereqLocation:{rowIdx:3,colIdx:1}},{fieldName:"survivalOfTheFittest",location:{rowIdx:5,colIdx:2},spellIds:[33853,33855,33856],maxPoints:3},{fieldName:"leaderOfThePack",location:{rowIdx:6,colIdx:1},spellIds:[17007],maxPoints:1},{fieldName:"improvedLeaderOfThePack",location:{rowIdx:6,colIdx:2},spellIds:[34297,34300],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"primalTenacity",location:{rowIdx:6,colIdx:3},spellIds:[33851,33852,33957],maxPoints:3},{fieldName:"protectorOfThePack",location:{rowIdx:7,colIdx:0},spellIds:[57873,57876,57877],maxPoints:3},{fieldName:"predatoryInstincts",location:{rowIdx:7,colIdx:2},spellIds:[33859,33866,33867],maxPoints:3},{fieldName:"infectedWounds",location:{rowIdx:7,colIdx:3},spellIds:[48483,48484,48485],maxPoints:3},{fieldName:"kingOfTheJungle",location:{rowIdx:8,colIdx:0},spellIds:[48492,48494,48495],maxPoints:3},{fieldName:"mangle",location:{rowIdx:8,colIdx:1},spellIds:[33917],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"improvedMangle",location:{rowIdx:8,colIdx:2},spellIds:[48532,48489,48491],maxPoints:3,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"rendAndTear",location:{rowIdx:9,colIdx:1},spellIds:[48432,48433,48434,51268,51269],maxPoints:5},{fieldName:"primalGore",location:{rowIdx:9,colIdx:2},spellIds:[63503],maxPoints:1,prereqLocation:{rowIdx:9,colIdx:1}},{fieldName:"berserk",location:{rowIdx:10,colIdx:1},spellIds:[50334],maxPoints:1}]},{name:"Restoration",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/282.jpg",talents:[{fieldName:"improvedMarkOfTheWild",location:{rowIdx:0,colIdx:0},spellIds:[17050,17051],maxPoints:2},{fieldName:"naturesFocus",location:{rowIdx:0,colIdx:1},spellIds:[17063,17065,17066],maxPoints:3},{fieldName:"furor",location:{rowIdx:0,colIdx:2},spellIds:[17056,17058,17059,17060,17061],maxPoints:5},{fieldName:"naturalist",location:{rowIdx:1,colIdx:0},spellIds:[17069,17070,17071,17072,17073],maxPoints:5},{fieldName:"subtlety",location:{rowIdx:1,colIdx:1},spellIds:[17118,17119,17120],maxPoints:3},{fieldName:"naturalShapeshifter",location:{rowIdx:1,colIdx:2},spellIds:[16833,16834,16835],maxPoints:3},{fieldName:"intensity",location:{rowIdx:2,colIdx:0},spellIds:[17106,17107,17108],maxPoints:3},{fieldName:"omenOfClarity",location:{rowIdx:2,colIdx:1},spellIds:[16864],maxPoints:1},{fieldName:"masterShapeshifter",location:{rowIdx:2,colIdx:2},spellIds:[48411,48412],maxPoints:2,prereqLocation:{rowIdx:1,colIdx:2}},{fieldName:"tranquilSpirit",location:{rowIdx:3,colIdx:1},spellIds:[24968,24969,24970,24971,24972],maxPoints:5},{fieldName:"improvedRejuvenation",location:{rowIdx:3,colIdx:2},spellIds:[17111,17112,17113],maxPoints:3},{fieldName:"naturesSwiftness",location:{rowIdx:4,colIdx:0},spellIds:[17116],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:0}},{fieldName:"giftOfNature",location:{rowIdx:4,colIdx:1},spellIds:[17104,24943,24944,24945,24946],maxPoints:5},{fieldName:"improvedTranquility",location:{rowIdx:4,colIdx:3},spellIds:[17123,17124],maxPoints:2},{fieldName:"empoweredTouch",location:{rowIdx:5,colIdx:0},spellIds:[33879,33880],maxPoints:2},{fieldName:"naturesBounty",location:{rowIdx:5,colIdx:2},spellIds:[17074,17075,17076,17077,17078],maxPoints:5,prereqLocation:{rowIdx:3,colIdx:2}},{fieldName:"livingSpirit",location:{rowIdx:6,colIdx:0},spellIds:[34151,34152,34153],maxPoints:3},{fieldName:"swiftmend",location:{rowIdx:6,colIdx:1},spellIds:[18562],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"naturalPerfection",location:{rowIdx:6,colIdx:2},spellIds:[33881,33882,33883],maxPoints:3},{fieldName:"empoweredRejuvenation",location:{rowIdx:7,colIdx:1},spellIds:[33886,33887,33888,33889,33890],maxPoints:5},{fieldName:"livingSeed",location:{rowIdx:7,colIdx:2},spellIds:[48496,48499,48500],maxPoints:3},{fieldName:"revitalize",location:{rowIdx:8,colIdx:0},spellIds:[48539,48544,48545],maxPoints:3},{fieldName:"treeOfLife",location:{rowIdx:8,colIdx:1},spellIds:[65139],maxPoints:1,prereqLocation:{rowIdx:7,colIdx:1}},{fieldName:"improvedTreeOfLife",location:{rowIdx:8,colIdx:2},spellIds:[48535,48536,48537],maxPoints:3,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"improvedBarkskin",location:{rowIdx:9,colIdx:0},spellIds:[63410,63411],maxPoints:2},{fieldName:"giftOfTheEarthmother",location:{rowIdx:9,colIdx:2},spellIds:[51179,51180,51181,51182,51183],maxPoints:5},{fieldName:"wildGrowth",location:{rowIdx:10,colIdx:1},spellIds:[48438],maxPoints:1,prereqLocation:{rowIdx:8,colIdx:1}}]}]),Qr={majorGlyphs:{[wn.GlyphOfBarkskin]:{name:"Glyph of Barkskin",description:"Reduces the chance you'll be critically hit by 25% while Barkskin is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_stoneclawtotem.jpg"},[wn.GlyphOfBerserk]:{name:"Glyph of Berserk",description:"Increases the duration of Berserk by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_berserk.jpg"},[wn.GlyphOfClaw]:{name:"Glyph of Claw",description:"Reduces the energy cost of your Claw ability by 5.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_rake.jpg"},[wn.GlyphOfEntanglingRoots]:{name:"Glyph of Entangling Roots",description:"Increases the damage your Entangling Roots victims can take before the Entangling Roots automatically breaks by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_stranglevines.jpg"},[wn.GlyphOfFocus]:{name:"Glyph of Focus",description:"Increases the damage done by Starfall by 10%, but decreases its radius by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_starfall.jpg"},[wn.GlyphOfFrenziedRegeneration]:{name:"Glyph of Frenzied Regeneration",description:"While Frenzied Regeneration is active, healing effects on you are 20% more powerful.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_bullrush.jpg"},[wn.GlyphOfGrowling]:{name:"Glyph of Growling",description:"Increases the chance for your Growl ability to work successfully by 8%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_physical_taunt.jpg"},[wn.GlyphOfHealingTouch]:{name:"Glyph of Healing Touch",description:"Decreases the cast time of Healing Touch by 1.5 sec, the mana cost by 25%, and the amount healed by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingtouch.jpg"},[wn.GlyphOfHurricane]:{name:"Glyph of Hurricane",description:"Your Hurricane ability now also slows the movement speed of its victims by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_cyclone.jpg"},[wn.GlyphOfInnervate]:{name:"Glyph of Innervate",description:'Innervate now grants the caster 45% of <dfn title="her">his</dfn> base mana pool over 10 sec in addition to the normal effects of Innervate.',iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg"},[wn.GlyphOfInsectSwarm]:{name:"Glyph of Insect Swarm",description:"Increases the damage of your Insect Swarm ability by 30%, but it no longer affects your victim's chance to hit.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_insectswarm.jpg"},[wn.GlyphOfLifebloom]:{name:"Glyph of Lifebloom",description:"Increases the duration of Lifebloom by 1 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_misc_herb_felblossom.jpg"},[wn.GlyphOfMangle]:{name:"Glyph of Mangle",description:"Increases the damage done by Mangle by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_mangle2.jpg"},[wn.GlyphOfMaul]:{name:"Glyph of Maul",description:"Your Maul ability now hits 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_maul.jpg"},[wn.GlyphOfMonsoon]:{name:"Glyph of Monsoon",description:"Reduces the cooldown of your Typhoon spell by 3 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_typhoon.jpg"},[wn.GlyphOfMoonfire]:{name:"Glyph of Moonfire",description:"Increases the periodic damage of your Moonfire ability by 75%, but initial damage is decreased by 90%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_starfall.jpg"},[wn.GlyphOfNourish]:{name:"Glyph of Nourish",description:"Your Nourish heals an additional 6% for each of your heal over time effects present on the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_nourish.jpg"},[wn.GlyphOfRake]:{name:"Glyph of Rake",description:"Your Rake ability prevents targets from fleeing.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_disembowel.jpg"},[wn.GlyphOfRapidRejuvenation]:{name:"Glyph of Rapid Rejuvenation",description:"Your haste now reduces the time between the periodic healing ticks of your Rejuvenation spell.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_rejuvenation.jpg"},[wn.GlyphOfRebirth]:{name:"Glyph of Rebirth",description:"Players resurrected by Rebirth are returned to life with 100% health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg"},[wn.GlyphOfRegrowth]:{name:"Glyph of Regrowth",description:"Increases the healing of your Regrowth spell by 20% if your Regrowth effect is still active on the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_resistnature.jpg"},[wn.GlyphOfRejuvenation]:{name:"Glyph of Rejuvenation",description:"While your Rejuvenation targets are below 50% health, you will heal them for an additional 50% health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_rejuvenation.jpg"},[wn.GlyphOfRip]:{name:"Glyph of Rip",description:"Increases the duration of your Rip ability by 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_ghoulfrenzy.jpg"},[wn.GlyphOfSavageRoar]:{name:"Glyph of Savage Roar",description:"Your Savage Roar ability grants an additional 3% bonus damage done.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_skinteeth.jpg"},[wn.GlyphOfShred]:{name:"Glyph of Shred",description:"Each time you Shred, the duration of your Rip on the target is extended 2 sec, up to a maximum of 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_vampiricaura.jpg"},[wn.GlyphOfStarfall]:{name:"Glyph of Starfall",description:"Reduces the cooldown of Starfall by 30 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_starfall.jpg"},[wn.GlyphOfStarfire]:{name:"Glyph of Starfire",description:"Your Starfire ability increases the duration of your Moonfire effect on the target by 3 sec, up to a maximum of 9 additional seconds.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_arcane_starfire.jpg"},[wn.GlyphOfSurvivalInstincts]:{name:"Glyph of Survival Instincts",description:"Your Survival Instincts ability grants an additional 15% of your maximum health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_tigersroar.jpg"},[wn.GlyphOfSwiftmend]:{name:"Glyph of Swiftmend",description:"Your Swiftmend ability no longer consumes a Rejuvenation or Regrowth effect from the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_relics_idolofrejuvenation.jpg"},[wn.GlyphOfWildGrowth]:{name:"Glyph of Wild Growth",description:"Wild Growth can affect 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_flourish.jpg"},[wn.GlyphOfWrath]:{name:"Glyph of Wrath",description:"Reduces the pushback suffered from damaging attacks while casting your Wrath spell by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_abolishmagic.jpg"}},minorGlyphs:{[yn.GlyphOfAquaticForm]:{name:"Glyph of Aquatic Form",description:"Increases your swim speed by 50% while in Aquatic Form.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_aquaticform.jpg"},[yn.GlyphOfChallengingRoar]:{name:"Glyph of Challenging Roar",description:"Reduces the cooldown of your Challenging Roar ability by 30 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_challangingroar.jpg"},[yn.GlyphOfDash]:{name:"Glyph of Dash",description:"Reduces the cooldown of your Dash ability by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_dash.jpg"},[yn.GlyphOfTheWild]:{name:"Glyph of the Wild",description:"Mana cost of your Mark of the Wild and Gift of the Wild spells reduced by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_regeneration.jpg"},[yn.GlyphOfThorns]:{name:"Glyph of Thorns",description:"Increases the duration of your Thorns ability by 50 min when cast on yourself.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_thorns.jpg"},[yn.GlyphOfTyphoon]:{name:"Glyph of Typhoon",description:"Reduces the cost of your Typhoon spell by 8% and increases its radius by 10 yards, but it no longer knocks enemies back.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_typhoon.jpg"},[yn.GlyphOfUnburdenedRebirth]:{name:"Glyph of Unburdened Rebirth",description:"Your Rebirth spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg"}}},Xr=Kr([{name:"Beast Mastery",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/361.jpg",talents:[{fieldName:"improvedAspectOfTheHawk",location:{rowIdx:0,colIdx:1},spellIds:[19552,19553,19554,19555,19556],maxPoints:5},{fieldName:"enduranceTraining",location:{rowIdx:0,colIdx:2},spellIds:[19583,19584,19585,19586,19587],maxPoints:5},{fieldName:"focusedFire",location:{rowIdx:1,colIdx:0},spellIds:[35029,35030],maxPoints:2},{fieldName:"improvedAspectOfTheMonkey",location:{rowIdx:1,colIdx:1},spellIds:[19549,19550,19551],maxPoints:3},{fieldName:"thickHide",location:{rowIdx:1,colIdx:2},spellIds:[19609,19610,19612],maxPoints:3},{fieldName:"improvedRevivePet",location:{rowIdx:1,colIdx:3},spellIds:[24443,19575],maxPoints:2},{fieldName:"pathfinding",location:{rowIdx:2,colIdx:0},spellIds:[19559,19560],maxPoints:2},{fieldName:"aspectMastery",location:{rowIdx:2,colIdx:1},spellIds:[53265],maxPoints:1},{fieldName:"unleashedFury",location:{rowIdx:2,colIdx:2},spellIds:[19616,19617,19618,19619,19620],maxPoints:5},{fieldName:"improvedMendPet",location:{rowIdx:3,colIdx:1},spellIds:[19572,19573],maxPoints:2},{fieldName:"ferocity",location:{rowIdx:3,colIdx:2},spellIds:[19598,19599,19600,19601,19602],maxPoints:5},{fieldName:"spiritBond",location:{rowIdx:4,colIdx:0},spellIds:[19578,20895],maxPoints:2},{fieldName:"intimidation",location:{rowIdx:4,colIdx:1},spellIds:[19577],maxPoints:1},{fieldName:"bestialDiscipline",location:{rowIdx:4,colIdx:3},spellIds:[19590,19592],maxPoints:2},{fieldName:"animalHandler",location:{rowIdx:5,colIdx:0},spellIds:[34453,34454],maxPoints:2},{fieldName:"frenzy",location:{rowIdx:5,colIdx:2},spellIds:[19621,19622,19623,19624,19625],maxPoints:5,prereqLocation:{rowIdx:3,colIdx:2}},{fieldName:"ferociousInspiration",location:{rowIdx:6,colIdx:0},spellIds:[34455,34459,34460],maxPoints:3},{fieldName:"bestialWrath",location:{rowIdx:6,colIdx:1},spellIds:[19574],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"catlikeReflexes",location:{rowIdx:6,colIdx:2},spellIds:[34462,34464,34465],maxPoints:3},{fieldName:"invigoration",location:{rowIdx:7,colIdx:0},spellIds:[53252,53253],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:0}},{fieldName:"serpentsSwiftness",location:{rowIdx:7,colIdx:2},spellIds:[34466,34467,34468,34469,34470],maxPoints:5},{fieldName:"longevity",location:{rowIdx:8,colIdx:0},spellIds:[53262,53263,53264],maxPoints:3},{fieldName:"theBeastWithin",location:{rowIdx:8,colIdx:1},spellIds:[34692],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"cobraStrikes",location:{rowIdx:8,colIdx:2},spellIds:[53256,53259,53260],maxPoints:3,prereqLocation:{rowIdx:7,colIdx:2}},{fieldName:"kindredSpirits",location:{rowIdx:9,colIdx:1},spellIds:[56314,56315,56316,56317,56318],maxPoints:5},{fieldName:"beastMastery",location:{rowIdx:10,colIdx:1},spellIds:[53270],maxPoints:1}]},{name:"Marksmanship",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/363.jpg",talents:[{fieldName:"improvedConcussiveShot",location:{rowIdx:0,colIdx:0},spellIds:[19407,19412],maxPoints:2},{fieldName:"focusedAim",location:{rowIdx:0,colIdx:1},spellIds:[53620,53621,53622],maxPoints:3},{fieldName:"lethalShots",location:{rowIdx:0,colIdx:2},spellIds:[19426,19427,19429,19430,19431],maxPoints:5},{fieldName:"carefulAim",location:{rowIdx:1,colIdx:0},spellIds:[34482,34483,34484],maxPoints:3},{fieldName:"improvedHuntersMark",location:{rowIdx:1,colIdx:1},spellIds:[19421,19422,19423],maxPoints:3},{fieldName:"mortalShots",location:{rowIdx:1,colIdx:2},spellIds:[19485,19487,19488,19489,19490],maxPoints:5},{fieldName:"goForTheThroat",location:{rowIdx:2,colIdx:0},spellIds:[34950,34954],maxPoints:2},{fieldName:"improvedArcaneShot",location:{rowIdx:2,colIdx:1},spellIds:[19454,19455,19456],maxPoints:3},{fieldName:"aimedShot",location:{rowIdx:2,colIdx:2},spellIds:[19434],maxPoints:1,prereqLocation:{rowIdx:1,colIdx:2}},{fieldName:"rapidKilling",location:{rowIdx:2,colIdx:3},spellIds:[34948,34949],maxPoints:2},{fieldName:"improvedStings",location:{rowIdx:3,colIdx:1},spellIds:[19464,19465,19466],maxPoints:3},{fieldName:"efficiency",location:{rowIdx:3,colIdx:2},spellIds:[19416,19417,19418,19419,19420],maxPoints:5},{fieldName:"concussiveBarrage",location:{rowIdx:4,colIdx:0},spellIds:[35100,35102],maxPoints:2},{fieldName:"readiness",location:{rowIdx:4,colIdx:1},spellIds:[23989],maxPoints:1},{fieldName:"barrage",location:{rowIdx:4,colIdx:2},spellIds:[19461,19462,24691],maxPoints:3},{fieldName:"combatExperience",location:{rowIdx:5,colIdx:0},spellIds:[34475,34476],maxPoints:2},{fieldName:"rangedWeaponSpecialization",location:{rowIdx:5,colIdx:3},spellIds:[19507,19508,19509],maxPoints:3},{fieldName:"piercingShots",location:{rowIdx:6,colIdx:0},spellIds:[53234,53237,53238],maxPoints:3},{fieldName:"trueshotAura",location:{rowIdx:6,colIdx:1},spellIds:[19506],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"improvedBarrage",location:{rowIdx:6,colIdx:2},spellIds:[35104,35110,35111],maxPoints:3,prereqLocation:{rowIdx:4,colIdx:2}},{fieldName:"masterMarksman",location:{rowIdx:7,colIdx:1},spellIds:[34485,34486,34487,34488,34489],maxPoints:5},{fieldName:"rapidRecuperation",location:{rowIdx:7,colIdx:2},spellIds:[53228,53232],maxPoints:2},{fieldName:"wildQuiver",location:{rowIdx:8,colIdx:0},spellIds:[53215,53216,53217],maxPoints:3},{fieldName:"silencingShot",location:{rowIdx:8,colIdx:1},spellIds:[34490],maxPoints:1,prereqLocation:{rowIdx:7,colIdx:1}},{fieldName:"improvedSteadyShot",location:{rowIdx:8,colIdx:2},spellIds:[53221,53222,53224],maxPoints:3},{fieldName:"markedForDeath",location:{rowIdx:9,colIdx:1},spellIds:[53241,53243,53244,53245,53246],maxPoints:5},{fieldName:"chimeraShot",location:{rowIdx:10,colIdx:1},spellIds:[53209],maxPoints:1}]},{name:"Survival",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/362.jpg",talents:[{fieldName:"improvedTracking",location:{rowIdx:0,colIdx:0},spellIds:[52783,52785,52786,52787,52788],maxPoints:5},{fieldName:"hawkEye",location:{rowIdx:0,colIdx:1},spellIds:[19498,19499,19500],maxPoints:3},{fieldName:"savageStrikes",location:{rowIdx:0,colIdx:2},spellIds:[19159,19160],maxPoints:2},{fieldName:"surefooted",location:{rowIdx:1,colIdx:0},spellIds:[19290,19294,24283],maxPoints:3},{fieldName:"entrapment",location:{rowIdx:1,colIdx:1},spellIds:[19184,19387,19388],maxPoints:3},{fieldName:"trapMastery",location:{rowIdx:1,colIdx:2},spellIds:[19376,63457,63458],maxPoints:3},{fieldName:"survivalInstincts",location:{rowIdx:1,colIdx:3},spellIds:[34494,34496],maxPoints:2},{fieldName:"survivalist",location:{rowIdx:2,colIdx:0},spellIds:[19255,19256,19257,19258,19259],maxPoints:5},{fieldName:"scatterShot",location:{rowIdx:2,colIdx:1},spellIds:[19503],maxPoints:1},{fieldName:"deflection",location:{rowIdx:2,colIdx:2},spellIds:[19295,19297,19298],maxPoints:3},{fieldName:"survivalTactics",location:{rowIdx:2,colIdx:3},spellIds:[19286,19287],maxPoints:2},{fieldName:"tNT",location:{rowIdx:3,colIdx:1},spellIds:[56333,56336,56337],maxPoints:3},{fieldName:"lockAndLoad",location:{rowIdx:3,colIdx:3},spellIds:[56342,56343,56344],maxPoints:3},{fieldName:"hunterVsWild",location:{rowIdx:4,colIdx:0},spellIds:[56339,56340,56341],maxPoints:3,prereqLocation:{rowIdx:2,colIdx:0}},{fieldName:"killerInstinct",location:{rowIdx:4,colIdx:1},spellIds:[19370,19371,19373],maxPoints:3},{fieldName:"counterattack",location:{rowIdx:4,colIdx:2},spellIds:[19306],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"lightningReflexes",location:{rowIdx:5,colIdx:0},spellIds:[19168,19180,19181,24296,24297],maxPoints:5},{fieldName:"resourcefulness",location:{rowIdx:5,colIdx:2},spellIds:[34491,34492,34493],maxPoints:3},{fieldName:"exposeWeakness",location:{rowIdx:6,colIdx:0},spellIds:[34500,34502,34503],maxPoints:3,prereqLocation:{rowIdx:5,colIdx:0}},{fieldName:"wyvernSting",location:{rowIdx:6,colIdx:1},spellIds:[19386],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"thrillOfTheHunt",location:{rowIdx:6,colIdx:2},spellIds:[34497,34498,34499],maxPoints:3},{fieldName:"masterTactician",location:{rowIdx:7,colIdx:0},spellIds:[34506,34507,34508,34838,34839],maxPoints:5},{fieldName:"noxiousStings",location:{rowIdx:7,colIdx:1},spellIds:[53295,53296,53297],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"pointOfNoEscape",location:{rowIdx:8,colIdx:0},spellIds:[53298,53299],maxPoints:2},{fieldName:"blackArrow",location:{rowIdx:8,colIdx:1},spellIds:[3674],maxPoints:1},{fieldName:"sniperTraining",location:{rowIdx:8,colIdx:3},spellIds:[53302,53303,53304],maxPoints:3},{fieldName:"huntingParty",location:{rowIdx:9,colIdx:2},spellIds:[53290,53291,53292],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:2}},{fieldName:"explosiveShot",location:{rowIdx:10,colIdx:1},spellIds:[53301],maxPoints:1,prereqLocation:{rowIdx:8,colIdx:1}}]}]),Zr={majorGlyphs:{[rn.GlyphOfAimedShot]:{name:"Glyph of Aimed Shot",description:"Reduces the cooldown of your Aimed Shot ability by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_spear_07.jpg"},[rn.GlyphOfArcaneShot]:{name:"Glyph of Arcane Shot",description:"Your Arcane Shot refunds 20% of its mana cost if the target has one of your Stings active on it.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_impalingbolt.jpg"},[rn.GlyphOfAspectOfTheViper]:{name:"Glyph of Aspect of the Viper",description:"Increases the amount of mana gained from attacks while Aspect of the Viper is active by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_aspectoftheviper.jpg"},[rn.GlyphOfBestialWrath]:{name:"Glyph of Bestial Wrath",description:"Decreases the cooldown of Bestial Wrath by 20 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_ferociousbite.jpg"},[rn.GlyphOfChimeraShot]:{name:"Glyph of Chimera Shot",description:"Reduces the cooldown of Chimera Shot by 1 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_chimerashot2.jpg"},[rn.GlyphOfDeterrence]:{name:"Glyph of Deterrence",description:"Decreases the cooldown of Deterrence by 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_whirlwind.jpg"},[rn.GlyphOfDisengage]:{name:"Glyph of Disengage",description:"Decreases the cooldown of Disengage by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feint.jpg"},[rn.GlyphOfExplosiveShot]:{name:"Glyph of Explosive Shot",description:"Increases the critical strike chance of Explosive Shot by 4%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_explosiveshot.jpg"},[rn.GlyphOfExplosiveTrap]:{name:"Glyph of Explosive Trap",description:"The periodic damage from your Explosive Trap can now be critical strikes.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_selfdestruct.jpg"},[rn.GlyphOfFreezingTrap]:{name:"Glyph of Freezing Trap",description:"When your Freezing Trap breaks, the victim's movement speed is reduced by 30% for 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_chainsofice.jpg"},[rn.GlyphOfFrostTrap]:{name:"Glyph of Frost Trap",description:"Increases the radius of the effect from your Frost Trap by 2 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_freezingbreath.jpg"},[rn.GlyphOfHuntersMark]:{name:"Glyph of Hunter's Mark",description:"Increases the attack power bonus of your Hunter's Mark by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_snipershot.jpg"},[rn.GlyphOfImmolationTrap]:{name:"Glyph of Immolation Trap",description:"Decreases the duration of the effect from your Immolation Trap by 6 sec., but damage while active is increased by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_flameshock.jpg"},[rn.GlyphOfKillShot]:{name:"Glyph of Kill Shot",description:"Reduces the cooldown of Kill Shot by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_assassinate2.jpg"},[rn.GlyphOfMending]:{name:"Glyph of Mending",description:"Increases the healing done by your Mend Pet ability by 40%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_mendpet.jpg"},[rn.GlyphOfMultiShot]:{name:"Glyph of Multi-Shot",description:"Decreases the cooldown of Multi-Shot by 1 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_upgrademoonglaive.jpg"},[rn.GlyphOfRapidFire]:{name:"Glyph of Rapid Fire",description:"Increases the haste from Rapid Fire by an additional 8%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_runningshot.jpg"},[rn.GlyphOfRaptorStrike]:{name:"Glyph of Raptor Strike",description:"Reduces damage taken by 20% for 3 sec after using Raptor Strike.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_meleedamage.jpg"},[rn.GlyphOfScatterShot]:{name:"Glyph of Scatter Shot",description:"Increases the range of Scatter Shot by 3 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_golemstormbolt.jpg"},[rn.GlyphOfSerpentSting]:{name:"Glyph of Serpent Sting",description:"Increases the duration of your Serpent Sting by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_quickshot.jpg"},[rn.GlyphOfSnakeTrap]:{name:"Glyph of Snake Trap",description:"Snakes from your Snake Trap take 90% reduced damage from area of effect spells.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_snaketrap.jpg"},[rn.GlyphOfSteadyShot]:{name:"Glyph of Steady Shot",description:"Increases the damage dealt by Steady Shot by 10% when your target is afflicted with Serpent Sting.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_steadyshot.jpg"},[rn.GlyphOfTheBeast]:{name:"Glyph of the Beast",description:"Increases the attack power bonus of Aspect of the Beast for you and your pet by an additional 2%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mount_pinktiger.jpg"},[rn.GlyphOfTheHawk]:{name:"Glyph of the Hawk",description:"Increases the haste bonus of the Improved Aspect of the Hawk effect by an additional 6%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_ravenform.jpg"},[rn.GlyphOfTrueshotAura]:{name:"Glyph of Trueshot Aura",description:"While your Trueshot Aura is active, you have 10% increased critical strike chance on your Aimed Shot.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_trueshot.jpg"},[rn.GlyphOfVolley]:{name:"Glyph of Volley",description:"Decreases the mana cost of Volley by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_marksmanship.jpg"},[rn.GlyphOfWyvernSting]:{name:"Glyph of Wyvern Sting",description:"Decreases the cooldown of your Wyvern Sting by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_spear_02.jpg"}},minorGlyphs:{[sn.GlyphOfFeignDeath]:{name:"Glyph of Feign Death",description:"Reduces the cooldown of your Feign Death spell by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feigndeath.jpg"},[sn.GlyphOfMendPet]:{name:"Glyph of Mend Pet",description:"Your Mend Pet spell increases your pet's happiness slightly.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_mendpet.jpg"},[sn.GlyphOfPossessedStrength]:{name:"Glyph of Possessed Strength",description:"Increases the damage your pet inflicts while using Eyes of the Beast by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_eyeoftheowl.jpg"},[sn.GlyphOfRevivePet]:{name:"Glyph of Revive Pet",description:"Reduces the pushback suffered from damaging attacks while casting Revive Pet by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_hunter_beastsoothe.jpg"},[sn.GlyphOfScareBeast]:{name:"Glyph of Scare Beast",description:"Reduces the pushback suffered from damaging attacks while casting Scare Beast by 75%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_druid_cower.jpg"},[sn.GlyphOfThePack]:{name:"Glyph of the Pack",description:"Increases the range of your Aspect of the Pack ability by 15 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mount_jungletiger.jpg"}}},es=Kr([{name:"Arcane",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/81.jpg",talents:[{fieldName:"arcaneSubtlety",location:{rowIdx:0,colIdx:0},spellIds:[11210,12592],maxPoints:2},{fieldName:"arcaneFocus",location:{rowIdx:0,colIdx:1},spellIds:[11222,12839,12840],maxPoints:3},{fieldName:"arcaneStability",location:{rowIdx:0,colIdx:2},spellIds:[11237,12463,12464,16769,16770],maxPoints:5},{fieldName:"arcaneFortitude",location:{rowIdx:1,colIdx:0},spellIds:[28574,54658,54659],maxPoints:3},{fieldName:"magicAbsorption",location:{rowIdx:1,colIdx:1},spellIds:[29441,29444],maxPoints:2},{fieldName:"arcaneConcentration",location:{rowIdx:1,colIdx:2},spellIds:[11213,12574,12575,12576,12577],maxPoints:5},{fieldName:"magicAttunement",location:{rowIdx:2,colIdx:0},spellIds:[11247,12606],maxPoints:2},{fieldName:"spellImpact",location:{rowIdx:2,colIdx:1},spellIds:[11242,12467,12469],maxPoints:3},{fieldName:"studentOfTheMind",location:{rowIdx:2,colIdx:2},spellIds:[44397,44398,44399],maxPoints:3},{fieldName:"focusMagic",location:{rowIdx:2,colIdx:3},spellIds:[54646],maxPoints:1},{fieldName:"arcaneShielding",location:{rowIdx:3,colIdx:0},spellIds:[11252,12605],maxPoints:2},{fieldName:"improvedCounterspell",location:{rowIdx:3,colIdx:1},spellIds:[11255,12598],maxPoints:2},{fieldName:"arcaneMeditation",location:{rowIdx:3,colIdx:2},spellIds:[18462,18463,18464],maxPoints:3},{fieldName:"tormentTheWeak",location:{rowIdx:3,colIdx:3},spellIds:[29447,55339,55340],maxPoints:3},{fieldName:"improvedBlink",location:{rowIdx:4,colIdx:0},spellIds:[31569,31570],maxPoints:2},{fieldName:"presenceOfMind",location:{rowIdx:4,colIdx:1},spellIds:[12043],maxPoints:1},{fieldName:"arcaneMind",location:{rowIdx:4,colIdx:3},spellIds:[11232,12500,12501,12502,12503],maxPoints:5},{fieldName:"prismaticCloak",location:{rowIdx:5,colIdx:0},spellIds:[31574,31575,54354],maxPoints:3},{fieldName:"arcaneInstability",location:{rowIdx:5,colIdx:1},spellIds:[15058,15059,15060],maxPoints:3,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"arcanePotency",location:{rowIdx:5,colIdx:2},spellIds:[31571,31572],maxPoints:2},{fieldName:"arcaneEmpowerment",location:{rowIdx:6,colIdx:0},spellIds:[31579,31582,31583],maxPoints:3},{fieldName:"arcanePower",location:{rowIdx:6,colIdx:1},spellIds:[12042],maxPoints:1,prereqLocation:{rowIdx:5,colIdx:1}},{fieldName:"incantersAbsorption",location:{rowIdx:6,colIdx:2},spellIds:[44394,44395,44396],maxPoints:3},{fieldName:"arcaneFlows",location:{rowIdx:7,colIdx:1},spellIds:[44378,44379],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"mindMastery",location:{rowIdx:7,colIdx:2},spellIds:[31584,31585,31586,31587,31588],maxPoints:5},{fieldName:"slow",location:{rowIdx:8,colIdx:1},spellIds:[31589],maxPoints:1},{fieldName:"missileBarrage",location:{rowIdx:8,colIdx:2},spellIds:[44404,54486,54488,54489,54490],maxPoints:5},{fieldName:"netherwindPresence",location:{rowIdx:9,colIdx:1},spellIds:[44400,44402,44403],maxPoints:3},{fieldName:"spellPower",location:{rowIdx:9,colIdx:2},spellIds:[35578,35581],maxPoints:2},{fieldName:"arcaneBarrage",location:{rowIdx:10,colIdx:1},spellIds:[44425],maxPoints:1}]},{name:"Fire",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/41.jpg",talents:[{fieldName:"improvedFireBlast",location:{rowIdx:0,colIdx:0},spellIds:[11078,11080],maxPoints:2},{fieldName:"incineration",location:{rowIdx:0,colIdx:1},spellIds:[18459,18460,54734],maxPoints:3},{fieldName:"improvedFireball",location:{rowIdx:0,colIdx:2},spellIds:[11069,12338,12339,12340,12341],maxPoints:5},{fieldName:"ignite",location:{rowIdx:1,colIdx:0},spellIds:[11119,11120,12846,12847,12848],maxPoints:5},{fieldName:"burningDetermination",location:{rowIdx:1,colIdx:1},spellIds:[54747,54749],maxPoints:2},{fieldName:"worldInFlames",location:{rowIdx:1,colIdx:2},spellIds:[11108,12349,12350],maxPoints:3},{fieldName:"flameThrowing",location:{rowIdx:2,colIdx:0},spellIds:[11100,12353],maxPoints:2},{fieldName:"impact",location:{rowIdx:2,colIdx:1},spellIds:[11103,12357,12358],maxPoints:3},{fieldName:"pyroblast",location:{rowIdx:2,colIdx:2},spellIds:[11366],maxPoints:1},{fieldName:"burningSoul",location:{rowIdx:2,colIdx:3},spellIds:[11083,12351],maxPoints:2},{fieldName:"improvedScorch",location:{rowIdx:3,colIdx:0},spellIds:[11095,12872,12873],maxPoints:3},{fieldName:"moltenShields",location:{rowIdx:3,colIdx:1},spellIds:[11094,13043],maxPoints:2},{fieldName:"masterOfElements",location:{rowIdx:3,colIdx:3},spellIds:[29074,29075,29076],maxPoints:3},{fieldName:"playingWithFire",location:{rowIdx:4,colIdx:0},spellIds:[31638,31639,31640],maxPoints:3},{fieldName:"criticalMass",location:{rowIdx:4,colIdx:1},spellIds:[11115,11367,11368],maxPoints:3},{fieldName:"blastWave",location:{rowIdx:4,colIdx:2},spellIds:[11113],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"blazingSpeed",location:{rowIdx:5,colIdx:0},spellIds:[31641,31642],maxPoints:2},{fieldName:"firePower",location:{rowIdx:5,colIdx:2},spellIds:[11124,12378,12398,12399,12400],maxPoints:5},{fieldName:"pyromaniac",location:{rowIdx:6,colIdx:0},spellIds:[34293,34295,34296],maxPoints:3},{fieldName:"combustion",location:{rowIdx:6,colIdx:1},spellIds:[11129],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"moltenFury",location:{rowIdx:6,colIdx:2},spellIds:[31679,31680],maxPoints:2},{fieldName:"fieryPayback",location:{rowIdx:7,colIdx:0},spellIds:[64353,64357],maxPoints:2},{fieldName:"empoweredFire",location:{rowIdx:7,colIdx:2},spellIds:[31656,31657,31658],maxPoints:3},{fieldName:"firestarter",location:{rowIdx:8,colIdx:0},spellIds:[44442,44443],maxPoints:2,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"dragonsBreath",location:{rowIdx:8,colIdx:1},spellIds:[31661],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"hotStreak",location:{rowIdx:8,colIdx:2},spellIds:[44445,44446,44448],maxPoints:3},{fieldName:"burnout",location:{rowIdx:9,colIdx:1},spellIds:[44449,44469,44470,44471,44472],maxPoints:5},{fieldName:"livingBomb",location:{rowIdx:10,colIdx:1},spellIds:[44457],maxPoints:1}]},{name:"Frost",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/61.jpg",talents:[{fieldName:"frostbite",location:{rowIdx:0,colIdx:0},spellIds:[11071,12496,12497],maxPoints:3},{fieldName:"improvedFrostbolt",location:{rowIdx:0,colIdx:1},spellIds:[11070,12473,16763,16765,16766],maxPoints:5},{fieldName:"iceFloes",location:{rowIdx:0,colIdx:2},spellIds:[31670,31672,55094],maxPoints:3},{fieldName:"iceShards",location:{rowIdx:1,colIdx:0},spellIds:[11207,12672,15047],maxPoints:3},{fieldName:"frostWarding",location:{rowIdx:1,colIdx:1},spellIds:[11189,28332],maxPoints:2},{fieldName:"precision",location:{rowIdx:1,colIdx:2},spellIds:[29438,29439,29440],maxPoints:3},{fieldName:"permafrost",location:{rowIdx:1,colIdx:3},spellIds:[11175,12569,12571],maxPoints:3},{fieldName:"piercingIce",location:{rowIdx:2,colIdx:0},spellIds:[11151,12952,12953],maxPoints:3},{fieldName:"icyVeins",location:{rowIdx:2,colIdx:1},spellIds:[12472],maxPoints:1},{fieldName:"improvedBlizzard",location:{rowIdx:2,colIdx:2},spellIds:[11185,12487,12488],maxPoints:3},{fieldName:"arcticReach",location:{rowIdx:3,colIdx:0},spellIds:[16757,16758],maxPoints:2},{fieldName:"frostChanneling",location:{rowIdx:3,colIdx:1},spellIds:[11160,12518,12519],maxPoints:3},{fieldName:"shatter",location:{rowIdx:3,colIdx:2},spellIds:[11170,12982,12983],maxPoints:3},{fieldName:"coldSnap",location:{rowIdx:4,colIdx:1},spellIds:[11958],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"improvedConeOfCold",location:{rowIdx:4,colIdx:2},spellIds:[11190,12489,12490],maxPoints:3},{fieldName:"frozenCore",location:{rowIdx:4,colIdx:3},spellIds:[31667,31668,31669],maxPoints:3},{fieldName:"coldAsIce",location:{rowIdx:5,colIdx:0},spellIds:[55091,55092],maxPoints:2},{fieldName:"wintersChill",location:{rowIdx:5,colIdx:2},spellIds:[11180,28592,28593],maxPoints:3},{fieldName:"shatteredBarrier",location:{rowIdx:6,colIdx:0},spellIds:[44745,54787],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"iceBarrier",location:{rowIdx:6,colIdx:1},spellIds:[11426],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"arcticWinds",location:{rowIdx:6,colIdx:2},spellIds:[31674,31675,31676,31677,31678],maxPoints:5},{fieldName:"empoweredFrostbolt",location:{rowIdx:7,colIdx:1},spellIds:[31682,31683],maxPoints:2},{fieldName:"fingersOfFrost",location:{rowIdx:7,colIdx:2},spellIds:[44543,44545],maxPoints:2},{fieldName:"brainFreeze",location:{rowIdx:8,colIdx:0},spellIds:[44546,44548,44549],maxPoints:3},{fieldName:"summonWaterElemental",location:{rowIdx:8,colIdx:1},spellIds:[31687],maxPoints:1},{fieldName:"enduringWinter",location:{rowIdx:8,colIdx:2},spellIds:[44557,44560,44561],maxPoints:3,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"chilledToTheBone",location:{rowIdx:9,colIdx:1},spellIds:[44566,44567,44568,44570,44571],maxPoints:5},{fieldName:"deepFreeze",location:{rowIdx:10,colIdx:1},spellIds:[44572],maxPoints:1}]}]),ts={majorGlyphs:{[Ja.GlyphOfArcaneBarrage]:{name:"Glyph of Arcane Barrage",description:"Reduces the mana cost of Arcane Barrage by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_arcanebarrage.jpg"},[Ja.GlyphOfArcaneBlast]:{name:"Glyph of Arcane Blast",description:"Increases the damage from your Arcane Blast buff by 3%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_arcane_blast.jpg"},[Ja.GlyphOfArcaneExplosion]:{name:"Glyph of Arcane Explosion",description:"Reduces mana cost of Arcane Explosion by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_wispsplode.jpg"},[Ja.GlyphOfArcaneMissiles]:{name:"Glyph of Arcane Missiles",description:"Increases the critical strike damage bonus of Arcane Missiles by 25%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_starfall.jpg"},[Ja.GlyphOfArcanePower]:{name:"Glyph of Arcane Power",description:"Increases the duration of Arcane Power by 3 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg"},[Ja.GlyphOfBlink]:{name:"Glyph of Blink",description:"Increases the distance you travel with the Blink spell by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_arcane_blink.jpg"},[Ja.GlyphOfDeepFreeze]:{name:"Glyph of Deep Freeze",description:"Increases the range of Deep Freeze by 10 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_deepfreeze.jpg"},[Ja.GlyphOfEternalWater]:{name:"Glyph of Eternal Water",description:"Your Summon Water Elemental now lasts indefinitely, but your Water Elemental can no longer cast Freeze.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_summonwaterelemental_2.jpg"},[Ja.GlyphOfEvocation]:{name:"Glyph of Evocation",description:"Your Evocation ability also causes you to regain 60% of your health over its duration.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_purge.jpg"},[Ja.GlyphOfFireBlast]:{name:"Glyph of Fire Blast",description:"Increases the critical strike chance of Fire Blast by 50% when the target is stunned or incapacitated.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_fireball.jpg"},[Ja.GlyphOfFireball]:{name:"Glyph of Fireball",description:"Reduces the casting time of your Fireball spell by 0.15 sec, but removes the damage over time effect.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_flamebolt.jpg"},[Ja.GlyphOfFrostNova]:{name:"Glyph of Frost Nova",description:"Your Frost Nova targets can take an additional 20% damage before the Frost Nova effect automatically breaks.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostnova.jpg"},[Ja.GlyphOfFrostbolt]:{name:"Glyph of Frostbolt",description:"Increases the damage dealt by Frostbolt by 5%, but removes the slowing effect.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostbolt02.jpg"},[Ja.GlyphOfFrostfire]:{name:"Glyph of Frostfire",description:"Increases the initial damage dealt by Frostfire Bolt by 2% and its critical strike chance by 2%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_frostfirebolt.jpg"},[Ja.GlyphOfIceArmor]:{name:"Glyph of Ice Armor",description:"Your Ice Armor and Frost Armor spells grant an additional 50% armor and resistance.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostarmor02.jpg"},[Ja.GlyphOfIceBarrier]:{name:"Glyph of Ice Barrier",description:"Increases the amount of damage absorbed by your Ice Barrier by 30%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_ice_lament.jpg"},[Ja.GlyphOfIceBlock]:{name:"Glyph of Ice Block",description:"Your Frost Nova cooldown is now reset every time you use Ice Block.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frost.jpg"},[Ja.GlyphOfIceLance]:{name:"Glyph of Ice Lance",description:"Your Ice Lance now causes 4 times damage against frozen targets higher level than you instead of triple damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostblast.jpg"},[Ja.GlyphOfIcyVeins]:{name:"Glyph of Icy Veins",description:"Your Icy Veins ability also removes all movement slowing and cast time slowing effects.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_coldhearted.jpg"},[Ja.GlyphOfInvisibility]:{name:"Glyph of Invisibility",description:"Increases the duration of the Invisibility effect by 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_invisibility.jpg"},[Ja.GlyphOfLivingBomb]:{name:"Glyph of Living Bomb",description:"The periodic damage from your Living Bomb can now be critical strikes.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_livingbomb.jpg"},[Ja.GlyphOfMageArmor]:{name:"Glyph of Mage Armor",description:"Your Mage Armor spell grants an additional 20% mana regeneration while casting.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magearmor.jpg"},[Ja.GlyphOfManaGem]:{name:"Glyph of Mana Gem",description:"Increases the mana received from using a mana gem by 40%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_misc_gem_stone_01.jpg"},[Ja.GlyphOfMirrorImage]:{name:"Glyph of Mirror Image",description:"Your Mirror Image spell now creates a 4th copy.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg"},[Ja.GlyphOfMoltenArmor]:{name:"Glyph of Molten Armor",description:"Your Molten Armor grants an additional 20% of your spirit as critical strike rating.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_mage_moltenarmor.jpg"},[Ja.GlyphOfPolymorph]:{name:"Glyph of Polymorph",description:"Your Polymorph spell also removes all damage over time effects from the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_polymorph.jpg"},[Ja.GlyphOfRemoveCurse]:{name:"Glyph of Remove Curse",description:"Your Remove Curse spell also makes the target immune to all curses for 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_removecurse.jpg"},[Ja.GlyphOfScorch]:{name:"Glyph of Scorch",description:"Increases the damage of your Scorch spell by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_soulburn.jpg"},[Ja.GlyphOfWaterElemental]:{name:"Glyph of Water Elemental",description:"Reduces the cooldown of your Summon Water Elemental spell by 30 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_summonwaterelemental_2.jpg"}},minorGlyphs:{[Ka.GlyphOfArcaneIntellect]:{name:"Glyph of Arcane Intellect",description:"Reduces the mana cost of your Arcane Intellect and Arcane Brilliance spells by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_magicalsentry.jpg"},[Ka.GlyphOfBlastWave]:{name:"Glyph of Blast Wave",description:"The mana cost of your Blast Wave spell is reduced by 15%, but it no longer knocks enemies back.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism_02.jpg"},[Ka.GlyphOfFireWard]:{name:"Glyph of Fire Ward",description:"You have an additional 5% chance to reflect Fire spells while your Fire Ward is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_firearmor.jpg"},[Ka.GlyphOfFrostArmor]:{name:"Glyph of Frost Armor",description:"Increases the duration of your Frost Armor and Ice Armor spells by 30 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostarmor02.jpg"},[Ka.GlyphOfFrostWard]:{name:"Glyph of Frost Ward",description:"You have an additional 5% chance to reflect Frost spells while your Frost Ward is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostward.jpg"},[Ka.GlyphOfSlowFall]:{name:"Glyph of Slow Fall",description:"Your Slow Fall spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magic_featherfall.jpg"},[Ka.GlyphOfThePenguin]:{name:"Glyph of the Penguin",description:"Your Polymorph: Sheep spell polymorphs the target into a penguin instead.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_misc_penguinpet.jpg"}}},as=Kr([{name:"Holy",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/382.jpg",talents:[{fieldName:"spiritualFocus",location:{rowIdx:0,colIdx:1},spellIds:[20205],maxPoints:5},{fieldName:"sealsOfThePure",location:{rowIdx:0,colIdx:2},spellIds:[20224,20225,20330],maxPoints:5},{fieldName:"healingLight",location:{rowIdx:1,colIdx:0},spellIds:[20237],maxPoints:3},{fieldName:"divineIntellect",location:{rowIdx:1,colIdx:1},spellIds:[20257],maxPoints:5},{fieldName:"unyieldingFaith",location:{rowIdx:1,colIdx:2},spellIds:[9453,25836],maxPoints:2},{fieldName:"auraMastery",location:{rowIdx:2,colIdx:0},spellIds:[31821],maxPoints:1},{fieldName:"illumination",location:{rowIdx:2,colIdx:1},spellIds:[20210,20212],maxPoints:5},{fieldName:"improvedLayOnHands",location:{rowIdx:2,colIdx:2},spellIds:[20234],maxPoints:2},{fieldName:"improvedConcentrationAura",location:{rowIdx:3,colIdx:0},spellIds:[20254],maxPoints:3},{fieldName:"improvedBlessingOfWisdom",location:{rowIdx:3,colIdx:2},spellIds:[20244],maxPoints:2},{fieldName:"blessedHands",location:{rowIdx:3,colIdx:3},spellIds:[53660],maxPoints:2},{fieldName:"pureOfHeart",location:{rowIdx:4,colIdx:0},spellIds:[31822],maxPoints:2},{fieldName:"divineFavor",location:{rowIdx:4,colIdx:1},prereqLocation:{rowIdx:2,colIdx:1},spellIds:[20216],maxPoints:1},{fieldName:"sanctifiedLight",location:{rowIdx:4,colIdx:2},spellIds:[20359],maxPoints:3},{fieldName:"purifyingPower",location:{rowIdx:5,colIdx:0},spellIds:[31825],maxPoints:2},{fieldName:"holyPower",location:{rowIdx:5,colIdx:2},spellIds:[5923,5924,5925,5926,25829],maxPoints:5},{fieldName:"lightsGrace",location:{rowIdx:6,colIdx:0},spellIds:[31833,31835],maxPoints:3},{fieldName:"holyShock",location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[20473],maxPoints:1},{fieldName:"blessedLife",location:{rowIdx:6,colIdx:2},spellIds:[31828],maxPoints:3},{fieldName:"sacredCleansing",location:{rowIdx:7,colIdx:0},spellIds:[53551],maxPoints:3},{fieldName:"holyGuidance",location:{rowIdx:7,colIdx:2},spellIds:[31837],maxPoints:5},{fieldName:"divineIllumination",location:{rowIdx:8,colIdx:0},spellIds:[31842],maxPoints:1},{fieldName:"judgementsOfThePure",location:{rowIdx:8,colIdx:2},spellIds:[53671,53673,54151,54154,54155],maxPoints:5},{fieldName:"infusionOfLight",location:{rowIdx:9,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[53569,53576],maxPoints:2},{fieldName:"enlightenedJudgements",location:{rowIdx:9,colIdx:2},spellIds:[53556],maxPoints:2},{fieldName:"beaconOfLight",location:{rowIdx:10,colIdx:1},spellIds:[53563],maxPoints:1}]},{name:"Protection",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/383.jpg",talents:[{fieldName:"divinity",location:{rowIdx:0,colIdx:1},spellIds:[63646],maxPoints:5},{fieldName:"divineStrength",location:{rowIdx:0,colIdx:2},spellIds:[20262],maxPoints:5},{fieldName:"stoicism",location:{rowIdx:1,colIdx:0},spellIds:[31844,31845,53519],maxPoints:3},{fieldName:"guardiansFavor",location:{rowIdx:1,colIdx:1},spellIds:[20174],maxPoints:2},{fieldName:"anticipation",location:{rowIdx:1,colIdx:2},spellIds:[20096],maxPoints:5},{fieldName:"divineSacrifice",location:{rowIdx:2,colIdx:0},spellIds:[64205],maxPoints:1},{fieldName:"improvedRighteousFury",location:{rowIdx:2,colIdx:1},spellIds:[20468],maxPoints:3},{fieldName:"toughness",location:{rowIdx:2,colIdx:2},spellIds:[20143],maxPoints:5},{fieldName:"divineGuardian",location:{rowIdx:3,colIdx:0},prereqLocation:{rowIdx:2,colIdx:0},spellIds:[53527,53530],maxPoints:2},{fieldName:"improvedHammerOfJustice",location:{rowIdx:3,colIdx:1},spellIds:[20487],maxPoints:2},{fieldName:"improvedDevotionAura",location:{rowIdx:3,colIdx:2},spellIds:[20138],maxPoints:3},{fieldName:"blessingOfSanctuary",location:{rowIdx:4,colIdx:1},spellIds:[20911],maxPoints:1},{fieldName:"reckoning",location:{rowIdx:4,colIdx:2},spellIds:[20177,20179,20181,20180,20182],maxPoints:5},{fieldName:"sacredDuty",location:{rowIdx:5,colIdx:0},spellIds:[31848],maxPoints:2},{fieldName:"oneHandedWeaponSpecialization",location:{rowIdx:5,colIdx:2},spellIds:[20196],maxPoints:3},{fieldName:"spiritualAttunement",location:{rowIdx:6,colIdx:0},spellIds:[31785,33776],maxPoints:2},{fieldName:"holyShield",location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[20925],maxPoints:1},{fieldName:"ardentDefender",location:{rowIdx:6,colIdx:2},spellIds:[31850],maxPoints:3},{fieldName:"redoubt",location:{rowIdx:7,colIdx:0},spellIds:[20127,20130,20135],maxPoints:3},{fieldName:"combatExpertise",location:{rowIdx:7,colIdx:2},spellIds:[31858],maxPoints:3},{fieldName:"touchedByTheLight",location:{rowIdx:8,colIdx:0},spellIds:[53590],maxPoints:3},{fieldName:"avengersShield",location:{rowIdx:8,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[31935],maxPoints:1},{fieldName:"guardedByTheLight",location:{rowIdx:8,colIdx:2},spellIds:[53583,53585],maxPoints:2},{fieldName:"shieldOfTheTemplar",location:{rowIdx:9,colIdx:1},prereqLocation:{rowIdx:8,colIdx:2},spellIds:[53709],maxPoints:3},{fieldName:"judgementsOfTheJust",location:{rowIdx:9,colIdx:2},spellIds:[53695],maxPoints:2},{fieldName:"hammerOfTheRighteous",location:{rowIdx:10,colIdx:1},spellIds:[53595],maxPoints:1}]},{name:"Retribution",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/381.jpg",talents:[{fieldName:"deflection",location:{rowIdx:0,colIdx:1},spellIds:[20060],maxPoints:5},{fieldName:"benediction",location:{rowIdx:0,colIdx:2},spellIds:[20101],maxPoints:5},{fieldName:"improvedJudgements",location:{rowIdx:1,colIdx:0},spellIds:[25956],maxPoints:2},{fieldName:"heartOfTheCrusader",location:{rowIdx:1,colIdx:1},spellIds:[20335],maxPoints:3},{fieldName:"improvedBlessingOfMight",location:{rowIdx:1,colIdx:2},spellIds:[20042,20045],maxPoints:2},{fieldName:"vindication",location:{rowIdx:2,colIdx:0},spellIds:[9452,26016],maxPoints:2},{fieldName:"conviction",location:{rowIdx:2,colIdx:1},spellIds:[20117],maxPoints:5},{fieldName:"sealOfCommand",location:{rowIdx:2,colIdx:2},spellIds:[20375],maxPoints:1},{fieldName:"pursuitOfJustice",location:{rowIdx:2,colIdx:3},spellIds:[26022],maxPoints:2},{fieldName:"eyeForAnEye",location:{rowIdx:3,colIdx:0},spellIds:[9799,25988],maxPoints:2},{fieldName:"sanctityOfBattle",location:{rowIdx:3,colIdx:2},spellIds:[32043,35396,35397],maxPoints:3},{fieldName:"crusade",location:{rowIdx:3,colIdx:3},spellIds:[31866],maxPoints:3},{fieldName:"twoHandedWeaponSpecialization",location:{rowIdx:4,colIdx:0},spellIds:[20111],maxPoints:3},{fieldName:"sanctifiedRetribution",location:{rowIdx:4,colIdx:2},spellIds:[31869],maxPoints:1},{fieldName:"vengeance",location:{rowIdx:5,colIdx:1},prereqLocation:{rowIdx:2,colIdx:1},spellIds:[20049,20056,20057],maxPoints:3},{fieldName:"divinePurpose",location:{rowIdx:5,colIdx:2},spellIds:[31871],maxPoints:2},{fieldName:"theArtOfWar",location:{rowIdx:6,colIdx:0},spellIds:[53486,53488],maxPoints:2},{fieldName:"repentance",location:{rowIdx:6,colIdx:1},spellIds:[20066],maxPoints:1},{fieldName:"judgementsOfTheWise",location:{rowIdx:6,colIdx:2},spellIds:[31876],maxPoints:3},{fieldName:"fanaticism",location:{rowIdx:7,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[31879],maxPoints:3},{fieldName:"sanctifiedWrath",location:{rowIdx:7,colIdx:2},spellIds:[53375],maxPoints:2},{fieldName:"swiftRetribution",location:{rowIdx:8,colIdx:0},spellIds:[53379,53484,53648],maxPoints:3},{fieldName:"crusaderStrike",location:{rowIdx:8,colIdx:1},spellIds:[35395],maxPoints:1},{fieldName:"sheathOfLight",location:{rowIdx:8,colIdx:2},spellIds:[53501],maxPoints:3},{fieldName:"righteousVengeance",location:{rowIdx:9,colIdx:1},spellIds:[53380],maxPoints:3},{fieldName:"divineStorm",location:{rowIdx:10,colIdx:1},spellIds:[53385],maxPoints:1}]}]),ns={majorGlyphs:{[Ba.GlyphOfAvengerSShield]:{name:"Glyph of Avenger's Shield",description:"Your Avenger's Shield hits 2 fewer targets, but for 100% more damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_avengersshield.jpg"},[Ba.GlyphOfAvengingWrath]:{name:"Glyph of Avenging Wrath",description:"Reduces the cooldown of your Hammer of Wrath spell by 50% while Avenging Wrath is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_avenginewrath.jpg"},[Ba.GlyphOfBeaconOfLight]:{name:"Glyph of Beacon of Light",description:"Increases the duration of Beacon of Light by 30 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_paladin_beaconoflight.jpg"},[Ba.GlyphOfCleansing]:{name:"Glyph of Cleansing",description:"Reduces the mana cost of your Cleanse and Purify spells by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_purify.jpg"},[Ba.GlyphOfConsecration]:{name:"Glyph of Consecration",description:"Increases the duration and cooldown of Consecration by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_innerfire.jpg"},[Ba.GlyphOfCrusaderStrike]:{name:"Glyph of Crusader Strike",description:"Reduces the mana cost of your Crusader Strike ability by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_crusaderstrike.jpg"},[Ba.GlyphOfDivinePlea]:{name:"Glyph of Divine Plea",description:"While Divine Plea is active, you take 3% reduced damage from all sources.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_aspiration.jpg"},[Ba.GlyphOfDivineStorm]:{name:"Glyph of Divine Storm",description:"Your Divine Storm now heals for an additional 15% of the damage it causes.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_paladin_divinestorm.jpg"},[Ba.GlyphOfDivinity]:{name:"Glyph of Divinity",description:"Your Lay on Hands grants twice as much mana as normal and also grants you as much mana as it grants your target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg"},[Ba.GlyphOfExorcism]:{name:"Glyph of Exorcism",description:"Increases damage done by Exorcism by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism_02.jpg"},[Ba.GlyphOfFlashOfLight]:{name:"Glyph of Flash of Light",description:"Your Flash of Light has an additional 5% critical strike chance.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_flashheal.jpg"},[Ba.GlyphOfHammerOfJustice]:{name:"Glyph of Hammer of Justice",description:"Increases your Hammer of Justice range by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofmight.jpg"},[Ba.GlyphOfHammerOfTheRighteous]:{name:"Glyph of Hammer of the Righteous",description:"Your Hammer of the Righteous hits 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_paladin_hammeroftherighteous.jpg"},[Ba.GlyphOfHammerOfWrath]:{name:"Glyph of Hammer of Wrath",description:"Reduces the mana cost of Hammer of Wrath by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_thunderclap.jpg"},[Ba.GlyphOfHolyLight]:{name:"Glyph of Holy Light",description:"Your Holy Light grants 10% of its heal amount to up to 5 friendly targets within 8 yards of the initial target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_holybolt.jpg"},[Ba.GlyphOfHolyShock]:{name:"Glyph of Holy Shock",description:"Reduces the cooldown of Holy Shock by 1 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_searinglight.jpg"},[Ba.GlyphOfHolyWrath]:{name:"Glyph of Holy Wrath",description:"Reduces the cooldown of your Holy Wrath spell by 15 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism.jpg"},[Ba.GlyphOfJudgement]:{name:"Glyph of Judgement",description:"Your Judgements deal 10% more damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_paladin_judgementred.jpg"},[Ba.GlyphOfRighteousDefense]:{name:"Glyph of Righteous Defense",description:"Increases the chance for your Righteous Defense and Hand of Reckoning abilities to work successfully by 8% on each target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_shoulder_37.jpg"},[Ba.GlyphOfSalvation]:{name:"Glyph of Salvation",description:"When you cast Hand of Salvation on yourself, it also reduces damage taken by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofsalvation.jpg"},[Ba.GlyphOfSealOfCommand]:{name:"Glyph of Seal of Command",description:"You gain 8% of your base mana each time you use a Judgement with Seal of Command active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_innerrage.jpg"},[Ba.GlyphOfSealOfLight]:{name:"Glyph of Seal of Light",description:"While Seal of Light is active, the effect of your healing spells is increased by 5%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_healingaura.jpg"},[Ba.GlyphOfSealOfRighteousness]:{name:"Glyph of Seal of Righteousness",description:"Increases the damage done by Seal of Righteousness by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_thunderbolt.jpg"},[Ba.GlyphOfSealOfVengeance]:{name:"Glyph of Seal of Vengeance",description:"Your Seal of Vengeance or Seal of Corruption also grants 10 expertise while active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofvengeance.jpg"},[Ba.GlyphOfSealOfWisdom]:{name:"Glyph of Seal of Wisdom",description:"While Seal of Wisdom is active, the cost of your healing spells is reduced by 5%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_righteousnessaura.jpg"},[Ba.GlyphOfShieldOfRighteousness]:{name:"Glyph of Shield of Righteousness",description:"Reduces the mana cost of Shield of Righteousness by 80%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_paladin_shieldofvengeance.jpg"},[Ba.GlyphOfSpiritualAttunement]:{name:"Glyph of Spiritual Attunement",description:"Increases the amount of mana gained from your Spiritual Attunement spell by an additional 2%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_revivechampion.jpg"},[Ba.GlyphOfTurnEvil]:{name:"Glyph of Turn Evil",description:"Reduces the casting time of your Turn Evil spell by 100%, but increases the cooldown by 8 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_turnundead.jpg"}},minorGlyphs:{[Na.GlyphOfBlessingOfKings]:{name:"Glyph of Blessing of Kings",description:"Reduces the mana cost of your Blessing of Kings and Greater Blessing of Kings spells by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magic_magearmor.jpg"},[Na.GlyphOfBlessingOfMight]:{name:"Glyph of Blessing of Might",description:"Increases the duration of your Blessing of Might spell by 20 min when cast on yourself.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_fistofjustice.jpg"},[Na.GlyphOfBlessingOfWisdom]:{name:"Glyph of Blessing of Wisdom",description:"Increases the duration of your Blessing of Wisdom spell by 20 min when cast on yourself.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofwisdom.jpg"},[Na.GlyphOfLayOnHands]:{name:"Glyph of Lay on Hands",description:"Reduces the cooldown of your Lay on Hands spell by 5 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg"},[Na.GlyphOfSenseUndead]:{name:"Glyph of Sense Undead",description:"Damage against Undead increased by 1% while your Sense Undead ability is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_senseundead.jpg"},[Na.GlyphOfTheWise]:{name:"Glyph of the Wise",description:"Reduces the mana cost of your Seal of Wisdom spell by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_righteousnessaura.jpg"}}},is=Kr([{name:"Discipline",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/201.jpg",talents:[{fieldName:"unbreakableWill",location:{rowIdx:0,colIdx:1},spellIds:[14522,14788,14789,14790,14791],maxPoints:5},{fieldName:"twinDisciplines",location:{rowIdx:0,colIdx:2},spellIds:[47586,47587,47588,52802,52803],maxPoints:5},{fieldName:"silentResolve",location:{rowIdx:1,colIdx:0},spellIds:[14523,14784,14785],maxPoints:3},{fieldName:"improvedInnerFire",location:{rowIdx:1,colIdx:1},spellIds:[14747,14770,14771],maxPoints:3},{fieldName:"improvedPowerWordFortitude",location:{rowIdx:1,colIdx:2},spellIds:[14749,14767],maxPoints:2},{fieldName:"martyrdom",location:{rowIdx:1,colIdx:3},spellIds:[14531,14774],maxPoints:2},{fieldName:"meditation",location:{rowIdx:2,colIdx:0},spellIds:[14521,14776,14777],maxPoints:3},{fieldName:"innerFocus",location:{rowIdx:2,colIdx:1},spellIds:[14751],maxPoints:1},{fieldName:"improvedPowerWordShield",location:{rowIdx:2,colIdx:2},spellIds:[14748,14768,14769],maxPoints:3},{fieldName:"absolution",location:{rowIdx:3,colIdx:0},spellIds:[33167,33171,33172],maxPoints:3},{fieldName:"mentalAgility",location:{rowIdx:3,colIdx:1},spellIds:[14520,14780,14781],maxPoints:3},{fieldName:"improvedManaBurn",location:{rowIdx:3,colIdx:3},spellIds:[14750,14772],maxPoints:2},{fieldName:"reflectiveShield",location:{rowIdx:4,colIdx:0},spellIds:[33201,33202],maxPoints:2},{fieldName:"mentalStrength",location:{rowIdx:4,colIdx:1},spellIds:[18551,18552,18553,18554,18555],maxPoints:5},{fieldName:"soulWarding",location:{rowIdx:4,colIdx:2},spellIds:[63574],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"focusedPower",location:{rowIdx:5,colIdx:0},spellIds:[33186,33190],maxPoints:2},{fieldName:"enlightenment",location:{rowIdx:5,colIdx:2},spellIds:[34908,34909,34910],maxPoints:3},{fieldName:"focusedWill",location:{rowIdx:6,colIdx:0},spellIds:[45234,45243,45244],maxPoints:3},{fieldName:"powerInfusion",location:{rowIdx:6,colIdx:1},spellIds:[10060],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"improvedFlashHeal",location:{rowIdx:6,colIdx:2},spellIds:[63504,63505,63506],maxPoints:3},{fieldName:"renewedHope",location:{rowIdx:7,colIdx:0},spellIds:[57470,57472],maxPoints:2},{fieldName:"rapture",location:{rowIdx:7,colIdx:1},spellIds:[47535,47536,47537],maxPoints:3},{fieldName:"aspiration",location:{rowIdx:7,colIdx:2},spellIds:[47507,47508],maxPoints:2},{fieldName:"divineAegis",location:{rowIdx:8,colIdx:0},spellIds:[47509,47511,47515],maxPoints:3},{fieldName:"painSuppression",location:{rowIdx:8,colIdx:1},spellIds:[33206],maxPoints:1},{fieldName:"grace",location:{rowIdx:8,colIdx:2},spellIds:[47516,47517],maxPoints:2},{fieldName:"borrowedTime",location:{rowIdx:9,colIdx:1},spellIds:[52795,52797,52798,52799,52800],maxPoints:5},{fieldName:"penance",location:{rowIdx:10,colIdx:1},spellIds:[47540],maxPoints:1}]},{name:"Holy",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/202.jpg",talents:[{fieldName:"healingFocus",location:{rowIdx:0,colIdx:0},spellIds:[14913,15012],maxPoints:2},{fieldName:"improvedRenew",location:{rowIdx:0,colIdx:1},spellIds:[14908,15020,17191],maxPoints:3},{fieldName:"holySpecialization",location:{rowIdx:0,colIdx:2},spellIds:[14889,15008,15009,15010,15011],maxPoints:5},{fieldName:"spellWarding",location:{rowIdx:1,colIdx:1},spellIds:[27900,27901,27902,27903,27904],maxPoints:5},{fieldName:"divineFury",location:{rowIdx:1,colIdx:2},spellIds:[18530,18531,18533,18534,18535],maxPoints:5},{fieldName:"desperatePrayer",location:{rowIdx:2,colIdx:0},spellIds:[19236],maxPoints:1},{fieldName:"blessedRecovery",location:{rowIdx:2,colIdx:1},spellIds:[27811,27815,27816],maxPoints:3},{fieldName:"inspiration",location:{rowIdx:2,colIdx:3},spellIds:[14892,15362,15363],maxPoints:3},{fieldName:"holyReach",location:{rowIdx:3,colIdx:0},spellIds:[27789,27790],maxPoints:2},{fieldName:"improvedHealing",location:{rowIdx:3,colIdx:1},spellIds:[14912,15013,15014],maxPoints:3},{fieldName:"searingLight",location:{rowIdx:3,colIdx:2},spellIds:[14909,15017],maxPoints:2,prereqLocation:{rowIdx:1,colIdx:2}},{fieldName:"healingPrayers",location:{rowIdx:4,colIdx:0},spellIds:[14911,15018],maxPoints:2},{fieldName:"spiritOfRedemption",location:{rowIdx:4,colIdx:1},spellIds:[20711],maxPoints:1},{fieldName:"spiritualGuidance",location:{rowIdx:4,colIdx:2},spellIds:[14901,15028,15029,15030,15031],maxPoints:5},{fieldName:"surgeOfLight",location:{rowIdx:5,colIdx:0},spellIds:[33150,33154],maxPoints:2},{fieldName:"spiritualHealing",location:{rowIdx:5,colIdx:2},spellIds:[14898,15349,15354,15355,15356],maxPoints:5},{fieldName:"holyConcentration",location:{rowIdx:6,colIdx:0},spellIds:[34753,34859,34860],maxPoints:3},{fieldName:"lightwell",location:{rowIdx:6,colIdx:1},spellIds:[724],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"blessedResilience",location:{rowIdx:6,colIdx:2},spellIds:[33142,33145,33146],maxPoints:3},{fieldName:"bodyAndSoul",location:{rowIdx:7,colIdx:0},spellIds:[64127,64129],maxPoints:2},{fieldName:"empoweredHealing",location:{rowIdx:7,colIdx:1},spellIds:[33158,33159,33160,33161,33162],maxPoints:5},{fieldName:"serendipity",location:{rowIdx:7,colIdx:2},spellIds:[63730,63733,63737],maxPoints:3},{fieldName:"empoweredRenew",location:{rowIdx:8,colIdx:0},spellIds:[63534,63542,63543],maxPoints:3},{fieldName:"circleOfHealing",location:{rowIdx:8,colIdx:1},spellIds:[34861],maxPoints:1},{fieldName:"testOfFaith",location:{rowIdx:8,colIdx:2},spellIds:[47558,47559,47560],maxPoints:3},{fieldName:"divineProvidence",location:{rowIdx:9,colIdx:1},spellIds:[47562,47564,47565,47566,47567],maxPoints:5},{fieldName:"guardianSpirit",location:{rowIdx:10,colIdx:1},spellIds:[47788],maxPoints:1}]},{name:"Shadow",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/203.jpg",talents:[{fieldName:"spiritTap",location:{rowIdx:0,colIdx:0},spellIds:[15270,15335,15336],maxPoints:3},{fieldName:"improvedSpiritTap",location:{rowIdx:0,colIdx:1},spellIds:[15337,15338],maxPoints:2,prereqLocation:{rowIdx:0,colIdx:0}},{fieldName:"darkness",location:{rowIdx:0,colIdx:2},spellIds:[15259,15307,15308,15309,15310],maxPoints:5},{fieldName:"shadowAffinity",location:{rowIdx:1,colIdx:0},spellIds:[15318,15272,15320],maxPoints:3},{fieldName:"improvedShadowWordPain",location:{rowIdx:1,colIdx:1},spellIds:[15275,15317],maxPoints:2},{fieldName:"shadowFocus",location:{rowIdx:1,colIdx:2},spellIds:[15260,15327,15328],maxPoints:3},{fieldName:"improvedPsychicScream",location:{rowIdx:2,colIdx:0},spellIds:[15392,15448],maxPoints:2},{fieldName:"improvedMindBlast",location:{rowIdx:2,colIdx:1},spellIds:[15273,15312,15313,15314,15316],maxPoints:5},{fieldName:"mindFlay",location:{rowIdx:2,colIdx:2},spellIds:[15407],maxPoints:1},{fieldName:"veiledShadows",location:{rowIdx:3,colIdx:1},spellIds:[15274,15311],maxPoints:2},{fieldName:"shadowReach",location:{rowIdx:3,colIdx:2},spellIds:[17322,17323],maxPoints:2},{fieldName:"shadowWeaving",location:{rowIdx:3,colIdx:3},spellIds:[15257,15331,15332],maxPoints:3},{fieldName:"silence",location:{rowIdx:4,colIdx:0},spellIds:[15487],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:0}},{fieldName:"vampiricEmbrace",location:{rowIdx:4,colIdx:1},spellIds:[15286],maxPoints:1},{fieldName:"improvedVampiricEmbrace",location:{rowIdx:4,colIdx:2},spellIds:[27839,27840],maxPoints:2,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"focusedMind",location:{rowIdx:4,colIdx:3},spellIds:[33213,33214,33215],maxPoints:3},{fieldName:"mindMelt",location:{rowIdx:5,colIdx:0},spellIds:[14910,33371],maxPoints:2},{fieldName:"improvedDevouringPlague",location:{rowIdx:5,colIdx:2},spellIds:[63625,63626,63627],maxPoints:3},{fieldName:"shadowform",location:{rowIdx:6,colIdx:1},spellIds:[15473],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"shadowPower",location:{rowIdx:6,colIdx:2},spellIds:[33221,33222,33223,33224,33225],maxPoints:5},{fieldName:"improvedShadowform",location:{rowIdx:7,colIdx:0},spellIds:[47569,47570],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"misery",location:{rowIdx:7,colIdx:2},spellIds:[33191,33192,33193],maxPoints:3},{fieldName:"psychicHorror",location:{rowIdx:8,colIdx:0},spellIds:[64044],maxPoints:1},{fieldName:"vampiricTouch",location:{rowIdx:8,colIdx:1},spellIds:[34914],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"painAndSuffering",location:{rowIdx:8,colIdx:2},spellIds:[47580,47581,47582],maxPoints:3},{fieldName:"twistedFaith",location:{rowIdx:9,colIdx:2},spellIds:[47573,47577,47578,51166,51167],maxPoints:5},{fieldName:"dispersion",location:{rowIdx:10,colIdx:1},spellIds:[47585],maxPoints:1,prereqLocation:{rowIdx:8,colIdx:1}}]}]),os={majorGlyphs:{[fa.GlyphOfCircleOfHealing]:{name:"Glyph of Circle of Healing",description:"Your Circle of Healing spell heals 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_circleofrenewal.jpg"},[fa.GlyphOfDispelMagic]:{name:"Glyph of Dispel Magic",description:"Your Dispel Magic spell also heals your target for 3% of maximum health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_dispelmagic.jpg"},[fa.GlyphOfDispersion]:{name:"Glyph of Dispersion",description:"Reduces the cooldown on Dispersion by 45 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_dispersion.jpg"},[fa.GlyphOfFade]:{name:"Glyph of Fade",description:"Reduces the cooldown of your Fade spell by 9 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg"},[fa.GlyphOfFearWard]:{name:"Glyph of Fear Ward",description:"Reduces cooldown and duration of Fear Ward by 60 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism.jpg"},[fa.GlyphOfFlashHeal]:{name:"Glyph of Flash Heal",description:"Reduces the mana cost of your Flash Heal by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_flashheal.jpg"},[fa.GlyphOfGuardianSpirit]:{name:"Glyph of Guardian Spirit",description:"If your Guardian Spirit lasts its entire duration without being triggered, the cooldown is reset to 1 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_guardianspirit.jpg"},[fa.GlyphOfHolyNova]:{name:"Glyph of Holy Nova",description:"Increases the damage and healing of your Holy Nova spell by an additional 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_holynova.jpg"},[fa.GlyphOfHymnOfHope]:{name:"Glyph of Hymn of Hope",description:"Your Hymn of Hope lasts an additional 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_symbolofhope.jpg"},[fa.GlyphOfInnerFire]:{name:"Glyph of Inner Fire",description:"Increases the armor from your Inner Fire spell by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_innerfire.jpg"},[fa.GlyphOfLightwell]:{name:"Glyph of Lightwell",description:"Increases the amount healed by your Lightwell by 20%",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_summonlightwell.jpg"},[fa.GlyphOfMassDispel]:{name:"Glyph of Mass Dispel",description:"Reduces the mana cost of Mass Dispel by 35%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_arcane_massdispel.jpg"},[fa.GlyphOfMindControl]:{name:"Glyph of Mind Control",description:"Reduces the chance targets will resist or break your Mind Control spell by an additional 17%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowworddominate.jpg"},[fa.GlyphOfMindFlay]:{name:"Glyph of Mind Flay",description:"Increases the damage done by your Mind Flay spell by 10% when your target is afflicted with Shadow Word: Pain.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_siphonmana.jpg"},[fa.GlyphOfMindSear]:{name:"Glyph of Mind Sear",description:"Increases the radius of effect on Mind Sear by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_mindshear.jpg"},[fa.GlyphOfPainSuppression]:{name:"Glyph of Pain Suppression",description:"Allows Pain Suppression to be cast while stunned.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_painsupression.jpg"},[fa.GlyphOfPenance]:{name:"Glyph of Penance",description:"Reduces the cooldown of Penance by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_penance.jpg"},[fa.GlyphOfPowerWordShield]:{name:"Glyph of Power Word: Shield",description:"Your Power Word: Shield also heals the target for 20% of the absorption amount.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_powerwordshield.jpg"},[fa.GlyphOfPrayerOfHealing]:{name:"Glyph of Prayer of Healing",description:"Your Prayer of Healing spell also heals an additional 20% of its initial heal over 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_prayerofhealing02.jpg"},[fa.GlyphOfPsychicScream]:{name:"Glyph of Psychic Scream",description:"Increases the duration of your Psychic Scream by 2 sec. and increases its cooldown by 8 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_psychicscream.jpg"},[fa.GlyphOfRenew]:{name:"Glyph of Renew",description:"Reduces the duration of your Renew by 3 sec. but increases the amount healed each tick by 25%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_renew.jpg"},[fa.GlyphOfScourgeImprisonment]:{name:"Glyph of Scourge Imprisonment",description:"Reduces the cast time of your Shackle Undead by 1.0 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_slow.jpg"},[fa.GlyphOfShadow]:{name:"Glyph of Shadow",description:"While in Shadowform, your non-periodic spell critical strikes increase your spell power by 30% of your Spirit for 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_mindsooth.jpg"},[fa.GlyphOfShadowWordDeath]:{name:"Glyph of Shadow Word: Death",description:"Targets below 35% health take an additional 10% damage from your Shadow Word: Death spell.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonicfortitude.jpg"},[fa.GlyphOfShadowWordPain]:{name:"Glyph of Shadow Word: Pain",description:"The periodic damage ticks of your Shadow Word: Pain spell restore 1% of your base mana.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowwordpain.jpg"},[fa.GlyphOfSmite]:{name:"Glyph of Smite",description:"Your Smite spell inflicts an additional 20% damage against targets afflicted by Holy Fire.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_holysmite.jpg"},[fa.GlyphOfSpiritOfRedemption]:{name:"Glyph of Spirit of Redemption",description:"Increases the duration of Spirit of Redemption by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_enchant_essenceeternallarge.jpg"}},minorGlyphs:{[wa.GlyphOfFading]:{name:"Glyph of Fading",description:"Reduces the mana cost of your Fade spell by 30%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg"},[wa.GlyphOfFortitude]:{name:"Glyph of Fortitude",description:"Reduces the mana cost of your Power Word: Fortitude and Prayer of Fortitude spells by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_wordfortitude.jpg"},[wa.GlyphOfLevitate]:{name:"Glyph of Levitate",description:"Your Levitate spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg"},[wa.GlyphOfShackleUndead]:{name:"Glyph of Shackle Undead",description:"Increases the range of your Shackle Undead spell by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_slow.jpg"},[wa.GlyphOfShadowProtection]:{name:"Glyph of Shadow Protection",description:"Increases the duration of your Shadow Protection and Prayer of Shadow Protection spells by 10 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antishadow.jpg"},[wa.GlyphOfShadowfiend]:{name:"Glyph of Shadowfiend",description:"Receive 5% of your maximum mana if your Shadowfiend dies from damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowfiend.jpg"}}},rs=Kr([{name:"Assassination",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/182.jpg",talents:[{fieldName:"improvedEviscerate",location:{rowIdx:0,colIdx:0},spellIds:[14162],maxPoints:3},{fieldName:"remorselessAttacks",location:{rowIdx:0,colIdx:1},spellIds:[14144,14148],maxPoints:2},{fieldName:"malice",location:{rowIdx:0,colIdx:2},spellIds:[14138],maxPoints:5},{fieldName:"ruthlessness",location:{rowIdx:1,colIdx:0},spellIds:[14156,14160],maxPoints:3},{fieldName:"bloodSpatter",location:{rowIdx:1,colIdx:1},spellIds:[51632,51633],maxPoints:2},{fieldName:"puncturingWounds",location:{rowIdx:1,colIdx:3},spellIds:[13733,13865],maxPoints:3},{fieldName:"vigor",location:{rowIdx:2,colIdx:0},spellIds:[14983],maxPoints:1},{fieldName:"improvedExposeArmor",location:{rowIdx:2,colIdx:1},spellIds:[14168],maxPoints:2},{fieldName:"lethality",location:{rowIdx:2,colIdx:2},prereqLocation:{rowIdx:0,colIdx:2},spellIds:[14128,14132,14135],maxPoints:5},{fieldName:"vilePoisons",location:{rowIdx:3,colIdx:1},spellIds:[16513,16514,16515],maxPoints:3},{fieldName:"improvedPoisons",location:{rowIdx:3,colIdx:2},spellIds:[14113,14114,14115,14116,14117],maxPoints:5},{fieldName:"fleetFooted",location:{rowIdx:4,colIdx:0},spellIds:[31208],maxPoints:2},{fieldName:"coldBlood",location:{rowIdx:4,colIdx:1},spellIds:[14177],maxPoints:1},{fieldName:"improvedKidneyShot",location:{rowIdx:4,colIdx:2},spellIds:[14174],maxPoints:3},{fieldName:"quickRecovery",location:{rowIdx:4,colIdx:3},spellIds:[31244],maxPoints:2},{fieldName:"sealFate",location:{rowIdx:5,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[14186,14190,14193],maxPoints:5},{fieldName:"murder",location:{rowIdx:5,colIdx:2},spellIds:[14158,14159],maxPoints:2},{fieldName:"deadlyBrew",location:{rowIdx:6,colIdx:0},spellIds:[51625,51626],maxPoints:2},{fieldName:"overkill",location:{rowIdx:6,colIdx:1},spellIds:[58426],maxPoints:1},{fieldName:"deadenedNerves",location:{rowIdx:6,colIdx:2},spellIds:[31380,31382,31383],maxPoints:3},{fieldName:"focusedAttacks",location:{rowIdx:7,colIdx:0},spellIds:[51634,51635,51636],maxPoints:3},{fieldName:"findWeakness",location:{rowIdx:7,colIdx:2},spellIds:[31234,31235,31236],maxPoints:3},{fieldName:"masterPoisoner",location:{rowIdx:8,colIdx:0},spellIds:[31226,31227,58410],maxPoints:3},{fieldName:"mutilate",location:{rowIdx:8,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[1329],maxPoints:1},{fieldName:"turnTheTables",location:{rowIdx:8,colIdx:2},spellIds:[51627,51628,51629],maxPoints:3},{fieldName:"cutToTheChase",location:{rowIdx:9,colIdx:1},spellIds:[51664,51665,51666,51667,51668],maxPoints:5},{fieldName:"hungerForBlood",location:{rowIdx:10,colIdx:1},spellIds:[51662],maxPoints:1}]},{name:"Combat",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/181.jpg",talents:[{fieldName:"improvedGouge",location:{rowIdx:0,colIdx:0},spellIds:[13741,13793,13792],maxPoints:3},{fieldName:"improvedSinisterStrike",location:{rowIdx:0,colIdx:1},spellIds:[13732,13863],maxPoints:2},{fieldName:"dualWieldSpecialization",location:{rowIdx:0,colIdx:2},spellIds:[13715,13848,13849,13851,13852],maxPoints:5},{fieldName:"improvedSliceAndDice",location:{rowIdx:1,colIdx:0},spellIds:[14165,14166],maxPoints:2},{fieldName:"deflection",location:{rowIdx:1,colIdx:1},spellIds:[13713,13853,13854],maxPoints:3},{fieldName:"precision",location:{rowIdx:1,colIdx:3},spellIds:[13705,13832,13843,13844,13845],maxPoints:5},{fieldName:"endurance",location:{rowIdx:2,colIdx:0},spellIds:[13742,13872],maxPoints:2},{fieldName:"riposte",location:{rowIdx:2,colIdx:1},prereqLocation:{rowIdx:1,colIdx:1},spellIds:[14251],maxPoints:1},{fieldName:"closeQuartersCombat",location:{rowIdx:2,colIdx:2},prereqLocation:{rowIdx:0,colIdx:2},spellIds:[13706,13804,13805,13806,13807],maxPoints:5},{fieldName:"improvedKick",location:{rowIdx:3,colIdx:0},spellIds:[13754,13867],maxPoints:2},{fieldName:"improvedSprint",location:{rowIdx:3,colIdx:1},spellIds:[13743,13875],maxPoints:2},{fieldName:"lightningReflexes",location:{rowIdx:3,colIdx:2},spellIds:[13712,13788,13789],maxPoints:3},{fieldName:"aggression",location:{rowIdx:3,colIdx:3},spellIds:[18427,18428,18429,61330,61331],maxPoints:5},{fieldName:"maceSpecialization",location:{rowIdx:4,colIdx:0},spellIds:[13709,13800,13801,13802,13803],maxPoints:5},{fieldName:"bladeFlurry",location:{rowIdx:4,colIdx:1},spellIds:[13877],maxPoints:1},{fieldName:"hackAndSlash",location:{rowIdx:4,colIdx:2},spellIds:[13960,13961,13962,13963,13964],maxPoints:5},{fieldName:"weaponExpertise",location:{rowIdx:5,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[30919],maxPoints:2},{fieldName:"bladeTwisting",location:{rowIdx:5,colIdx:2},spellIds:[31124,31126],maxPoints:2},{fieldName:"vitality",location:{rowIdx:6,colIdx:0},spellIds:[31122,31123,61329],maxPoints:3},{fieldName:"adrenalineRush",location:{rowIdx:6,colIdx:1},spellIds:[13750],maxPoints:1},{fieldName:"nervesOfSteel",location:{rowIdx:6,colIdx:2},spellIds:[31130],maxPoints:2},{fieldName:"throwingSpecialization",location:{rowIdx:7,colIdx:0},spellIds:[5952,51679],maxPoints:2},{fieldName:"combatPotency",location:{rowIdx:7,colIdx:2},spellIds:[35541,35550,35551,35552,35553],maxPoints:5},{fieldName:"unfairAdvantage",location:{rowIdx:8,colIdx:0},spellIds:[51672,51674],maxPoints:2},{fieldName:"surpriseAttacks",location:{rowIdx:8,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[32601],maxPoints:1},{fieldName:"savageCombat",location:{rowIdx:8,colIdx:2},spellIds:[51682,58413],maxPoints:2},{fieldName:"preyOnTheWeak",location:{rowIdx:9,colIdx:1},spellIds:[51685,51686,51687,51688,51689],maxPoints:5},{fieldName:"killingSpree",location:{rowIdx:10,colIdx:1},spellIds:[51690],maxPoints:1}]},{name:"Subtlety",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/183.jpg",talents:[{fieldName:"relentlessStrikes",location:{rowIdx:0,colIdx:0},spellIds:[14179,58422,58423,58424,58425],maxPoints:5},{fieldName:"masterOfDeception",location:{rowIdx:0,colIdx:1},spellIds:[13958,13970,13971],maxPoints:3},{fieldName:"opportunity",location:{rowIdx:0,colIdx:2},spellIds:[14057,14072],maxPoints:2},{fieldName:"sleightOfHand",location:{rowIdx:1,colIdx:0},spellIds:[30892,30893],maxPoints:2},{fieldName:"dirtyTricks",location:{rowIdx:1,colIdx:1},spellIds:[14076,14094],maxPoints:2},{fieldName:"camouflage",location:{rowIdx:1,colIdx:2},spellIds:[13975,14062,14603],maxPoints:3},{fieldName:"elusiveness",location:{rowIdx:2,colIdx:0},spellIds:[13981,14066],maxPoints:2},{fieldName:"ghostlyStrike",location:{rowIdx:2,colIdx:1},spellIds:[14278],maxPoints:1},{fieldName:"serratedBlades",location:{rowIdx:2,colIdx:2},spellIds:[14171,14172,14173],maxPoints:3},{fieldName:"setup",location:{rowIdx:3,colIdx:0},spellIds:[13983,14070,14071],maxPoints:3},{fieldName:"initiative",location:{rowIdx:3,colIdx:1},spellIds:[13976,13979,13980],maxPoints:3},{fieldName:"improvedAmbush",location:{rowIdx:3,colIdx:2},spellIds:[14079,14080],maxPoints:2},{fieldName:"heightenedSenses",location:{rowIdx:4,colIdx:0},spellIds:[30894,30895],maxPoints:2},{fieldName:"preparation",location:{rowIdx:4,colIdx:1},spellIds:[14185],maxPoints:1},{fieldName:"dirtyDeeds",location:{rowIdx:4,colIdx:2},spellIds:[14082,14083],maxPoints:2},{fieldName:"hemorrhage",location:{rowIdx:4,colIdx:3},prereqLocation:{rowIdx:2,colIdx:2},spellIds:[16511],maxPoints:1},{fieldName:"masterOfSubtlety",location:{rowIdx:5,colIdx:0},spellIds:[31221,31222,31223],maxPoints:3},{fieldName:"deadliness",location:{rowIdx:5,colIdx:2},spellIds:[30902,30903,30904,30905,30906],maxPoints:5},{fieldName:"envelopingShadows",location:{rowIdx:6,colIdx:0},spellIds:[31211,31212,31213],maxPoints:3},{fieldName:"premeditation",location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[14183],maxPoints:1},{fieldName:"cheatDeath",location:{rowIdx:6,colIdx:2},spellIds:[31228,31229,31230],maxPoints:3},{fieldName:"sinisterCalling",location:{rowIdx:7,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[31216,31217,31218,31219,31220],maxPoints:5},{fieldName:"waylay",location:{rowIdx:7,colIdx:2},spellIds:[51692,51696],maxPoints:2},{fieldName:"honorAmongThieves",location:{rowIdx:8,colIdx:0},spellIds:[51698,51670,51671],maxPoints:3},{fieldName:"shadowstep",location:{rowIdx:8,colIdx:1},spellIds:[36554],maxPoints:1},{fieldName:"filthyTricks",location:{rowIdx:8,colIdx:2},spellIds:[36554],maxPoints:2},{fieldName:"slaughterFromTheShadows",location:{rowIdx:9,colIdx:1},spellIds:[51708,51709,51710,51711,51712],maxPoints:5},{fieldName:"shadowDance",location:{rowIdx:10,colIdx:1},spellIds:[51713],maxPoints:1}]}]),ss={majorGlyphs:{[la.GlyphOfAdrenalineRush]:{name:"Glyph of Adrenaline Rush",description:"Increases the duration of Adrenaline Rush by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowworddominate.jpg"},[la.GlyphOfAmbush]:{name:"Glyph of Ambush",description:"Increases the range on Ambush by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_ambush.jpg"},[la.GlyphOfBackstab]:{name:"Glyph of Backstab",description:"Your Backstab increases the duration of your Rupture effect on the target by 2 sec, up to a maximum of 6 additional sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_backstab.jpg"},[la.GlyphOfBladeFlurry]:{name:"Glyph of Blade Flurry",description:"Reduces the energy cost of Blade Flurry by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg"},[la.GlyphOfCloakOfShadows]:{name:"Glyph of Cloak of Shadows",description:"While Cloak of Shadows is active, you take 40% less physical damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_nethercloak.jpg"},[la.GlyphOfCripplingPoison]:{name:"Glyph of Crippling Poison",description:"Increases the chance to inflict your target with Crippling Poison by an additional 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_poisonsting.jpg"},[la.GlyphOfDeadlyThrow]:{name:"Glyph of Deadly Throw",description:"Increases the slowing effect on Deadly Throw by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_throwingknife_06.jpg"},[la.GlyphOfEvasion]:{name:"Glyph of Evasion",description:"Increases the duration of Evasion by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowward.jpg"},[la.GlyphOfEviscerate]:{name:"Glyph of Eviscerate",description:"Increases the critical strike chance of Eviscerate by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_eviscerate.jpg"},[la.GlyphOfExposeArmor]:{name:"Glyph of Expose Armor",description:"Increases the duration of Expose Armor by 12 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_riposte.jpg"},[la.GlyphOfFanOfKnives]:{name:"Glyph of Fan of Knives",description:"Increases the damage done by Fan of Knives by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_fanofknives.jpg"},[la.GlyphOfFeint]:{name:"Glyph of Feint",description:"Reduces the energy cost of Feint by 20.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feint.jpg"},[la.GlyphOfGarrote]:{name:"Glyph of Garrote",description:"Reduces the duration of your Garrote ability by 3 sec and increases the total damage it deals by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_garrote.jpg"},[la.GlyphOfGhostlyStrike]:{name:"Glyph of Ghostly Strike",description:"Increases the damage dealt by Ghostly Strike by 40% and the duration of its effect by 4 sec, but increases its cooldown by 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_curse.jpg"},[la.GlyphOfGouge]:{name:"Glyph of Gouge",description:"Reduces the energy cost of Gouge by 15.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_gouge.jpg"},[la.GlyphOfHemorrhage]:{name:"Glyph of Hemorrhage",description:"Increases the damage bonus against targets afflicted by Hemorrhage by 40%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg"},[la.GlyphOfHungerForBlood]:{name:"Glyph of Hunger For Blood",description:"Increases the bonus damage from Hunger For Blood by 3%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_hungerforblood.jpg"},[la.GlyphOfKillingSpree]:{name:"Glyph of Killing Spree",description:"Reduces the cooldown on Killing Spree by 45 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_murderspree.jpg"},[la.GlyphOfMutilate]:{name:"Glyph of Mutilate",description:"Reduces the cost of Mutilate by 5 energy.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_shadowstrikes.jpg"},[la.GlyphOfPreparation]:{name:"Glyph of Preparation",description:"Your Preparation ability also instantly resets the cooldown of Blade Flurry, Dismantle, and Kick.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antishadow.jpg"},[la.GlyphOfRupture]:{name:"Glyph of Rupture",description:"Increases the duration of Rupture by 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_rupture.jpg"},[la.GlyphOfSap]:{name:"Glyph of Sap",description:"Increases the duration of Sap by 20 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_sap.jpg"},[la.GlyphOfShadowDance]:{name:"Glyph of Shadow Dance",description:"Increases the duration of Shadow Dance by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_shadowdance.jpg"},[la.GlyphOfSinisterStrike]:{name:"Glyph of Sinister Strike",description:"Your Sinister Strike critical strikes have a 50% chance to add an additional combo point.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_ritualofsacrifice.jpg"},[la.GlyphOfSliceAndDice]:{name:"Glyph of Slice and Dice",description:"Increases the duration of Slice and Dice by 3 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_slicedice.jpg"},[la.GlyphOfSprint]:{name:"Glyph of Sprint",description:"Increases the movement speed of your Sprint ability by an additional 30%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_sprint.jpg"},[la.GlyphOfTricksOfTheTrade]:{name:"Glyph of Tricks of the Trade",description:"The bonus damage and threat redirection granted by your Tricks of the Trade ability lasts an additional 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_tricksofthetrade.jpg"},[la.GlyphOfVigor]:{name:"Glyph of Vigor",description:"Vigor grants an additional 10 maximum energy.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_earthbindtotem.jpg"}},minorGlyphs:{[ca.GlyphOfBlurredSpeed]:{name:"Glyph of Blurred Speed",description:"Enables you to walk on water while your Sprint ability is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_sprint.jpg"},[ca.GlyphOfDistract]:{name:"Glyph of Distract",description:"Increases the range of your Distract ability by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_distract.jpg"},[ca.GlyphOfPickLock]:{name:"Glyph of Pick Lock",description:"Reduces the cast time of your Pick Lock ability by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_moonkey.jpg"},[ca.GlyphOfPickPocket]:{name:"Glyph of Pick Pocket",description:"Increases the range of your Pick Pocket ability by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_misc_bag_11.jpg"},[ca.GlyphOfSafeFall]:{name:"Glyph of Safe Fall",description:"Increases the distance your Safe Fall ability allows you to fall without taking damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_feather_01.jpg"},[ca.GlyphOfVanish]:{name:"Glyph of Vanish",description:"Increases your movement speed by 30% while the Vanish effect is active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_vanish.jpg"}}},ls=Kr([{name:"Elemental",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/261.jpg",talents:[{fieldName:"convection",location:{rowIdx:0,colIdx:1},spellIds:[16039,16109],maxPoints:5},{fieldName:"concussion",location:{rowIdx:0,colIdx:2},spellIds:[16035,16105],maxPoints:5},{fieldName:"callOfFlame",location:{rowIdx:1,colIdx:0},spellIds:[16038,16160,16161],maxPoints:3},{location:{rowIdx:1,colIdx:1},spellIds:[28996,28997,28998],maxPoints:3},{fieldName:"elementalDevastation",location:{rowIdx:1,colIdx:2},spellIds:[30160,29179,29180],maxPoints:3},{fieldName:"reverberation",location:{rowIdx:2,colIdx:0},spellIds:[16040,16113,16114,16115,16116],maxPoints:5},{fieldName:"elementalFocus",location:{rowIdx:2,colIdx:1},spellIds:[16164],maxPoints:1},{fieldName:"elementalFury",location:{rowIdx:2,colIdx:2},spellIds:[16089,60184,60185,60187,60188],maxPoints:5},{fieldName:"improvedFireNova",location:{rowIdx:3,colIdx:0},spellIds:[16086,16544],maxPoints:2},{location:{rowIdx:3,colIdx:3},spellIds:[29062,29064],maxPoints:3},{location:{rowIdx:4,colIdx:0},spellIds:[28999],maxPoints:2},{fieldName:"callOfThunder",location:{rowIdx:4,colIdx:1},prereqLocation:{rowIdx:2,colIdx:1},spellIds:[16041],maxPoints:1},{fieldName:"unrelentingStorm",location:{rowIdx:4,colIdx:3},spellIds:[30664,30665,30666],maxPoints:3},{fieldName:"elementalPrecision",location:{rowIdx:5,colIdx:0},spellIds:[30672,30673,30674],maxPoints:3},{fieldName:"lightningMastery",location:{rowIdx:5,colIdx:2},prereqLocation:{rowIdx:2,colIdx:2},spellIds:[16578],maxPoints:5},{fieldName:"elementalMastery",location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[16166],maxPoints:1},{fieldName:"stormEarthAndFire",location:{rowIdx:6,colIdx:2},spellIds:[51483,51485,51486],maxPoints:3},{fieldName:"boomingEchoes",location:{rowIdx:7,colIdx:0},spellIds:[63370,63372],maxPoints:2},{fieldName:"elementalOath",location:{rowIdx:7,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[51466,51470],maxPoints:2},{fieldName:"lightningOverload",location:{rowIdx:7,colIdx:2},spellIds:[30675,30678,30679],maxPoints:3},{location:{rowIdx:8,colIdx:0},spellIds:[51474,51478,51479],maxPoints:3},{fieldName:"totemOfWrath",location:{rowIdx:8,colIdx:1},spellIds:[30706],maxPoints:1},{fieldName:"lavaFlows",location:{rowIdx:8,colIdx:2},spellIds:[51480,51481,51482],maxPoints:3},{fieldName:"shamanism",location:{rowIdx:9,colIdx:1},spellIds:[62097],maxPoints:5},{fieldName:"thunderstorm",location:{rowIdx:10,colIdx:1},spellIds:[51490],maxPoints:1}]},{name:"Enhancement",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/263.jpg",talents:[{fieldName:"enhancingTotems",location:{rowIdx:0,colIdx:0},spellIds:[16259,16295,52456],maxPoints:3},{location:{rowIdx:0,colIdx:1},spellIds:[16043,16130],maxPoints:2},{fieldName:"ancestralKnowledge",location:{rowIdx:0,colIdx:2},spellIds:[17485],maxPoints:5},{location:{rowIdx:1,colIdx:0},spellIds:[16258,16293],maxPoints:2},{fieldName:"thunderingStrikes",location:{rowIdx:1,colIdx:1},spellIds:[16255,16302],maxPoints:5},{location:{rowIdx:1,colIdx:2},spellIds:[16262,16287],maxPoints:2},{fieldName:"improvedShields",location:{rowIdx:1,colIdx:3},spellIds:[16261,16290,51881],maxPoints:3},{fieldName:"elementalWeapons",location:{rowIdx:2,colIdx:0},spellIds:[16266,29079,29080],maxPoints:3},{fieldName:"shamanisticFocus",location:{rowIdx:2,colIdx:2},spellIds:[43338],maxPoints:1},{fieldName:"anticipation",location:{rowIdx:2,colIdx:3},spellIds:[16254,16271],maxPoints:3},{fieldName:"flurry",location:{rowIdx:3,colIdx:1},prereqLocation:{rowIdx:1,colIdx:1},spellIds:[16256,16281],maxPoints:5},{fieldName:"toughness",location:{rowIdx:3,colIdx:2},spellIds:[16252,16306],maxPoints:5},{fieldName:"improvedWindfuryTotem",location:{rowIdx:4,colIdx:0},spellIds:[29192,29193],maxPoints:2},{fieldName:"spiritWeapons",location:{rowIdx:4,colIdx:1},spellIds:[16268],maxPoints:1},{fieldName:"mentalDexterity",location:{rowIdx:4,colIdx:2},spellIds:[51883],maxPoints:3},{fieldName:"unleashedRage",location:{rowIdx:5,colIdx:0},spellIds:[30802,30808,30809],maxPoints:3},{fieldName:"weaponMastery",location:{rowIdx:5,colIdx:2},spellIds:[29082,29084,29086],maxPoints:3},{fieldName:"frozenPower",location:{rowIdx:5,colIdx:3},spellIds:[63373,63374],maxPoints:2},{fieldName:"dualWieldSpecialization",location:{rowIdx:6,colIdx:0},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[30816,30818],maxPoints:3},{location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:4,colIdx:1},spellIds:[30798],maxPoints:1},{fieldName:"stormstrike",location:{rowIdx:6,colIdx:2},spellIds:[17364],maxPoints:1},{fieldName:"staticShock",location:{rowIdx:7,colIdx:0},spellIds:[51525],maxPoints:3},{fieldName:"lavaLash",location:{rowIdx:7,colIdx:1},prereqLocation:{rowIdx:6,colIdx:1},spellIds:[60103],maxPoints:1},{fieldName:"improvedStormstrike",location:{rowIdx:7,colIdx:2},prereqLocation:{rowIdx:6,colIdx:2},spellIds:[51521,51522],maxPoints:2},{fieldName:"mentalQuickness",location:{rowIdx:8,colIdx:0},spellIds:[30812],maxPoints:3},{fieldName:"shamanisticRage",location:{rowIdx:8,colIdx:1},spellIds:[30823],maxPoints:1},{fieldName:"earthenPower",location:{rowIdx:8,colIdx:2},spellIds:[51523,51524],maxPoints:2},{fieldName:"maelstromWeapon",location:{rowIdx:9,colIdx:1},spellIds:[51528],maxPoints:5},{fieldName:"feralSpirit",location:{rowIdx:10,colIdx:1},spellIds:[51533],maxPoints:1}]},{name:"Restoration",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/classic/262.jpg",talents:[{location:{rowIdx:0,colIdx:1},spellIds:[16182,16226],maxPoints:5},{fieldName:"totemicFocus",location:{rowIdx:0,colIdx:2},spellIds:[16173,16222],maxPoints:5},{location:{rowIdx:1,colIdx:0},spellIds:[16184,16209],maxPoints:2},{location:{rowIdx:1,colIdx:1},spellIds:[29187,29189,29191],maxPoints:3},{location:{rowIdx:1,colIdx:2},spellIds:[16179,16214],maxPoints:5},{fieldName:"improvedWaterShield",location:{rowIdx:2,colIdx:0},spellIds:[16180,16196,16198],maxPoints:3},{location:{rowIdx:2,colIdx:1},spellIds:[16181,16230,16232],maxPoints:3},{location:{rowIdx:2,colIdx:2},spellIds:[55198],maxPoints:1},{location:{rowIdx:2,colIdx:3},spellIds:[16176,16235],maxPoints:3},{fieldName:"restorativeTotems",location:{rowIdx:3,colIdx:1},spellIds:[16187,16205],maxPoints:3},{fieldName:"tidalMastery",location:{rowIdx:3,colIdx:2},spellIds:[16194,16218],maxPoints:5},{location:{rowIdx:4,colIdx:0},spellIds:[29206,29205,29202],maxPoints:3},{fieldName:"naturesSwiftness",location:{rowIdx:4,colIdx:2},spellIds:[16188],maxPoints:1},{location:{rowIdx:4,colIdx:3},spellIds:[30864],maxPoints:3},{location:{rowIdx:5,colIdx:2},spellIds:[16178,16210],maxPoints:5},{location:{rowIdx:6,colIdx:0},spellIds:[30881,30883],maxPoints:5},{fieldName:"manaTideTotem",location:{rowIdx:6,colIdx:1},prereqLocation:{rowIdx:3,colIdx:1},spellIds:[16190],maxPoints:1},{location:{rowIdx:6,colIdx:2},prereqLocation:{rowIdx:5,colIdx:2},spellIds:[51886],maxPoints:1},{fieldName:"blessingOfTheEternals",location:{rowIdx:7,colIdx:0},spellIds:[51554,51555],maxPoints:2},{location:{rowIdx:7,colIdx:1},spellIds:[30872],maxPoints:2},{fieldName:"naturesBlessing",location:{rowIdx:7,colIdx:2},spellIds:[30867],maxPoints:3},{fieldName:"ancestralAwakening",location:{rowIdx:8,colIdx:0},spellIds:[51556],maxPoints:3},{location:{rowIdx:8,colIdx:1},spellIds:[974],maxPoints:1},{location:{rowIdx:8,colIdx:2},prereqLocation:{rowIdx:8,colIdx:1},spellIds:[51560],maxPoints:2},{location:{rowIdx:9,colIdx:1},spellIds:[51562],maxPoints:5},{location:{rowIdx:10,colIdx:1},spellIds:[61295],maxPoints:1}]}]),cs={majorGlyphs:{[Mt.GlyphOfChainHeal]:{name:"Glyph of Chain Heal",description:"Your Chain Heal heals 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavegreater.jpg"},[Mt.GlyphOfChainLightning]:{name:"Glyph of Chain Lightning",description:"Your Chain Lightning strikes 1 additional target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_chainlightning.jpg"},[Mt.GlyphOfEarthShield]:{name:"Glyph of Earth Shield",description:"Increases the amount healed by your Earth Shield by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_skinofearth.jpg"},[Mt.GlyphOfEarthlivingWeapon]:{name:"Glyph of Earthliving Weapon",description:"Increases the chance for your Earthliving weapon to trigger by 5%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_earthlivingweapon.jpg"},[Mt.GlyphOfElementalMastery]:{name:"Glyph of Elemental Mastery",description:"Reduces the cooldown of your Elemental Mastery ability by 30 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_wispheal.jpg"},[Mt.GlyphOfFeralSpirit]:{name:"Glyph of Feral Spirit",description:"Your spirit wolves gain an additional 30% of your attack power.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_feralspirit.jpg"},[Mt.GlyphOfFireElementalTotem]:{name:"Glyph of Fire Elemental Totem",description:"Reduces the cooldown of your Fire Elemental Totem by 5 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_elemental_totem.jpg"},[Mt.GlyphOfFireNova]:{name:"Glyph of Fire Nova",description:"Reduces the cooldown of your Fire Nova spell by 3 seconds.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_sealoffire.jpg"},[Mt.GlyphOfFlameShock]:{name:"Glyph of Flame Shock",description:"Increases the critical strike damage bonus of your Flame Shock damage by 60%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_flameshock.jpg"},[Mt.GlyphOfFlametongueWeapon]:{name:"Glyph of Flametongue Weapon",description:"Increases your spell critical strike chance by 2% on each of your weapons with Flametongue Weapon active.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_flametounge.jpg"},[Mt.GlyphOfFrostShock]:{name:"Glyph of Frost Shock",description:"Increases the duration of your Frost Shock by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostshock.jpg"},[Mt.GlyphOfHealingStreamTotem]:{name:"Glyph of Healing Stream Totem",description:"Your Healing Stream Totem heals for an additional 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_spear_04.jpg"},[Mt.GlyphOfHealingWave]:{name:"Glyph of Healing Wave",description:"Your Healing Wave also heals you for 20% of the healing effect when you heal someone else.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_magicimmunity.jpg"},[Mt.GlyphOfHex]:{name:"Glyph of Hex",description:"Increases the damage your Hex target can take before the Hex effect is removed by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_hex.jpg"},[Mt.GlyphOfLava]:{name:"Glyph of Lava",description:"Your Lava Burst spell gains an additional 10% of your spellpower.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_lavaburst.jpg"},[Mt.GlyphOfLavaLash]:{name:"Glyph of Lava Lash",description:"Damage on your Lava Lash is increased by an additional 10% if your weapon is enchanted with Flametongue.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_shaman_lavalash.jpg"},[Mt.GlyphOfLesserHealingWave]:{name:"Glyph of Lesser Healing Wave",description:"Your Lesser Healing Wave heals for 20% more if the target is also affected by Earth Shield.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavelesser.jpg"},[Mt.GlyphOfLightningBolt]:{name:"Glyph of Lightning Bolt",description:"Increases the damage dealt by Lightning Bolt by 4%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg"},[Mt.GlyphOfLightningShield]:{name:"Glyph of Lightning Shield",description:"Increases the damage from Lightning Shield by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightningshield.jpg"},[Mt.GlyphOfManaTide]:{name:"Glyph of Mana Tide",description:"Your Mana Tide Totem grants an additional 1% of each target's maximum mana each time it pulses.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavegreater.jpg"},[Mt.GlyphOfRiptide]:{name:"Glyph of Riptide",description:"Increases the duration of Riptide by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_riptide.jpg"},[Mt.GlyphOfShocking]:{name:"Glyph of Shocking",description:"Reduces your global cooldown when casting your shock spells by 0.5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_earthshock.jpg"},[Mt.GlyphOfStoneclawTotem]:{name:"Glyph of Stoneclaw Totem",description:"Your Stoneclaw Totem also places a damage absorb shield on you, equal to 4 times the strength of the shield it places on your totems.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_stoneclawtotem.jpg"},[Mt.GlyphOfStormstrike]:{name:"Glyph of Stormstrike",description:"Increases the Nature damage bonus from your Stormstrike ability by an additional 8%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_shaman_stormstrike.jpg"},[Mt.GlyphOfThunder]:{name:"Glyph of Thunder",description:"Reduces the cooldown on Thunderstorm by 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_thunderstorm.jpg"},[Mt.GlyphOfTotemOfWrath]:{name:"Glyph of Totem of Wrath",description:"When you cast Totem of Wrath, you gain 30% of the totem's bonus spell power for 5 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_totemofwrath.jpg"},[Mt.GlyphOfWaterMastery]:{name:"Glyph of Water Mastery",description:"Increases the passive mana regeneration of your Water Shield spell by 30%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_shaman_watershield.jpg"},[Mt.GlyphOfWindfuryWeapon]:{name:"Glyph of Windfury Weapon",description:"Increases the chance per swing for Windfury Weapon to trigger by 2%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_cyclone.jpg"}},minorGlyphs:{[At.GlyphOfAstralRecall]:{name:"Glyph of Astral Recall",description:"Cooldown of your Astral Recall spell reduced by 7.5 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_astralrecal.jpg"},[At.GlyphOfGhostWolf]:{name:"Glyph of Ghost Wolf",description:"Your Ghost Wolf form regenerates an additional 1% of your maximum health every 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_spiritwolf.jpg"},[At.GlyphOfRenewedLife]:{name:"Glyph of Renewed Life",description:"Your Reincarnation spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg"},[At.GlyphOfThunderstorm]:{name:"Glyph of Thunderstorm",description:"Increases the mana you receive from your Thunderstorm spell by 2%, but it no longer knocks enemies back.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shaman_thunderstorm.jpg"},[At.GlyphOfWaterBreathing]:{name:"Glyph of Water Breathing",description:"Your Water Breathing spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonbreath.jpg"},[At.GlyphOfWaterShield]:{name:"Glyph of Water Shield",description:"Increases the number of charges on your Water Shield spell by 1.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_shaman_watershield.jpg"},[At.GlyphOfWaterWalking]:{name:"Glyph of Water Walking",description:"Your Water Walking spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_windwalkon.jpg"}}},ds=Kr([{name:"Affliction",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/302.jpg",talents:[{fieldName:"improvedCurseOfAgony",location:{rowIdx:0,colIdx:0},spellIds:[18827,18829],maxPoints:2},{fieldName:"suppression",location:{rowIdx:0,colIdx:1},spellIds:[18174,18175,18176],maxPoints:3},{fieldName:"improvedCorruption",location:{rowIdx:0,colIdx:2},spellIds:[17810,17811,17812,17813,17814],maxPoints:5},{fieldName:"improvedCurseOfWeakness",location:{rowIdx:1,colIdx:0},spellIds:[18179,18180],maxPoints:2},{fieldName:"improvedDrainSoul",location:{rowIdx:1,colIdx:1},spellIds:[18213,18372],maxPoints:2},{fieldName:"improvedLifeTap",location:{rowIdx:1,colIdx:2},spellIds:[18182,18183],maxPoints:2},{fieldName:"soulSiphon",location:{rowIdx:1,colIdx:3},spellIds:[17804,17805],maxPoints:2},{fieldName:"improvedFear",location:{rowIdx:2,colIdx:0},spellIds:[53754,53759],maxPoints:2},{fieldName:"felConcentration",location:{rowIdx:2,colIdx:1},spellIds:[17783,17784,17785],maxPoints:3},{fieldName:"amplifyCurse",location:{rowIdx:2,colIdx:2},spellIds:[18288],maxPoints:1},{fieldName:"grimReach",location:{rowIdx:3,colIdx:0},spellIds:[18218,18219],maxPoints:2},{fieldName:"nightfall",location:{rowIdx:3,colIdx:1},spellIds:[18094,18095],maxPoints:2},{fieldName:"empoweredCorruption",location:{rowIdx:3,colIdx:3},spellIds:[32381,32382,32383],maxPoints:3},{fieldName:"shadowEmbrace",location:{rowIdx:4,colIdx:0},spellIds:[32385,32387,32392,32393,32394],maxPoints:5},{fieldName:"siphonLife",location:{rowIdx:4,colIdx:1},spellIds:[63108],maxPoints:1},{fieldName:"curseOfExhaustion",location:{rowIdx:4,colIdx:2},spellIds:[18223],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"improvedFelhunter",location:{rowIdx:5,colIdx:0},spellIds:[54037,54038],maxPoints:2},{fieldName:"shadowMastery",location:{rowIdx:5,colIdx:1},spellIds:[18271,18272,18273,18274,18275],maxPoints:5,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"eradication",location:{rowIdx:6,colIdx:0},spellIds:[47195,47196,47197],maxPoints:3},{fieldName:"contagion",location:{rowIdx:6,colIdx:1},spellIds:[30060,30061,30062,30063,30064],maxPoints:5},{fieldName:"darkPact",location:{rowIdx:6,colIdx:2},spellIds:[18220],maxPoints:1},{fieldName:"improvedHowlOfTerror",location:{rowIdx:7,colIdx:0},spellIds:[30054,30057],maxPoints:2},{fieldName:"malediction",location:{rowIdx:7,colIdx:2},spellIds:[32477,32483,32484],maxPoints:3},{fieldName:"deathsEmbrace",location:{rowIdx:8,colIdx:0},spellIds:[47198,47199,47200],maxPoints:3},{fieldName:"unstableAffliction",location:{rowIdx:8,colIdx:1},spellIds:[30108],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"pandemic",location:{rowIdx:8,colIdx:2},spellIds:[58435],maxPoints:1,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"everlastingAffliction",location:{rowIdx:9,colIdx:1},spellIds:[47201,47202,47203,47204,47205],maxPoints:5},{fieldName:"haunt",location:{rowIdx:10,colIdx:1},spellIds:[48181],maxPoints:1}]},{name:"Demonology",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/303.jpg",talents:[{fieldName:"improvedHealthstone",location:{rowIdx:0,colIdx:0},spellIds:[18692,18693],maxPoints:2},{fieldName:"improvedImp",location:{rowIdx:0,colIdx:1},spellIds:[18694,18695,18696],maxPoints:3},{fieldName:"demonicEmbrace",location:{rowIdx:0,colIdx:2},spellIds:[18697,18698,18699],maxPoints:3},{fieldName:"felSynergy",location:{rowIdx:0,colIdx:3},spellIds:[47230,47231],maxPoints:2},{fieldName:"improvedHealthFunnel",location:{rowIdx:1,colIdx:0},spellIds:[18703,18704],maxPoints:2},{fieldName:"demonicBrutality",location:{rowIdx:1,colIdx:1},spellIds:[18705,18706,18707],maxPoints:3},{fieldName:"felVitality",location:{rowIdx:1,colIdx:2},spellIds:[18731,18743,18744],maxPoints:3},{fieldName:"improvedSayaad",location:{rowIdx:2,colIdx:0},spellIds:[18754,18755,18756],maxPoints:3},{fieldName:"soulLink",location:{rowIdx:2,colIdx:1},spellIds:[19028],maxPoints:1},{fieldName:"felDomination",location:{rowIdx:2,colIdx:2},spellIds:[18708],maxPoints:1},{fieldName:"demonicAegis",location:{rowIdx:2,colIdx:3},spellIds:[30143,30144,30145],maxPoints:3},{fieldName:"unholyPower",location:{rowIdx:3,colIdx:1},spellIds:[18769,18770,18771,18772,18773],maxPoints:5,prereqLocation:{rowIdx:2,colIdx:1}},{fieldName:"masterSummoner",location:{rowIdx:3,colIdx:2},spellIds:[18709,18710],maxPoints:2,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"manaFeed",location:{rowIdx:4,colIdx:0},spellIds:[30326],maxPoints:1,prereqLocation:{rowIdx:3,colIdx:1}},{fieldName:"masterConjuror",location:{rowIdx:4,colIdx:2},spellIds:[18767,18768],maxPoints:2},{fieldName:"masterDemonologist",location:{rowIdx:5,colIdx:1},spellIds:[23785,23822,23823,23824,23825],maxPoints:5,prereqLocation:{rowIdx:3,colIdx:1}},{fieldName:"moltenCore",location:{rowIdx:5,colIdx:2},spellIds:[47245,47246,47247],maxPoints:3},{fieldName:"demonicResilience",location:{rowIdx:6,colIdx:0},spellIds:[30319,30320,30321],maxPoints:3},{fieldName:"demonicEmpowerment",location:{rowIdx:6,colIdx:1},spellIds:[47193],maxPoints:1,prereqLocation:{rowIdx:5,colIdx:1}},{fieldName:"demonicKnowledge",location:{rowIdx:6,colIdx:2},spellIds:[35691,35692,35693],maxPoints:3},{fieldName:"demonicTactics",location:{rowIdx:7,colIdx:1},spellIds:[30242,30245,30246,30247,30248],maxPoints:5},{fieldName:"decimation",location:{rowIdx:7,colIdx:2},spellIds:[63156,63158],maxPoints:2},{fieldName:"improvedDemonicTactics",location:{rowIdx:8,colIdx:0},spellIds:[54347,54348,54349],maxPoints:3,prereqLocation:{rowIdx:7,colIdx:1}},{fieldName:"summonFelguard",location:{rowIdx:8,colIdx:1},spellIds:[30146],maxPoints:1},{fieldName:"nemesis",location:{rowIdx:8,colIdx:2},spellIds:[63117,63121,63123],maxPoints:3},{fieldName:"demonicPact",location:{rowIdx:9,colIdx:1},spellIds:[47236,47237,47238,47239,47240],maxPoints:5},{fieldName:"metamorphosis",location:{rowIdx:10,colIdx:1},spellIds:[59672],maxPoints:1}]},{name:"Destruction",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/301.jpg",talents:[{fieldName:"improvedShadowBolt",location:{rowIdx:0,colIdx:1},spellIds:[17793,17796,17801,17802,17803],maxPoints:5},{fieldName:"bane",location:{rowIdx:0,colIdx:2},spellIds:[17788,17789,17790,17791,17792],maxPoints:5},{fieldName:"aftermath",location:{rowIdx:1,colIdx:0},spellIds:[18119,18120],maxPoints:2},{fieldName:"moltenSkin",location:{rowIdx:1,colIdx:1},spellIds:[63349,63350,63351],maxPoints:3},{fieldName:"cataclysm",location:{rowIdx:1,colIdx:2},spellIds:[17778,17779,17780],maxPoints:3},{fieldName:"demonicPower",location:{rowIdx:2,colIdx:0},spellIds:[18126,18127],maxPoints:2},{fieldName:"shadowburn",location:{rowIdx:2,colIdx:1},spellIds:[17877],maxPoints:1},{fieldName:"ruin",location:{rowIdx:2,colIdx:2},spellIds:[17959,59738,59739,59740,59741],maxPoints:5},{fieldName:"intensity",location:{rowIdx:3,colIdx:0},spellIds:[18135,18136],maxPoints:2},{fieldName:"destructiveReach",location:{rowIdx:3,colIdx:1},spellIds:[17917,17918],maxPoints:2},{fieldName:"improvedSearingPain",location:{rowIdx:3,colIdx:3},spellIds:[17927,17929,17930],maxPoints:3},{fieldName:"backlash",location:{rowIdx:4,colIdx:0},spellIds:[34935,34938,34939],maxPoints:3,prereqLocation:{rowIdx:3,colIdx:0}},{fieldName:"improvedImmolate",location:{rowIdx:4,colIdx:1},spellIds:[17815,17833,17834],maxPoints:3},{fieldName:"devastation",location:{rowIdx:4,colIdx:2},spellIds:[18130],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"netherProtection",location:{rowIdx:5,colIdx:0},spellIds:[30299,30301,30302],maxPoints:3},{fieldName:"emberstorm",location:{rowIdx:5,colIdx:2},spellIds:[17954,17955,17956,17957,17958],maxPoints:5},{fieldName:"conflagrate",location:{rowIdx:6,colIdx:1},spellIds:[17962],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"soulLeech",location:{rowIdx:6,colIdx:2},spellIds:[30293,30295,30296],maxPoints:3},{fieldName:"pyroclasm",location:{rowIdx:6,colIdx:3},spellIds:[18096,18073,63245],maxPoints:3},{fieldName:"shadowAndFlame",location:{rowIdx:7,colIdx:1},spellIds:[30288,30289,30290,30291,30292],maxPoints:5},{fieldName:"improvedSoulLeech",location:{rowIdx:7,colIdx:2},spellIds:[54117,54118],maxPoints:2,prereqLocation:{rowIdx:6,colIdx:2}},{fieldName:"backdraft",location:{rowIdx:8,colIdx:0},spellIds:[47258,47259,47260],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"shadowfury",location:{rowIdx:8,colIdx:1},spellIds:[30283],maxPoints:1},{fieldName:"empoweredImp",location:{rowIdx:8,colIdx:2},spellIds:[47220,47221,47223],maxPoints:3},{fieldName:"fireAndBrimstone",location:{rowIdx:9,colIdx:1},spellIds:[47266,47267,47268,47269,47270],maxPoints:5},{fieldName:"chaosBolt",location:{rowIdx:10,colIdx:1},spellIds:[50796],maxPoints:1}]}]),ms={majorGlyphs:{[Nt.GlyphOfChaosBolt]:{name:"Glyph of Chaos Bolt",description:"Reduces the cooldown on Chaos Bolt by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warlock_chaosbolt.jpg"},[Nt.GlyphOfConflagrate]:{name:"Glyph of Conflagrate",description:"Your Conflagrate spell no longer consumes your Immolate or Shadowflame spell from the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_fireball.jpg"},[Nt.GlyphOfCorruption]:{name:"Glyph of Corruption",description:"Your Corruption spell has a 4% chance to cause you to enter a Shadow Trance state after damaging the opponent. The Shadow Trance state reduces the casting time of your next Shadow Bolt spell by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_abominationexplosion.jpg"},[Nt.GlyphOfCurseOfAgony]:{name:"Glyph of Curse of Agony",description:"Increases the duration of your Curse of Agony by 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_curseofsargeras.jpg"},[Nt.GlyphOfDeathCoil]:{name:"Glyph of Death Coil",description:"Increases the duration of your Death Coil by 0.5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg"},[Nt.GlyphOfDemonicCircle]:{name:"Glyph of Demonic Circle",description:"Reduces the cooldown on Demonic Circle by 4 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demoniccirclesummon.jpg"},[Nt.GlyphOfFear]:{name:"Glyph of Fear",description:"Increases the damage your Fear target can take before the Fear effect is removed by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_possession.jpg"},[Nt.GlyphOfFelguard]:{name:"Glyph of Felguard",description:"Increases the Felguard's total attack power by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelguard.jpg"},[Nt.GlyphOfFelhunter]:{name:"Glyph of Felhunter",description:"When your Felhunter uses Devour Magic, you will also be healed for that amount.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelhunter.jpg"},[Nt.GlyphOfHaunt]:{name:"Glyph of Haunt",description:"The bonus damage granted by your Haunt spell is increased by an additional 3%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warlock_haunt.jpg"},[Nt.GlyphOfHealthFunnel]:{name:"Glyph of Health Funnel",description:"Reduces the pushback suffered from damaging attacks while channeling your Health Funnel spell by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg"},[Nt.GlyphOfHealthstone]:{name:"Glyph of Healthstone",description:"You receive 30% more healing from using a healthstone.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_stone_04.jpg"},[Nt.GlyphOfHowlOfTerror]:{name:"Glyph of Howl of Terror",description:"Reduces the cooldown on your Howl of Terror spell by 8 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathscream.jpg"},[Nt.GlyphOfImmolate]:{name:"Glyph of Immolate",description:"Increases the periodic damage of your Immolate by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_immolation.jpg"},[Nt.GlyphOfImp]:{name:"Glyph of Imp",description:"Increases the damage done by your Imp's Firebolt spell by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonimp.jpg"},[Nt.GlyphOfIncinerate]:{name:"Glyph of Incinerate",description:"Increases the damage done by Incinerate by 5%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_burnout.jpg"},[Nt.GlyphOfLifeTap]:{name:"Glyph of Life Tap",description:"When you use Life Tap or Dark Pact, you gain 20% of your Spirit as spell power for 40 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_burningspirit.jpg"},[Nt.GlyphOfMetamorphosis]:{name:"Glyph of Metamorphosis",description:"Increases the duration of your Metamorphosis by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonform.jpg"},[Nt.GlyphOfQuickDecay]:{name:"Glyph of Quick Decay",description:"Your haste now reduces the time between periodic damage ticks of your Corruption spell.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_abominationexplosion.jpg"},[Nt.GlyphOfSearingPain]:{name:"Glyph of Searing Pain",description:"Increases the critical strike bonus of your Searing Pain by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_fire_soulburn.jpg"},[Nt.GlyphOfShadowBolt]:{name:"Glyph of Shadow Bolt",description:"Reduces the mana cost of your Shadow Bolt by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowbolt.jpg"},[Nt.GlyphOfShadowburn]:{name:"Glyph of Shadowburn",description:"Increases the critical strike chance of Shadowburn by 20% when the target is below 35% health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_scourgebuild.jpg"},[Nt.GlyphOfShadowflame]:{name:"Glyph of Shadowflame",description:"Your Shadowflame also applies a 70% movement speed slow on its victims.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warlock_shadowflame.jpg"},[Nt.GlyphOfSiphonLife]:{name:"Glyph of Siphon Life",description:"Increases the healing you receive from your Siphon Life talent by 25%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_requiem.jpg"},[Nt.GlyphOfSoulLink]:{name:"Glyph of Soul Link",description:"Increases the percentage of damage shared via your Soul Link by an additional 5%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_gathershadows.jpg"},[Nt.GlyphOfSoulstone]:{name:"Glyph of Soulstone",description:"Increases the amount of health you gain from resurrecting via a Soulstone by 300%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_soulgem.jpg"},[Nt.GlyphOfSuccubus]:{name:"Glyph of Succubus",description:"Your Succubus's Seduction ability also removes all damage over time effects from the target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonsuccubus.jpg"},[Nt.GlyphOfUnstableAffliction]:{name:"Glyph of Unstable Affliction",description:"Decreases the casting time of your Unstable Affliction by 0.2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_unstableaffliction_3.jpg"},[Nt.GlyphOfVoidwalker]:{name:"Glyph of Voidwalker",description:"Increases your Voidwalker's total Stamina by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonvoidwalker.jpg"}},minorGlyphs:{[Ft.GlyphOfCurseOfExhausion]:{name:"Glyph of Curse of Exhausion",description:"Increases the range of your Curse of Exhaustion spell by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_grimward.jpg"},[Ft.GlyphOfDrainSoul]:{name:"Glyph of Drain Soul",description:"Your Drain Soul ability occasionally creates an additional soul shard.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_haunting.jpg"},[Ft.GlyphOfEnslaveDemon]:{name:"Glyph of Enslave Demon",description:"Reduces the cast time of your Enslave Demon spell by 50%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_enslavedemon.jpg"},[Ft.GlyphOfKilrogg]:{name:"Glyph of Kilrogg",description:"Increases the movement speed of your Eye of Kilrogg by 50% and allows it to fly in areas where flying mounts are enabled.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_evileye.jpg"},[Ft.GlyphOfSouls]:{name:"Glyph of Souls",description:"Reduces the mana cost of your Ritual of Souls spell by 70%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadesofdarkness.jpg"},[Ft.GlyphOfUnendingBreath]:{name:"Glyph of Unending Breath",description:"Increases the swim speed of targets affected by your Unending Breath spell by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonbreath.jpg"}}},ps=Kr([{name:"Arms",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/161.jpg",talents:[{fieldName:"improvedHeroicStrike",location:{rowIdx:0,colIdx:0},spellIds:[12282,12663,12664],maxPoints:3},{fieldName:"deflection",location:{rowIdx:0,colIdx:1},spellIds:[16462,16463,16464,16465,16466],maxPoints:5},{fieldName:"improvedRend",location:{rowIdx:0,colIdx:2},spellIds:[12286,12658],maxPoints:2},{fieldName:"improvedCharge",location:{rowIdx:1,colIdx:0},spellIds:[12285,12697],maxPoints:2},{fieldName:"ironWill",location:{rowIdx:1,colIdx:1},spellIds:[12300,12959,12960],maxPoints:3},{fieldName:"tacticalMastery",location:{rowIdx:1,colIdx:2},spellIds:[12295,12676,12677],maxPoints:3},{fieldName:"improvedOverpower",location:{rowIdx:2,colIdx:0},spellIds:[12290,12963],maxPoints:2},{fieldName:"angerManagement",location:{rowIdx:2,colIdx:1},spellIds:[12296],maxPoints:1},{fieldName:"impale",location:{rowIdx:2,colIdx:2},spellIds:[16493,16494],maxPoints:2},{fieldName:"deepWounds",location:{rowIdx:2,colIdx:3},spellIds:[12834,12849,12867],maxPoints:3,prereqLocation:{rowIdx:2,colIdx:2}},{fieldName:"twoHandedWeaponSpecialization",location:{rowIdx:3,colIdx:1},spellIds:[12163,12711,12712],maxPoints:3},{fieldName:"tasteForBlood",location:{rowIdx:3,colIdx:2},spellIds:[56636,56637,56638],maxPoints:3},{fieldName:"poleaxeSpecialization",location:{rowIdx:4,colIdx:0},spellIds:[12700,12781,12783,12784,12785],maxPoints:5},{fieldName:"sweepingStrikes",location:{rowIdx:4,colIdx:1},spellIds:[12328],maxPoints:1},{fieldName:"maceSpecialization",location:{rowIdx:4,colIdx:2},spellIds:[12284,12701,12702,12703,12704],maxPoints:5},{fieldName:"swordSpecialization",location:{rowIdx:4,colIdx:3},spellIds:[12281,12812,12813,12814,12815],maxPoints:5},{fieldName:"weaponMastery",location:{rowIdx:5,colIdx:0},spellIds:[20504,20505],maxPoints:2},{fieldName:"improvedHamstring",location:{rowIdx:5,colIdx:2},spellIds:[12289,12668,23695],maxPoints:3},{fieldName:"trauma",location:{rowIdx:5,colIdx:3},spellIds:[46854,46855],maxPoints:2},{fieldName:"secondWind",location:{rowIdx:6,colIdx:0},spellIds:[29834,29838],maxPoints:2},{fieldName:"mortalStrike",location:{rowIdx:6,colIdx:1},spellIds:[12294],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"strengthOfArms",location:{rowIdx:6,colIdx:2},spellIds:[46865,46866],maxPoints:2},{fieldName:"improvedSlam",location:{rowIdx:6,colIdx:3},spellIds:[12862,12330],maxPoints:2},{fieldName:"juggernaut",location:{rowIdx:7,colIdx:0},spellIds:[64976],maxPoints:1},{fieldName:"improvedMortalStrike",location:{rowIdx:7,colIdx:1},spellIds:[35446,35448,35449],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"unrelentingAssault",location:{rowIdx:7,colIdx:2},spellIds:[46859,46860],maxPoints:2},{fieldName:"suddenDeath",location:{rowIdx:8,colIdx:0},spellIds:[29723,29724,29725],maxPoints:3},{fieldName:"endlessRage",location:{rowIdx:8,colIdx:1},spellIds:[29623],maxPoints:1},{fieldName:"bloodFrenzy",location:{rowIdx:8,colIdx:2},spellIds:[29836,29859],maxPoints:2},{fieldName:"wreckingCrew",location:{rowIdx:9,colIdx:1},spellIds:[46867,56611,56612,56613,56614],maxPoints:5},{fieldName:"bladestorm",location:{rowIdx:10,colIdx:1},spellIds:[46924],maxPoints:1}]},{name:"Fury",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/164.jpg",talents:[{fieldName:"armoredToTheTeeth",location:{rowIdx:0,colIdx:0},spellIds:[61216,61221,61222],maxPoints:3},{fieldName:"boomingVoice",location:{rowIdx:0,colIdx:1},spellIds:[12321,12835],maxPoints:2},{fieldName:"cruelty",location:{rowIdx:0,colIdx:2},spellIds:[12320,12852,12853,12855,12856],maxPoints:5},{fieldName:"improvedDemoralizingShout",location:{rowIdx:1,colIdx:1},spellIds:[12324,12876,12877,12878,12879],maxPoints:5},{fieldName:"unbridledWrath",location:{rowIdx:1,colIdx:2},spellIds:[12322,12999,13e3,13001,13002],maxPoints:5},{fieldName:"improvedCleave",location:{rowIdx:2,colIdx:0},spellIds:[12329,12950,20496],maxPoints:3},{fieldName:"piercingHowl",location:{rowIdx:2,colIdx:1},spellIds:[12323],maxPoints:1},{fieldName:"bloodCraze",location:{rowIdx:2,colIdx:2},spellIds:[16487,16489,16492],maxPoints:3},{fieldName:"commandingPresence",location:{rowIdx:2,colIdx:3},spellIds:[12318,12857,12858,12860,12861],maxPoints:5},{fieldName:"dualWieldSpecialization",location:{rowIdx:3,colIdx:0},spellIds:[23584,23585,23586,23587,23588],maxPoints:5},{fieldName:"improvedExecute",location:{rowIdx:3,colIdx:1},spellIds:[20502,20503],maxPoints:2},{fieldName:"enrage",location:{rowIdx:3,colIdx:2},spellIds:[12317,13045,13046,13047,13048],maxPoints:5},{fieldName:"precision",location:{rowIdx:4,colIdx:0},spellIds:[29590,29591,29592],maxPoints:3},{fieldName:"deathWish",location:{rowIdx:4,colIdx:1},spellIds:[12292],maxPoints:1},{fieldName:"improvedIntercept",location:{rowIdx:4,colIdx:2},spellIds:[29888,29889],maxPoints:2},{fieldName:"improvedBerserkerRage",location:{rowIdx:5,colIdx:0},spellIds:[20500,20501],maxPoints:2},{fieldName:"flurry",location:{rowIdx:5,colIdx:2},spellIds:[12319,12971,12972,12973,12974],maxPoints:5},{fieldName:"intensifyRage",location:{rowIdx:6,colIdx:0},spellIds:[46908,46909,56924],maxPoints:3},{fieldName:"bloodthirst",location:{rowIdx:6,colIdx:1},spellIds:[23881],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"improvedWhirlwind",location:{rowIdx:6,colIdx:3},spellIds:[29721,29776],maxPoints:2},{fieldName:"furiousAttacks",location:{rowIdx:7,colIdx:0},spellIds:[46910,46911],maxPoints:2},{fieldName:"improvedBerserkerStance",location:{rowIdx:7,colIdx:3},spellIds:[29759,29760,29761,29762,29763],maxPoints:5},{fieldName:"heroicFury",location:{rowIdx:8,colIdx:0},spellIds:[60970],maxPoints:1},{fieldName:"rampage",location:{rowIdx:8,colIdx:1},spellIds:[29801],maxPoints:1,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"bloodsurge",location:{rowIdx:8,colIdx:2},spellIds:[46913,46914,46915],maxPoints:3,prereqLocation:{rowIdx:6,colIdx:1}},{fieldName:"unendingFury",location:{rowIdx:9,colIdx:1},spellIds:[56927,56929,56930,56931,56932],maxPoints:5},{fieldName:"titansGrip",location:{rowIdx:10,colIdx:1},spellIds:[46917],maxPoints:1}]},{name:"Protection",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/163.jpg",talents:[{fieldName:"improvedBloodrage",location:{rowIdx:0,colIdx:0},spellIds:[12301,12818],maxPoints:2},{fieldName:"shieldSpecialization",location:{rowIdx:0,colIdx:1},spellIds:[12298,12724,12725,12726,12727],maxPoints:5},{fieldName:"improvedThunderClap",location:{rowIdx:0,colIdx:2},spellIds:[12287,12665,12666],maxPoints:3},{fieldName:"incite",location:{rowIdx:1,colIdx:1},spellIds:[50685,50686,50687],maxPoints:3},{fieldName:"anticipation",location:{rowIdx:1,colIdx:2},spellIds:[55129,12750,12751,12752,12753],maxPoints:5},{fieldName:"lastStand",location:{rowIdx:2,colIdx:0},spellIds:[12975],maxPoints:1},{fieldName:"improvedRevenge",location:{rowIdx:2,colIdx:1},spellIds:[12797,12799],maxPoints:2},{fieldName:"shieldMastery",location:{rowIdx:2,colIdx:2},spellIds:[29598,29599],maxPoints:2},{fieldName:"toughness",location:{rowIdx:2,colIdx:3},spellIds:[12299,12761,12762,12763,12764],maxPoints:5},{fieldName:"improvedSpellReflection",location:{rowIdx:3,colIdx:0},spellIds:[59088,59089],maxPoints:2},{fieldName:"improvedDisarm",location:{rowIdx:3,colIdx:1},spellIds:[12313,12804],maxPoints:2},{fieldName:"puncture",location:{rowIdx:3,colIdx:2},spellIds:[12308,12810,12811],maxPoints:3},{fieldName:"improvedDisciplines",location:{rowIdx:4,colIdx:0},spellIds:[12312,12803],maxPoints:2},{fieldName:"concussionBlow",location:{rowIdx:4,colIdx:1},spellIds:[12809],maxPoints:1},{fieldName:"gagOrder",location:{rowIdx:4,colIdx:2},spellIds:[12311,12958],maxPoints:2},{fieldName:"oneHandedWeaponSpecialization",location:{rowIdx:5,colIdx:2},spellIds:[16538,16539,16540,16541,16542],maxPoints:5},{fieldName:"improvedDefensiveStance",location:{rowIdx:6,colIdx:0},spellIds:[29593,29594],maxPoints:2},{fieldName:"vigilance",location:{rowIdx:6,colIdx:1},spellIds:[50720],maxPoints:1,prereqLocation:{rowIdx:4,colIdx:1}},{fieldName:"focusedRage",location:{rowIdx:6,colIdx:2},spellIds:[29787,29790,29792],maxPoints:3},{fieldName:"vitality",location:{rowIdx:7,colIdx:1},spellIds:[29140,29143,29144],maxPoints:3},{fieldName:"safeguard",location:{rowIdx:7,colIdx:2},spellIds:[46945,46949],maxPoints:2},{fieldName:"warbringer",location:{rowIdx:8,colIdx:0},spellIds:[57499],maxPoints:1},{fieldName:"devastate",location:{rowIdx:8,colIdx:1},spellIds:[20243],maxPoints:1},{fieldName:"criticalBlock",location:{rowIdx:8,colIdx:2},spellIds:[47294,47295,47296],maxPoints:3},{fieldName:"swordAndBoard",location:{rowIdx:9,colIdx:1},spellIds:[46951,46952,46953],maxPoints:3,prereqLocation:{rowIdx:8,colIdx:1}},{fieldName:"damageShield",location:{rowIdx:9,colIdx:2},spellIds:[58872,58874],maxPoints:2},{fieldName:"shockwave",location:{rowIdx:10,colIdx:1},spellIds:[46968],maxPoints:1}]}]),hs={majorGlyphs:{[ht.GlyphOfBarbaricInsults]:{name:"Glyph of Barbaric Insults",description:"Your Mocking Blow ability generates 100% additional threat.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg"},[ht.GlyphOfBladestorm]:{name:"Glyph of Bladestorm",description:"Reduces the cooldown on Bladestorm by 15 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_bladestorm.jpg"},[ht.GlyphOfBlocking]:{name:"Glyph of Blocking",description:"Increases your block value by 10% for 10 sec after using your Shield Slam ability.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_shield_05.jpg"},[ht.GlyphOfBloodthirst]:{name:"Glyph of Bloodthirst",description:"Increases the healing you receive from your Bloodthirst ability by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_bloodlust.jpg"},[ht.GlyphOfCleaving]:{name:"Glyph of Cleaving",description:"Increases the number of targets your Cleave hits by 1.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_cleave.jpg"},[ht.GlyphOfDevastate]:{name:"Glyph of Devastate",description:"Your Devastate ability now applies two stacks of Sunder Armor.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_sword_11.jpg"},[ht.GlyphOfEnragedRegeneration]:{name:"Glyph of Enraged Regeneration",description:"Your Enraged Regeneration ability heals for an additional 10% of your health over its duration.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_focusedrage.jpg"},[ht.GlyphOfExecution]:{name:"Glyph of Execution",description:"Your Execute ability deals damage as if you had 10 additional rage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_sword_48.jpg"},[ht.GlyphOfHamstring]:{name:"Glyph of Hamstring",description:"Gives your Hamstring ability a 10% chance to immobilize the target for 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_shockwave.jpg"},[ht.GlyphOfHeroicStrike]:{name:"Glyph of Heroic Strike",description:"You gain 10 rage when you critically strike with your Heroic Strike ability.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_ambush.jpg"},[ht.GlyphOfIntervene]:{name:"Glyph of Intervene",description:"Increases the number attacks you intercept for your Intervene target by 1.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_victoryrush.jpg"},[ht.GlyphOfLastStand]:{name:"Glyph of Last Stand",description:"Reduces the cooldown of your Last Stand ability by 1 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_holy_ashestoashes.jpg"},[ht.GlyphOfMortalStrike]:{name:"Glyph of Mortal Strike",description:"Increases the damage of your Mortal Strike ability by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_savageblow.jpg"},[ht.GlyphOfOverpower]:{name:"Glyph of Overpower",description:"Adds a 100% chance to enable your Overpower when your attacks are parried.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_meleedamage.jpg"},[ht.GlyphOfRapidCharge]:{name:"Glyph of Rapid Charge",description:"Reduces the cooldown of your Charge ability by 7%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_charge.jpg"},[ht.GlyphOfRending]:{name:"Glyph of Rending",description:"Increases the duration of your Rend ability by 6 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_gouge.jpg"},[ht.GlyphOfResonatingPower]:{name:"Glyph of Resonating Power",description:"Reduces the rage cost of your Thunder Clap ability by 5.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_thunderclap.jpg"},[ht.GlyphOfRevenge]:{name:"Glyph of Revenge",description:"After using Revenge, your next Heroic Strike costs no rage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_revenge.jpg"},[ht.GlyphOfShieldWall]:{name:"Glyph of Shield Wall",description:"Reduces the cooldown on Shield Wall by 2 min, but Shield Wall now only reduces damage taken by 40%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shieldwall.jpg"},[ht.GlyphOfShockwave]:{name:"Glyph of Shockwave",description:"Reduces the cooldown on Shockwave by 3 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shockwave.jpg"},[ht.GlyphOfSpellReflection]:{name:"Glyph of Spell Reflection",description:"Reduces the cooldown on Spell Reflection by 1 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shieldreflection.jpg"},[ht.GlyphOfSunderArmor]:{name:"Glyph of Sunder Armor",description:"Your Sunder Armor ability affects a second nearby target.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_sunder.jpg"},[ht.GlyphOfSweepingStrikes]:{name:"Glyph of Sweeping Strikes",description:"Reduces the rage cost of your Sweeping Strikes ability by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_rogue_slicedice.jpg"},[ht.GlyphOfTaunt]:{name:"Glyph of Taunt",description:"Increases the chance for your Taunt ability to succeed by 8%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg"},[ht.GlyphOfVictoryRush]:{name:"Glyph of Victory Rush",description:"Your Victory Rush ability has a 30% increased critical strike chance.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_devastate.jpg"},[ht.GlyphOfVigilance]:{name:"Glyph of Vigilance",description:"Your Vigilance ability transfers an additional 5% of your target's threat to you.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_vigilance.jpg"},[ht.GlyphOfWhirlwind]:{name:"Glyph of Whirlwind",description:"Reduces the cooldown of your Whirlwind by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_whirlwind.jpg"}},minorGlyphs:{[gt.GlyphOfBattle]:{name:"Glyph of Battle",description:"Increases the duration of your Battle Shout ability by 2 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_battleshout.jpg"},[gt.GlyphOfBloodrage]:{name:"Glyph of Bloodrage",description:"Reduces the health cost of your Bloodrage ability by 100%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_racial_bloodrage.jpg"},[gt.GlyphOfCharge]:{name:"Glyph of Charge",description:"Increases the range of your Charge ability by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_charge.jpg"},[gt.GlyphOfCommand]:{name:"Glyph of Command",description:"Increases the duration of your Commanding Shout ability by 2 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_rallyingcry.jpg"},[gt.GlyphOfEnduringVictory]:{name:"Glyph of Enduring Victory",description:"Increases the window of opportunity in which you can use Victory Rush by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_devastate.jpg"},[gt.GlyphOfMockingBlow]:{name:"Glyph of Mocking Blow",description:"Increases the damage of your Mocking Blow ability by 25%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg"},[gt.GlyphOfThunderClap]:{name:"Glyph of Thunder Clap",description:"Increases the radius of your Thunder Clap ability by 2 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_thunderclap.jpg"}}},gs=Kr([{name:"Blood",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/398.jpg",talents:[{fieldName:"butchery",location:{rowIdx:0,colIdx:0},spellIds:[48979,49483],maxPoints:2},{fieldName:"subversion",location:{rowIdx:0,colIdx:1},spellIds:[48997,49490,49491],maxPoints:3},{fieldName:"bladeBarrier",location:{rowIdx:0,colIdx:2},spellIds:[49182,49500,49501,55225,55226],maxPoints:5},{fieldName:"bladedArmor",location:{rowIdx:1,colIdx:0},spellIds:[48978,49390,49391,49392,49393],maxPoints:5},{fieldName:"scentOfBlood",location:{rowIdx:1,colIdx:1},spellIds:[49004,49508,49509],maxPoints:3},{fieldName:"twoHandedWeaponSpecialization",location:{rowIdx:1,colIdx:2},spellIds:[55107,55108],maxPoints:2},{fieldName:"runeTap",location:{rowIdx:2,colIdx:0},spellIds:[48982],maxPoints:1},{fieldName:"darkConviction",location:{rowIdx:2,colIdx:1},spellIds:[48987,49477,49478,49479,49480],maxPoints:5},{fieldName:"deathRuneMastery",location:{rowIdx:2,colIdx:2},spellIds:[49467,50033,50034],maxPoints:3},{fieldName:"improvedRuneTap",location:{rowIdx:3,colIdx:0},spellIds:[48985,49488,49489],maxPoints:3,prereqLocation:{rowIdx:2,colIdx:0}},{fieldName:"spellDeflection",location:{rowIdx:3,colIdx:2},spellIds:[49145,49495,49497],maxPoints:3},{fieldName:"vendetta",location:{rowIdx:3,colIdx:3},spellIds:[49015,50154,55136],maxPoints:3},{fieldName:"bloodyStrikes",location:{rowIdx:4,colIdx:0},spellIds:[48977,49394,49395],maxPoints:3},{fieldName:"veteranOfTheThirdWar",location:{rowIdx:4,colIdx:2},spellIds:[49006,49526,50029],maxPoints:3},{fieldName:"markOfBlood",location:{rowIdx:4,colIdx:3},spellIds:[49005],maxPoints:1},{fieldName:"bloodyVengeance",location:{rowIdx:5,colIdx:1},spellIds:[48988,49503,49504],maxPoints:3,prereqLocation:{rowIdx:2,colIdx:1}},{fieldName:"abominationsMight",location:{rowIdx:5,colIdx:2},spellIds:[53137,53138],maxPoints:2},{fieldName:"bloodworms",location:{rowIdx:6,colIdx:0},spellIds:[49027,49542,49543],maxPoints:3},{fieldName:"hysteria",location:{rowIdx:6,colIdx:1},spellIds:[49016],maxPoints:1},{fieldName:"improvedBloodPresence",location:{rowIdx:6,colIdx:2},spellIds:[50365,50371],maxPoints:2},{fieldName:"improvedDeathStrike",location:{rowIdx:7,colIdx:0},spellIds:[62905,62908],maxPoints:2},{fieldName:"suddenDoom",location:{rowIdx:7,colIdx:1},spellIds:[49018,49529,49530],maxPoints:3},{fieldName:"vampiricBlood",location:{rowIdx:7,colIdx:2},spellIds:[55233],maxPoints:1},{fieldName:"willOfTheNecropolis",location:{rowIdx:8,colIdx:0},spellIds:[49189,50149,50150],maxPoints:3},{fieldName:"heartStrike",location:{rowIdx:8,colIdx:1},spellIds:[55050],maxPoints:1},{fieldName:"mightOfMograine",location:{rowIdx:8,colIdx:2},spellIds:[49023,49533,49534],maxPoints:3},{fieldName:"bloodGorged",location:{rowIdx:9,colIdx:1},spellIds:[61154,61155,61156,61157,61158],maxPoints:5},{fieldName:"dancingRuneWeapon",location:{rowIdx:10,colIdx:1},spellIds:[49028],maxPoints:1}]},{name:"Frost",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/399.jpg",talents:[{fieldName:"improvedIcyTouch",location:{rowIdx:0,colIdx:0},spellIds:[49175,50031,51456],maxPoints:3},{fieldName:"runicPowerMastery",location:{rowIdx:0,colIdx:1},spellIds:[49455,50147],maxPoints:2},{fieldName:"toughness",location:{rowIdx:0,colIdx:2},spellIds:[49042,49786,49787,49788,49789],maxPoints:5},{fieldName:"icyReach",location:{rowIdx:1,colIdx:1},spellIds:[55061,55062],maxPoints:2},{fieldName:"blackIce",location:{rowIdx:1,colIdx:2},spellIds:[49140,49661,49662,49663,49664],maxPoints:5},{fieldName:"nervesOfColdSteel",location:{rowIdx:1,colIdx:3},spellIds:[49226,50137,50138],maxPoints:3},{fieldName:"icyTalons",location:{rowIdx:2,colIdx:0},spellIds:[50880,50884,50885,50886,50887],maxPoints:5,prereqLocation:{rowIdx:0,colIdx:0}},{fieldName:"lichborne",location:{rowIdx:2,colIdx:1},spellIds:[49039],maxPoints:1},{fieldName:"annihilation",location:{rowIdx:2,colIdx:2},spellIds:[51468,51472,51473],maxPoints:3},{fieldName:"killingMachine",location:{rowIdx:3,colIdx:1},spellIds:[51123,51127,51128,51129,51130],maxPoints:5},{fieldName:"chillOfTheGrave",location:{rowIdx:3,colIdx:2},spellIds:[49149,50115],maxPoints:2},{fieldName:"endlessWinter",location:{rowIdx:3,colIdx:3},spellIds:[49137,49657],maxPoints:2},{fieldName:"frigidDreadplate",location:{rowIdx:4,colIdx:1},spellIds:[49186,51108,51109],maxPoints:3},{fieldName:"glacierRot",location:{rowIdx:4,colIdx:2},spellIds:[49471,49790,49791],maxPoints:3},{fieldName:"deathchill",location:{rowIdx:4,colIdx:3},spellIds:[49796],maxPoints:1},{fieldName:"improvedIcyTalons",location:{rowIdx:5,colIdx:0},spellIds:[55610],maxPoints:1,prereqLocation:{rowIdx:2,colIdx:0}},{fieldName:"mercilessCombat",location:{rowIdx:5,colIdx:1},spellIds:[49024,49538],maxPoints:2},{fieldName:"rime",location:{rowIdx:5,colIdx:2},spellIds:[49188,56822,59057],maxPoints:3},{fieldName:"chilblains",location:{rowIdx:6,colIdx:0},spellIds:[50040,50041,50043],maxPoints:3},{fieldName:"hungeringCold",location:{rowIdx:6,colIdx:1},spellIds:[49203],maxPoints:1},{fieldName:"improvedFrostPresence",location:{rowIdx:6,colIdx:2},spellIds:[50384,50385],maxPoints:2},{fieldName:"threatOfThassarian",location:{rowIdx:7,colIdx:0},spellIds:[65661,66191,66192],maxPoints:3},{fieldName:"bloodOfTheNorth",location:{rowIdx:7,colIdx:1},spellIds:[54639,54637,54638],maxPoints:3},{fieldName:"unbreakableArmor",location:{rowIdx:7,colIdx:2},spellIds:[51271],maxPoints:1},{fieldName:"acclimation",location:{rowIdx:8,colIdx:0},spellIds:[49200,50151,50152],maxPoints:3},{fieldName:"frostStrike",location:{rowIdx:8,colIdx:1},spellIds:[49143],maxPoints:1},{fieldName:"guileOfGorefiend",location:{rowIdx:8,colIdx:2},spellIds:[50187,50190,50191],maxPoints:3},{fieldName:"tundraStalker",location:{rowIdx:9,colIdx:1},spellIds:[49202,50127,50128,50129,50130],maxPoints:5},{fieldName:"howlingBlast",location:{rowIdx:10,colIdx:1},spellIds:[49184],maxPoints:1}]},{name:"Unholy",backgroundUrl:"https://wow.zamimg.com/images/wow/talents/backgrounds/wrath/400.jpg",talents:[{fieldName:"viciousStrikes",location:{rowIdx:0,colIdx:0},spellIds:[51745,51746],maxPoints:2},{fieldName:"virulence",location:{rowIdx:0,colIdx:1},spellIds:[48962,49567,49568],maxPoints:3},{fieldName:"anticipation",location:{rowIdx:0,colIdx:2},spellIds:[55129,55130,55131,55132,55133],maxPoints:5},{fieldName:"epidemic",location:{rowIdx:1,colIdx:0},spellIds:[49036,49562],maxPoints:2},{fieldName:"morbidity",location:{rowIdx:1,colIdx:1},spellIds:[48963,49564,49565],maxPoints:3},{fieldName:"unholyCommand",location:{rowIdx:1,colIdx:2},spellIds:[49588,49589],maxPoints:2},{fieldName:"ravenousDead",location:{rowIdx:1,colIdx:3},spellIds:[48965,49571,49572],maxPoints:3},{fieldName:"outbreak",location:{rowIdx:2,colIdx:0},spellIds:[49013,55236,55237],maxPoints:3},{fieldName:"necrosis",location:{rowIdx:2,colIdx:1},spellIds:[51459,51462,51463,51464,51465],maxPoints:5},{fieldName:"corpseExplosion",location:{rowIdx:2,colIdx:2},spellIds:[49158],maxPoints:1},{fieldName:"onAPaleHorse",location:{rowIdx:3,colIdx:1},spellIds:[49146,51267],maxPoints:2},{fieldName:"bloodCakedBlade",location:{rowIdx:3,colIdx:2},spellIds:[49219,49627,49628],maxPoints:3},{fieldName:"nightOfTheDead",location:{rowIdx:3,colIdx:3},spellIds:[55620,55623],maxPoints:2},{fieldName:"unholyBlight",location:{rowIdx:4,colIdx:0},spellIds:[49194],maxPoints:1},{fieldName:"impurity",location:{rowIdx:4,colIdx:1},spellIds:[49220,49633,49635,49636,49638],maxPoints:5},{fieldName:"dirge",location:{rowIdx:4,colIdx:2},spellIds:[49223,49599],maxPoints:2},{fieldName:"desecration",location:{rowIdx:5,colIdx:0},spellIds:[55666,55667],maxPoints:2},{fieldName:"magicSuppression",location:{rowIdx:5,colIdx:1},spellIds:[49224,49610,49611],maxPoints:3},{fieldName:"reaping",location:{rowIdx:5,colIdx:2},spellIds:[49208,56834,56835],maxPoints:3},{fieldName:"masterOfGhouls",location:{rowIdx:5,colIdx:3},spellIds:[52143],maxPoints:1,prereqLocation:{rowIdx:3,colIdx:3}},{fieldName:"desolation",location:{rowIdx:6,colIdx:0},spellIds:[66799,66814,66815,66816,66817],maxPoints:5},{fieldName:"antiMagicZone",location:{rowIdx:6,colIdx:1},spellIds:[51052],maxPoints:1,prereqLocation:{rowIdx:5,colIdx:1}},{fieldName:"improvedUnholyPresence",location:{rowIdx:6,colIdx:2},spellIds:[50391,50392],maxPoints:2},{fieldName:"ghoulFrenzy",location:{rowIdx:6,colIdx:3},spellIds:[63560],maxPoints:1,prereqLocation:{rowIdx:5,colIdx:3}},{fieldName:"cryptFever",location:{rowIdx:7,colIdx:1},spellIds:[49032,49631,49632],maxPoints:3},{fieldName:"boneShield",location:{rowIdx:7,colIdx:2},spellIds:[49222],maxPoints:1},{fieldName:"wanderingPlague",location:{rowIdx:8,colIdx:0},spellIds:[49217,49654,49655],maxPoints:3},{fieldName:"ebonPlaguebringer",location:{rowIdx:8,colIdx:1},spellIds:[51099,51160,51161],maxPoints:3,prereqLocation:{rowIdx:7,colIdx:1}},{fieldName:"scourgeStrike",location:{rowIdx:8,colIdx:2},spellIds:[55090],maxPoints:1},{fieldName:"rageOfRivendare",location:{rowIdx:9,colIdx:1},spellIds:[50117,50118,50119,50120,50121],maxPoints:5},{fieldName:"summonGargoyle",location:{rowIdx:10,colIdx:1},spellIds:[49206],maxPoints:1}]}]),us={majorGlyphs:{[Ze.GlyphOfAntiMagicShell]:{name:"Glyph of Anti-Magic Shell",description:"Increases the duration of your Anti-Magic Shell by 2 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antimagicshell.jpg"},[Ze.GlyphOfBloodStrike]:{name:"Glyph of Blood Strike",description:"Your Blood Strike causes an additional 20% damage to snared targets.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_deathstrike.jpg"},[Ze.GlyphOfBoneShield]:{name:"Glyph of Bone Shield",description:"Adds 1 additional charge to your Bone Shield.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_chest_leather_13.jpg"},[Ze.GlyphOfChainsOfIce]:{name:"Glyph of Chains of Ice",description:"Your Chains of Ice also causes 144 to 156 Frost damage, increased by your attack power.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_chainsofice.jpg"},[Ze.GlyphOfDancingRuneWeapon]:{name:"Glyph of Dancing Rune Weapon",description:"Increases the duration of Dancing Rune Weapon by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_sword_07.jpg"},[Ze.GlyphOfDarkCommand]:{name:"Glyph of Dark Command",description:"Increases the chance for your Dark Command ability to work successfully by 8%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_nature_shamanrage.jpg"},[Ze.GlyphOfDarkDeath]:{name:"Glyph of Dark Death",description:"Increases the damage or healing done by Death Coil by 15%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg"},[Ze.GlyphOfDeathAndDecay]:{name:"Glyph of Death and Decay",description:"Damage of your Death and Decay spell increased by 20%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathanddecay.jpg"},[Ze.GlyphOfDeathGrip]:{name:"Glyph of Death Grip",description:"When you deal a killing blow that grants honor or experience, the cooldown of your Death Grip is refreshed.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_strangulate.jpg"},[Ze.GlyphOfDeathStrike]:{name:"Glyph of Death Strike",description:"Increases your Death Strike's damage by 1% for every 1 runic power you currently have (up to a maximum of 25%). The runic power is not consumed by this effect.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_butcher2.jpg"},[Ze.GlyphOfDisease]:{name:"Glyph of Disease",description:"Your Pestilence ability now refreshes disease durations and secondary effects of diseases on your primary target back to their maximum duration.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_plaguecloud.jpg"},[Ze.GlyphOfFrostStrike]:{name:"Glyph of Frost Strike",description:"Reduces the cost of your Frost Strike by 8 Runic Power.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_empowerruneblade2.jpg"},[Ze.GlyphOfHeartStrike]:{name:"Glyph of Heart Strike",description:"Your Heart Strike also reduces the movement speed of your target by 50% for 10 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_weapon_shortblade_40.jpg"},[Ze.GlyphOfHowlingBlast]:{name:"Glyph of Howling Blast",description:"Your Howling Blast ability now infects your targets with Frost Fever.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_frost_arcticwinds.jpg"},[Ze.GlyphOfHungeringCold]:{name:"Glyph of Hungering Cold",description:"Reduces the cost of Hungering Cold by 40 runic power.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_staff_15.jpg"},[Ze.GlyphOfIceboundFortitude]:{name:"Glyph of Icebound Fortitude",description:"Your Icebound Fortitude now always grants at least 40% damage reduction, regardless of your defense skill.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_iceboundfortitude.jpg"},[Ze.GlyphOfIcyTouch]:{name:"Glyph of Icy Touch",description:"Your Frost Fever disease deals 20% additional damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_icetouch.jpg"},[Ze.GlyphOfObliterate]:{name:"Glyph of Obliterate",description:"Increases the damage of your Obliterate ability by 25%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_classicon.jpg"},[Ze.GlyphOfPlagueStrike]:{name:"Glyph of Plague Strike",description:"Your Plague Strike does 20% additional damage.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_empowerruneblade.jpg"},[Ze.GlyphOfRuneStrike]:{name:"Glyph of Rune Strike",description:"Increases the critical strike chance of your Rune Strike by 10%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_darkconviction.jpg"},[Ze.GlyphOfRuneTap]:{name:"Glyph of Rune Tap",description:"Your Rune Tap now heals you for an additional 1% of your maximum health, and also heals your party for 10% of their maximum health.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_runetap.jpg"},[Ze.GlyphOfScourgeStrike]:{name:"Glyph of Scourge Strike",description:"Your Scourge Strike increases the duration of your diseases on the target by 3 sec, up to a maximum of 9 additional seconds.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_scourgestrike.jpg"},[Ze.GlyphOfStrangulate]:{name:"Glyph of Strangulate",description:"Reduces the cooldown of your Strangulate by 20 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_soulleech_3.jpg"},[Ze.GlyphOfTheGhoul]:{name:"Glyph of the Ghoul",description:"Your Ghoul receives an additional 40% of your Strength and 40% of your Stamina.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_animatedead.jpg"},[Ze.GlyphOfUnbreakableArmor]:{name:"Glyph of Unbreakable Armor",description:"Increases the total armor granted by Unbreakable Armor to 30%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_armor_helm_plate_naxxramas_raidwarrior_c_01.jpg"},[Ze.GlyphOfUnholyBlight]:{name:"Glyph of Unholy Blight",description:"Increases the damage done by Unholy Blight by 40%.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_contagion.jpg"},[Ze.GlyphOfVampiricBlood]:{name:"Glyph of Vampiric Blood",description:"Increases the duration of your Vampiric Blood by 5 sec.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg"}},minorGlyphs:{[et.GlyphOfBloodTap]:{name:"Glyph of Blood Tap",description:"Your Blood Tap no longer causes damage to you.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_bloodtap.jpg"},[et.GlyphOfCorpseExplosion]:{name:"Glyph of Corpse Explosion",description:"Increases the radius of effect on Corpse Explosion by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/ability_creature_disease_02.jpg"},[et.GlyphOfDeathSEmbrace]:{name:"Glyph of Death's Embrace",description:"Your Death Coil refunds 20 runic power when used to heal.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg"},[et.GlyphOfHornOfWinter]:{name:"Glyph of Horn of Winter",description:"Increases the duration of your Horn of Winter ability by 1 min.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/inv_misc_horn_02.jpg"},[et.GlyphOfPestilence]:{name:"Glyph of Pestilence",description:"Increases the radius of your Pestilence effect by 5 yards.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_plaguecloud.jpg"},[et.GlyphOfRaiseDead]:{name:"Glyph of Raise Dead",description:"Your Raise Dead spell no longer requires a reagent.",iconUrl:"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_animatedead.jpg"}}},fs={[pe.ItemQualityJunk]:"item-quality-junk",[pe.ItemQualityCommon]:"item-quality-common",[pe.ItemQualityUncommon]:"item-quality-uncommon",[pe.ItemQualityRare]:"item-quality-rare",[pe.ItemQualityEpic]:"item-quality-epic",[pe.ItemQualityLegendary]:"item-quality-legendary"};function ws(e,t){Object.values(fs).forEach((t=>e.classList.remove(t))),t&&e.classList.add(fs[t])}class ys extends Ur{constructor(e,t){super(e,"close-button"),this.rootElem.innerHTML='\n\t\t\t<span aria-hidden="true" class="fa fa-times"></span>\n\t\t',this.rootElem.addEventListener("click",(e=>t()))}}class ks extends Ur{constructor(e){super(e,"popup");const t=window.getComputedStyle(e);this.rootElem.style.setProperty("--main-text-color",t.getPropertyValue("--main-text-color").trim()),this.rootElem.style.setProperty("--theme-color-primary",t.getPropertyValue("--theme-color-primary").trim()),this.rootElem.style.setProperty("--theme-color-background",t.getPropertyValue("--theme-color-background").trim()),this.rootElem.style.setProperty("--theme-color-background-raw",t.getPropertyValue("--theme-color-background-raw").trim()),e.closest(".hide-damage-metrics")&&this.rootElem.classList.add("hide-damage-metrics"),e.closest(".hide-threat-metrics")&&this.rootElem.classList.add("hide-threat-metrics"),e.closest(".hide-healing-metrics")&&this.rootElem.classList.add("hide-healing-metrics"),$(this.rootElem).bPopup({onClose:()=>this.rootElem.remove()})}addCloseButton(){new ys(this.rootElem,(()=>this.close()))}close(){$(this.rootElem).bPopup().close(),this.rootElem.remove()}}const bs={id:0,name:"Empty",description:"",iconUrl:"https://wow.zamimg.com/images/wow/icons/medium/inventoryslot_empty.jpg",quality:null};class Is extends Ur{constructor(e,t,a){super(e,"glyphs-picker-root"),this.majorGlyphPickers=[],this.minorGlyphPickers=[],this.glyphsConfig=a;const n=Object.keys(a.majorGlyphs).map((e=>Number(e))),i=Object.keys(a.minorGlyphs).map((e=>Number(e))),o=n.map((e=>this.getGlyphData(e))),r=i.map((e=>this.getGlyphData(e)));o.sort(((e,t)=>Ti(e.name,t.name))),r.sort(((e,t)=>Ti(e.name,t.name))),this.majorGlyphPickers=["major1","major2","major3"].map((e=>new Ts(this.rootElem,t,o,e,!0))),this.minorGlyphPickers=["minor1","minor2","minor3"].map((e=>new Ts(this.rootElem,t,r,e,!1)))}getGlyphData(e){const t=this.glyphsConfig.majorGlyphs[e]||this.glyphsConfig.minorGlyphs[e];return{id:e,name:t.name,description:t.description,iconUrl:t.iconUrl,quality:pe.ItemQualityCommon}}}class Ts extends Hr{constructor(e,t,a,n,i){super(e,"glyph-picker-root",t,{changedEvent:e=>e.glyphsChangeEmitter,getValue:e=>e.getGlyphs()[n],setValue:(e,t,a)=>{const i=t.getGlyphs();i[n]=a,t.setGlyphs(e,i)}}),i||this.rootElem.classList.add("minor"),this.player=t,this.glyphOptions=a,this.selectedGlyph=bs,this.rootElem.innerHTML='<a class="glyph-picker-icon"></a>',this.iconElem=this.rootElem.getElementsByClassName("glyph-picker-icon")[0],this.iconElem.addEventListener("click",(e=>{e.preventDefault(),new xs(this.rootElem.closest(".individual-sim-ui"),this,this.glyphOptions)})),this.iconElem.addEventListener("touchstart",(e=>{e.preventDefault(),new xs(this.rootElem.closest(".individual-sim-ui"),this,this.glyphOptions)})),this.iconElem.addEventListener("touchend",(e=>{e.preventDefault()})),this.init()}getInputElem(){return this.iconElem}getInputValue(){return this.selectedGlyph.id}setInputValue(e){this.selectedGlyph=this.glyphOptions.find((t=>t.id==e))||bs,this.iconElem.style.backgroundImage=`url('${this.selectedGlyph.iconUrl}')`,this.iconElem.href=0==this.selectedGlyph.id?"":nr.makeItemUrl(this.selectedGlyph.id)}}class xs extends ks{constructor(e,t,a){super(e),this.rootElem.classList.add("selector-modal"),this.rootElem.classList.add("glyph-modal"),this.rootElem.innerHTML='\n\t\t\t<div class="selector-modal-tab-content-header">\n\t\t\t\t<input class="selector-modal-search" type="text" placeholder="Search...">\n\t\t\t</div>\n\t\t\t<ul class="selector-modal-list"></ul>\n    ',this.addCloseButton();const n=this.rootElem.getElementsByClassName("selector-modal-list")[0],i=(a=[bs].concat(a)).map(((e,a)=>{const i=document.createElement("li");i.classList.add("selector-modal-list-item"),n.appendChild(i),i.dataset.idx=String(a),i.innerHTML=`\n        <a class="selector-modal-list-item-icon"></a>\n        <a class="selector-modal-list-item-name">${e.name}</a>\n\t\t\t\t<span class="selector-modal-list-item-description">${e.description}</span>\n      `,i.children[0].href=0==e.id?"":nr.makeItemUrl(e.id),i.children[1].href=0==e.id?"":nr.makeItemUrl(e.id);const o=i.getElementsByClassName("selector-modal-list-item-icon")[0];o.style.backgroundImage=`url('${e.iconUrl}')`;const r=i.getElementsByClassName("selector-modal-list-item-name")[0];ws(r,e.quality);const s=a=>{a.preventDefault(),t.setValue(Mr.nextEventID(),e.id)};return r.addEventListener("click",s),o.addEventListener("click",s),i})),o=()=>{const e=t.selectedGlyph.id;i.forEach((t=>{const n=parseInt(t.dataset.idx),i=a[n];t.classList.remove("active"),i.id==e&&t.classList.add("active")}))};o();const r=()=>{let e=i;t.selectedGlyph,e=e.filter((e=>{const t=parseInt(e.dataset.idx),n=a[t];if(s.value.length>0){const e=s.value.toLowerCase().split(" "),t=n.name.toLowerCase();var i=!0;if(e.forEach((e=>{t.includes(e)||(i=!1)})),!i)return!1}return!0}));let n=0;i.forEach((t=>{e.includes(t)?(t.classList.remove("hidden"),n++,n%2==0?t.classList.remove("odd"):t.classList.add("odd")):t.classList.add("hidden")}))},s=this.rootElem.getElementsByClassName("selector-modal-search")[0];s.addEventListener("input",r),s.addEventListener("keyup",(e=>{"Enter"==e.key&&i.find((e=>{if(e.classList.contains("hidden"))return!1;return e.getElementsByClassName("selector-modal-list-item-name")[0].click(),!0}))})),t.player.glyphsChangeEmitter.on((()=>{r(),o()}))}}const Ss=80,vs=71,_s=83,Os=8.1975,Ps=45.91,Gs=32.79,Rs=45.91,Bs=26.23,Ns=32.79,Fs=25.22,Ws=4.92,Vs=16.39,Cs=45.25,Ds=45.25;function Es(e,t){return new $r(e,t,{trees:Us[t.getClass()],changedEvent:e=>e.talentsChangeEmitter,getValue:e=>e.getTalentsString(),setValue:(e,t,a)=>{t.setTalentsString(e,a)},pointsPerRow:5,maxPoints:71})}function js(e,t){return new Is(e,t,Ms[t.getClass()])}const Us={[ne.ClassUnknown]:[],[ne.ClassDeathknight]:gs,[ne.ClassDruid]:Yr,[ne.ClassShaman]:ls,[ne.ClassHunter]:Xr,[ne.ClassMage]:es,[ne.ClassRogue]:rs,[ne.ClassPaladin]:as,[ne.ClassPriest]:is,[ne.ClassWarlock]:ds,[ne.ClassWarrior]:ps},Ms={[ne.ClassUnknown]:{majorGlyphs:[],minorGlyphs:[]},[ne.ClassDeathknight]:us,[ne.ClassDruid]:Qr,[ne.ClassShaman]:cs,[ne.ClassHunter]:Zr,[ne.ClassMage]:ts,[ne.ClassRogue]:ss,[ne.ClassPaladin]:ns,[ne.ClassPriest]:os,[ne.ClassWarlock]:ms,[ne.ClassWarrior]:hs};function As(e,t){return Us[e].map((e=>e.talents.map((e=>{const a=e.spellIds.findIndex((e=>t.includes(e)));return-1==a?"0":String(a+1)})).join("").replace(/0+$/g,""))).join("-").replace(/-+$/g,"")}function Ls(e,t,a){return t.split("-").forEach(((t,n)=>{const i=a[n];[...t].forEach(((t,a)=>{const n=i.talents[a],o=parseInt(t);n.fieldName&&(1==n.maxPoints?e[n.fieldName]=1==o:e[n.fieldName]=o)}))})),e}function zs(e,t){return t.map((t=>t.talents.map((t=>String(Number(e[t.fieldName])))).join("").replace(/0+$/g,""))).join("-").replace(/-+$/g,"")}class Hs{constructor(e,t){this.name="",this.buffs=Ge.create(),this.consumes=Re.create(),this.bonusStats=new cr,this.gear=new pr({}),this.profession1=0,this.profession2=0,this.shattFaction=0,this.talentsString="",this.glyphs=Me.create(),this.cooldowns=Le.create(),this.inFrontOfTarget=!1,this.distanceFromTarget=0,this.healingModel=ze.create(),this.itemEPCache=new Map,this.gemEPCache=new Map,this.enchantEPCache=new Map,this.talents=null,this.epWeights=new cr,this.currentStats=Yn.create(),this.nameChangeEmitter=new Mr("PlayerName"),this.buffsChangeEmitter=new Mr("PlayerBuffs"),this.consumesChangeEmitter=new Mr("PlayerConsumes"),this.bonusStatsChangeEmitter=new Mr("PlayerBonusStats"),this.gearChangeEmitter=new Mr("PlayerGear"),this.professionChangeEmitter=new Mr("PlayerProfession"),this.raceChangeEmitter=new Mr("PlayerRace"),this.rotationChangeEmitter=new Mr("PlayerRotation"),this.talentsChangeEmitter=new Mr("PlayerTalents"),this.glyphsChangeEmitter=new Mr("PlayerGlyphs"),this.specOptionsChangeEmitter=new Mr("PlayerSpecOptions"),this.cooldownsChangeEmitter=new Mr("PlayerCooldowns"),this.inFrontOfTargetChangeEmitter=new Mr("PlayerInFrontOfTarget"),this.distanceFromTargetChangeEmitter=new Mr("PlayerDistanceFromTarget"),this.healingModelChangeEmitter=new Mr("PlayerHealingModel"),this.epWeightsChangeEmitter=new Mr("PlayerEpWeights"),this.currentStatsEmitter=new Mr("PlayerCurrentStats"),this.sim=t,this.party=null,this.raid=null,this.spec=e,this.race=Bo[this.spec][0],this.specTypeFunctions=yo[this.spec],this.rotation=this.specTypeFunctions.rotationCreate(),this.specOptions=this.specTypeFunctions.optionsCreate(),this.changeEmitter=Mr.onAny([this.nameChangeEmitter,this.buffsChangeEmitter,this.consumesChangeEmitter,this.bonusStatsChangeEmitter,this.gearChangeEmitter,this.professionChangeEmitter,this.raceChangeEmitter,this.rotationChangeEmitter,this.talentsChangeEmitter,this.glyphsChangeEmitter,this.specOptionsChangeEmitter,this.cooldownsChangeEmitter,this.inFrontOfTargetChangeEmitter,this.distanceFromTargetChangeEmitter,this.healingModelChangeEmitter,this.epWeightsChangeEmitter],"PlayerChange")}getSpecIcon(){return go(this.spec,this.getTalentsString())}getClass(){return bo[this.spec]}getClassColor(){return oo[this.getClass()]}getParty(){return this.party}getRaid(){return this.raid}getPartyIndex(){if(null==this.party)throw new Error("Can't get party index for player without a party!");return this.party.getPlayers().indexOf(this)}getRaidIndex(){if(null==this.party)throw new Error("Can't get raid index for player without a party!");return this.party.getIndex()*$s+this.getPartyIndex()}setParty(e){null==e?(this.party=null,this.raid=null):(this.party=e,this.raid=e.raid)}getOtherPartyMembers(){return null==this.party?[]:this.party.getPlayers().filter((e=>null!=e&&e!=this))}getItems(e){return this.sim.getItems(e).filter((t=>function(e,t,a){const n=bo[t];if(e.classAllowlist.length>0&&!e.classAllowlist.includes(n))return!1;if([re.ItemTypeFinger,re.ItemTypeTrinket].includes(e.type))return!0;if(e.type==re.ItemTypeWeapon){const i=Ao[n].find((t=>t.weaponType==e.weaponType));return!(!i||(e.handType==ce.HandTypeOffHand||e.handType==ce.HandTypeOneHand&&a==me.ItemSlotOffHand)&&![le.WeaponTypeShield,le.WeaponTypeOffHand].includes(e.weaponType)&&!No.includes(t)||e.handType==ce.HandTypeTwoHand&&!i.canUseTwoHand||e.handType==ce.HandTypeTwoHand&&a==me.ItemSlotOffHand&&t!=Z.SpecWarrior)}return e.type==re.ItemTypeRanged?Mo[n].includes(e.rangedWeaponType):Uo[n]>=e.armorType}(t,this.spec,e)))}getEnchants(e){return this.sim.getEnchants(e).filter((e=>function(e,t){const a=bo[t];return!(e.classAllowlist.length>0&&!e.classAllowlist.includes(a))}(e,this.spec)))}getGems(e){return this.sim.getGems(e)}getEpWeights(){return this.epWeights}setEpWeights(e,t){this.epWeights=t,this.epWeightsChangeEmitter.emit(e),this.gemEPCache=new Map,this.itemEPCache=new Map,this.enchantEPCache=new Map}async computeStatWeights(e,t,a,n){return await this.sim.statWeights(this,t,a,n)}getCurrentStats(){return Yn.clone(this.currentStats)}setCurrentStats(e,t){this.currentStats=t,this.currentStatsEmitter.emit(e)}getName(){return this.name}setName(e,t){t!=this.name&&(this.name=t,this.nameChangeEmitter.emit(e))}getLabel(){return this.party?`${this.name} (#${this.getRaidIndex()+1})`:this.name}getRace(){return this.race}setRace(e,t){t!=this.race&&(this.race=t,this.raceChangeEmitter.emit(e))}getProfession1(){return this.profession1}setProfession1(e,t){t!=this.profession1&&(this.profession1=t,this.professionChangeEmitter.emit(e))}getProfession2(){return this.profession2}setProfession2(e,t){t!=this.profession2&&(this.profession2=t,this.professionChangeEmitter.emit(e))}getProfessions(){return[this.profession1,this.profession2].filter((e=>e!=ie.ProfessionUnknown))}hasProfession(e){return this.getProfessions().includes(e)}isBlacksmithing(){return this.hasProfession(ie.Blacksmithing)}getShattFaction(){return this.shattFaction}setShattFaction(e,t){t!=this.shattFaction&&(this.shattFaction=t,this.raceChangeEmitter.emit(e))}getFaction(){return ko[this.getRace()]}getBuffs(){return Ge.clone(this.buffs)}setBuffs(e,t){Ge.equals(this.buffs,t)||(this.buffs=Ge.clone(t),this.buffsChangeEmitter.emit(e))}getConsumes(){return Re.clone(this.consumes)}setConsumes(e,t){Re.equals(this.consumes,t)||(this.consumes=Re.clone(t),this.consumesChangeEmitter.emit(e))}getCooldowns(){return Le.clone(this.cooldowns)}setCooldowns(e,t){Le.equals(this.cooldowns,t)||(this.cooldowns=Le.clone(t),this.cooldownsChangeEmitter.emit(e))}canDualWield2H(){return this.getClass()==ne.ClassWarrior&&this.getTalents().titansGrip}equipItem(e,t,a){this.setGear(e,this.gear.withEquippedItem(t,a,this.canDualWield2H()))}getEquippedItem(e){return this.gear.getEquippedItem(e)}getGear(){return this.gear}setGear(e,t){t.equals(this.gear)||Mr.freezeAllAndDo((()=>{this.gear=t,this.gearChangeEmitter.emit(e)}))}getBonusStats(){return this.bonusStats}setBonusStats(e,t){t.equals(this.bonusStats)||(this.bonusStats=t,this.bonusStatsChangeEmitter.emit(e))}getRotation(){return this.specTypeFunctions.rotationCopy(this.rotation)}setRotation(e,t){this.specTypeFunctions.rotationEquals(t,this.rotation)||(this.rotation=this.specTypeFunctions.rotationCopy(t),this.rotationChangeEmitter.emit(e))}getTalents(){var e,t;return null==this.talents&&(this.talents=(e=this.spec,t=this.talentsString,Ls(yo[e].talentsCreate(),t,Us[bo[e]]))),this.talents}getTalentsString(){return this.talentsString}setTalentsString(e,t){t!=this.talentsString&&(this.talentsString=t,this.talents=null,this.talentsChangeEmitter.emit(e))}getTalentTree(){return ho(this.getTalentsString())}getTalentTreeIcon(){return go(this.spec,this.getTalentsString())}getGlyphs(){return Me.clone(this.glyphs)}setGlyphs(e,t){Me.equals(this.glyphs,t)||(this.glyphs=Me.clone(t),this.glyphsChangeEmitter.emit(e))}getMajorGlyphs(){return[this.glyphs.major1,this.glyphs.major2,this.glyphs.major3].filter((e=>0!=e))}getMinorGlyphs(){return[this.glyphs.minor1,this.glyphs.minor2,this.glyphs.minor3].filter((e=>0!=e))}getAllGlyphs(){return this.getMajorGlyphs().concat(this.getMinorGlyphs())}getSpecOptions(){return this.specTypeFunctions.optionsCopy(this.specOptions)}setSpecOptions(e,t){this.specTypeFunctions.optionsEquals(t,this.specOptions)||(this.specOptions=this.specTypeFunctions.optionsCopy(t),this.specOptionsChangeEmitter.emit(e))}getInFrontOfTarget(){return this.inFrontOfTarget}setInFrontOfTarget(e,t){t!=this.inFrontOfTarget&&(this.inFrontOfTarget=t,this.inFrontOfTargetChangeEmitter.emit(e))}getDistanceFromTarget(){return this.distanceFromTarget}setDistanceFromTarget(e,t){t!=this.distanceFromTarget&&(this.distanceFromTarget=t,this.distanceFromTargetChangeEmitter.emit(e))}getHealingModel(){return ze.clone(this.healingModel)}setHealingModel(e,t){ze.equals(this.healingModel,t)||(this.healingModel=ze.clone(t),this.healingModelChangeEmitter.emit(e))}computeStatsEP(e){return null==e?0:e.computeEP(this.epWeights)}computeGemEP(e){if(this.gemEPCache.has(e.id))return this.gemEPCache.get(e.id);const t=this.computeStatsEP(new cr(e.stats)),a=function(e,t,a){return Ho[e]?Ho[e](t,a):0}(this.spec,e,new cr(this.currentStats.finalStats));let n=0;e.unique&&(n-=.01);let i=t+a+n;return this.gemEPCache.set(e.id,i),i}computeEnchantEP(e){if(this.enchantEPCache.has(e.id))return this.enchantEPCache.get(e.id);let t=this.computeStatsEP(new cr(e.stats));return this.enchantEPCache.set(e.id,t),t}computeItemEP(e){if(null==e)return 0;if(this.itemEPCache.has(e.id))return this.itemEPCache.get(e.id);let t=new cr(e.stats);if(e.weaponType!=le.WeaponTypeUnknown){const a=dr(e);t=t.addStat(oe.StatAttackPower,this.spec==Z.SpecFeralDruid?0:14*a)}else if(![de.RangedWeaponTypeUnknown,de.RangedWeaponTypeThrown].includes(e.rangedWeaponType)){const a=dr(e);t=t.addStat(oe.StatRangedAttackPower,14*a)}let a=t.computeEP(this.epWeights);e.unique&&(a-=.01);const n=qo(e)[0],i=this.sim.getEnchants(n);i.length>0&&(a+=Math.max(...i.map((e=>this.computeEnchantEP(e)))));const o=xi(e.gemSockets.map((e=>{const t=this.sim.getGems(e).filter((e=>Hi(e,this.sim.getPhase())));return t.length>0?Math.max(...t.map((e=>this.computeGemEP(e)))):0}))),r=xi(e.gemSockets.map((e=>{const t=this.sim.getGems(e).filter((t=>Hi(t,this.sim.getPhase())&&Li(t,e)));return t.length>0?Math.max(...t.map((e=>this.computeGemEP(e)))):0})))+this.computeStatsEP(new cr(e.socketBonus));return a+=Math.max(r,o),this.itemEPCache.set(e.id,a),a}setWowheadData(e,t){let a=["domain=wotlk"];e.gems.length>0&&a.push("gems="+e.gems.map((e=>e?e.id:0)).join(":")),null!=e.enchant&&a.push("ench="+e.enchant.effectId),a.push("pcs="+this.gear.asArray().filter((e=>null!=e)).map((e=>e.item.id)).join(":")),e.hasExtraSocket(this.hasProfession(ie.Blacksmithing))&&a.push("sock"),t.setAttribute("data-wowhead",a.join("&"))}makeRaidTarget(){return null==this.party?Xo():Qo(this.getRaidIndex())}toProto(e){return Eo(this.spec,Rn.create({name:this.getName(),race:this.getRace(),shattFaction:this.getShattFaction(),class:this.getClass(),equipment:this.getGear().asSpec(),consumes:this.getConsumes(),bonusStats:this.getBonusStats().asArray(),buffs:this.getBuffs(),cooldowns:this.getCooldowns(),talentsString:this.getTalentsString(),glyphs:this.getGlyphs(),profession1:this.getProfession1(),profession2:this.getProfession2(),inFrontOfTarget:this.getInFrontOfTarget(),distanceFromTarget:this.getDistanceFromTarget(),healingModel:this.getHealingModel()}),this.getRotation(),e?this.specTypeFunctions.talentsCreate():this.getTalents(),this.getSpecOptions())}fromProto(e,t){Mr.freezeAllAndDo((()=>{this.setName(e,t.name),this.setRace(e,t.race),this.setShattFaction(e,t.shattFaction),this.setGear(e,t.equipment?this.sim.lookupEquipmentSpec(t.equipment):new pr({})),this.setConsumes(e,t.consumes||Re.create()),this.setBonusStats(e,new cr(t.bonusStats)),this.setBuffs(e,t.buffs||Ge.create()),this.setCooldowns(e,t.cooldowns||Le.create()),this.setTalentsString(e,t.talentsString),this.setGlyphs(e,t.glyphs||Me.create()),this.setProfession1(e,t.profession1),this.setProfession2(e,t.profession2),this.setInFrontOfTarget(e,t.inFrontOfTarget),this.setDistanceFromTarget(e,t.distanceFromTarget),this.setHealingModel(e,t.healingModel||ze.create()),this.setRotation(e,this.specTypeFunctions.rotationFromPlayer(t)),this.setSpecOptions(e,this.specTypeFunctions.optionsFromPlayer(t))}))}clone(e){const t=new Hs(this.spec,this.sim);return t.fromProto(e,this.toProto()),t}applySharedDefaults(e){Mr.freezeAllAndDo((()=>{this.setShattFaction(e,ae.ShattrathFactionAldor),this.setInFrontOfTarget(e,Wo(this.spec)),this.setHealingModel(e,ze.create()),this.setCooldowns(e,Le.create({hpPercentForDefensives:Wo(this.spec)?.35:0})),this.setBonusStats(e,new cr)}))}static applySharedDefaultsToProto(e){const t=jo(e);e.shattFaction=ae.ShattrathFactionAldor,e.inFrontOfTarget=Wo(t),e.healingModel=ze.create(),e.cooldowns=Le.create({hpPercentForDefensives:Wo(t)?.35:0}),e.bonusStats=(new cr).asArray()}}const $s=5;class qs{constructor(e,t){this.buffs=Pe.create(),this.compChangeEmitter=new Mr,this.buffsChangeEmitter=new Mr,this.sim=t,this.raid=e,this.players=[...Array($s).keys()].map((e=>null)),this.playerChangeListener=e=>this.changeEmitter.emit(e),this.changeEmitter=Mr.onAny([this.compChangeEmitter,this.buffsChangeEmitter],"PartyChange")}size(){return this.players.filter((e=>null!=e)).length}isEmpty(){return 0==this.size()}clear(e){this.setBuffs(e,Pe.create());for(let t=0;t<$s;t++)this.setPlayer(e,t,null)}getIndex(){return this.raid.getParties().indexOf(this)}getPlayers(){return this.players.slice()}getPlayer(e){return this.players[e]}setPlayer(e,t,a){if(t<0||t>=$s)throw new Error("Invalid player index: "+t);a!=this.players[t]&&Mr.freezeAllAndDo((()=>{const n=this.players[t];if(null!=n&&(n.changeEmitter.off(this.playerChangeListener),n.setParty(null)),null!=a){const n=a.getParty();n&&n.setPlayer(e,a.getPartyIndex(),null),this.players[t]=a,a.changeEmitter.on(this.playerChangeListener),a.setParty(this)}else this.players[t]=null;this.compChangeEmitter.emit(e)}))}getBuffs(){return Pe.clone(this.buffs)}setBuffs(e,t){Pe.equals(this.buffs,t)||(this.buffs=Pe.clone(t),this.buffsChangeEmitter.emit(e))}toProto(e){return Bn.create({players:this.players.map((t=>null==t?Rn.create():t.toProto(e))),buffs:this.buffs})}fromProto(e,t){Mr.freezeAllAndDo((()=>{this.setBuffs(e,t.buffs||Pe.create());for(let a=0;a<$s;a++){if(!t.players[a]||t.players[a].class==ne.ClassUnknown){this.setPlayer(e,a,null);continue}const n=t.players[a],i=jo(n),o=this.players[a];if(o&&i==o.spec)o.fromProto(e,n);else{const t=new Hs(i,this.sim);t.fromProto(e,n),this.setPlayer(e,a,t)}}}))}}class Js{constructor(e,t){this.request=e,this.result=t}get iterations(){return this.request.simOptions?.iterations||1}get duration(){return this.result.avgIterationDuration||1}get firstIterationDuration(){return this.result.firstIterationDuration||1}}class Ks{constructor(e,t,a,n,i){this.request=e,this.result=t,this.raidMetrics=a,this.encounterMetrics=n,this.logs=i}getPlayers(e){if(e?.player||0===e?.player){const t=this.getPlayerWithIndex(e.player);return t?[t]:[]}return this.raidMetrics.parties.map((e=>e.players)).flat()}getFirstPlayer(){return this.getPlayers()[0]||null}getPlayerWithIndex(e){return this.raidMetrics.parties[Math.floor(e/$s)].players[e%$s]}getTargets(e){if(e?.target||0===e?.target){const t=this.getTargetWithIndex(e.target);return t?[t]:[]}return this.encounterMetrics.targets.slice()}getTargetWithIndex(e){return this.getTargets().find((t=>t.unitIndex==e))||null}getUnitWithIndex(e){return this.getPlayerWithIndex(e)||this.getTargetWithIndex(e)}getDamageMetrics(e){return e.player||0===e.player?this.getPlayerWithIndex(e.player)?.dps||En.create():this.raidMetrics.dps}getActionMetrics(e){return al.joinById(this.getPlayers(e).map((t=>t.getPlayerAndPetActions().map((t=>t.forTarget(e))))).flat())}getSpellMetrics(e){return this.getActionMetrics(e).filter((e=>0!=e.hitAttempts&&!e.isMeleeAction))}getMeleeMetrics(e){return this.getActionMetrics(e).filter((e=>0!=e.hitAttempts&&e.isMeleeAction))}getResourceMetrics(e,t){return tl.joinById(this.getPlayers(t).map((t=>t.resources.filter((t=>t.type==e)))).flat())}getBuffMetrics(e){return el.joinById(this.getPlayers(e).map((e=>e.auras)).flat())}getDebuffMetrics(e){return el.joinById(this.getTargets(e).map((e=>e.auras)).flat()).filter((e=>0!=e.uptimePercent))}toProto(){return ui.create({request:this.request,result:this.result})}static async fromProto(e){return Ks.makeNew(e.request||Ln.create(),e.result||zn.create())}static async makeNew(e,t){const a=new Js(e,t),n=await vr.parseAll(t),i=Ys.makeNew(a,e.raid,t.raidMetrics,n),o=Zs.makeNew(a,e.encounter,t.encounterMetrics,n),r=await i,s=await o;return new Ks(e,t,r,s,n)}}class Ys{constructor(e,t,a){this.raid=e,this.metrics=t,this.dps=this.metrics.dps,this.hps=this.metrics.hps,this.parties=a}static async makeNew(e,t,a,n){const i=Math.min(t.parties.length,a.parties.length),o=await Promise.all([...new Array(i).keys()].map((i=>Qs.makeNew(e,t.parties[i],a.parties[i],i,n))));return new Ys(t,a,o)}}class Qs{constructor(e,t,a,n){this.party=e,this.metrics=t,this.partyIndex=a,this.dps=this.metrics.dps,this.hps=this.metrics.hps,this.players=n}static async makeNew(e,t,a,n,i){const o=Math.min(t.players.length,a.players.length),r=await Promise.all([...new Array(o).keys()].filter((e=>t.players[e].class!=ne.ClassUnknown)).map((o=>Xs.makeNewPlayer(e,t.players[o],a.players[o],5*n+o,!1,i))));return new Qs(t,a,n,r)}}class Xs{constructor(e,t,a,n,i,o,r,s,l,c,d){this.player=e,this.target=t,this.metrics=n,this.index=i,this.unitIndex=n.unitIndex,this.name=n.name,this.spec=e?jo(e):0,this.petActionId=a,this.iconUrl=this.isPlayer?go(this.spec,e.talentsString):this.isTarget?"https://wow.zamimg.com/images/wow/icons/large/spell_shadow_metamorphosis.jpg":"",this.classColor=this.isTarget?"black":oo[bo[this.spec]],this.dps=this.metrics.dps,this.hps=this.metrics.hps,this.tps=this.metrics.threat,this.dtps=this.metrics.dtps,this.actions=o,this.auras=r,this.resources=s,this.pets=l,this.logs=c,this.iterations=d.iterations,this.duration=d.duration,this.damageDealtLogs=this.logs.filter((e=>e.isDamageDealt())),this.dpsLogs=Pr.fromLogs(this.damageDealtLogs),this.castLogs=Er.fromLogs(this.logs),this.threatLogs=Gr.fromLogs(this.logs),this.auraUptimeLogs=Nr.fromLogs(this.logs,new Sr(this.name,"",this.index,null!=this.target,this.isPet),d.firstIterationDuration),this.majorCooldownLogs=this.logs.filter((e=>e.isMajorCooldownUsed())),this.groupedResourceLogs=Wr.fromLogs(this.logs),Nr.populateActiveAuras(this.dpsLogs,this.auraUptimeLogs),Nr.populateActiveAuras(this.groupedResourceLogs[Gn.ResourceTypeMana],this.auraUptimeLogs),this.majorCooldownAuraUptimeLogs=this.auraUptimeLogs.filter((e=>this.majorCooldownLogs.find((t=>t.actionId.equals(e.actionId)))))}get label(){return null==this.target?`${this.name} (#${this.index+1})`:this.name}get isPlayer(){return null!=this.player}get isTarget(){return null!=this.target}get isPet(){return null!=this.petActionId}getTargetIndex(e){if(!e)return null;const t=this.isPlayer?e.target:e.player;return null==t||-1==t?null:t}get inFrontOfTarget(){return!!this.isTarget||!!this.isPlayer&&this.player.inFrontOfTarget}get chanceOfDeath(){return 100*this.metrics.chanceOfDeath}get maxThreat(){return this.threatLogs[this.threatLogs.length-1]?.threatAfter||0}get secondsOomAvg(){return this.metrics.secondsOomAvg}get totalDamage(){return this.dps.avg*this.duration}getPlayerAndPetActions(){return this.actions.concat(this.pets.map((e=>e.getPlayerAndPetActions())).flat())}getActionsForDisplay(){return this.actions.filter((e=>0!=e.hitAttempts||0!=e.tps||0!=e.dps))}getMeleeActions(){return this.getActionsForDisplay().filter((e=>e.isMeleeAction))}getSpellActions(){return this.getActionsForDisplay().filter((e=>!e.isMeleeAction))}getHealingActions(){return this.getActionsForDisplay()}getResourceMetrics(e){return this.resources.filter((t=>t.type==e))}static async makeNewPlayer(e,t,a,n,i,o){const r=o.filter((e=>e.source&&!e.source.isTarget&&i==e.source.isPet&&e.source.index==n)),s=Promise.all(a.actions.map((t=>al.makeNew(null,e,t,n)))),l=Promise.all(a.auras.map((t=>el.makeNew(null,e,t,n)))),c=Promise.all(a.resources.map((t=>tl.makeNew(null,e,t,n)))),d=Promise.all(a.pets.map((a=>Xs.makeNewPlayer(e,t,a,n,!0,r))));let m=Promise.resolve(null);i&&(m=nr.fromPetName(a.name).fill(n));const p=await s,h=await l,g=await c,u=await d,f=await m,w=new Xs(t,null,f,a,n,p,h,g,u,r,e);return p.forEach((e=>e.unit=w)),h.forEach((e=>e.unit=w)),g.forEach((e=>e.unit=w)),w}static async makeNewTarget(e,t,a,n,i){const o=i.filter((e=>e.source&&e.source.isTarget&&e.source.index==n)),r=Promise.all(a.actions.map((t=>al.makeNew(null,e,t,n)))),s=Promise.all(a.auras.map((t=>el.makeNew(null,e,t)))),l=await r,c=await s,d=new Xs(null,t,null,a,n,l,c,[],[],o,e);return l.forEach((e=>e.unit=d)),c.forEach((e=>e.unit=d)),d}}class Zs{constructor(e,t,a){this.encounter=e,this.metrics=t,this.targets=a}static async makeNew(e,t,a,n){const i=Math.min(t.targets.length,a.targets.length),o=await Promise.all([...new Array(i).keys()].map((i=>Xs.makeNewTarget(e,t.targets[i],a.targets[i],i,n))));return new Zs(t,a,o)}get durationSeconds(){return this.encounter.duration}}class el{constructor(e,t,a,n){this.unit=e,this.actionId=t,this.name=t.name,this.iconUrl=t.iconUrl,this.data=a,this.resultData=n,this.iterations=n.iterations,this.duration=n.duration}get uptimePercent(){return this.data.uptimeSecondsAvg/this.duration*100}get averageProcs(){return this.data.procsAvg}get ppm(){return this.data.procsAvg/(this.duration/60)}static async makeNew(e,t,a,n){const i=await nr.fromProto(a.id).fill(n);return new el(e,i,a,t)}static merge(e,t,a){const n=e[0],i=e.every((e=>e.unit==n.unit))?n.unit:null;let o=a||n.actionId;return t&&(o=o.withoutTag()),new el(i,o,Cn.create({uptimeSecondsAvg:Math.max(...e.map((e=>e.data.uptimeSecondsAvg)))}),n.resultData)}static groupById(e,t){return t?Object.values(Pi(e,(e=>e.actionId.toString()))):Object.values(Pi(e,(e=>e.actionId.toStringIgnoringTag())))}static joinById(e,t){return el.groupById(e,t).map((e=>el.merge(e)))}}class tl{constructor(e,t,a,n){this.unit=e,this.actionId=t,this.name=t.name,this.iconUrl=t.iconUrl,this.type=a.type,this.resultData=n,this.iterations=n.iterations,this.duration=n.duration,this.data=a}get events(){return this.data.events/this.iterations}get gain(){return this.data.gain/this.iterations}get gainPerSecond(){return this.data.gain/this.iterations/this.duration}get avgGain(){return this.data.gain/this.data.events}get wastedGain(){return(this.data.gain-this.data.actualGain)/this.iterations}static async makeNew(e,t,a,n){const i=await nr.fromProto(a.id).fill(n);return new tl(e,i,a,t)}static merge(e,t,a){const n=e[0],i=e.every((e=>e.unit==n.unit))?n.unit:null;let o=a||n.actionId;return t&&(o=o.withoutTag()),new tl(i,o,Dn.create({events:xi(e.map((e=>e.data.events))),gain:xi(e.map((e=>e.data.gain))),actualGain:xi(e.map((e=>e.data.actualGain)))}),n.resultData)}static groupById(e,t){return t?Object.values(Pi(e,(e=>e.actionId.toString()))):Object.values(Pi(e,(e=>e.actionId.toStringIgnoringTag())))}static joinById(e,t){return tl.groupById(e,t).map((e=>tl.merge(e)))}}class al{constructor(e,t,a,n){this.unit=e,this.actionId=t,this.name=t.name,this.iconUrl=t.iconUrl,this.resultData=n,this.iterations=n.iterations,this.duration=n.duration,this.data=a,this.targets=a.targets.map((e=>new nl(this.iterations,this.duration,e))),this.combinedMetrics=nl.merge(this.targets)}get isMeleeAction(){return this.data.isMelee}get damage(){return this.combinedMetrics.damage}get dps(){return this.combinedMetrics.dps}get hps(){return this.combinedMetrics.hps}get tps(){return this.combinedMetrics.tps}get casts(){return this.combinedMetrics.casts}get castsPerMinute(){return this.combinedMetrics.castsPerMinute}get avgCast(){return this.combinedMetrics.avgCast}get avgCastHealing(){return this.combinedMetrics.avgCastHealing}get avgCastThreat(){return this.combinedMetrics.avgCastThreat}get landedHits(){return this.combinedMetrics.landedHits}get hitAttempts(){return this.combinedMetrics.hitAttempts}get avgHit(){return this.combinedMetrics.avgHit}get avgHitThreat(){return this.combinedMetrics.avgHitThreat}get critPercent(){return this.combinedMetrics.critPercent}get misses(){return this.combinedMetrics.misses}get missPercent(){return this.combinedMetrics.missPercent}get dodges(){return this.combinedMetrics.dodges}get dodgePercent(){return this.combinedMetrics.dodgePercent}get parries(){return this.combinedMetrics.parries}get parryPercent(){return this.combinedMetrics.parryPercent}get blocks(){return this.combinedMetrics.blocks}get blockPercent(){return this.combinedMetrics.blockPercent}get glances(){return this.combinedMetrics.glances}get glancePercent(){return this.combinedMetrics.glancePercent}forTarget(e){const t=this.unit.getTargetIndex(e);if(null==t)return this;{const e=this.targets.find((e=>e.data.unitIndex==t));if(e){const t=Wn.clone(this.data);return t.targets=[e.data],new al(this.unit,this.actionId,t,this.resultData)}throw new Error("Could not find target with unitIndex "+t)}}static async makeNew(e,t,a,n){const i=await nr.fromProto(a.id).fill(n);return new al(e,i,a,t)}static merge(e,t,a){const n=e[0],i=n.unit;let o=a||n.actionId;t&&(o=o.withoutTag());const r=Math.max(...e.map((e=>e.targets.length))),s=[...Array(r).keys()].map((t=>nl.merge(e.map((e=>e.targets[t])))));return new al(i,o,Wn.create({isMelee:n.isMeleeAction,targets:s.map((e=>e.data))}),n.resultData)}static groupById(e,t){return t?Object.values(Pi(e,(e=>e.actionId.toString()))):Object.values(Pi(e,(e=>e.actionId.toStringIgnoringTag())))}static joinById(e,t){return al.groupById(e,t).map((e=>al.merge(e)))}}class nl{constructor(e,t,a){this.iterations=e,this.duration=t,this.data=a,this.landedHitsRaw=this.data.hits+this.data.crits+this.data.blocks+this.data.glances,this.hitAttempts=this.data.misses+this.data.dodges+this.data.parries+this.data.blocks+this.data.glances+this.data.crits+this.data.hits}get damage(){return this.data.damage}get dps(){return this.data.damage/this.iterations/this.duration}get hps(){return(this.data.healing+this.data.shielding)/this.iterations/this.duration}get tps(){return this.data.threat/this.iterations/this.duration}get casts(){return(this.data.casts||this.hitAttempts)/this.iterations}get castsPerMinute(){return this.casts/(this.duration/60)}get avgCast(){return this.data.damage/this.iterations/(this.casts||1)}get avgCastHealing(){return(this.data.healing+this.data.shielding)/this.iterations/(this.casts||1)}get avgCastThreat(){return this.data.threat/this.iterations/(this.casts||1)}get landedHits(){return this.landedHitsRaw/this.iterations}get avgHit(){const e=this.landedHitsRaw;return 0==e?0:this.data.damage/e}get avgHitThreat(){const e=this.landedHitsRaw;return 0==e?0:this.data.threat/e}get critPercent(){return this.data.crits/(this.hitAttempts||1)*100}get misses(){return this.data.misses/this.iterations}get missPercent(){return this.data.misses/(this.hitAttempts||1)*100}get dodges(){return this.data.dodges/this.iterations}get dodgePercent(){return this.data.dodges/(this.hitAttempts||1)*100}get parries(){return this.data.parries/this.iterations}get parryPercent(){return this.data.parries/(this.hitAttempts||1)*100}get blocks(){return this.data.blocks/this.iterations}get blockPercent(){return this.data.blocks/(this.hitAttempts||1)*100}get glances(){return this.data.glances/this.iterations}get glancePercent(){return this.data.glances/(this.hitAttempts||1)*100}static merge(e){return new nl(e[0]?.iterations||1,e[0]?.duration||1,Vn.create({casts:xi(e.map((e=>e.data.casts))),hits:xi(e.map((e=>e.data.hits))),crits:xi(e.map((e=>e.data.crits))),misses:xi(e.map((e=>e.data.misses))),dodges:xi(e.map((e=>e.data.dodges))),parries:xi(e.map((e=>e.data.parries))),blocks:xi(e.map((e=>e.data.blocks))),glances:xi(e.map((e=>e.data.glances))),damage:xi(e.map((e=>e.data.damage))),threat:xi(e.map((e=>e.data.threat))),healing:xi(e.map((e=>e.data.healing))),shielding:xi(e.map((e=>e.data.shielding)))}))}}function il(e){e.addAction("SIMULATE","dps-action",(async()=>e.runSim((e=>{t.setSimProgress(e)}))));const t=new ol(e);return e.sim.simResultEmitter.on(((e,a)=>{t.setSimResult(e,a)})),t}class ol{constructor(e){this.currentChangeEmitter=new Mr,this.referenceChangeEmitter=new Mr,this.changeEmitter=new Mr,this.currentData=null,this.referenceData=null,this.simUI=e,[this.currentChangeEmitter,this.referenceChangeEmitter].forEach((e=>e.on((e=>this.changeEmitter.emit(e)))))}setSimProgress(e){e.presimRunning?this.simUI.resultsViewer.setContent(`\n\t\t\t\t<div class="results-sim">\n\t\t\t\t\t\t<div class="results-sim-dps damage-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.dps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="results-sim-hps healing-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.hps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="">\n\t\t\t\t\t\t\tpresimulations running\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`):this.simUI.resultsViewer.setContent(`\n\t\t\t\t<div class="results-sim">\n\t\t\t\t\t\t<div class="results-sim-dps damage-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.dps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="results-sim-hps healing-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.hps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="">\n\t\t\t\t\t\t\t${e.completedIterations} / ${e.totalIterations}<br>iterations complete\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`)}setSimResult(e,t){this.currentData={simResult:t,settings:{raid:Nn.toJson(this.simUI.sim.raid.toProto()),encounter:Fe.toJson(this.simUI.sim.encounter.toProto())},raidProto:Nn.clone(t.request.raid||Nn.create()),encounterProto:Fe.clone(t.request.encounter||Fe.create())},this.currentChangeEmitter.emit(e),t.raidMetrics.dps,this.simUI.resultsViewer.setContent(`\n      <div class="results-sim">\n\t\t\t\t${ol.makeToplineResultsContent(t)}\n\t\t\t\t<div class="results-sim-reference">\n\t\t\t\t\t<span class="results-sim-set-reference fa fa-map-pin"></span>\n\t\t\t\t\t<div class="results-sim-reference-bar">\n\t\t\t\t\t\t<span class="results-sim-reference-dps-diff damage-metrics"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-diff-separator healing-metrics">/</span>\n\t\t\t\t\t\t<span class="results-sim-reference-hps-diff healing-metrics"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-diff-separator threat-metrics">/</span>\n\t\t\t\t\t\t<span class="results-sim-reference-tps-diff threat-metrics"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-diff-separator threat-metrics">/</span>\n\t\t\t\t\t\t<span class="results-sim-reference-dtps-diff threat-metrics"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-diff-separator threat-metrics">/</span>\n\t\t\t\t\t\t<span class="results-sim-reference-chanceOfDeath-diff threat-metrics"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-text"> vs. reference</span>\n\t\t\t\t\t\t<span class="results-sim-reference-swap fa fa-retweet"></span>\n\t\t\t\t\t\t<span class="results-sim-reference-delete fa fa-times"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n    `);const a=(e,t)=>{const a=this.simUI.resultsViewer.contentElem.getElementsByClassName(e)[0];a&&tippy(a,{content:t,allowHTML:!0,placement:"right"})};a("results-sim-dps","Damage Per Second"),a("results-sim-hps","Healing+Shielding Per Second, including overhealing."),a("results-sim-tps","Threat Per Second"),a("results-sim-dtps","Damage Taken Per Second"),a("results-sim-chanceOfDeath","\n\t\t\t<p>Chance of Death</p>\n\t\t\t<p>The percentage of iterations in which the player died, based on incoming damage from the enemies and incoming healing (see the <b>Incoming HPS</b> and <b>Healing Cadence</b> options).</p>\n\t\t\t<p>DTPS alone is not a good measure of tankiness because it is not affected by health and ignores damage spikes. Chance of Death attempts to capture overall tankiness.</p>\n\t\t"),this.simUI.isIndividualSim()||(Array.from(this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-diff-separator")).forEach((e=>e.remove())),Array.from(this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-tps-diff")).forEach((e=>e.remove())),Array.from(this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-dtps-diff")).forEach((e=>e.remove())),Array.from(this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-chanceOfDeath-diff")).forEach((e=>e.remove()))),this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference")[0],this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-diff")[0];const n=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-set-reference")[0];n.addEventListener("click",(e=>{this.referenceData=this.currentData,this.referenceChangeEmitter.emit(Mr.nextEventID()),this.updateReference()})),tippy(n,{content:"Use as reference",allowHTML:!0});const i=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-swap")[0];i.addEventListener("click",(e=>{Mr.freezeAllAndDo((()=>{if(this.currentData&&this.referenceData){const e=Mr.nextEventID(),t=this.currentData;this.currentData=this.referenceData,this.referenceData=t,this.simUI.sim.raid.fromProto(e,this.currentData.raidProto),this.simUI.sim.encounter.fromProto(e,this.currentData.encounterProto),this.setSimResult(e,this.currentData.simResult),this.referenceChangeEmitter.emit(e),this.updateReference()}}))})),tippy(i,{content:"Swap reference with current",allowHTML:!0});const o=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-delete")[0];o.addEventListener("click",(e=>{this.referenceData=null,this.referenceChangeEmitter.emit(Mr.nextEventID()),this.updateReference()})),tippy(o,{content:"Remove reference",allowHTML:!0}),this.updateReference()}updateReference(){const e=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference")[0];if(!this.referenceData||!this.currentData)return void e.classList.remove("has-reference");e.classList.add("has-reference");const t=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-dps-diff")[0],a=this.currentData.simResult.raidMetrics.dps;Wi(t,this.referenceData.simResult.raidMetrics.dps.avg,a.avg,2);const n=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-hps-diff")[0],i=this.currentData.simResult.raidMetrics.hps;if(Wi(n,this.referenceData.simResult.raidMetrics.hps.avg,i.avg,2),this.simUI.isIndividualSim()){const e=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-tps-diff")[0],t=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-dtps-diff")[0],a=this.simUI.resultsViewer.contentElem.getElementsByClassName("results-sim-reference-chanceOfDeath-diff")[0],n=this.currentData.simResult.getPlayers()[0],i=this.referenceData.simResult.getPlayers()[0];Wi(e,i.tps.avg,n.tps.avg,2),Wi(t,i.dtps.avg,n.dtps.avg,2),Wi(a,i.chanceOfDeath,n.chanceOfDeath,1)}}getRunData(){return null==this.currentData?null:fi.create({run:this.currentData.simResult.toProto(),referenceRun:this.referenceData?.simResult.toProto()})}getCurrentData(){return null==this.currentData?null:{simResult:this.currentData.simResult,settings:JSON.parse(JSON.stringify(this.currentData.settings)),raidProto:this.currentData.raidProto,encounterProto:this.currentData.encounterProto}}getReferenceData(){return null==this.referenceData?null:{simResult:this.referenceData.simResult,settings:JSON.parse(JSON.stringify(this.referenceData.settings)),raidProto:this.referenceData.raidProto,encounterProto:this.referenceData.encounterProto}}static makeToplineResultsContent(e,t){const a=e.getPlayers(t),n=1==a.length?a[0]:null;let i="";if(n){if(null==n.getTargetIndex(t)){const t=e.raidMetrics.dps,a=n.tps,o=n.dtps;i+=`\n\t\t\t\t\t<div class="results-sim-dps damage-metrics">\n\t\t\t\t\t\t<span class="topline-result-avg">${t.avg.toFixed(2)}</span>\n\t\t\t\t\t\t<span class="topline-result-stdev">${t.stdev.toFixed(2)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="results-sim-tps threat-metrics">\n\t\t\t\t\t\t<span class="topline-result-avg">${a.avg.toFixed(2)}</span>\n\t\t\t\t\t\t<span class="topline-result-stdev">${a.stdev.toFixed(2)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="results-sim-dtps threat-metrics">\n\t\t\t\t\t\t<span class="topline-result-avg">${o.avg.toFixed(2)}</span>\n\t\t\t\t\t\t<span class="topline-result-stdev">${o.stdev.toFixed(2)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="results-sim-chanceOfDeath threat-metrics">\n\t\t\t\t\t\t<span class="topline-result-avg">${n.chanceOfDeath.toFixed(2)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t`}else{const a=e.getActionMetrics(t),n=e.getTargets(t)[0].actions.map((e=>e.forTarget(t)));if(a.length>0){const e=al.merge(a);i+=`\n\t\t\t\t\t\t<div class="results-sim-dps damage-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.dps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="results-sim-tps threat-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${e.tps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}if(n.length>0){i+=`\n\t\t\t\t\t\t<div class="results-sim-dtps threat-metrics">\n\t\t\t\t\t\t\t<span class="topline-result-avg">${al.merge(n).dps.toFixed(2)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}}i+=`\n\t\t\t\t<div class="results-sim-hps healing-metrics">\n\t\t\t\t\t<span class="topline-result-avg">${n.hps.avg.toFixed(2)}</span>\n\t\t\t\t\t<span class="topline-result-stdev">${n.hps.stdev.toFixed(2)}</span>\n\t\t\t\t</div>\n\t\t\t`}else{const t=e.raidMetrics.dps;i=`\n\t\t\t\t<div class="results-sim-dps damage-metrics">\n\t\t\t\t\t<span class="topline-result-avg">${t.avg.toFixed(2)}</span>\n\t\t\t\t\t<span class="topline-result-stdev">${t.stdev.toFixed(2)}</span>\n\t\t\t\t</div>\n\t\t\t`;const a=e.raidMetrics.hps;i=`\n\t\t\t\t<div class="results-sim-hps healing-metrics">\n\t\t\t\t\t<span class="topline-result-avg">${a.avg.toFixed(2)}</span>\n\t\t\t\t\t<span class="topline-result-stdev">${a.stdev.toFixed(2)}</span>\n\t\t\t\t</div>\n\t\t\t`}return e.request.encounter?.useHealth&&(i+=`<div class="results-sim-dur"><span class="topline-result-avg">${e.result.avgIterationDuration.toFixed(2)}s</span></div>`),i}}export{Ws as $,pr as A,_s as B,Kn as C,Be as D,Fe as E,te as F,Hn as G,ii as H,Ce as I,Hr as J,Ur as K,yr as L,Se as M,Yo as N,kr as O,Hs as P,Gs as Q,Oe as R,Z as S,Mr as T,Bs as U,Rs as V,ne as W,Fs as X,Ns as Y,Os as Z,Ss as _,cr as a,We as a$,Vs as a0,Cs as a1,Ds as a2,ue as a3,Ps as a4,_i as a5,nr as a6,Ue as a7,Ae as a8,wi as a9,no as aA,co as aB,wo as aC,lo as aD,fo as aE,io as aF,oo as aG,bo as aH,Gi as aI,Hi as aJ,Vi as aK,Ji as aL,ji as aM,Ui as aN,Mi as aO,Ai as aP,Di as aQ,Ei as aR,Fi as aS,oi as aT,Ri as aU,ur as aV,fr as aW,gr as aX,ee as aY,As as aZ,Ve as a_,vi as aa,He as ab,$e as ac,Co as ad,Wo as ae,ks as af,ye as ag,Xo as ah,me as ai,br as aj,ws as ak,Zi as al,to as am,re as an,he as ao,Wi as ap,le as aq,ce as ar,Ko as as,on as at,cn as au,Kr as av,$r as aw,zs as ax,Ls as ay,Bi as az,ge as b,Lt as b$,xe as b0,ke as b1,be as b2,Ie as b3,Te as b4,fe as b5,we as b6,Ki as b7,wr as b8,po as b9,Xe as bA,Qe as bB,Je as bC,Ze as bD,et as bE,nt as bF,it as bG,al as bH,Pi as bI,tr as bJ,Ir as bK,tl as bL,Si as bM,el as bN,_e as bO,Gn as bP,Oi as bQ,Ti as bR,sr as bS,ol as bT,ui as bU,qt as bV,Et as bW,Mt as bX,At as bY,Zt as bZ,Qt as b_,vs as ba,il as bb,ri as bc,Bo as bd,hr as be,ae as bf,Tr as bg,pi as bh,si as bi,Pe as bj,Ge as bk,Re as bl,Le as bm,Es as bn,js as bo,li as bp,Me as bq,Do as br,hn as bs,wn as bt,yn as bu,In as bv,Tn as bw,Ke as bx,Ye as by,qe as bz,Ne as c,Eo as c$,zt as c0,Ht as c1,$t as c2,ea as c3,Jt as c4,Kt as c5,Ut as c6,aa as c7,na as c8,gn as c9,Ra as cA,Wa as cB,Va as cC,Ca as cD,Ba as cE,Na as cF,Aa as cG,La as cH,ut as cI,pt as cJ,dt as cK,mt as cL,ht as cM,gt as cN,It as cO,Tt as cP,so as cQ,ro as cR,jo as cS,ci as cT,mi as cU,er as cV,Fa as cW,gi as cX,Bn as cY,Rn as cZ,yo as c_,un as ca,Sn as cb,vn as cc,fn as cd,On as ce,Pn as cf,fa as cg,wa as ch,_a as ci,Oa as cj,nn as ck,en as cl,tn as cm,an as cn,rn as co,sn as cp,mn as cq,pn as cr,Ja as cs,Ka as ct,Xa as cu,za as cv,Ha as cw,Za as cx,qa as cy,$a as cz,oe as d,ys as d0,Ni as d1,Qo as d2,hi as d3,la as d4,pa as d5,ia as d6,ra as d7,oa as d8,ha as d9,Bt as dA,St as dB,xt as dC,rt as dD,st as dE,sa as da,ja as db,Ga as dc,Pa as dd,Ua as de,ba as df,ga as dg,Ia as dh,ua as di,xa as dj,Sa as dk,yt as dl,lt as dm,ct as dn,kt as dp,Nt as dq,Ft as dr,Ct as ds,vt as dt,Ot as du,Pt as dv,_t as dw,Dt as dx,Rt as dy,Gt as dz,qs as e,$s as f,je as g,Nn as h,$n as i,Zn as j,ei as k,ni as l,ti as m,Ln as n,zn as o,ki as p,yi as q,ie as r,xi as s,Fn as t,Ks as u,qo as v,Jo as w,zi as x,Li as y,mr as z};
//# sourceMappingURL=raid_sim_action-ba7bc10a.chunk.js.map
